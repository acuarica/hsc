./accelerate-0.10.0.0/Data/Array/Accelerate/Array/Sugar.hs:631:{-# RULES
./accelerate-0.12.0.0/Data/Array/Accelerate/Array/Sugar.hs:635:{-# RULES
./accelerate-0.12.1.0/Data/Array/Accelerate/Array/Sugar.hs:635:{-# RULES
./accelerate-0.12.2.0/Data/Array/Accelerate/Array/Sugar.hs:635:{-# RULES
./accelerate-0.13.0.0/Data/Array/Accelerate/Array/Sugar.hs:663:{-# RULES
./accelerate-0.13.0.0/Data/Array/Accelerate/Prelude.hs:653:{-# RULES
./accelerate-0.13.0.0/Data/Array/Accelerate/Trafo/Substitution.hs:147:{-# RULES
./accelerate-0.13.0.1/Data/Array/Accelerate/Array/Sugar.hs:663:{-# RULES
./accelerate-0.13.0.1/Data/Array/Accelerate/Prelude.hs:653:{-# RULES
./accelerate-0.13.0.1/Data/Array/Accelerate/Trafo/Substitution.hs:147:{-# RULES
./accelerate-0.13.0.2/Data/Array/Accelerate/Array/Sugar.hs:663:{-# RULES
./accelerate-0.13.0.2/Data/Array/Accelerate/Prelude.hs:653:{-# RULES
./accelerate-0.13.0.2/Data/Array/Accelerate/Trafo/Substitution.hs:147:{-# RULES
./accelerate-0.13.0.3/Data/Array/Accelerate/Array/Sugar.hs:663:{-# RULES
./accelerate-0.13.0.3/Data/Array/Accelerate/Prelude.hs:653:{-# RULES
./accelerate-0.13.0.3/Data/Array/Accelerate/Trafo/Substitution.hs:147:{-# RULES
./accelerate-0.13.0.4/Data/Array/Accelerate/Array/Sugar.hs:663:{-# RULES
./accelerate-0.13.0.4/Data/Array/Accelerate/Prelude.hs:653:{-# RULES
./accelerate-0.13.0.4/Data/Array/Accelerate/Trafo/Substitution.hs:147:{-# RULES
./accelerate-0.13.0.5/Data/Array/Accelerate/Array/Sugar.hs:663:{-# RULES
./accelerate-0.13.0.5/Data/Array/Accelerate/Prelude.hs:653:{-# RULES
./accelerate-0.13.0.5/Data/Array/Accelerate/Trafo/Substitution.hs:147:{-# RULES
./accelerate-0.14.0.0/Data/Array/Accelerate/Array/Sugar.hs:663:{-# RULES
./accelerate-0.14.0.0/Data/Array/Accelerate/Prelude.hs:939:{-# RULES
./accelerate-0.14.0.0/Data/Array/Accelerate/Trafo/Substitution.hs:153:{-# RULES
./accelerate-0.15.0.0/Data/Array/Accelerate/Array/Sugar.hs:667:{-# RULES
./accelerate-0.15.0.0/Data/Array/Accelerate/Array/Sugar.hs:832:{-# RULES
./accelerate-0.15.0.0/Data/Array/Accelerate/Prelude.hs:940:{-# RULES
./accelerate-0.15.0.0/Data/Array/Accelerate/Trafo/Substitution.hs:156:{-# RULES
./accelerate-0.15.1.0/Data/Array/Accelerate/Array/Sugar.hs:667:{-# RULES
./accelerate-0.15.1.0/Data/Array/Accelerate/Array/Sugar.hs:832:{-# RULES
./accelerate-0.15.1.0/Data/Array/Accelerate/Prelude.hs:940:{-# RULES
./accelerate-0.15.1.0/Data/Array/Accelerate/Trafo/Substitution.hs:156:{-# RULES
./accelerate-0.6.0.0/Data/Array/Accelerate/Array/Sugar.hs:513:{-# RULES
./accelerate-0.7.1.0/Data/Array/Accelerate/Array/Sugar.hs:504:{-# RULES
./accelerate-0.8.0.0/Data/Array/Accelerate/Array/Sugar.hs:573:{-# RULES
./accelerate-0.8.1.0/Data/Array/Accelerate/Array/Sugar.hs:573:{-# RULES
./accelerate-0.9.0.0/Data/Array/Accelerate/Array/Sugar.hs:631:{-# RULES
./accelerate-0.9.0.1/Data/Array/Accelerate/Array/Sugar.hs:631:{-# RULES
./accelerate-cufft-0.0/src/Data/Array/Accelerate/CUFFT/Private.hs:276:{-# RULES
./accelerate-fft-0.13.0.0/Data/Array/Accelerate/Math/FFT.hs:348:{-# RULES
./accelerate-fft-0.14.0.0/Data/Array/Accelerate/Math/FFT.hs:350:{-# RULES
./accelerate-fft-0.15.0.0/Data/Array/Accelerate/Math/FFT.hs:352:{-# RULES
./accelerate-fft-0.15.1.0/Data/Array/Accelerate/Math/FFT.hs:356:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:720:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:743:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:844:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:901:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:940:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:972:{- RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1004:{- RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1028:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1064:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1108:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1128:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1144:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1268:{- RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1322:{- RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1359:{- RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1553:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1573:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1592:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1611:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1618:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1632:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1639:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1652:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1659:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1678:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1685:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1700:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1707:{-# RULES
./adaptive-containers-0.2/Data/Adaptive/List.hs:1718:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:720:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:743:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:844:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:901:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:940:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:972:{- RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1004:{- RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1028:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1064:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1108:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1128:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1144:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1268:{- RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1322:{- RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1359:{- RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1553:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1573:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1592:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1611:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1618:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1632:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1639:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1652:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1659:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1678:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1685:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1700:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1707:{-# RULES
./adaptive-containers-0.2.1/Data/Adaptive/List.hs:1718:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:720:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:743:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:844:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:901:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:940:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:972:{- RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1004:{- RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1028:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1064:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1108:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1128:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1144:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1268:{- RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1322:{- RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1359:{- RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1553:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1573:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1592:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1611:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1618:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1632:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1639:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1652:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1659:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1678:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1685:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1700:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1707:{-# RULES
./adaptive-containers-0.3/Data/Adaptive/List.hs:1718:{-# RULES
./adjunctions-0.5.0/Data/Functor/Yoneda.hs:69:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./adjunctions-0.5.0/Data/Functor/Yoneda.hs:70:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./adjunctions-0.5.0/Data/Functor/Yoneda.hs:117:-- {-# RULES "max/maxF" max = maxF #-}
./adjunctions-0.5.0/Data/Functor/Yoneda.hs:122:-- {-# RULES "min/minF" min = minF #-}
./adjunctions-0.5.0/Data/Functor/Yoneda.hs:127:-- {-# RULES "max/maxM" max = maxM #-}
./adjunctions-0.5.0/Data/Functor/Yoneda.hs:132:-- {-# RULES "min/minM" min = minM #-}
./adjunctions-0.5.1/Data/Functor/Yoneda.hs:69:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./adjunctions-0.5.1/Data/Functor/Yoneda.hs:70:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./adjunctions-0.5.1/Data/Functor/Yoneda.hs:117:-- {-# RULES "max/maxF" max = maxF #-}
./adjunctions-0.5.1/Data/Functor/Yoneda.hs:122:-- {-# RULES "min/minF" min = minF #-}
./adjunctions-0.5.1/Data/Functor/Yoneda.hs:127:-- {-# RULES "max/maxM" max = maxM #-}
./adjunctions-0.5.1/Data/Functor/Yoneda.hs:132:-- {-# RULES "min/minM" min = minM #-}
./adjunctions-0.5.2/Data/Functor/Yoneda.hs:69:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./adjunctions-0.5.2/Data/Functor/Yoneda.hs:70:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./adjunctions-0.5.2/Data/Functor/Yoneda.hs:117:-- {-# RULES "max/maxF" max = maxF #-}
./adjunctions-0.5.2/Data/Functor/Yoneda.hs:122:-- {-# RULES "min/minF" min = minF #-}
./adjunctions-0.5.2/Data/Functor/Yoneda.hs:127:-- {-# RULES "max/maxM" max = maxM #-}
./adjunctions-0.5.2/Data/Functor/Yoneda.hs:132:-- {-# RULES "min/minM" min = minM #-}
./adjunctions-0.5.2.1/Data/Functor/Yoneda.hs:69:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./adjunctions-0.5.2.1/Data/Functor/Yoneda.hs:70:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./adjunctions-0.5.2.1/Data/Functor/Yoneda.hs:117:-- {-# RULES "max/maxF" max = maxF #-}
./adjunctions-0.5.2.1/Data/Functor/Yoneda.hs:122:-- {-# RULES "min/minF" min = minF #-}
./adjunctions-0.5.2.1/Data/Functor/Yoneda.hs:127:-- {-# RULES "max/maxM" max = maxM #-}
./adjunctions-0.5.2.1/Data/Functor/Yoneda.hs:132:-- {-# RULES "min/minM" min = minM #-}
./adjunctions-0.6.0/Data/Functor/Yoneda.hs:69:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./adjunctions-0.6.0/Data/Functor/Yoneda.hs:70:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./adjunctions-0.6.0/Data/Functor/Yoneda.hs:117:-- {-# RULES "max/maxF" max = maxF #-}
./adjunctions-0.6.0/Data/Functor/Yoneda.hs:122:-- {-# RULES "min/minF" min = minF #-}
./adjunctions-0.6.0/Data/Functor/Yoneda.hs:127:-- {-# RULES "max/maxM" max = maxM #-}
./adjunctions-0.6.0/Data/Functor/Yoneda.hs:132:-- {-# RULES "min/minM" min = minM #-}
./adjunctions-4.0/src/Data/Functor/Rep.hs:94:{-# RULES
./adjunctions-4.0.1/src/Data/Functor/Rep.hs:94:{-# RULES
./adjunctions-4.0.2/src/Data/Functor/Rep.hs:103:{-# RULES
./adjunctions-4.0.3/src/Data/Functor/Rep.hs:103:{-# RULES
./adjunctions-4.1.0.1/src/Data/Functor/Contravariant/Rep.hs:55:{-# RULES
./adjunctions-4.1.0.1/src/Data/Functor/Rep.hs:106:{-# RULES
./adjunctions-4.2/src/Data/Functor/Contravariant/Rep.hs:54:{-# RULES
./adjunctions-4.2/src/Data/Functor/Rep.hs:106:{-# RULES
./adjunctions-4.2.1/src/Data/Functor/Contravariant/Rep.hs:54:{-# RULES
./adjunctions-4.2.1/src/Data/Functor/Rep.hs:106:{-# RULES
./adjunctions-4.2.2/src/Data/Functor/Contravariant/Rep.hs:54:{-# RULES
./adjunctions-4.2.2/src/Data/Functor/Rep.hs:106:{-# RULES
./adjunctions-4.3/src/Data/Functor/Contravariant/Rep.hs:54:{-# RULES
./adjunctions-4.3/src/Data/Functor/Rep.hs:110:{-# RULES
./Agda-2.2.10/src/full/Agda/Compiler/MAlonzo/Compiler.hs:440:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.3.0/src/full/Agda/Compiler/MAlonzo/Compiler.hs:457:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.3.0/src/full/Agda/TypeChecking/Monad/Base.hs:1117:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.3.0.1/src/full/Agda/Compiler/MAlonzo/Compiler.hs:457:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.3.0.1/src/full/Agda/TypeChecking/Monad/Base.hs:1117:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.3.2/src/full/Agda/Compiler/MAlonzo/Compiler.hs:460:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.3.2/src/full/Agda/TypeChecking/Monad/Base.hs:1317:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.3.2/src/full/Agda/TypeChecking/Monad/Base.hs:1346:{-# RULES "returnTCMT"
./Agda-2.3.2/src/full/Agda/TypeChecking/Monad/Base.hs:1354:{-# RULES "bindTCMT"
./Agda-2.3.2/src/full/Agda/TypeChecking/Monad/Base.hs:1363:{-# RULES "thenTCMT"
./Agda-2.3.2/src/full/Agda/TypeChecking/Monad/Base.hs:1374:{-# RULES "fmapTCMT"
./Agda-2.3.2/src/full/Agda/TypeChecking/Monad/Base.hs:1386:{-# RULES "apTCMT"
./Agda-2.3.2.1/src/full/Agda/Compiler/MAlonzo/Compiler.hs:460:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.3.2.1/src/full/Agda/TypeChecking/Monad/Base.hs:1317:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.3.2.1/src/full/Agda/TypeChecking/Monad/Base.hs:1346:{-# RULES "returnTCMT"
./Agda-2.3.2.1/src/full/Agda/TypeChecking/Monad/Base.hs:1354:{-# RULES "bindTCMT"
./Agda-2.3.2.1/src/full/Agda/TypeChecking/Monad/Base.hs:1363:{-# RULES "thenTCMT"
./Agda-2.3.2.1/src/full/Agda/TypeChecking/Monad/Base.hs:1374:{-# RULES "fmapTCMT"
./Agda-2.3.2.1/src/full/Agda/TypeChecking/Monad/Base.hs:1386:{-# RULES "apTCMT"
./Agda-2.3.2.2/src/full/Agda/Compiler/MAlonzo/Compiler.hs:460:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.3.2.2/src/full/Agda/TypeChecking/Monad/Base.hs:1317:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.3.2.2/src/full/Agda/TypeChecking/Monad/Base.hs:1346:{-# RULES "returnTCMT"
./Agda-2.3.2.2/src/full/Agda/TypeChecking/Monad/Base.hs:1354:{-# RULES "bindTCMT"
./Agda-2.3.2.2/src/full/Agda/TypeChecking/Monad/Base.hs:1363:{-# RULES "thenTCMT"
./Agda-2.3.2.2/src/full/Agda/TypeChecking/Monad/Base.hs:1374:{-# RULES "fmapTCMT"
./Agda-2.3.2.2/src/full/Agda/TypeChecking/Monad/Base.hs:1386:{-# RULES "apTCMT"
./Agda-2.4.0/src/full/Agda/Compiler/MAlonzo/Compiler.hs:483:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.4.0/src/full/Agda/TypeChecking/Monad/Base.hs:1624:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.4.0.1/src/full/Agda/Compiler/MAlonzo/Compiler.hs:483:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.4.0.1/src/full/Agda/TypeChecking/Monad/Base.hs:1674:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.4.0.2/src/full/Agda/Compiler/MAlonzo/Compiler.hs:484:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.4.0.2/src/full/Agda/TypeChecking/Monad/Base.hs:1686:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.4.2/src/full/Agda/Compiler/MAlonzo/Compiler.hs:504:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.4.2/src/full/Agda/TypeChecking/Monad/Base.hs:1753:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.4.2.1/src/full/Agda/Compiler/MAlonzo/Compiler.hs:548:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.4.2.1/src/full/Agda/TypeChecking/Monad/Base.hs:2027:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.4.2.2/src/full/Agda/Compiler/MAlonzo/Compiler.hs:548:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.4.2.2/src/full/Agda/TypeChecking/Monad/Base.hs:2027:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.4.2.3/src/full/Agda/Compiler/MAlonzo/Compiler.hs:548:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.4.2.3/src/full/Agda/TypeChecking/Monad/Base.hs:2110:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.4.2.4/src/full/Agda/Compiler/MAlonzo/Compiler.hs:752:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.4.2.4/src/full/Agda/TypeChecking/Monad/Base.hs:2192:{-# RULES "liftTCM/id" liftTCM = id #-}
./Agda-2.4.2.5/src/full/Agda/Compiler/MAlonzo/Compiler.hs:760:  , "{-# RULES \"coerce-id\" forall (x :: a) . mazCoerce x = x #-}"
./Agda-2.4.2.5/src/full/Agda/TypeChecking/Monad/Base.hs:2210:{-# RULES "liftTCM/id" liftTCM = id #-}
./ajhc-0.8.0.1/lib/applicative/Control/Arrow.hs:98:{-# RULES
./ajhc-0.8.0.1/lib/applicative/Control/Arrow.hs:212:{-# RULES
./ajhc-0.8.0.1/lib/applicative/Control/Category.hs:30:{-# RULES
./ajhc-0.8.0.1/lib/haskell-extras/Data/List.hs:317:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Data/List.hs:318:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:195:{-# RULES "sum/Int" forall . sum = sum' :: [Int] -> Int #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:197:{-# RULES "sum/Double" forall . sum = sum' :: [Double] -> Double #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:226:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:227:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:228:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:229:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:230:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:231:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:232:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:233:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:234:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:235:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:236:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:237:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:238:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:239:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:240:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:241:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:242:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:243:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:244:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:245:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:246:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:247:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:248:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:249:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:250:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:251:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:252:{-# RULES "concat/[]"     concat [] = [] #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:253:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:254:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:255:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:256:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:258:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:259:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:260:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:261:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:262:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:263:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:265:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:266:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:267:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./ajhc-0.8.0.1/lib/haskell-extras/Prelude.hs:268:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:18:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:19:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:20:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:21:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:22:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:25:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:26:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:27:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:28:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:31:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:33:{-# RULES "foldr/unpackString"  forall k z (addr::BitsPtr_) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:56:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:57:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:58:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:59:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:61:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:62:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:63:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:64:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:80:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:82:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:121:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:122:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:134:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:135:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:180:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:181:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:182:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:183:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:184:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:221:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:241:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:243:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:250:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:277:{-# RULES
./ajhc-0.8.0.1/lib/jhc/Jhc/List.hs:348:{-# RULES "take/repeat"   forall n x . take n (repeat x) = replicate n x #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/Monad.hs:38:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/Monad.hs:39:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/Monad.hs:40:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/Monad.hs:41:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/Monad.hs:42:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/Monad.hs:43:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./ajhc-0.8.0.1/lib/jhc/Jhc/Num.hs:19:{-# RULES
./ajhc-0.8.0.1/lib/jhc/Jhc/Num.hs:26:{-# RULES
./ajhc-0.8.0.1/lib/jhc/Prelude/IO.hs:38:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./ajhc-0.8.0.1/src/E/Program.hs:37:    progSeasoning     :: IdSet,       -- ^ these ids are depended on by external names via RULES
./ajhc-0.8.0.1/src/FrontEnd/HsPretty.hs:236:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.1/src/FrontEnd/HsPretty.hs:237:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.1/src/FrontEnd/HsPretty.hs:238:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./ajhc-0.8.0.1/src/FrontEnd/Lexer.hs:705:    (["RULES","RULE","RULES_JHC","RULE_JHC"],PragmaRules False),
./ajhc-0.8.0.1/src/FrontEnd/Tc/Main.hs:664:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./ajhc-0.8.0.1/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ajhc-0.8.0.1/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ajhc-0.8.0.1/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ajhc-0.8.0.1/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ajhc-0.8.0.1/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ajhc-0.8.0.1/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./ajhc-0.8.0.1/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ajhc-0.8.0.1/src/GenUtil.hs:344:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ajhc-0.8.0.1/src/GenUtil.hs:345:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ajhc-0.8.0.10/lib/applicative/Control/Arrow.hs:98:{-# RULES
./ajhc-0.8.0.10/lib/applicative/Control/Arrow.hs:212:{-# RULES
./ajhc-0.8.0.10/lib/applicative/Control/Category.hs:30:{-# RULES
./ajhc-0.8.0.10/lib/haskell-extras/Data/List.hs:317:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Data/List.hs:318:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:195:{-# RULES "sum/Int" forall . sum = sum' :: [Int] -> Int #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:197:{-# RULES "sum/Double" forall . sum = sum' :: [Double] -> Double #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:226:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:227:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:228:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:229:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:230:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:231:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:232:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:233:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:234:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:235:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:236:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:237:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:238:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:239:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:240:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:241:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:242:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:243:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:244:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:245:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:246:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:247:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:248:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:249:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:250:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:251:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:252:{-# RULES "concat/[]"     concat [] = [] #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:253:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:254:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:255:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:256:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:258:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:259:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:260:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:261:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:262:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:263:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:265:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:266:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:267:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./ajhc-0.8.0.10/lib/haskell-extras/Prelude.hs:268:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:18:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:19:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:20:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:21:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:22:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:25:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:26:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:27:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:28:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:31:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:33:{-# RULES "foldr/unpackString"  forall k z (addr::BitsPtr_) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:56:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:57:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:58:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:59:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:61:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:62:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:63:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:64:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:80:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:82:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:121:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:122:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:134:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:135:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:180:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:181:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:182:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:183:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:184:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:221:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:241:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:243:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:250:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:277:{-# RULES
./ajhc-0.8.0.10/lib/jhc/Jhc/List.hs:348:{-# RULES "take/repeat"   forall n x . take n (repeat x) = replicate n x #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/Monad.hs:38:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/Monad.hs:39:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/Monad.hs:40:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/Monad.hs:41:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/Monad.hs:42:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/Monad.hs:43:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./ajhc-0.8.0.10/lib/jhc/Jhc/Num.hs:19:{-# RULES
./ajhc-0.8.0.10/lib/jhc/Jhc/Num.hs:26:{-# RULES
./ajhc-0.8.0.10/lib/jhc/Prelude/IO.hs:38:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./ajhc-0.8.0.10/src/E/Program.hs:37:    progSeasoning     :: IdSet,       -- ^ these ids are depended on by external names via RULES
./ajhc-0.8.0.10/src/FrontEnd/HsPretty.hs:236:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.10/src/FrontEnd/HsPretty.hs:237:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.10/src/FrontEnd/HsPretty.hs:238:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./ajhc-0.8.0.10/src/FrontEnd/Lexer.hs:705:    (["RULES","RULE","RULES_JHC","RULE_JHC"],PragmaRules False),
./ajhc-0.8.0.10/src/FrontEnd/Tc/Main.hs:664:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./ajhc-0.8.0.10/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ajhc-0.8.0.10/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ajhc-0.8.0.10/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ajhc-0.8.0.10/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ajhc-0.8.0.10/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ajhc-0.8.0.10/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./ajhc-0.8.0.10/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ajhc-0.8.0.10/src/GenUtil.hs:342:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ajhc-0.8.0.10/src/GenUtil.hs:343:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ajhc-0.8.0.3/lib/applicative/Control/Arrow.hs:98:{-# RULES
./ajhc-0.8.0.3/lib/applicative/Control/Arrow.hs:212:{-# RULES
./ajhc-0.8.0.3/lib/applicative/Control/Category.hs:30:{-# RULES
./ajhc-0.8.0.3/lib/haskell-extras/Data/List.hs:317:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Data/List.hs:318:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:195:{-# RULES "sum/Int" forall . sum = sum' :: [Int] -> Int #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:197:{-# RULES "sum/Double" forall . sum = sum' :: [Double] -> Double #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:226:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:227:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:228:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:229:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:230:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:231:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:232:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:233:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:234:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:235:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:236:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:237:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:238:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:239:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:240:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:241:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:242:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:243:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:244:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:245:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:246:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:247:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:248:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:249:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:250:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:251:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:252:{-# RULES "concat/[]"     concat [] = [] #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:253:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:254:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:255:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:256:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:258:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:259:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:260:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:261:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:262:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:263:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:265:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:266:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:267:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./ajhc-0.8.0.3/lib/haskell-extras/Prelude.hs:268:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:18:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:19:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:20:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:21:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:22:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:25:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:26:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:27:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:28:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:31:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:33:{-# RULES "foldr/unpackString"  forall k z (addr::BitsPtr_) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:56:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:57:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:58:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:59:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:61:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:62:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:63:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:64:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:80:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:82:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:121:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:122:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:134:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:135:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:180:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:181:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:182:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:183:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:184:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:221:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:241:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:243:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:250:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:277:{-# RULES
./ajhc-0.8.0.3/lib/jhc/Jhc/List.hs:348:{-# RULES "take/repeat"   forall n x . take n (repeat x) = replicate n x #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/Monad.hs:38:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/Monad.hs:39:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/Monad.hs:40:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/Monad.hs:41:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/Monad.hs:42:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/Monad.hs:43:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./ajhc-0.8.0.3/lib/jhc/Jhc/Num.hs:19:{-# RULES
./ajhc-0.8.0.3/lib/jhc/Jhc/Num.hs:26:{-# RULES
./ajhc-0.8.0.3/lib/jhc/Prelude/IO.hs:38:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./ajhc-0.8.0.3/src/E/Program.hs:37:    progSeasoning     :: IdSet,       -- ^ these ids are depended on by external names via RULES
./ajhc-0.8.0.3/src/FrontEnd/HsPretty.hs:236:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.3/src/FrontEnd/HsPretty.hs:237:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.3/src/FrontEnd/HsPretty.hs:238:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./ajhc-0.8.0.3/src/FrontEnd/Lexer.hs:705:    (["RULES","RULE","RULES_JHC","RULE_JHC"],PragmaRules False),
./ajhc-0.8.0.3/src/FrontEnd/Tc/Main.hs:664:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./ajhc-0.8.0.3/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ajhc-0.8.0.3/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ajhc-0.8.0.3/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ajhc-0.8.0.3/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ajhc-0.8.0.3/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ajhc-0.8.0.3/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./ajhc-0.8.0.3/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ajhc-0.8.0.3/src/GenUtil.hs:344:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ajhc-0.8.0.3/src/GenUtil.hs:345:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ajhc-0.8.0.4/lib/applicative/Control/Arrow.hs:98:{-# RULES
./ajhc-0.8.0.4/lib/applicative/Control/Arrow.hs:212:{-# RULES
./ajhc-0.8.0.4/lib/applicative/Control/Category.hs:30:{-# RULES
./ajhc-0.8.0.4/lib/haskell-extras/Data/List.hs:317:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Data/List.hs:318:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:195:{-# RULES "sum/Int" forall . sum = sum' :: [Int] -> Int #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:197:{-# RULES "sum/Double" forall . sum = sum' :: [Double] -> Double #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:226:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:227:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:228:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:229:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:230:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:231:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:232:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:233:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:234:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:235:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:236:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:237:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:238:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:239:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:240:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:241:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:242:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:243:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:244:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:245:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:246:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:247:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:248:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:249:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:250:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:251:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:252:{-# RULES "concat/[]"     concat [] = [] #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:253:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:254:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:255:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:256:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:258:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:259:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:260:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:261:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:262:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:263:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:265:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:266:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:267:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./ajhc-0.8.0.4/lib/haskell-extras/Prelude.hs:268:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:18:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:19:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:20:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:21:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:22:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:25:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:26:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:27:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:28:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:31:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:33:{-# RULES "foldr/unpackString"  forall k z (addr::BitsPtr_) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:56:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:57:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:58:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:59:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:61:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:62:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:63:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:64:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:80:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:82:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:121:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:122:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:134:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:135:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:180:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:181:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:182:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:183:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:184:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:221:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:241:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:243:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:250:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:277:{-# RULES
./ajhc-0.8.0.4/lib/jhc/Jhc/List.hs:348:{-# RULES "take/repeat"   forall n x . take n (repeat x) = replicate n x #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/Monad.hs:38:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/Monad.hs:39:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/Monad.hs:40:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/Monad.hs:41:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/Monad.hs:42:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/Monad.hs:43:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./ajhc-0.8.0.4/lib/jhc/Jhc/Num.hs:19:{-# RULES
./ajhc-0.8.0.4/lib/jhc/Jhc/Num.hs:26:{-# RULES
./ajhc-0.8.0.4/lib/jhc/Prelude/IO.hs:38:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./ajhc-0.8.0.4/src/E/Program.hs:37:    progSeasoning     :: IdSet,       -- ^ these ids are depended on by external names via RULES
./ajhc-0.8.0.4/src/FrontEnd/HsPretty.hs:236:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.4/src/FrontEnd/HsPretty.hs:237:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.4/src/FrontEnd/HsPretty.hs:238:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./ajhc-0.8.0.4/src/FrontEnd/Lexer.hs:705:    (["RULES","RULE","RULES_JHC","RULE_JHC"],PragmaRules False),
./ajhc-0.8.0.4/src/FrontEnd/Tc/Main.hs:664:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./ajhc-0.8.0.4/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ajhc-0.8.0.4/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ajhc-0.8.0.4/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ajhc-0.8.0.4/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ajhc-0.8.0.4/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ajhc-0.8.0.4/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./ajhc-0.8.0.4/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ajhc-0.8.0.4/src/GenUtil.hs:344:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ajhc-0.8.0.4/src/GenUtil.hs:345:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ajhc-0.8.0.5/lib/applicative/Control/Arrow.hs:98:{-# RULES
./ajhc-0.8.0.5/lib/applicative/Control/Arrow.hs:212:{-# RULES
./ajhc-0.8.0.5/lib/applicative/Control/Category.hs:30:{-# RULES
./ajhc-0.8.0.5/lib/haskell-extras/Data/List.hs:317:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Data/List.hs:318:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:195:{-# RULES "sum/Int" forall . sum = sum' :: [Int] -> Int #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:197:{-# RULES "sum/Double" forall . sum = sum' :: [Double] -> Double #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:226:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:227:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:228:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:229:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:230:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:231:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:232:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:233:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:234:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:235:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:236:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:237:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:238:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:239:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:240:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:241:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:242:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:243:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:244:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:245:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:246:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:247:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:248:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:249:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:250:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:251:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:252:{-# RULES "concat/[]"     concat [] = [] #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:253:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:254:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:255:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:256:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:258:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:259:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:260:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:261:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:262:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:263:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:265:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:266:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:267:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./ajhc-0.8.0.5/lib/haskell-extras/Prelude.hs:268:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:18:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:19:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:20:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:21:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:22:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:25:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:26:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:27:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:28:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:31:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:33:{-# RULES "foldr/unpackString"  forall k z (addr::BitsPtr_) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:56:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:57:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:58:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:59:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:61:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:62:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:63:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:64:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:80:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:82:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:121:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:122:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:134:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:135:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:180:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:181:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:182:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:183:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:184:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:221:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:241:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:243:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:250:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:277:{-# RULES
./ajhc-0.8.0.5/lib/jhc/Jhc/List.hs:348:{-# RULES "take/repeat"   forall n x . take n (repeat x) = replicate n x #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/Monad.hs:38:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/Monad.hs:39:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/Monad.hs:40:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/Monad.hs:41:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/Monad.hs:42:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/Monad.hs:43:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./ajhc-0.8.0.5/lib/jhc/Jhc/Num.hs:19:{-# RULES
./ajhc-0.8.0.5/lib/jhc/Jhc/Num.hs:26:{-# RULES
./ajhc-0.8.0.5/lib/jhc/Prelude/IO.hs:38:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./ajhc-0.8.0.5/src/E/Program.hs:37:    progSeasoning     :: IdSet,       -- ^ these ids are depended on by external names via RULES
./ajhc-0.8.0.5/src/FrontEnd/HsPretty.hs:236:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.5/src/FrontEnd/HsPretty.hs:237:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.5/src/FrontEnd/HsPretty.hs:238:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./ajhc-0.8.0.5/src/FrontEnd/Lexer.hs:705:    (["RULES","RULE","RULES_JHC","RULE_JHC"],PragmaRules False),
./ajhc-0.8.0.5/src/FrontEnd/Tc/Main.hs:664:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./ajhc-0.8.0.5/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ajhc-0.8.0.5/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ajhc-0.8.0.5/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ajhc-0.8.0.5/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ajhc-0.8.0.5/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ajhc-0.8.0.5/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./ajhc-0.8.0.5/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ajhc-0.8.0.5/src/GenUtil.hs:342:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ajhc-0.8.0.5/src/GenUtil.hs:343:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ajhc-0.8.0.6/lib/applicative/Control/Arrow.hs:98:{-# RULES
./ajhc-0.8.0.6/lib/applicative/Control/Arrow.hs:212:{-# RULES
./ajhc-0.8.0.6/lib/applicative/Control/Category.hs:30:{-# RULES
./ajhc-0.8.0.6/lib/haskell-extras/Data/List.hs:317:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Data/List.hs:318:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:195:{-# RULES "sum/Int" forall . sum = sum' :: [Int] -> Int #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:197:{-# RULES "sum/Double" forall . sum = sum' :: [Double] -> Double #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:226:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:227:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:228:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:229:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:230:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:231:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:232:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:233:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:234:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:235:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:236:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:237:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:238:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:239:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:240:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:241:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:242:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:243:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:244:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:245:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:246:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:247:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:248:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:249:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:250:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:251:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:252:{-# RULES "concat/[]"     concat [] = [] #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:253:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:254:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:255:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:256:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:258:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:259:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:260:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:261:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:262:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:263:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:265:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:266:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:267:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./ajhc-0.8.0.6/lib/haskell-extras/Prelude.hs:268:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:18:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:19:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:20:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:21:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:22:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:25:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:26:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:27:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:28:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:31:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:33:{-# RULES "foldr/unpackString"  forall k z (addr::BitsPtr_) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:56:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:57:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:58:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:59:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:61:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:62:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:63:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:64:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:80:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:82:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:121:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:122:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:134:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:135:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:180:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:181:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:182:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:183:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:184:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:221:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:241:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:243:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:250:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:277:{-# RULES
./ajhc-0.8.0.6/lib/jhc/Jhc/List.hs:348:{-# RULES "take/repeat"   forall n x . take n (repeat x) = replicate n x #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/Monad.hs:38:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/Monad.hs:39:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/Monad.hs:40:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/Monad.hs:41:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/Monad.hs:42:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/Monad.hs:43:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./ajhc-0.8.0.6/lib/jhc/Jhc/Num.hs:19:{-# RULES
./ajhc-0.8.0.6/lib/jhc/Jhc/Num.hs:26:{-# RULES
./ajhc-0.8.0.6/lib/jhc/Prelude/IO.hs:38:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./ajhc-0.8.0.6/src/E/Program.hs:37:    progSeasoning     :: IdSet,       -- ^ these ids are depended on by external names via RULES
./ajhc-0.8.0.6/src/FrontEnd/HsPretty.hs:236:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.6/src/FrontEnd/HsPretty.hs:237:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.6/src/FrontEnd/HsPretty.hs:238:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./ajhc-0.8.0.6/src/FrontEnd/Lexer.hs:705:    (["RULES","RULE","RULES_JHC","RULE_JHC"],PragmaRules False),
./ajhc-0.8.0.6/src/FrontEnd/Tc/Main.hs:664:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./ajhc-0.8.0.6/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ajhc-0.8.0.6/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ajhc-0.8.0.6/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ajhc-0.8.0.6/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ajhc-0.8.0.6/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ajhc-0.8.0.6/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./ajhc-0.8.0.6/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ajhc-0.8.0.6/src/GenUtil.hs:342:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ajhc-0.8.0.6/src/GenUtil.hs:343:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ajhc-0.8.0.7/lib/applicative/Control/Arrow.hs:98:{-# RULES
./ajhc-0.8.0.7/lib/applicative/Control/Arrow.hs:212:{-# RULES
./ajhc-0.8.0.7/lib/applicative/Control/Category.hs:30:{-# RULES
./ajhc-0.8.0.7/lib/haskell-extras/Data/List.hs:317:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Data/List.hs:318:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:195:{-# RULES "sum/Int" forall . sum = sum' :: [Int] -> Int #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:197:{-# RULES "sum/Double" forall . sum = sum' :: [Double] -> Double #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:226:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:227:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:228:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:229:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:230:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:231:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:232:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:233:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:234:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:235:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:236:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:237:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:238:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:239:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:240:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:241:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:242:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:243:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:244:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:245:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:246:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:247:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:248:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:249:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:250:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:251:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:252:{-# RULES "concat/[]"     concat [] = [] #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:253:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:254:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:255:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:256:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:258:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:259:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:260:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:261:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:262:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:263:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:265:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:266:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:267:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./ajhc-0.8.0.7/lib/haskell-extras/Prelude.hs:268:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:18:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:19:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:20:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:21:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:22:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:25:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:26:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:27:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:28:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:31:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:33:{-# RULES "foldr/unpackString"  forall k z (addr::BitsPtr_) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:56:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:57:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:58:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:59:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:61:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:62:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:63:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:64:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:80:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:82:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:121:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:122:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:134:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:135:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:180:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:181:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:182:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:183:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:184:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:221:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:241:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:243:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:250:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:277:{-# RULES
./ajhc-0.8.0.7/lib/jhc/Jhc/List.hs:348:{-# RULES "take/repeat"   forall n x . take n (repeat x) = replicate n x #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/Monad.hs:38:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/Monad.hs:39:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/Monad.hs:40:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/Monad.hs:41:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/Monad.hs:42:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/Monad.hs:43:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./ajhc-0.8.0.7/lib/jhc/Jhc/Num.hs:19:{-# RULES
./ajhc-0.8.0.7/lib/jhc/Jhc/Num.hs:26:{-# RULES
./ajhc-0.8.0.7/lib/jhc/Prelude/IO.hs:38:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./ajhc-0.8.0.7/src/E/Program.hs:37:    progSeasoning     :: IdSet,       -- ^ these ids are depended on by external names via RULES
./ajhc-0.8.0.7/src/FrontEnd/HsPretty.hs:236:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.7/src/FrontEnd/HsPretty.hs:237:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.7/src/FrontEnd/HsPretty.hs:238:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./ajhc-0.8.0.7/src/FrontEnd/Lexer.hs:705:    (["RULES","RULE","RULES_JHC","RULE_JHC"],PragmaRules False),
./ajhc-0.8.0.7/src/FrontEnd/Tc/Main.hs:664:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./ajhc-0.8.0.7/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ajhc-0.8.0.7/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ajhc-0.8.0.7/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ajhc-0.8.0.7/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ajhc-0.8.0.7/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ajhc-0.8.0.7/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./ajhc-0.8.0.7/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ajhc-0.8.0.7/src/GenUtil.hs:342:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ajhc-0.8.0.7/src/GenUtil.hs:343:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ajhc-0.8.0.8/lib/applicative/Control/Arrow.hs:98:{-# RULES
./ajhc-0.8.0.8/lib/applicative/Control/Arrow.hs:212:{-# RULES
./ajhc-0.8.0.8/lib/applicative/Control/Category.hs:30:{-# RULES
./ajhc-0.8.0.8/lib/haskell-extras/Data/List.hs:317:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Data/List.hs:318:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:195:{-# RULES "sum/Int" forall . sum = sum' :: [Int] -> Int #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:197:{-# RULES "sum/Double" forall . sum = sum' :: [Double] -> Double #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:226:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:227:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:228:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:229:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:230:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:231:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:232:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:233:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:234:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:235:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:236:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:237:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:238:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:239:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:240:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:241:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:242:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:243:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:244:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:245:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:246:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:247:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:248:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:249:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:250:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:251:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:252:{-# RULES "concat/[]"     concat [] = [] #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:253:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:254:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:255:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:256:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:258:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:259:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:260:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:261:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:262:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:263:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:265:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:266:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:267:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./ajhc-0.8.0.8/lib/haskell-extras/Prelude.hs:268:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:18:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:19:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:20:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:21:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:22:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:25:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:26:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:27:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:28:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:31:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:33:{-# RULES "foldr/unpackString"  forall k z (addr::BitsPtr_) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:56:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:57:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:58:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:59:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:61:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:62:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:63:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:64:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:80:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:82:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:121:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:122:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:134:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:135:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:180:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:181:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:182:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:183:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:184:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:221:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:241:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:243:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:250:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:277:{-# RULES
./ajhc-0.8.0.8/lib/jhc/Jhc/List.hs:348:{-# RULES "take/repeat"   forall n x . take n (repeat x) = replicate n x #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/Monad.hs:38:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/Monad.hs:39:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/Monad.hs:40:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/Monad.hs:41:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/Monad.hs:42:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/Monad.hs:43:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./ajhc-0.8.0.8/lib/jhc/Jhc/Num.hs:19:{-# RULES
./ajhc-0.8.0.8/lib/jhc/Jhc/Num.hs:26:{-# RULES
./ajhc-0.8.0.8/lib/jhc/Prelude/IO.hs:38:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./ajhc-0.8.0.8/src/E/Program.hs:37:    progSeasoning     :: IdSet,       -- ^ these ids are depended on by external names via RULES
./ajhc-0.8.0.8/src/FrontEnd/HsPretty.hs:236:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.8/src/FrontEnd/HsPretty.hs:237:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.8/src/FrontEnd/HsPretty.hs:238:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./ajhc-0.8.0.8/src/FrontEnd/Lexer.hs:705:    (["RULES","RULE","RULES_JHC","RULE_JHC"],PragmaRules False),
./ajhc-0.8.0.8/src/FrontEnd/Tc/Main.hs:664:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./ajhc-0.8.0.8/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ajhc-0.8.0.8/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ajhc-0.8.0.8/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ajhc-0.8.0.8/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ajhc-0.8.0.8/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ajhc-0.8.0.8/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./ajhc-0.8.0.8/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ajhc-0.8.0.8/src/GenUtil.hs:342:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ajhc-0.8.0.8/src/GenUtil.hs:343:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ajhc-0.8.0.9/lib/applicative/Control/Arrow.hs:98:{-# RULES
./ajhc-0.8.0.9/lib/applicative/Control/Arrow.hs:212:{-# RULES
./ajhc-0.8.0.9/lib/applicative/Control/Category.hs:30:{-# RULES
./ajhc-0.8.0.9/lib/haskell-extras/Data/List.hs:317:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Data/List.hs:318:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:195:{-# RULES "sum/Int" forall . sum = sum' :: [Int] -> Int #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:197:{-# RULES "sum/Double" forall . sum = sum' :: [Double] -> Double #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:226:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:227:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:228:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:229:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:230:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:231:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:232:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:233:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:234:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:235:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:236:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:237:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:238:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:239:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:240:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:241:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:242:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:243:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:244:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:245:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:246:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:247:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:248:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:249:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:250:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:251:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:252:{-# RULES "concat/[]"     concat [] = [] #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:253:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:254:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:255:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:256:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:258:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:259:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:260:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:261:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:262:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:263:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:265:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:266:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:267:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./ajhc-0.8.0.9/lib/haskell-extras/Prelude.hs:268:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:18:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:19:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:20:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:21:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:22:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:25:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:26:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:27:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:28:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:31:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:33:{-# RULES "foldr/unpackString"  forall k z (addr::BitsPtr_) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:56:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:57:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:58:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:59:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:61:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:62:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:63:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:64:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:80:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:82:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:121:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:122:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:134:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:135:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:180:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:181:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:182:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:183:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:184:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:221:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:241:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:243:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:250:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:277:{-# RULES
./ajhc-0.8.0.9/lib/jhc/Jhc/List.hs:348:{-# RULES "take/repeat"   forall n x . take n (repeat x) = replicate n x #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/Monad.hs:38:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/Monad.hs:39:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/Monad.hs:40:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/Monad.hs:41:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/Monad.hs:42:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/Monad.hs:43:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./ajhc-0.8.0.9/lib/jhc/Jhc/Num.hs:19:{-# RULES
./ajhc-0.8.0.9/lib/jhc/Jhc/Num.hs:26:{-# RULES
./ajhc-0.8.0.9/lib/jhc/Prelude/IO.hs:38:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./ajhc-0.8.0.9/src/E/Program.hs:37:    progSeasoning     :: IdSet,       -- ^ these ids are depended on by external names via RULES
./ajhc-0.8.0.9/src/FrontEnd/HsPretty.hs:236:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.9/src/FrontEnd/HsPretty.hs:237:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./ajhc-0.8.0.9/src/FrontEnd/HsPretty.hs:238:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./ajhc-0.8.0.9/src/FrontEnd/Lexer.hs:705:    (["RULES","RULE","RULES_JHC","RULE_JHC"],PragmaRules False),
./ajhc-0.8.0.9/src/FrontEnd/Tc/Main.hs:664:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./ajhc-0.8.0.9/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ajhc-0.8.0.9/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ajhc-0.8.0.9/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ajhc-0.8.0.9/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ajhc-0.8.0.9/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ajhc-0.8.0.9/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./ajhc-0.8.0.9/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ajhc-0.8.0.9/src/GenUtil.hs:342:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ajhc-0.8.0.9/src/GenUtil.hs:343:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./alsa-0.2/Sound/Alsa/C2HS.hs:198:{-# RULES
./alsa-0.2.1/Sound/Alsa/C2HS.hs:198:{-# RULES
./alsa-0.3/Sound/Alsa/C2HS.hs:198:{-# RULES
./alsa-0.4/Sound/Alsa/C2HS.hs:198:{-# RULES
./alsa-pcm-0.5/src/Sound/ALSA/PCM/C2HS.hs:214:{-# RULES
./alsa-pcm-0.5.0.1/src/Sound/ALSA/PCM/C2HS.hs:214:{-# RULES
./ampersand-3.0.3/src/Database/Design/Ampersand/Prototype/StaticFiles_Generated.hs:93:  , SF True ".\\fw\\RuleEngine.php" 1430065427 {-2015-04-26 16:23:47 UTC -} "<?php\r\n\r\nclass RuleEngine {\r\n\t\r\n\t/*\r\n\t * $conjunctViolations[$conjId][] = array('src' => $srcAtom, 'tgt' => $tgtAtom)\r\n\t */\r\n\tstatic $conjunctViolations = array();\r\n\t\r\n\t/* \r\n\t * $cacheConjuncts\r\n\t * \t\ttrue: chache conjuncts\r\n\t * \t\tfalse: don't cache conjuncts (is used by ExecEngine)\r\n\t * \t\tdefault: true\r\n\t */\r\n\t// TODO: function can be made simpler.\r\n\tpublic static function checkProcessRules($roleId = null, $cacheConjuncts = true){\r\n\t\tforeach ((array)$GLOBALS['hooks']['before_RuleEngine_checkProcessRules'] as $hook) call_user_func($hook); // Hook functions\r\n\t\t\r\n\t\tif(!is_null($roleId)){\r\n\t\t\t$role = new Role($roleId);\r\n\t\t\t\r\n\t\t\tNotifications::addLog(\"------------------------- CHECKING PROCESS RULES (for role $role->name) -------------------------\");\r\n\t\t\tforeach ($role->maintains as $ruleName){\r\n\t\t\t\t$rule = RuleEngine::getRule($ruleName);\r\n\t\t\t\t\r\n\t\t\t\t$violations = RuleEngine::checkRule($rule, $cacheConjuncts);\r\n\t\t\t\tforeach ((array)$violations as $violation) Notifications::addViolation($rule, $violation['src'], $violation['tgt']);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tNotifications::addLog(\"------------------------- CHECKING ALL PROCESS RULES -------------------------\");\r\n\t\t\tforeach(RuleEngine::getAllProcessRuleNames() as $ruleName){\r\n\t\t\t\t$rule = RuleEngine::getRule($ruleName);\r\n\t\t\t\t\r\n\t\t\t\t$violations = RuleEngine::checkRule($rule, $cacheConjuncts);\r\n\t\t\t\tforeach ((array)$violations as $violation) Notifications::addViolation($rule, $violation['src'], $violation['tgt']);;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t}\r\n\t\r\n\t/*\r\n\t * $cacheConjuncts\r\n\t * \t\ttrue: chache conjuncts\r\n\t * \t\tfalse: don't cache conjuncts (is used by ExecEngine)\r\n\t * \t\tdefault: true\r\n\t */\r\n\tpublic static function checkInvariantRules($invariantConjuctsIds = null, $cacheConjuncts = true){\t\t\r\n\t\t$invariantRulesHold = true; // default\r\n\t\t\r\n\t\tforeach ((array)$GLOBALS['hooks']['before_RuleEngine_checkInvariantRules'] as $hook) call_user_func($hook); // Hook functions \r\n\t\t\r\n\t\t// check invariant rules\r\n\t\tNotifications::addLog('------------------------- CHECKING INVARIANT RULES -------------------------');\r\n\t\t\r\n\t\t// If $allInvariantConjuctsIds is provided (i.e. not null, which is something different than an empty array), check only those invariant conjuncts\r\n\t\tif(!is_null($invariantConjuctsIds)) {\r\n\t\t\tNotifications::addLog(\"Checking provided conjuncts\");\r\n\t\t\tforeach ((array)$invariantConjuctsIds as $conjunctId){\r\n\t\t\t\t$violations = RuleEngine::checkConjunct($conjunctId, $cacheConjuncts);\r\n\t\t\t\t\r\n\t\t\t\tforeach ((array)$violations as $violation){\r\n\t\t\t\t\t$invariantRulesHold = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\t$conjunct = RuleEngine::getConjunct($conjunctId);\r\n\t\t\t\t\tforeach ($conjunct['invariantRuleNames'] as $ruleName){\r\n\t\t\t\t\t\t$rule = RuleEngine::getRule($ruleName);\r\n\t\t\t\t\t\tNotifications::addInvariant($rule, $violation['src'], $violation['tgt']);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Otherwise check all invariantConjuncts\r\n\t\t}else{\r\n\t\t\tNotifications::addLog(\"Checking all invariant rules\");\r\n\t\t\tforeach (RuleEngine::getAllInvariantRulesNames() as $ruleName){\r\n\t\t\t\t$rule = RuleEngine::getRule($ruleName);\r\n\t\t\t\r\n\t\t\t\t$violations = RuleEngine::checkRule($rule, $cacheConjuncts);\r\n\t\t\t\t\r\n\t\t\t\tforeach ((array)$violations as $violation){\r\n\t\t\t\t\t$invariantRulesHold = false;\r\n\t\t\t\t\tNotifications::addInvariant($rule, $violation['src'], $violation['tgt']);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn $invariantRulesHold;\r\n\t\t\r\n\t}\r\n\t\r\n\t/*\r\n\t * $cacheConjuncts\r\n\t * \t\ttrue: chache conjuncts\r\n\t * \t\tfalse: don't cache conjuncts (is used by ExecEngine)\r\n\t * \t\tdefault: true\r\n\t */\r\n\tpublic static function checkRule($rule, $cacheConjuncts = true){\r\n\t\t$db = Database::singleton();\r\n\t\t$violations = array();\r\n\t\t\r\n\t\tNotifications::addLog(\"Checking rule '\" . $rule['name'].\"'\");\r\n\t\ttry{\r\n\t\t\tforeach($rule['conjunctIds'] as $conjunctId){\r\n\t\t\t\t$result = array_merge((array)$result, RuleEngine::checkConjunct($conjunctId, $cacheConjuncts));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(count($result) == 0){\r\n\t\t\t\tNotifications::addInfo(\"Rule '\".$rule['name'].\"' holds\", 'RuleEngineRulesThatHold', 'Rules that hold');\r\n\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\t$violations = $result;\r\n\t\t\t}\r\n\t\t\treturn $violations;\r\n\t\t}catch (Exception $e){\r\n\t\t\tNotifications::addError(\"While evaluating rule '\".$rule['name'].\"': \".$e->getMessage());\r\n\t\t}\r\n\t}\r\n\t\r\n\t/*\r\n\t * $conjuncts = array of conjunctIds\r\n\t * $cacheConjuncts\r\n\t * \t\ttrue: chache conjuncts\r\n\t * \t\tfalse: don't cache conjuncts (is used by first run of ExecEngine)\r\n\t * \t\tdefault: true\r\n\t */\r\n\tpublic static function checkConjuncts($conjuncts, $cacheConjuncts = true){\r\n\t\tforeach((array)$conjuncts as $conjunctId) RuleEngine::checkConjunct($conjunctId);\r\n\t}\r\n\t\r\n\t/*\r\n\t * $cacheConjuncts\r\n\t * \t\ttrue: chache conjuncts, i.e. store them locally in self::$conjunctViolations and, if there are violations, in the database table `__all_signals__`\r\n\t * \t\tfalse: don't cache conjuncts (is used by ExecEngine)\r\n\t * \t\tdefault: true\r\n\t */\r\n\tprivate static function checkConjunct($conjunctId, $cacheConjuncts = true){\r\n\t\tNotifications::addLog(\"Checking conjunct '\" . $conjunctId.\"' cache:\".var_export($cacheConjuncts, true));\r\n\t\ttry{\r\n\t\t\t\r\n\t\t\t// If conjunct is already evaluated and conjunctCach may be used -> return violations\r\n\t\t\tif(array_key_exists($conjunctId, self::$conjunctViolations) && $cacheConjuncts){\r\n\t\t\t\tNotifications::addLog(\"Conjunct is already evaluated, getting violations from cache\");\r\n\t\t\t\treturn self::$conjunctViolations[$conjunctId];\r\n\t\t\t\r\n\t\t\t// Otherwise evaluate conjunct, cache and return violations\r\n\t\t\t}else{\r\n\t\t\t\t$db = Database::singleton();\r\n\t\t\t\t$violations = array();\r\n\t\t\t\t\r\n\t\t\t\t// Evaluate conjunct\r\n\t\t\t\t$conjunct = RuleEngine::getConjunct($conjunctId);\r\n\t\t\t\t$violations = $db->Exe($conjunct['violationsSQL']);\r\n\t\t\t\t\r\n\t\t\t\t// Cache violations\r\n\t\t\t\tif($cacheConjuncts) self::$conjunctViolations[$conjunctId] = $violations;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(count($violations) == 0){\r\n\t\t\t\t\tNotifications::addLog(\"Conjunct '\".$conjunctId.\"' holds\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Remove \"old\" conjunct violations from database\r\n\t\t\t\t\t$query = \"DELETE FROM `__all_signals__` WHERE `conjId` = '$conjunctId'\";\r\n\t\t\t\t\t$db->Exe($query);\r\n\t\t\t\t\t\r\n\t\t\t\t}elseif($cacheConjuncts){\r\n\t\t\t\t\tNotifications::addLog(\"Conjunct '\".$conjunctId.\"' broken, caching violations in database\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Remove \"old\" conjunct violations from database\r\n\t\t\t\t\t$query = \"DELETE FROM `__all_signals__` WHERE `conjId` = '$conjunctId'\";\r\n\t\t\t\t\t$db->Exe($query);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Add new conjunct violation to database table __all_signals__\r\n\t\t\t\t\t$query = \"INSERT IGNORE INTO `__all_signals__` (`conjId`, `src`, `tgt`) VALUES \";\r\n\t\t\t\t\tforeach ($violations as $violation) $values[] = \"('\".$conjunctId.\"', '\".$violation['src'].\"', '\".$violation['tgt'].\"')\";\r\n\t\t\t\t\t$query .= implode(',', $values);\r\n\t\t\t\t\t$db->Exe($query);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tNotifications::addLog(\"Conjunct '\".$conjunctId.\"' broken\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn $violations;\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t}catch (Exception $e){\r\n\t\t\tNotifications::addError(\"While checking conjunct '\" . $conjunctId . \"': \" . $e->getMessage());\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function getSignalsFromDB($conjunctIds){\r\n\t\t$db = Database::singleton();\r\n\t\t\r\n\t\t$result = array();\r\n\t\t\r\n\t\t$conjunctIds = array_unique($conjunctIds); // remove duplicates\r\n\t\t\r\n\t\tif (count($conjunctIds) > 0) {\r\n\t\t\t// TODO: DB Query can be changed to WHERE `conjId` IN (<conjId1>, <conjId2>, etc)\r\n\t\t\t$query = \"SELECT * FROM `__all_signals__` WHERE \" . implode(' OR ', array_map( function($conjunctId) {return \"`conjId` = '$conjunctId'\";}, $conjunctIds));\r\n\t\t\t$result = $db->Exe($query);\r\n\t\t} else {\r\n\t\t\tNotifications::addInfo(\"No conjunctIds provided (can be that this role does not maintain any rule)\");\r\n\t\t}\r\n\t\t\r\n\t\treturn $result;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function getRule($ruleName){\r\n\t\t// from Generics.php\r\n\t\tglobal $allRules;\r\n\r\n\t\tif(!array_key_exists($ruleName, $allRules)) throw new Exception(\"Rule \\'$ruleName\\' does not exists in allRules\", 500);\r\n\t\t\r\n\t\treturn $rule = $allRules[$ruleName];\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function getPairView($srcAtom, $srcConcept, $tgtAtom, $tgtConcept, $pairView){\r\n\t\t$database = Database::singleton();\r\n\t\t\r\n\t\tNotifications::addLog('Creating violation message');\r\n\t\t$pairStrs = array();\r\n\t\t$interfaceIds = array();\r\n\t\tforeach ($pairView as $segment){\r\n\t\t\t// interface segment\r\n\t\t\tif ($segment['segmentType'] == 'Ifc'){\r\n\t\t\t\t$interfaceIds = explode(';', $segment['Interfaces']);\r\n\t\t\t\t\t\r\n\t\t\t// text segment\r\n\t\t\t}elseif ($segment['segmentType'] == 'Text'){\t\t\t\t\r\n\t\t\t\t$pairStrs[] = $segment['Text'];\r\n\t\t\t\t\t\r\n\t\t\t// expressie segment\r\n\t\t\t}elseif($segment['segmentType'] == 'Exp'){\r\n\t\t\t\t// select starting atom depending on whether the segment uses the src of tgt atom.\r\n\t\t\t\t$atom = $segment['srcOrTgt'] == 'Src' ? $srcAtom : $tgtAtom;\r\n\t\r\n\t\t\t\t// quering the expression\r\n\t\t\t\t$query = \"SELECT DISTINCT `tgt` FROM (\".$segment['expSQL'].\") AS results WHERE src='\".addslashes($atom).\"'\"; // SRC of TGT kunnen door een expressie gevolgd worden\r\n\t\t\t\t$rows = $database->Exe($query);\r\n\t\r\n\t\t\t\t// returning the result\r\n\t\t\t\tif(count($row) > 1) throw new Exception(\"Expression of pairview results in more than one tgt atom\", 501); // 501: Not implemented\r\n\t\t\t\t$pairStrs[] = $rows[0]['tgt'];\r\n\t\r\n\t\t\t// unknown segment\r\n\t\t\t}else{\r\n\t\t\t\t$errorMessage = \"Unknown segmentType '\" . $segment['segmentType'] . \"' in pairview\";\r\n\t\t\t\tthrow new Exception($errorMessage, 501); // 501: Not implemented\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn array('violationMessage' => implode($pairStrs)\r\n\t\t\t\t\t,'interfaceIds'\t=> $interfaceIds);\r\n\t}\r\n\t\r\n\tpublic static function getConjunct($conjunctId){\r\n\t\t// from Generics.php\r\n\t\tglobal $allConjuncts;\r\n\t\t\r\n\t\tif(!array_key_exists($conjunctId, $allConjuncts)) throw new Exception(\"Conjunct \\'$conjunctId\\' does not exists in allConjuncts\", 500);\r\n\t\t\r\n\t\treturn $conjunct = $allConjuncts[$conjunctId];\r\n\t\t\r\n\t}\r\n\t\r\n\t/*\r\n\t * $affectedConcepts is expected to be already unique (i.e. no duplicate entries)\r\n\t * $affectedRelations is expected to be already unique (i.e. no duplicate entries)\r\n\t * relations in $affectedRelations must be specified with full relation signature (i.e. rel_<relName>_<srcConcept>_<tgtConcept>)\r\n\t * \r\n\t */\r\n\tpublic static function getAffectedSigConjuncts($affectedConcepts, $affectedRelations){\r\n\t\t\r\n\t\t$affectedConjuncts = array();\r\n\t\tforeach($affectedConcepts as $concept){\r\n\t\t\t$affectedConjuncts = array_merge($affectedConjuncts, (array)Concept::getAffectedSigConjuncts($concept));\r\n\t\t}\r\n\t\tforeach($affectedRelations as $fullRelationSignature){\r\n\t\t\t$affectedConjuncts = array_merge($affectedConjuncts, (array)Relation::getAffectedSigConjunctIds($fullRelationSignature));\r\n\t\t}\r\n\t\t\r\n\t\treturn array_unique($affectedConjuncts); // remove duplicate entries.\r\n\t}\r\n\t\r\n\tpublic static function getAffectedInvConjuncts($affectedConcepts, $affectedRelations){\r\n\t\r\n\t\t$affectedConjuncts = array();\r\n\t\tforeach($affectedConcepts as $concept){\r\n\t\t\t$affectedConjuncts = array_merge($affectedConjuncts, (array)Concept::getAffectedInvConjuncts($concept));\r\n\t\t}\r\n\t\tforeach($affectedRelations as $fullRelationSignature){\r\n\t\t\t$affectedConjuncts = array_merge($affectedConjuncts, (array)Relation::getAffectedInvConjunctIds($fullRelationSignature));\r\n\t\t}\r\n\t\r\n\t\treturn array_unique($affectedConjuncts); // remove duplicate entries.\r\n\t}\r\n\t\r\n\t\r\n\t/*\r\n\t * This function returns all InvariantRulesNames. Currently there is no such array in Generics.php.\r\n\t * Therefore this function finds all the processRuleNames (as provided by the $allRoles array) and\r\n\t * selects those rules from $allRules, that are not processRules (a rule is either a processRule or \r\n\t * an invariantRule, but not both).\r\n\t * \r\n\t * TODO: \r\n\t */\r\n\tpublic static function getAllInvariantRulesNames(){\r\n\t\t// from Generics.php\r\n\t\tglobal $allRoles;\r\n\t\tglobal $allRules;\r\n\t\t\r\n\t\t// list of all process rules\r\n\t\t$processRuleNames = array();\r\n\t\tforeach($allRoles as $role){\r\n\t\t\t$processRuleNames = array_merge($processRuleNames, $role['ruleNames']);\r\n\t\t}\r\n\t\t\r\n\t\t// list of all rules\r\n\t\t$allRuleNames = array_keys($allRules);\r\n\t\t\r\n\t\t// return list of all invariant rules (= all rules that are not process rules)\r\n\t\treturn array_diff($allRuleNames, $processRuleNames);\r\n\t}\r\n\t\r\n\tpublic static function getAllProcessRuleNames(){\r\n\t\t// from Generics.php\r\n\t\tglobal $allRoles;\r\n\t\tglobal $allRules;\r\n\t\t\r\n\t\t// list of all process rules\r\n\t\t$processRuleNames = array();\r\n\t\tforeach($allRoles as $role){\r\n\t\t\t$processRuleNames = array_merge($processRuleNames, $role['ruleNames']);\r\n\t\t}\r\n\t\t\r\n\t\treturn $processRuleNames;\r\n\t}\r\n\r\n}\r\n\r\n?>"
./Animas-0.1/src/FRP/Animas.hs:369:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Animas-0.2/src/FRP/Animas.hs:369:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./antlrc-0.0.1/src/C2HS.hs:197:{-# RULES 
./antlrc-0.0.2/src/C2HS.hs:197:{-# RULES 
./app-lens-0.1.0.0/Control/LensFunction/Core.hs:413:{-# RULES
./app-lens-0.1.0.0/Control/LensFunction/Internal.hs:54:{-# RULES
./app-lens-0.1.0.0/Control/LensFunction/Util.hs:23:{-# RULES
./app-lens-0.1.0.1/Control/LensFunction/Core.hs:413:{-# RULES
./app-lens-0.1.0.1/Control/LensFunction/Internal.hs:54:{-# RULES
./app-lens-0.1.0.1/Control/LensFunction/Util.hs:24:{-# RULES
./arbb-vm-0.1.1.2/C2HS.hs:197:{-# RULES 
./arbb-vm-0.1.1.4/C2HS.hs:197:{-# RULES 
./arithmoi-0.1.0.0/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/Moduli.hs:138:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/Moduli.hs:161:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.1.0.0/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/Moduli.hs:138:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/Moduli.hs:161:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.1.0.1/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/Moduli.hs:138:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/Moduli.hs:161:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.1.0.2/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/Moduli.hs:138:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/Moduli.hs:161:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.2.0.0/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/Moduli.hs:138:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/Moduli.hs:161:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.2.0.1/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/Moduli.hs:138:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/Moduli.hs:161:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.2.0.2/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/Moduli.hs:138:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/Moduli.hs:161:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.2.0.3/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/Moduli.hs:138:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/Moduli.hs:161:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.2.0.4/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/Moduli.hs:138:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/Moduli.hs:161:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.2.0.5/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/Moduli.hs:150:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/Moduli.hs:173:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.2.0.6/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/Moduli.hs:168:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/Moduli.hs:191:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.3.0.0/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/Moduli.hs:168:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/Moduli.hs:191:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.4.0.0/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/Moduli.hs:168:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/Moduli.hs:191:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.4.0.1/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/Moduli.hs:168:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/Moduli.hs:191:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/Powers/Fourth.hs:47:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/Powers/Squares.hs:55:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/Utils.hs:55:{-# RULES
./arithmoi-0.4.0.2/Math/NumberTheory/Utils.hs:96:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/GCD.hs:121:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/GCD.hs:138:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/Moduli.hs:168:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/Moduli.hs:191:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/Powers/Cubes.hs:58:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/Powers/Fourth.hs:49:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/Powers/Squares.hs:57:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/Utils.hs:57:{-# RULES
./arithmoi-0.4.0.3/Math/NumberTheory/Utils.hs:98:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/GCD.hs:126:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/GCD.hs:143:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/Moduli.hs:165:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/Moduli.hs:192:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/Powers/Cubes.hs:61:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/Powers/Fourth.hs:52:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/Powers/Squares.hs:60:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/Utils.hs:60:{-# RULES
./arithmoi-0.4.0.4/Math/NumberTheory/Utils.hs:102:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/GCD.hs:126:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/GCD.hs:143:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/Moduli.hs:165:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/Moduli.hs:192:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/Powers/Cubes.hs:61:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/Powers/Fourth.hs:52:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/Powers/Squares.hs:60:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/Utils.hs:60:{-# RULES
./arithmoi-0.4.1.0/Math/NumberTheory/Utils.hs:102:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/GCD.hs:126:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/GCD.hs:143:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/Moduli.hs:165:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/Moduli.hs:192:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/Powers/Cubes.hs:61:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/Powers/Fourth.hs:52:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/Powers/Squares.hs:60:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/Utils.hs:60:{-# RULES
./arithmoi-0.4.1.1/Math/NumberTheory/Utils.hs:102:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/GCD.hs:126:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/GCD.hs:143:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/Moduli.hs:165:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/Moduli.hs:192:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/Powers/Cubes.hs:61:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/Powers/Fourth.hs:52:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/Powers/Squares.hs:60:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/Utils.hs:60:{-# RULES
./arithmoi-0.4.1.2/Math/NumberTheory/Utils.hs:102:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/GCD.hs:39:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/GCD.hs:56:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/GCD.hs:126:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/GCD.hs:143:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/Moduli.hs:167:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/Moduli.hs:194:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/Powers/Cubes.hs:63:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/Powers/Fourth.hs:52:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/Powers/Squares.hs:60:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/Utils.hs:60:{-# RULES
./arithmoi-0.4.1.3/Math/NumberTheory/Utils.hs:122:{-# RULES
./array-0.1.0.0/Data/Array/Base.hs:204:{-# RULES
./array-0.1.0.0/Data/Array/Base.hs:231:--   {-# RULES listArray = listUArray
./array-0.1.0.0/Data/Array/Base.hs:244:{-# RULES
./array-0.1.0.0/Data/Array/Base.hs:508:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.1.0.0/Data/Array/Base.hs:1698:{-# RULES
./array-0.1.0.0/Data/Array/Base.hs:1740:{-# RULES
./array-0.1.0.0/Data/Array/Base.hs:1773:{-# RULES
./array-0.1.0.0/Data/Array/Base.hs:1834:{-# RULES
./array-0.1.0.0/Data/Array/Diff.hs:392:{-# RULES
./array-0.1.0.0/Data/Array/Diff.hs:407:{-# RULES
./array-0.1.0.0/Data/Array/Diff.hs:427:{-# RULES
./array-0.1.0.0/Data/Array/Diff.hs:447:{-# RULES
./array-0.1.0.0/Data/Array/IO.hs:64:{-# RULES
./array-0.1.0.0/Data/Array/IO.hs:77:{-# RULES
./array-0.1.0.0/Data/Array/IO.hs:95:{-# RULES
./array-0.1.0.0/Data/Array/IO.hs:112:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:212:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:239:--   {-# RULES listArray = listUArray
./array-0.2.0.0/Data/Array/Base.hs:252:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:513:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.2.0.0/Data/Array/Base.hs:1722:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:1764:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:1797:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:1855:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:1866:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:1875:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:1882:{-# RULES
./array-0.2.0.0/Data/Array/Base.hs:1890:{-# RULES
./array-0.2.0.0/Data/Array/Diff.hs:399:{-# RULES
./array-0.2.0.0/Data/Array/Diff.hs:414:{-# RULES
./array-0.2.0.0/Data/Array/Diff.hs:434:{-# RULES
./array-0.2.0.0/Data/Array/Diff.hs:454:{-# RULES
./array-0.2.0.0/Data/Array/IO/Internals.hs:385:{-# RULES
./array-0.2.0.0/Data/Array/IO/Internals.hs:394:{-# RULES
./array-0.2.0.0/Data/Array/IO/Internals.hs:402:{-# RULES
./array-0.2.0.0/Data/Array/IO/Internals.hs:409:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:219:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:246:--   {-# RULES listArray = listUArray
./array-0.3.0.0/Data/Array/Base.hs:259:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:520:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.3.0.0/Data/Array/Base.hs:1737:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:1779:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:1812:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:1870:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:1881:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:1890:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:1897:{-# RULES
./array-0.3.0.0/Data/Array/Base.hs:1905:{-# RULES
./array-0.3.0.0/Data/Array/IO/Internals.hs:389:{-# RULES
./array-0.3.0.0/Data/Array/IO/Internals.hs:398:{-# RULES
./array-0.3.0.0/Data/Array/IO/Internals.hs:406:{-# RULES
./array-0.3.0.0/Data/Array/IO/Internals.hs:413:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:219:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:246:--   {-# RULES listArray = listUArray
./array-0.3.0.1/Data/Array/Base.hs:259:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:520:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.3.0.1/Data/Array/Base.hs:1737:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:1779:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:1812:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:1870:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:1881:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:1890:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:1897:{-# RULES
./array-0.3.0.1/Data/Array/Base.hs:1905:{-# RULES
./array-0.3.0.1/Data/Array/IO/Internals.hs:389:{-# RULES
./array-0.3.0.1/Data/Array/IO/Internals.hs:398:{-# RULES
./array-0.3.0.1/Data/Array/IO/Internals.hs:406:{-# RULES
./array-0.3.0.1/Data/Array/IO/Internals.hs:413:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:217:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:244:--   {-# RULES listArray = listUArray
./array-0.3.0.2/Data/Array/Base.hs:257:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:516:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.3.0.2/Data/Array/Base.hs:1724:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:1766:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:1799:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:1857:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:1868:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:1877:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:1884:{-# RULES
./array-0.3.0.2/Data/Array/Base.hs:1892:{-# RULES
./array-0.3.0.2/Data/Array/IO/Internals.hs:389:{-# RULES
./array-0.3.0.2/Data/Array/IO/Internals.hs:398:{-# RULES
./array-0.3.0.2/Data/Array/IO/Internals.hs:406:{-# RULES
./array-0.3.0.2/Data/Array/IO/Internals.hs:413:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:217:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:244:--   {-# RULES listArray = listUArray
./array-0.3.0.3/Data/Array/Base.hs:257:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:516:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.3.0.3/Data/Array/Base.hs:1724:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:1766:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:1799:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:1857:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:1868:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:1877:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:1884:{-# RULES
./array-0.3.0.3/Data/Array/Base.hs:1892:{-# RULES
./array-0.3.0.3/Data/Array/IO/Internals.hs:389:{-# RULES
./array-0.3.0.3/Data/Array/IO/Internals.hs:398:{-# RULES
./array-0.3.0.3/Data/Array/IO/Internals.hs:406:{-# RULES
./array-0.3.0.3/Data/Array/IO/Internals.hs:413:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:217:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:244:--   {-# RULES listArray = listUArray
./array-0.4.0.0/Data/Array/Base.hs:257:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:516:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.4.0.0/Data/Array/Base.hs:1724:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:1766:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:1799:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:1857:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:1868:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:1877:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:1884:{-# RULES
./array-0.4.0.0/Data/Array/Base.hs:1892:{-# RULES
./array-0.4.0.0/Data/Array/IO/Internals.hs:391:{-# RULES
./array-0.4.0.0/Data/Array/IO/Internals.hs:400:{-# RULES
./array-0.4.0.0/Data/Array/IO/Internals.hs:408:{-# RULES
./array-0.4.0.0/Data/Array/IO/Internals.hs:415:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:218:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:245:--   {-# RULES listArray = listUArray
./array-0.4.0.1/Data/Array/Base.hs:258:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:517:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.4.0.1/Data/Array/Base.hs:1726:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:1768:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:1802:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:1860:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:1871:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:1880:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:1887:{-# RULES
./array-0.4.0.1/Data/Array/Base.hs:1895:{-# RULES
./array-0.4.0.1/Data/Array/IO/Internals.hs:391:{-# RULES
./array-0.4.0.1/Data/Array/IO/Internals.hs:400:{-# RULES
./array-0.4.0.1/Data/Array/IO/Internals.hs:408:{-# RULES
./array-0.4.0.1/Data/Array/IO/Internals.hs:415:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:186:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:213:--   {-# RULES listArray = listUArray
./array-0.5.0.0/Data/Array/Base.hs:225:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:471:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.5.0.0/Data/Array/Base.hs:1393:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:1434:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:1467:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:1519:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:1530:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:1539:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:1546:{-# RULES
./array-0.5.0.0/Data/Array/Base.hs:1554:{-# RULES
./array-0.5.0.0/Data/Array/IO/Internals.hs:374:{-# RULES
./array-0.5.0.0/Data/Array/IO/Internals.hs:383:{-# RULES
./array-0.5.0.0/Data/Array/IO/Internals.hs:391:{-# RULES
./array-0.5.0.0/Data/Array/IO/Internals.hs:398:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:190:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:217:--   {-# RULES listArray = listUArray
./array-0.5.1.0/Data/Array/Base.hs:229:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:479:{-# RULES "cmpUArray/Int" cmpUArray = cmpIntUArray #-}
./array-0.5.1.0/Data/Array/Base.hs:1410:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:1451:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:1488:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:1544:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:1559:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:1572:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:1583:{-# RULES
./array-0.5.1.0/Data/Array/Base.hs:1595:{-# RULES
./array-0.5.1.0/Data/Array/IO/Internals.hs:389:{-# RULES
./array-0.5.1.0/Data/Array/IO/Internals.hs:402:{-# RULES
./array-0.5.1.0/Data/Array/IO/Internals.hs:414:{-# RULES
./array-0.5.1.0/Data/Array/IO/Internals.hs:425:{-# RULES
./array-memoize-0.5.0/Data/Function/ArrayMemoize.hs:17:{-# RULES  "disc-rw1" continuize = cont';
./ArrayRef-0.1/Data/ArrayBZ/Diff.hs:248:{-# RULES
./ArrayRef-0.1/Data/ArrayBZ/Diff.hs:263:{-# RULES
./ArrayRef-0.1/Data/ArrayBZ/Diff.hs:283:{-# RULES
./ArrayRef-0.1/Data/ArrayBZ/Diff.hs:303:{-# RULES
./ArrayRef-0.1/Data/ArrayBZ/Internals/Boxed.hs:229:{-# RULES
./ArrayRef-0.1/Data/ArrayBZ/Internals/Boxed.hs:249:{-# RULES
./ArrayRef-0.1/Data/ArrayBZ/Internals/IArray.hs:252:{-# RULES "cmpIArray/Int" cmpIArray = cmpIntIArray #-}
./ArrayRef-0.1/Data/ArrayBZ/Internals/Unboxed.hs:173:{-# RULES
./ArrayRef-0.1/Data/ArrayBZ/Internals/Unboxed.hs:193:{-# RULES
./ArrayRef-0.1/Data/ArrayBZ/Internals/unused.hs:52:{-# RULES
./ArrayRef-0.1/Data/ArrayBZ/Internals/unused.hs:79:--   {-# RULES listArray = listUArray
./ArrayRef-0.1/Data/ArrayBZ/Internals/unused.hs:92:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Diff.hs:245:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Diff.hs:259:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Diff.hs:279:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Diff.hs:299:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Internals/Boxed.hs:248:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Internals/Boxed.hs:268:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Internals/IArray.hs:251:{-# RULES "cmpIArray/Int" cmpIArray = cmpIntIArray #-}
./ArrayRef-0.1.2/Data/ArrayBZ/Internals/Unboxed.hs:193:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Internals/Unboxed.hs:213:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Internals/unused.hs:52:{-# RULES
./ArrayRef-0.1.2/Data/ArrayBZ/Internals/unused.hs:79:--   {-# RULES listArray = listUArray
./ArrayRef-0.1.2/Data/ArrayBZ/Internals/unused.hs:92:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Diff.hs:245:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Diff.hs:259:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Diff.hs:279:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Diff.hs:299:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Internals/Boxed.hs:248:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Internals/Boxed.hs:268:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Internals/IArray.hs:251:{-# RULES "cmpIArray/Int" cmpIArray = cmpIntIArray #-}
./ArrayRef-0.1.3/Data/ArrayBZ/Internals/Unboxed.hs:190:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Internals/Unboxed.hs:210:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Internals/unused.hs:52:{-# RULES
./ArrayRef-0.1.3/Data/ArrayBZ/Internals/unused.hs:79:--   {-# RULES listArray = listUArray
./ArrayRef-0.1.3/Data/ArrayBZ/Internals/unused.hs:92:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Diff.hs:245:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Diff.hs:259:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Diff.hs:279:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Diff.hs:299:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Internals/Boxed.hs:248:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Internals/Boxed.hs:268:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Internals/IArray.hs:251:{-# RULES "cmpIArray/Int" cmpIArray = cmpIntIArray #-}
./ArrayRef-0.1.3.1/Data/ArrayBZ/Internals/Unboxed.hs:190:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Internals/Unboxed.hs:210:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Internals/unused.hs:52:{-# RULES
./ArrayRef-0.1.3.1/Data/ArrayBZ/Internals/unused.hs:79:--   {-# RULES listArray = listUArray
./ArrayRef-0.1.3.1/Data/ArrayBZ/Internals/unused.hs:92:{-# RULES
./assert-0.0.1.0/src/Control/Exception/Assert.hs:31:{-# RULES "assertMessage" forall name msg.
./assert-0.0.1.1/src/Control/Exception/Assert.hs:31:{-# RULES "assertMessage" forall name msg.
./assert-0.0.1.2/src/Control/Exception/Assert.hs:35:{-# RULES "assertMessage" forall name msg.
./assimp-0.1/C2HS.hs:197:{-# RULES 
./base-4.0.0.0/Control/Arrow.hs:96:{-# RULES
./base-4.0.0.0/Control/Arrow.hs:210:{-# RULES
./base-4.0.0.0/Control/Category.hs:30:{-# RULES
./base-4.0.0.0/Data/List.hs:511:{-# RULES
./base-4.0.0.0/Data/List.hs:531:{-# RULES
./base-4.0.0.0/Foreign/C/Types.hs:124:{-# RULES
./base-4.0.0.0/Foreign/C/Types.hs:158:{-# RULES
./base-4.0.0.0/Foreign/C/Types.hs:177:{-# RULES
./base-4.0.0.0/Foreign/C/Types.hs:212:{-# RULES
./base-4.0.0.0/GHC/Int.hs:153:{-# RULES
./base-4.0.0.0/GHC/Int.hs:269:{-# RULES
./base-4.0.0.0/GHC/Int.hs:405:{-# RULES
./base-4.0.0.0/GHC/Int.hs:518:{-# RULES
./base-4.0.0.0/GHC/Int.hs:683:{-# RULES
./base-4.0.0.0/GHC/Int.hs:785:{-# RULES
./base-4.0.0.0/GHC/Word.hs:186:{-# RULES
./base-4.0.0.0/GHC/Word.hs:289:{-# RULES
./base-4.0.0.0/GHC/Word.hs:393:{-# RULES
./base-4.0.0.0/GHC/Word.hs:496:{-# RULES
./base-4.0.0.0/GHC/Word.hs:606:{-# RULES
./base-4.0.0.0/GHC/Word.hs:749:{-# RULES
./base-4.0.0.0/GHC/Word.hs:843:{-# RULES
./base-4.1.0.0/Control/Arrow.hs:96:{-# RULES
./base-4.1.0.0/Control/Arrow.hs:208:{-# RULES
./base-4.1.0.0/Control/Category.hs:30:{-# RULES
./base-4.1.0.0/Data/List.hs:511:{-# RULES
./base-4.1.0.0/Data/List.hs:531:{-# RULES
./base-4.1.0.0/Foreign/C/Types.hs:124:{-# RULES
./base-4.1.0.0/Foreign/C/Types.hs:158:{-# RULES
./base-4.1.0.0/Foreign/C/Types.hs:177:{-# RULES
./base-4.1.0.0/Foreign/C/Types.hs:212:{-# RULES
./base-4.1.0.0/GHC/Int.hs:153:{-# RULES
./base-4.1.0.0/GHC/Int.hs:269:{-# RULES
./base-4.1.0.0/GHC/Int.hs:405:{-# RULES
./base-4.1.0.0/GHC/Int.hs:518:{-# RULES
./base-4.1.0.0/GHC/Int.hs:683:{-# RULES
./base-4.1.0.0/GHC/Int.hs:785:{-# RULES
./base-4.1.0.0/GHC/Word.hs:186:{-# RULES
./base-4.1.0.0/GHC/Word.hs:289:{-# RULES
./base-4.1.0.0/GHC/Word.hs:393:{-# RULES
./base-4.1.0.0/GHC/Word.hs:496:{-# RULES
./base-4.1.0.0/GHC/Word.hs:606:{-# RULES
./base-4.1.0.0/GHC/Word.hs:749:{-# RULES
./base-4.1.0.0/GHC/Word.hs:843:{-# RULES
./base-4.2.0.0/Control/Arrow.hs:95:{-# RULES
./base-4.2.0.0/Control/Arrow.hs:207:{-# RULES
./base-4.2.0.0/Control/Category.hs:29:{-# RULES
./base-4.2.0.0/Data/List.hs:514:{-# RULES
./base-4.2.0.0/Data/List.hs:534:{-# RULES
./base-4.2.0.0/Data/List.hs:574:{-# RULES
./base-4.2.0.0/Foreign/C/Types.hs:128:{-# RULES
./base-4.2.0.0/Foreign/C/Types.hs:165:{-# RULES
./base-4.2.0.0/Foreign/C/Types.hs:186:{-# RULES
./base-4.2.0.0/Foreign/C/Types.hs:221:{-# RULES
./base-4.2.0.0/GHC/Int.hs:154:{-# RULES
./base-4.2.0.0/GHC/Int.hs:270:{-# RULES
./base-4.2.0.0/GHC/Int.hs:406:{-# RULES
./base-4.2.0.0/GHC/Int.hs:519:{-# RULES
./base-4.2.0.0/GHC/Int.hs:684:{-# RULES
./base-4.2.0.0/GHC/Int.hs:786:{-# RULES
./base-4.2.0.0/GHC/Word.hs:188:{-# RULES
./base-4.2.0.0/GHC/Word.hs:292:{-# RULES
./base-4.2.0.0/GHC/Word.hs:397:{-# RULES
./base-4.2.0.0/GHC/Word.hs:500:{-# RULES
./base-4.2.0.0/GHC/Word.hs:611:{-# RULES
./base-4.2.0.0/GHC/Word.hs:754:{-# RULES
./base-4.2.0.0/GHC/Word.hs:849:{-# RULES
./base-4.2.0.1/Control/Arrow.hs:95:{-# RULES
./base-4.2.0.1/Control/Arrow.hs:207:{-# RULES
./base-4.2.0.1/Control/Category.hs:29:{-# RULES
./base-4.2.0.1/Data/List.hs:514:{-# RULES
./base-4.2.0.1/Data/List.hs:534:{-# RULES
./base-4.2.0.1/Data/List.hs:574:{-# RULES
./base-4.2.0.1/Foreign/C/Types.hs:128:{-# RULES
./base-4.2.0.1/Foreign/C/Types.hs:165:{-# RULES
./base-4.2.0.1/Foreign/C/Types.hs:186:{-# RULES
./base-4.2.0.1/Foreign/C/Types.hs:221:{-# RULES
./base-4.2.0.1/GHC/Int.hs:154:{-# RULES
./base-4.2.0.1/GHC/Int.hs:270:{-# RULES
./base-4.2.0.1/GHC/Int.hs:406:{-# RULES
./base-4.2.0.1/GHC/Int.hs:519:{-# RULES
./base-4.2.0.1/GHC/Int.hs:684:{-# RULES
./base-4.2.0.1/GHC/Int.hs:786:{-# RULES
./base-4.2.0.1/GHC/Word.hs:188:{-# RULES
./base-4.2.0.1/GHC/Word.hs:292:{-# RULES
./base-4.2.0.1/GHC/Word.hs:397:{-# RULES
./base-4.2.0.1/GHC/Word.hs:500:{-# RULES
./base-4.2.0.1/GHC/Word.hs:611:{-# RULES
./base-4.2.0.1/GHC/Word.hs:754:{-# RULES
./base-4.2.0.1/GHC/Word.hs:849:{-# RULES
./base-4.2.0.2/Control/Arrow.hs:95:{-# RULES
./base-4.2.0.2/Control/Arrow.hs:207:{-# RULES
./base-4.2.0.2/Control/Category.hs:29:{-# RULES
./base-4.2.0.2/Data/List.hs:514:{-# RULES
./base-4.2.0.2/Data/List.hs:534:{-# RULES
./base-4.2.0.2/Data/List.hs:574:{-# RULES
./base-4.2.0.2/Foreign/C/Types.hs:128:{-# RULES
./base-4.2.0.2/Foreign/C/Types.hs:165:{-# RULES
./base-4.2.0.2/Foreign/C/Types.hs:186:{-# RULES
./base-4.2.0.2/Foreign/C/Types.hs:221:{-# RULES
./base-4.2.0.2/GHC/Int.hs:154:{-# RULES
./base-4.2.0.2/GHC/Int.hs:270:{-# RULES
./base-4.2.0.2/GHC/Int.hs:406:{-# RULES
./base-4.2.0.2/GHC/Int.hs:519:{-# RULES
./base-4.2.0.2/GHC/Int.hs:684:{-# RULES
./base-4.2.0.2/GHC/Int.hs:786:{-# RULES
./base-4.2.0.2/GHC/Word.hs:188:{-# RULES
./base-4.2.0.2/GHC/Word.hs:292:{-# RULES
./base-4.2.0.2/GHC/Word.hs:397:{-# RULES
./base-4.2.0.2/GHC/Word.hs:500:{-# RULES
./base-4.2.0.2/GHC/Word.hs:611:{-# RULES
./base-4.2.0.2/GHC/Word.hs:754:{-# RULES
./base-4.2.0.2/GHC/Word.hs:849:{-# RULES
./base-4.3.0.0/Control/Arrow.hs:96:{-# RULES
./base-4.3.0.0/Control/Arrow.hs:209:{-# RULES
./base-4.3.0.0/Control/Category.hs:29:{-# RULES
./base-4.3.0.0/Data/List.hs:514:{-# RULES
./base-4.3.0.0/Data/List.hs:534:{-# RULES
./base-4.3.0.0/Data/List.hs:574:{-# RULES
./base-4.3.0.0/Foreign/C/Types.hs:136:{-# RULES
./base-4.3.0.0/Foreign/C/Types.hs:173:{-# RULES
./base-4.3.0.0/Foreign/C/Types.hs:194:{-# RULES
./base-4.3.0.0/Foreign/C/Types.hs:225:{-# RULES
./base-4.3.0.0/GHC/Int.hs:151:{-# RULES
./base-4.3.0.0/GHC/Int.hs:157:{-# RULES
./base-4.3.0.0/GHC/Int.hs:172:{-# RULES
./base-4.3.0.0/GHC/Int.hs:294:{-# RULES
./base-4.3.0.0/GHC/Int.hs:302:{-# RULES
./base-4.3.0.0/GHC/Int.hs:317:{-# RULES
./base-4.3.0.0/GHC/Int.hs:457:{-# RULES
./base-4.3.0.0/GHC/Int.hs:567:{-# RULES
./base-4.3.0.0/GHC/Int.hs:577:{-# RULES
./base-4.3.0.0/GHC/Int.hs:592:{-# RULES
./base-4.3.0.0/GHC/Int.hs:757:{-# RULES
./base-4.3.0.0/GHC/Int.hs:767:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.3.0.0/GHC/Int.hs:857:{-# RULES
./base-4.3.0.0/GHC/Int.hs:862:{-# RULES
./base-4.3.0.0/GHC/Int.hs:877:{-# RULES
./base-4.3.0.0/GHC/Word.hs:185:{-# RULES
./base-4.3.0.0/GHC/Word.hs:191:-- No RULES for RealFrac unfortunately.
./base-4.3.0.0/GHC/Word.hs:289:{-# RULES
./base-4.3.0.0/GHC/Word.hs:296:{-# RULES
./base-4.3.0.0/GHC/Word.hs:311:{-# RULES
./base-4.3.0.0/GHC/Word.hs:420:{-# RULES
./base-4.3.0.0/GHC/Word.hs:428:{-# RULES
./base-4.3.0.0/GHC/Word.hs:443:{-# RULES
./base-4.3.0.0/GHC/Word.hs:549:{-# RULES
./base-4.3.0.0/GHC/Word.hs:566:{-# RULES
./base-4.3.0.0/GHC/Word.hs:581:{-# RULES
./base-4.3.0.0/GHC/Word.hs:689:{-# RULES
./base-4.3.0.0/GHC/Word.hs:828:{-# RULES
./base-4.3.0.0/GHC/Word.hs:919:{-# RULES
./base-4.3.1.0/Control/Arrow.hs:96:{-# RULES
./base-4.3.1.0/Control/Arrow.hs:209:{-# RULES
./base-4.3.1.0/Control/Category.hs:29:{-# RULES
./base-4.3.1.0/Data/List.hs:514:{-# RULES
./base-4.3.1.0/Data/List.hs:534:{-# RULES
./base-4.3.1.0/Data/List.hs:574:{-# RULES
./base-4.3.1.0/Foreign/C/Types.hs:136:{-# RULES
./base-4.3.1.0/Foreign/C/Types.hs:173:{-# RULES
./base-4.3.1.0/Foreign/C/Types.hs:194:{-# RULES
./base-4.3.1.0/Foreign/C/Types.hs:225:{-# RULES
./base-4.3.1.0/GHC/Int.hs:151:{-# RULES
./base-4.3.1.0/GHC/Int.hs:157:{-# RULES
./base-4.3.1.0/GHC/Int.hs:172:{-# RULES
./base-4.3.1.0/GHC/Int.hs:294:{-# RULES
./base-4.3.1.0/GHC/Int.hs:302:{-# RULES
./base-4.3.1.0/GHC/Int.hs:317:{-# RULES
./base-4.3.1.0/GHC/Int.hs:457:{-# RULES
./base-4.3.1.0/GHC/Int.hs:567:{-# RULES
./base-4.3.1.0/GHC/Int.hs:577:{-# RULES
./base-4.3.1.0/GHC/Int.hs:592:{-# RULES
./base-4.3.1.0/GHC/Int.hs:757:{-# RULES
./base-4.3.1.0/GHC/Int.hs:767:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.3.1.0/GHC/Int.hs:857:{-# RULES
./base-4.3.1.0/GHC/Int.hs:862:{-# RULES
./base-4.3.1.0/GHC/Int.hs:877:{-# RULES
./base-4.3.1.0/GHC/Word.hs:185:{-# RULES
./base-4.3.1.0/GHC/Word.hs:191:-- No RULES for RealFrac unfortunately.
./base-4.3.1.0/GHC/Word.hs:289:{-# RULES
./base-4.3.1.0/GHC/Word.hs:296:{-# RULES
./base-4.3.1.0/GHC/Word.hs:311:{-# RULES
./base-4.3.1.0/GHC/Word.hs:420:{-# RULES
./base-4.3.1.0/GHC/Word.hs:428:{-# RULES
./base-4.3.1.0/GHC/Word.hs:443:{-# RULES
./base-4.3.1.0/GHC/Word.hs:549:{-# RULES
./base-4.3.1.0/GHC/Word.hs:566:{-# RULES
./base-4.3.1.0/GHC/Word.hs:581:{-# RULES
./base-4.3.1.0/GHC/Word.hs:689:{-# RULES
./base-4.3.1.0/GHC/Word.hs:828:{-# RULES
./base-4.3.1.0/GHC/Word.hs:919:{-# RULES
./base-4.4.0.0/Control/Arrow.hs:97:{-# RULES
./base-4.4.0.0/Control/Arrow.hs:212:{-# RULES
./base-4.4.0.0/Control/Category.hs:32:{-# RULES
./base-4.4.0.0/Data/List.hs:526:{-# RULES
./base-4.4.0.0/Data/List.hs:546:{-# RULES
./base-4.4.0.0/Data/List.hs:586:{-# RULES
./base-4.4.0.0/Foreign/C/Types.hs:148:{-# RULES
./base-4.4.0.0/Foreign/C/Types.hs:185:{-# RULES
./base-4.4.0.0/Foreign/C/Types.hs:206:{-# RULES
./base-4.4.0.0/Foreign/C/Types.hs:240:{-# RULES
./base-4.4.0.0/GHC/Int.hs:154:{-# RULES
./base-4.4.0.0/GHC/Int.hs:160:{-# RULES
./base-4.4.0.0/GHC/Int.hs:175:{-# RULES
./base-4.4.0.0/GHC/Int.hs:297:{-# RULES
./base-4.4.0.0/GHC/Int.hs:305:{-# RULES
./base-4.4.0.0/GHC/Int.hs:320:{-# RULES
./base-4.4.0.0/GHC/Int.hs:468:{-# RULES
./base-4.4.0.0/GHC/Int.hs:586:{-# RULES
./base-4.4.0.0/GHC/Int.hs:596:{-# RULES
./base-4.4.0.0/GHC/Int.hs:611:{-# RULES
./base-4.4.0.0/GHC/Int.hs:784:{-# RULES
./base-4.4.0.0/GHC/Int.hs:794:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.4.0.0/GHC/Int.hs:892:{-# RULES
./base-4.4.0.0/GHC/Int.hs:897:{-# RULES
./base-4.4.0.0/GHC/Int.hs:912:{-# RULES
./base-4.4.0.0/GHC/Word.hs:187:{-# RULES
./base-4.4.0.0/GHC/Word.hs:193:-- No RULES for RealFrac unfortunately.
./base-4.4.0.0/GHC/Word.hs:291:{-# RULES
./base-4.4.0.0/GHC/Word.hs:298:{-# RULES
./base-4.4.0.0/GHC/Word.hs:313:{-# RULES
./base-4.4.0.0/GHC/Word.hs:422:{-# RULES
./base-4.4.0.0/GHC/Word.hs:430:{-# RULES
./base-4.4.0.0/GHC/Word.hs:445:{-# RULES
./base-4.4.0.0/GHC/Word.hs:551:{-# RULES
./base-4.4.0.0/GHC/Word.hs:568:{-# RULES
./base-4.4.0.0/GHC/Word.hs:583:{-# RULES
./base-4.4.0.0/GHC/Word.hs:691:{-# RULES
./base-4.4.0.0/GHC/Word.hs:830:{-# RULES
./base-4.4.0.0/GHC/Word.hs:921:{-# RULES
./base-4.4.1.0/Control/Arrow.hs:97:{-# RULES
./base-4.4.1.0/Control/Arrow.hs:212:{-# RULES
./base-4.4.1.0/Control/Category.hs:32:{-# RULES
./base-4.4.1.0/Data/List.hs:526:{-# RULES
./base-4.4.1.0/Data/List.hs:546:{-# RULES
./base-4.4.1.0/Data/List.hs:586:{-# RULES
./base-4.4.1.0/Foreign/C/Types.hs:148:{-# RULES
./base-4.4.1.0/Foreign/C/Types.hs:185:{-# RULES
./base-4.4.1.0/Foreign/C/Types.hs:206:{-# RULES
./base-4.4.1.0/Foreign/C/Types.hs:240:{-# RULES
./base-4.4.1.0/GHC/Int.hs:154:{-# RULES
./base-4.4.1.0/GHC/Int.hs:160:{-# RULES
./base-4.4.1.0/GHC/Int.hs:175:{-# RULES
./base-4.4.1.0/GHC/Int.hs:297:{-# RULES
./base-4.4.1.0/GHC/Int.hs:305:{-# RULES
./base-4.4.1.0/GHC/Int.hs:320:{-# RULES
./base-4.4.1.0/GHC/Int.hs:468:{-# RULES
./base-4.4.1.0/GHC/Int.hs:586:{-# RULES
./base-4.4.1.0/GHC/Int.hs:596:{-# RULES
./base-4.4.1.0/GHC/Int.hs:611:{-# RULES
./base-4.4.1.0/GHC/Int.hs:784:{-# RULES
./base-4.4.1.0/GHC/Int.hs:794:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.4.1.0/GHC/Int.hs:892:{-# RULES
./base-4.4.1.0/GHC/Int.hs:897:{-# RULES
./base-4.4.1.0/GHC/Int.hs:912:{-# RULES
./base-4.4.1.0/GHC/Word.hs:187:{-# RULES
./base-4.4.1.0/GHC/Word.hs:193:-- No RULES for RealFrac unfortunately.
./base-4.4.1.0/GHC/Word.hs:291:{-# RULES
./base-4.4.1.0/GHC/Word.hs:298:{-# RULES
./base-4.4.1.0/GHC/Word.hs:313:{-# RULES
./base-4.4.1.0/GHC/Word.hs:422:{-# RULES
./base-4.4.1.0/GHC/Word.hs:430:{-# RULES
./base-4.4.1.0/GHC/Word.hs:445:{-# RULES
./base-4.4.1.0/GHC/Word.hs:551:{-# RULES
./base-4.4.1.0/GHC/Word.hs:568:{-# RULES
./base-4.4.1.0/GHC/Word.hs:583:{-# RULES
./base-4.4.1.0/GHC/Word.hs:691:{-# RULES
./base-4.4.1.0/GHC/Word.hs:830:{-# RULES
./base-4.4.1.0/GHC/Word.hs:921:{-# RULES
./base-4.5.0.0/Control/Arrow.hs:114:{-# RULES
./base-4.5.0.0/Control/Arrow.hs:247:{-# RULES
./base-4.5.0.0/Control/Category.hs:32:{-# RULES
./base-4.5.0.0/Data/List.hs:537:{-# RULES
./base-4.5.0.0/Data/List.hs:557:{-# RULES
./base-4.5.0.0/Data/List.hs:597:{-# RULES
./base-4.5.0.0/Foreign/C/Types.hs:135:{-# RULES
./base-4.5.0.0/Foreign/C/Types.hs:172:{-# RULES
./base-4.5.0.0/Foreign/C/Types.hs:193:{-# RULES
./base-4.5.0.0/Foreign/C/Types.hs:227:{-# RULES
./base-4.5.0.0/GHC/Int.hs:157:{-# RULES
./base-4.5.0.0/GHC/Int.hs:163:{-# RULES
./base-4.5.0.0/GHC/Int.hs:178:{-# RULES
./base-4.5.0.0/GHC/Int.hs:305:{-# RULES
./base-4.5.0.0/GHC/Int.hs:313:{-# RULES
./base-4.5.0.0/GHC/Int.hs:328:{-# RULES
./base-4.5.0.0/GHC/Int.hs:458:{-# RULES
./base-4.5.0.0/GHC/Int.hs:468:{-# RULES
./base-4.5.0.0/GHC/Int.hs:483:{-# RULES
./base-4.5.0.0/GHC/Int.hs:660:{-# RULES
./base-4.5.0.0/GHC/Int.hs:670:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.5.0.0/GHC/Int.hs:773:{-# RULES
./base-4.5.0.0/GHC/Int.hs:778:{-# RULES
./base-4.5.0.0/GHC/Int.hs:793:{-# RULES
./base-4.5.0.0/GHC/Word.hs:163:{-# RULES
./base-4.5.0.0/GHC/Word.hs:169:-- No RULES for RealFrac unfortunately.
./base-4.5.0.0/GHC/Word.hs:273:{-# RULES
./base-4.5.0.0/GHC/Word.hs:280:{-# RULES
./base-4.5.0.0/GHC/Word.hs:295:{-# RULES
./base-4.5.0.0/GHC/Word.hs:410:{-# RULES
./base-4.5.0.0/GHC/Word.hs:418:{-# RULES
./base-4.5.0.0/GHC/Word.hs:433:{-# RULES
./base-4.5.0.0/GHC/Word.hs:459:{-# RULES
./base-4.5.0.0/GHC/Word.hs:474:{-# RULES
./base-4.5.0.0/GHC/Word.hs:588:{-# RULES
./base-4.5.0.0/GHC/Word.hs:730:{-# RULES
./base-4.5.0.0/GHC/Word.hs:826:{-# RULES
./base-4.5.1.0/Control/Arrow.hs:114:{-# RULES
./base-4.5.1.0/Control/Arrow.hs:247:{-# RULES
./base-4.5.1.0/Control/Category.hs:32:{-# RULES
./base-4.5.1.0/Data/List.hs:537:{-# RULES
./base-4.5.1.0/Data/List.hs:557:{-# RULES
./base-4.5.1.0/Data/List.hs:597:{-# RULES
./base-4.5.1.0/Foreign/C/Types.hs:135:{-# RULES
./base-4.5.1.0/Foreign/C/Types.hs:172:{-# RULES
./base-4.5.1.0/Foreign/C/Types.hs:193:{-# RULES
./base-4.5.1.0/Foreign/C/Types.hs:227:{-# RULES
./base-4.5.1.0/GHC/Int.hs:157:{-# RULES
./base-4.5.1.0/GHC/Int.hs:163:{-# RULES
./base-4.5.1.0/GHC/Int.hs:178:{-# RULES
./base-4.5.1.0/GHC/Int.hs:305:{-# RULES
./base-4.5.1.0/GHC/Int.hs:313:{-# RULES
./base-4.5.1.0/GHC/Int.hs:328:{-# RULES
./base-4.5.1.0/GHC/Int.hs:458:{-# RULES
./base-4.5.1.0/GHC/Int.hs:468:{-# RULES
./base-4.5.1.0/GHC/Int.hs:483:{-# RULES
./base-4.5.1.0/GHC/Int.hs:660:{-# RULES
./base-4.5.1.0/GHC/Int.hs:670:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.5.1.0/GHC/Int.hs:773:{-# RULES
./base-4.5.1.0/GHC/Int.hs:778:{-# RULES
./base-4.5.1.0/GHC/Int.hs:793:{-# RULES
./base-4.5.1.0/GHC/Word.hs:163:{-# RULES
./base-4.5.1.0/GHC/Word.hs:169:-- No RULES for RealFrac unfortunately.
./base-4.5.1.0/GHC/Word.hs:273:{-# RULES
./base-4.5.1.0/GHC/Word.hs:280:{-# RULES
./base-4.5.1.0/GHC/Word.hs:295:{-# RULES
./base-4.5.1.0/GHC/Word.hs:410:{-# RULES
./base-4.5.1.0/GHC/Word.hs:418:{-# RULES
./base-4.5.1.0/GHC/Word.hs:433:{-# RULES
./base-4.5.1.0/GHC/Word.hs:459:{-# RULES
./base-4.5.1.0/GHC/Word.hs:474:{-# RULES
./base-4.5.1.0/GHC/Word.hs:588:{-# RULES
./base-4.5.1.0/GHC/Word.hs:730:{-# RULES
./base-4.5.1.0/GHC/Word.hs:826:{-# RULES
./base-4.6.0.0/Control/Arrow.hs:114:{-# RULES
./base-4.6.0.0/Control/Arrow.hs:247:{-# RULES
./base-4.6.0.0/Control/Category.hs:32:{-# RULES
./base-4.6.0.0/Data/List.hs:538:{-# RULES
./base-4.6.0.0/Data/List.hs:558:{-# RULES
./base-4.6.0.0/Data/List.hs:598:{-# RULES
./base-4.6.0.0/Foreign/C/Types.hs:135:{-# RULES
./base-4.6.0.0/Foreign/C/Types.hs:172:{-# RULES
./base-4.6.0.0/Foreign/C/Types.hs:193:{-# RULES
./base-4.6.0.0/Foreign/C/Types.hs:227:{-# RULES
./base-4.6.0.0/GHC/Int.hs:165:{-# RULES
./base-4.6.0.0/GHC/Int.hs:171:{-# RULES
./base-4.6.0.0/GHC/Int.hs:186:{-# RULES
./base-4.6.0.0/GHC/Int.hs:320:{-# RULES
./base-4.6.0.0/GHC/Int.hs:328:{-# RULES
./base-4.6.0.0/GHC/Int.hs:343:{-# RULES
./base-4.6.0.0/GHC/Int.hs:481:{-# RULES
./base-4.6.0.0/GHC/Int.hs:491:{-# RULES
./base-4.6.0.0/GHC/Int.hs:506:{-# RULES
./base-4.6.0.0/GHC/Int.hs:687:{-# RULES
./base-4.6.0.0/GHC/Int.hs:697:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.6.0.0/GHC/Int.hs:808:{-# RULES
./base-4.6.0.0/GHC/Int.hs:813:{-# RULES
./base-4.6.0.0/GHC/Int.hs:828:{-# RULES
./base-4.6.0.0/GHC/Word.hs:151:{-# RULES
./base-4.6.0.0/GHC/Word.hs:158:{-# RULES
./base-4.6.0.0/GHC/Word.hs:173:{-# RULES
./base-4.6.0.0/GHC/Word.hs:294:{-# RULES
./base-4.6.0.0/GHC/Word.hs:302:{-# RULES
./base-4.6.0.0/GHC/Word.hs:317:{-# RULES
./base-4.6.0.0/GHC/Word.hs:343:{-# RULES
./base-4.6.0.0/GHC/Word.hs:358:{-# RULES
./base-4.6.0.0/GHC/Word.hs:478:{-# RULES
./base-4.6.0.0/GHC/Word.hs:624:{-# RULES
./base-4.6.0.0/GHC/Word.hs:726:{-# RULES
./base-4.6.0.1/Control/Arrow.hs:114:{-# RULES
./base-4.6.0.1/Control/Arrow.hs:247:{-# RULES
./base-4.6.0.1/Control/Category.hs:32:{-# RULES
./base-4.6.0.1/Data/List.hs:538:{-# RULES
./base-4.6.0.1/Data/List.hs:558:{-# RULES
./base-4.6.0.1/Data/List.hs:598:{-# RULES
./base-4.6.0.1/Foreign/C/Types.hs:135:{-# RULES
./base-4.6.0.1/Foreign/C/Types.hs:172:{-# RULES
./base-4.6.0.1/Foreign/C/Types.hs:193:{-# RULES
./base-4.6.0.1/Foreign/C/Types.hs:227:{-# RULES
./base-4.6.0.1/GHC/Int.hs:165:{-# RULES
./base-4.6.0.1/GHC/Int.hs:171:{-# RULES
./base-4.6.0.1/GHC/Int.hs:186:{-# RULES
./base-4.6.0.1/GHC/Int.hs:320:{-# RULES
./base-4.6.0.1/GHC/Int.hs:328:{-# RULES
./base-4.6.0.1/GHC/Int.hs:343:{-# RULES
./base-4.6.0.1/GHC/Int.hs:481:{-# RULES
./base-4.6.0.1/GHC/Int.hs:491:{-# RULES
./base-4.6.0.1/GHC/Int.hs:506:{-# RULES
./base-4.6.0.1/GHC/Int.hs:695:{-# RULES
./base-4.6.0.1/GHC/Int.hs:705:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.6.0.1/GHC/Int.hs:816:{-# RULES
./base-4.6.0.1/GHC/Int.hs:821:{-# RULES
./base-4.6.0.1/GHC/Int.hs:836:{-# RULES
./base-4.6.0.1/GHC/Word.hs:151:{-# RULES
./base-4.6.0.1/GHC/Word.hs:158:{-# RULES
./base-4.6.0.1/GHC/Word.hs:173:{-# RULES
./base-4.6.0.1/GHC/Word.hs:294:{-# RULES
./base-4.6.0.1/GHC/Word.hs:302:{-# RULES
./base-4.6.0.1/GHC/Word.hs:317:{-# RULES
./base-4.6.0.1/GHC/Word.hs:343:{-# RULES
./base-4.6.0.1/GHC/Word.hs:358:{-# RULES
./base-4.6.0.1/GHC/Word.hs:478:{-# RULES
./base-4.6.0.1/GHC/Word.hs:624:{-# RULES
./base-4.6.0.1/GHC/Word.hs:726:{-# RULES
./base-4.7.0.0/Control/Arrow.hs:118:{-# RULES
./base-4.7.0.0/Control/Arrow.hs:252:{-# RULES
./base-4.7.0.0/Control/Category.hs:39:{-# RULES
./base-4.7.0.0/Data/List.hs:526:{-# RULES
./base-4.7.0.0/Data/List.hs:547:{-# RULES
./base-4.7.0.0/Data/List.hs:586:{-# RULES
./base-4.7.0.0/Data/Maybe.hs:131:{-# RULES
./base-4.7.0.0/Foreign/C/Types.hs:120:{-# RULES
./base-4.7.0.0/Foreign/C/Types.hs:152:{-# RULES
./base-4.7.0.0/Foreign/C/Types.hs:173:{-# RULES
./base-4.7.0.0/Foreign/C/Types.hs:211:{-# RULES
./base-4.7.0.0/GHC/Int.hs:169:{-# RULES
./base-4.7.0.0/GHC/Int.hs:175:{-# RULES
./base-4.7.0.0/GHC/Int.hs:190:{-# RULES
./base-4.7.0.0/GHC/Int.hs:328:{-# RULES
./base-4.7.0.0/GHC/Int.hs:336:{-# RULES
./base-4.7.0.0/GHC/Int.hs:351:{-# RULES
./base-4.7.0.0/GHC/Int.hs:493:{-# RULES
./base-4.7.0.0/GHC/Int.hs:503:{-# RULES
./base-4.7.0.0/GHC/Int.hs:518:{-# RULES
./base-4.7.0.0/GHC/Int.hs:708:{-# RULES
./base-4.7.0.0/GHC/Int.hs:718:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.7.0.0/GHC/Int.hs:830:{-# RULES
./base-4.7.0.0/GHC/Int.hs:835:{-# RULES
./base-4.7.0.0/GHC/Int.hs:850:{-# RULES
./base-4.7.0.0/GHC/Word.hs:158:{-# RULES
./base-4.7.0.0/GHC/Word.hs:165:{-# RULES
./base-4.7.0.0/GHC/Word.hs:180:{-# RULES
./base-4.7.0.0/GHC/Word.hs:311:{-# RULES
./base-4.7.0.0/GHC/Word.hs:319:{-# RULES
./base-4.7.0.0/GHC/Word.hs:334:{-# RULES
./base-4.7.0.0/GHC/Word.hs:360:{-# RULES
./base-4.7.0.0/GHC/Word.hs:375:{-# RULES
./base-4.7.0.0/GHC/Word.hs:499:{-# RULES
./base-4.7.0.0/GHC/Word.hs:652:{-# RULES
./base-4.7.0.0/GHC/Word.hs:755:{-# RULES
./base-4.7.0.1/Control/Arrow.hs:118:{-# RULES
./base-4.7.0.1/Control/Arrow.hs:252:{-# RULES
./base-4.7.0.1/Control/Category.hs:39:{-# RULES
./base-4.7.0.1/Data/List.hs:526:{-# RULES
./base-4.7.0.1/Data/List.hs:547:{-# RULES
./base-4.7.0.1/Data/List.hs:586:{-# RULES
./base-4.7.0.1/Data/Maybe.hs:131:{-# RULES
./base-4.7.0.1/Foreign/C/Types.hs:120:{-# RULES
./base-4.7.0.1/Foreign/C/Types.hs:152:{-# RULES
./base-4.7.0.1/Foreign/C/Types.hs:173:{-# RULES
./base-4.7.0.1/Foreign/C/Types.hs:211:{-# RULES
./base-4.7.0.1/GHC/Int.hs:169:{-# RULES
./base-4.7.0.1/GHC/Int.hs:175:{-# RULES
./base-4.7.0.1/GHC/Int.hs:190:{-# RULES
./base-4.7.0.1/GHC/Int.hs:328:{-# RULES
./base-4.7.0.1/GHC/Int.hs:336:{-# RULES
./base-4.7.0.1/GHC/Int.hs:351:{-# RULES
./base-4.7.0.1/GHC/Int.hs:493:{-# RULES
./base-4.7.0.1/GHC/Int.hs:503:{-# RULES
./base-4.7.0.1/GHC/Int.hs:518:{-# RULES
./base-4.7.0.1/GHC/Int.hs:708:{-# RULES
./base-4.7.0.1/GHC/Int.hs:718:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.7.0.1/GHC/Int.hs:830:{-# RULES
./base-4.7.0.1/GHC/Int.hs:835:{-# RULES
./base-4.7.0.1/GHC/Int.hs:850:{-# RULES
./base-4.7.0.1/GHC/Word.hs:158:{-# RULES
./base-4.7.0.1/GHC/Word.hs:165:{-# RULES
./base-4.7.0.1/GHC/Word.hs:180:{-# RULES
./base-4.7.0.1/GHC/Word.hs:311:{-# RULES
./base-4.7.0.1/GHC/Word.hs:319:{-# RULES
./base-4.7.0.1/GHC/Word.hs:334:{-# RULES
./base-4.7.0.1/GHC/Word.hs:360:{-# RULES
./base-4.7.0.1/GHC/Word.hs:375:{-# RULES
./base-4.7.0.1/GHC/Word.hs:499:{-# RULES
./base-4.7.0.1/GHC/Word.hs:652:{-# RULES
./base-4.7.0.1/GHC/Word.hs:755:{-# RULES
./base-4.7.0.2/Control/Arrow.hs:118:{-# RULES
./base-4.7.0.2/Control/Arrow.hs:252:{-# RULES
./base-4.7.0.2/Control/Category.hs:39:{-# RULES
./base-4.7.0.2/Data/List.hs:527:{-# RULES
./base-4.7.0.2/Data/List.hs:548:{-# RULES
./base-4.7.0.2/Data/List.hs:587:{-# RULES
./base-4.7.0.2/Data/Maybe.hs:131:{-# RULES
./base-4.7.0.2/Foreign/C/Types.hs:120:{-# RULES
./base-4.7.0.2/Foreign/C/Types.hs:152:{-# RULES
./base-4.7.0.2/Foreign/C/Types.hs:173:{-# RULES
./base-4.7.0.2/Foreign/C/Types.hs:211:{-# RULES
./base-4.7.0.2/GHC/Int.hs:169:{-# RULES
./base-4.7.0.2/GHC/Int.hs:175:{-# RULES
./base-4.7.0.2/GHC/Int.hs:190:{-# RULES
./base-4.7.0.2/GHC/Int.hs:328:{-# RULES
./base-4.7.0.2/GHC/Int.hs:336:{-# RULES
./base-4.7.0.2/GHC/Int.hs:351:{-# RULES
./base-4.7.0.2/GHC/Int.hs:493:{-# RULES
./base-4.7.0.2/GHC/Int.hs:503:{-# RULES
./base-4.7.0.2/GHC/Int.hs:518:{-# RULES
./base-4.7.0.2/GHC/Int.hs:708:{-# RULES
./base-4.7.0.2/GHC/Int.hs:718:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.7.0.2/GHC/Int.hs:830:{-# RULES
./base-4.7.0.2/GHC/Int.hs:835:{-# RULES
./base-4.7.0.2/GHC/Int.hs:850:{-# RULES
./base-4.7.0.2/GHC/Word.hs:158:{-# RULES
./base-4.7.0.2/GHC/Word.hs:165:{-# RULES
./base-4.7.0.2/GHC/Word.hs:180:{-# RULES
./base-4.7.0.2/GHC/Word.hs:311:{-# RULES
./base-4.7.0.2/GHC/Word.hs:319:{-# RULES
./base-4.7.0.2/GHC/Word.hs:334:{-# RULES
./base-4.7.0.2/GHC/Word.hs:360:{-# RULES
./base-4.7.0.2/GHC/Word.hs:375:{-# RULES
./base-4.7.0.2/GHC/Word.hs:499:{-# RULES
./base-4.7.0.2/GHC/Word.hs:652:{-# RULES
./base-4.7.0.2/GHC/Word.hs:755:{-# RULES
./base-4.8.0.0/Control/Arrow.hs:120:{-# RULES
./base-4.8.0.0/Control/Arrow.hs:254:{-# RULES
./base-4.8.0.0/Control/Category.hs:37:{-# RULES
./base-4.8.0.0/Data/Maybe.hs:290:{-# RULES
./base-4.8.0.0/Data/OldList.hs:512:{-# RULES
./base-4.8.0.0/Data/OldList.hs:592:{-# RULES
./base-4.8.0.0/Data/OldList.hs:1082:{-# RULES
./base-4.8.0.0/Data/OldList.hs:1116:{-# RULES
./base-4.8.0.0/Foreign/C/Types.hs:116:{-# RULES
./base-4.8.0.0/Foreign/C/Types.hs:148:{-# RULES
./base-4.8.0.0/Foreign/C/Types.hs:169:{-# RULES
./base-4.8.0.0/Foreign/C/Types.hs:207:{-# RULES
./base-4.8.0.0/GHC/Arr.hs:521:{-# RULES
./base-4.8.0.0/GHC/Arr.hs:739:{-# RULES
./base-4.8.0.0/GHC/Arr.hs:744:{-# RULES
./base-4.8.0.0/GHC/Arr.hs:784:{-# RULES "cmpArray/Int" cmpArray = cmpIntArray #-}
./base-4.8.0.0/GHC/Base.hs:802:{-# RULES
./base-4.8.0.0/GHC/Base.hs:878:{-# RULES
./base-4.8.0.0/GHC/Base.hs:888:{-# RULES "map/coerce" [1] map coerce = coerce #-}
./base-4.8.0.0/GHC/Base.hs:909:{-# RULES
./base-4.8.0.0/GHC/Base.hs:945:{-# RULES "eqString" (==) = eqString #-}
./base-4.8.0.0/GHC/Base.hs:1183:{-# RULES
./base-4.8.0.0/GHC/Enum.hs:347:{-# RULES
./base-4.8.0.0/GHC/Enum.hs:480:{-# RULES
./base-4.8.0.0/GHC/Enum.hs:513:{-# RULES
./base-4.8.0.0/GHC/Enum.hs:670:{-# RULES
./base-4.8.0.0/GHC/Enum.hs:696:{-# RULES
./base-4.8.0.0/GHC/Float.hs:233:-- RULES for Integer and Int
./base-4.8.0.0/GHC/Float.hs:234:{-# RULES
./base-4.8.0.0/GHC/Float.hs:418:-- RULES for Integer and Int
./base-4.8.0.0/GHC/Float.hs:419:{-# RULES
./base-4.8.0.0/GHC/Float.hs:809:{-# RULES
./base-4.8.0.0/GHC/Float.hs:1082:{-# RULES
./base-4.8.0.0/GHC/Float.hs:1098:Don found that the RULES for realToFrac/Int->Double and simliarly
./base-4.8.0.0/GHC/Float.hs:1131:"Add RULES for realToFrac from Int".
./base-4.8.0.0/GHC/Int.hs:170:{-# RULES
./base-4.8.0.0/GHC/Int.hs:176:{-# RULES
./base-4.8.0.0/GHC/Int.hs:191:{-# RULES
./base-4.8.0.0/GHC/Int.hs:331:{-# RULES
./base-4.8.0.0/GHC/Int.hs:339:{-# RULES
./base-4.8.0.0/GHC/Int.hs:354:{-# RULES
./base-4.8.0.0/GHC/Int.hs:498:{-# RULES
./base-4.8.0.0/GHC/Int.hs:508:{-# RULES
./base-4.8.0.0/GHC/Int.hs:523:{-# RULES
./base-4.8.0.0/GHC/Int.hs:713:{-# RULES
./base-4.8.0.0/GHC/Int.hs:723:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.8.0.0/GHC/Int.hs:835:{-# RULES
./base-4.8.0.0/GHC/Int.hs:840:{-# RULES
./base-4.8.0.0/GHC/Int.hs:855:{-# RULES
./base-4.8.0.0/GHC/List.hs:59:{-# RULES
./base-4.8.0.0/GHC/List.hs:122:{-# RULES
./base-4.8.0.0/GHC/List.hs:154:{-# RULES
./base-4.8.0.0/GHC/List.hs:260:{-# RULES
./base-4.8.0.0/GHC/List.hs:298:{-# RULES
./base-4.8.0.0/GHC/List.hs:374:{-# RULES
./base-4.8.0.0/GHC/List.hs:398:{-# RULES
./base-4.8.0.0/GHC/List.hs:419:{-# RULES
./base-4.8.0.0/GHC/List.hs:443:{-# RULES
./base-4.8.0.0/GHC/List.hs:460:{-# RULES
./base-4.8.0.0/GHC/List.hs:507:{-# RULES
./base-4.8.0.0/GHC/List.hs:548:sign. Note, however, that it's important for the RULES to grab take, rather
./base-4.8.0.0/GHC/List.hs:549:than trying to INLINE take immediately and then letting the RULES grab
./base-4.8.0.0/GHC/List.hs:564:{-# RULES
./base-4.8.0.0/GHC/List.hs:718:{-# RULES
./base-4.8.0.0/GHC/List.hs:735:{-# RULES
./base-4.8.0.0/GHC/List.hs:755:{-# RULES
./base-4.8.0.0/GHC/List.hs:774:{-# RULES
./base-4.8.0.0/GHC/List.hs:791:{-# RULES
./base-4.8.0.0/GHC/List.hs:805:{-# RULES
./base-4.8.0.0/GHC/List.hs:824:{-# RULES
./base-4.8.0.0/GHC/List.hs:836:{-# RULES
./base-4.8.0.0/GHC/List.hs:888:{-# RULES
./base-4.8.0.0/GHC/List.hs:928:{-# RULES
./base-4.8.0.0/GHC/List.hs:967:{-# RULES
./base-4.8.0.0/GHC/Natural.hs:105:{-# RULES
./base-4.8.0.0/GHC/Natural.hs:123:{-# RULES
./base-4.8.0.0/GHC/Natural.hs:141:-- these RULES are valid for Word==Word64 & Int==Int64
./base-4.8.0.0/GHC/Natural.hs:142:{-# RULES
./base-4.8.0.0/GHC/Natural.hs:184:{-# RULES
./base-4.8.0.0/GHC/Real.hs:382:{-# RULES "fromRational/id" fromRational = id :: Rational -> Rational #-}
./base-4.8.0.0/GHC/Real.hs:434:{-# RULES
./base-4.8.0.0/GHC/Real.hs:438:{-# RULES
./base-4.8.0.0/GHC/Real.hs:534:{-# RULES
./base-4.8.0.0/GHC/Real.hs:585:{-# RULES "(^)/Rational"    (^) = (^%^) #-}
./base-4.8.0.0/GHC/Real.hs:593:{-# RULES "(^^)/Rational"   (^^) = (^^%^^) #-}
./base-4.8.0.0/GHC/Real.hs:629:{-# RULES
./base-4.8.0.0/GHC/Real.hs:639:{-# RULES
./base-4.8.0.0/GHC/Word.hs:158:{-# RULES
./base-4.8.0.0/GHC/Word.hs:165:{-# RULES
./base-4.8.0.0/GHC/Word.hs:180:{-# RULES
./base-4.8.0.0/GHC/Word.hs:313:{-# RULES
./base-4.8.0.0/GHC/Word.hs:321:{-# RULES
./base-4.8.0.0/GHC/Word.hs:336:{-# RULES
./base-4.8.0.0/GHC/Word.hs:362:{-# RULES
./base-4.8.0.0/GHC/Word.hs:377:{-# RULES
./base-4.8.0.0/GHC/Word.hs:503:{-# RULES
./base-4.8.0.0/GHC/Word.hs:656:{-# RULES
./base-4.8.0.0/GHC/Word.hs:759:{-# RULES
./base-4.8.0.0/Text/Read/Lex.hs:457:{-# RULES
./base-4.8.1.0/Control/Arrow.hs:120:{-# RULES
./base-4.8.1.0/Control/Arrow.hs:254:{-# RULES
./base-4.8.1.0/Control/Category.hs:37:{-# RULES
./base-4.8.1.0/Data/Maybe.hs:290:{-# RULES
./base-4.8.1.0/Data/OldList.hs:512:{-# RULES
./base-4.8.1.0/Data/OldList.hs:592:{-# RULES
./base-4.8.1.0/Data/OldList.hs:1082:{-# RULES
./base-4.8.1.0/Data/OldList.hs:1116:{-# RULES
./base-4.8.1.0/Foreign/C/Types.hs:116:{-# RULES
./base-4.8.1.0/Foreign/C/Types.hs:148:{-# RULES
./base-4.8.1.0/Foreign/C/Types.hs:169:{-# RULES
./base-4.8.1.0/Foreign/C/Types.hs:207:{-# RULES
./base-4.8.1.0/GHC/Arr.hs:521:{-# RULES
./base-4.8.1.0/GHC/Arr.hs:739:{-# RULES
./base-4.8.1.0/GHC/Arr.hs:744:{-# RULES
./base-4.8.1.0/GHC/Arr.hs:784:{-# RULES "cmpArray/Int" cmpArray = cmpIntArray #-}
./base-4.8.1.0/GHC/Base.hs:802:{-# RULES
./base-4.8.1.0/GHC/Base.hs:878:{-# RULES
./base-4.8.1.0/GHC/Base.hs:888:{-# RULES "map/coerce" [1] map coerce = coerce #-}
./base-4.8.1.0/GHC/Base.hs:909:{-# RULES
./base-4.8.1.0/GHC/Base.hs:945:{-# RULES "eqString" (==) = eqString #-}
./base-4.8.1.0/GHC/Base.hs:1183:{-# RULES
./base-4.8.1.0/GHC/Enum.hs:347:{-# RULES
./base-4.8.1.0/GHC/Enum.hs:480:{-# RULES
./base-4.8.1.0/GHC/Enum.hs:513:{-# RULES
./base-4.8.1.0/GHC/Enum.hs:670:{-# RULES
./base-4.8.1.0/GHC/Enum.hs:696:{-# RULES
./base-4.8.1.0/GHC/Float.hs:233:-- RULES for Integer and Int
./base-4.8.1.0/GHC/Float.hs:234:{-# RULES
./base-4.8.1.0/GHC/Float.hs:418:-- RULES for Integer and Int
./base-4.8.1.0/GHC/Float.hs:419:{-# RULES
./base-4.8.1.0/GHC/Float.hs:809:{-# RULES
./base-4.8.1.0/GHC/Float.hs:1082:{-# RULES
./base-4.8.1.0/GHC/Float.hs:1098:Don found that the RULES for realToFrac/Int->Double and simliarly
./base-4.8.1.0/GHC/Float.hs:1131:"Add RULES for realToFrac from Int".
./base-4.8.1.0/GHC/Int.hs:170:{-# RULES
./base-4.8.1.0/GHC/Int.hs:176:{-# RULES
./base-4.8.1.0/GHC/Int.hs:191:{-# RULES
./base-4.8.1.0/GHC/Int.hs:331:{-# RULES
./base-4.8.1.0/GHC/Int.hs:339:{-# RULES
./base-4.8.1.0/GHC/Int.hs:354:{-# RULES
./base-4.8.1.0/GHC/Int.hs:498:{-# RULES
./base-4.8.1.0/GHC/Int.hs:508:{-# RULES
./base-4.8.1.0/GHC/Int.hs:523:{-# RULES
./base-4.8.1.0/GHC/Int.hs:713:{-# RULES
./base-4.8.1.0/GHC/Int.hs:723:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.8.1.0/GHC/Int.hs:835:{-# RULES
./base-4.8.1.0/GHC/Int.hs:840:{-# RULES
./base-4.8.1.0/GHC/Int.hs:855:{-# RULES
./base-4.8.1.0/GHC/List.hs:59:{-# RULES
./base-4.8.1.0/GHC/List.hs:129:{-# RULES
./base-4.8.1.0/GHC/List.hs:161:{-# RULES
./base-4.8.1.0/GHC/List.hs:267:{-# RULES
./base-4.8.1.0/GHC/List.hs:305:{-# RULES
./base-4.8.1.0/GHC/List.hs:381:{-# RULES
./base-4.8.1.0/GHC/List.hs:405:{-# RULES
./base-4.8.1.0/GHC/List.hs:426:{-# RULES
./base-4.8.1.0/GHC/List.hs:450:{-# RULES
./base-4.8.1.0/GHC/List.hs:467:{-# RULES
./base-4.8.1.0/GHC/List.hs:514:{-# RULES
./base-4.8.1.0/GHC/List.hs:555:sign. Note, however, that it's important for the RULES to grab take, rather
./base-4.8.1.0/GHC/List.hs:556:than trying to INLINE take immediately and then letting the RULES grab
./base-4.8.1.0/GHC/List.hs:571:{-# RULES
./base-4.8.1.0/GHC/List.hs:725:{-# RULES
./base-4.8.1.0/GHC/List.hs:742:{-# RULES
./base-4.8.1.0/GHC/List.hs:762:{-# RULES
./base-4.8.1.0/GHC/List.hs:781:{-# RULES
./base-4.8.1.0/GHC/List.hs:798:{-# RULES
./base-4.8.1.0/GHC/List.hs:812:{-# RULES
./base-4.8.1.0/GHC/List.hs:831:{-# RULES
./base-4.8.1.0/GHC/List.hs:843:{-# RULES
./base-4.8.1.0/GHC/List.hs:895:{-# RULES
./base-4.8.1.0/GHC/List.hs:935:{-# RULES
./base-4.8.1.0/GHC/List.hs:974:{-# RULES
./base-4.8.1.0/GHC/Natural.hs:105:{-# RULES
./base-4.8.1.0/GHC/Natural.hs:123:{-# RULES
./base-4.8.1.0/GHC/Natural.hs:141:-- these RULES are valid for Word==Word64 & Int==Int64
./base-4.8.1.0/GHC/Natural.hs:142:{-# RULES
./base-4.8.1.0/GHC/Natural.hs:184:{-# RULES
./base-4.8.1.0/GHC/Real.hs:382:{-# RULES "fromRational/id" fromRational = id :: Rational -> Rational #-}
./base-4.8.1.0/GHC/Real.hs:434:{-# RULES
./base-4.8.1.0/GHC/Real.hs:438:{-# RULES
./base-4.8.1.0/GHC/Real.hs:534:{-# RULES
./base-4.8.1.0/GHC/Real.hs:585:{-# RULES "(^)/Rational"    (^) = (^%^) #-}
./base-4.8.1.0/GHC/Real.hs:593:{-# RULES "(^^)/Rational"   (^^) = (^^%^^) #-}
./base-4.8.1.0/GHC/Real.hs:629:{-# RULES
./base-4.8.1.0/GHC/Real.hs:639:{-# RULES
./base-4.8.1.0/GHC/Word.hs:158:{-# RULES
./base-4.8.1.0/GHC/Word.hs:165:{-# RULES
./base-4.8.1.0/GHC/Word.hs:180:{-# RULES
./base-4.8.1.0/GHC/Word.hs:313:{-# RULES
./base-4.8.1.0/GHC/Word.hs:321:{-# RULES
./base-4.8.1.0/GHC/Word.hs:336:{-# RULES
./base-4.8.1.0/GHC/Word.hs:362:{-# RULES
./base-4.8.1.0/GHC/Word.hs:377:{-# RULES
./base-4.8.1.0/GHC/Word.hs:503:{-# RULES
./base-4.8.1.0/GHC/Word.hs:656:{-# RULES
./base-4.8.1.0/GHC/Word.hs:759:{-# RULES
./base-4.8.1.0/Text/Read/Lex.hs:457:{-# RULES
./base-4.8.2.0/Control/Arrow.hs:120:{-# RULES
./base-4.8.2.0/Control/Arrow.hs:254:{-# RULES
./base-4.8.2.0/Control/Category.hs:37:{-# RULES
./base-4.8.2.0/Data/Maybe.hs:290:{-# RULES
./base-4.8.2.0/Data/OldList.hs:512:{-# RULES
./base-4.8.2.0/Data/OldList.hs:592:{-# RULES
./base-4.8.2.0/Data/OldList.hs:1082:{-# RULES
./base-4.8.2.0/Data/OldList.hs:1116:{-# RULES
./base-4.8.2.0/Foreign/C/Types.hs:116:{-# RULES
./base-4.8.2.0/Foreign/C/Types.hs:148:{-# RULES
./base-4.8.2.0/Foreign/C/Types.hs:169:{-# RULES
./base-4.8.2.0/Foreign/C/Types.hs:207:{-# RULES
./base-4.8.2.0/GHC/Arr.hs:521:{-# RULES
./base-4.8.2.0/GHC/Arr.hs:739:{-# RULES
./base-4.8.2.0/GHC/Arr.hs:744:{-# RULES
./base-4.8.2.0/GHC/Arr.hs:784:{-# RULES "cmpArray/Int" cmpArray = cmpIntArray #-}
./base-4.8.2.0/GHC/Base.hs:802:{-# RULES
./base-4.8.2.0/GHC/Base.hs:878:{-# RULES
./base-4.8.2.0/GHC/Base.hs:888:{-# RULES "map/coerce" [1] map coerce = coerce #-}
./base-4.8.2.0/GHC/Base.hs:909:{-# RULES
./base-4.8.2.0/GHC/Base.hs:945:{-# RULES "eqString" (==) = eqString #-}
./base-4.8.2.0/GHC/Base.hs:1183:{-# RULES
./base-4.8.2.0/GHC/Enum.hs:347:{-# RULES
./base-4.8.2.0/GHC/Enum.hs:480:{-# RULES
./base-4.8.2.0/GHC/Enum.hs:513:{-# RULES
./base-4.8.2.0/GHC/Enum.hs:670:{-# RULES
./base-4.8.2.0/GHC/Enum.hs:696:{-# RULES
./base-4.8.2.0/GHC/Float.hs:233:-- RULES for Integer and Int
./base-4.8.2.0/GHC/Float.hs:234:{-# RULES
./base-4.8.2.0/GHC/Float.hs:418:-- RULES for Integer and Int
./base-4.8.2.0/GHC/Float.hs:419:{-# RULES
./base-4.8.2.0/GHC/Float.hs:809:{-# RULES
./base-4.8.2.0/GHC/Float.hs:1082:{-# RULES
./base-4.8.2.0/GHC/Float.hs:1098:Don found that the RULES for realToFrac/Int->Double and simliarly
./base-4.8.2.0/GHC/Float.hs:1131:"Add RULES for realToFrac from Int".
./base-4.8.2.0/GHC/Int.hs:170:{-# RULES
./base-4.8.2.0/GHC/Int.hs:176:{-# RULES
./base-4.8.2.0/GHC/Int.hs:191:{-# RULES
./base-4.8.2.0/GHC/Int.hs:331:{-# RULES
./base-4.8.2.0/GHC/Int.hs:339:{-# RULES
./base-4.8.2.0/GHC/Int.hs:354:{-# RULES
./base-4.8.2.0/GHC/Int.hs:498:{-# RULES
./base-4.8.2.0/GHC/Int.hs:508:{-# RULES
./base-4.8.2.0/GHC/Int.hs:523:{-# RULES
./base-4.8.2.0/GHC/Int.hs:713:{-# RULES
./base-4.8.2.0/GHC/Int.hs:723:-- No RULES for RealFrac methods if Int is smaller than Int64, we can't
./base-4.8.2.0/GHC/Int.hs:835:{-# RULES
./base-4.8.2.0/GHC/Int.hs:840:{-# RULES
./base-4.8.2.0/GHC/Int.hs:855:{-# RULES
./base-4.8.2.0/GHC/List.hs:59:{-# RULES
./base-4.8.2.0/GHC/List.hs:129:{-# RULES
./base-4.8.2.0/GHC/List.hs:161:{-# RULES
./base-4.8.2.0/GHC/List.hs:267:{-# RULES
./base-4.8.2.0/GHC/List.hs:305:{-# RULES
./base-4.8.2.0/GHC/List.hs:383:{-# RULES
./base-4.8.2.0/GHC/List.hs:407:{-# RULES
./base-4.8.2.0/GHC/List.hs:428:{-# RULES
./base-4.8.2.0/GHC/List.hs:452:{-# RULES
./base-4.8.2.0/GHC/List.hs:469:{-# RULES
./base-4.8.2.0/GHC/List.hs:516:{-# RULES
./base-4.8.2.0/GHC/List.hs:557:sign. Note, however, that it's important for the RULES to grab take, rather
./base-4.8.2.0/GHC/List.hs:558:than trying to INLINE take immediately and then letting the RULES grab
./base-4.8.2.0/GHC/List.hs:573:{-# RULES
./base-4.8.2.0/GHC/List.hs:727:{-# RULES
./base-4.8.2.0/GHC/List.hs:744:{-# RULES
./base-4.8.2.0/GHC/List.hs:764:{-# RULES
./base-4.8.2.0/GHC/List.hs:783:{-# RULES
./base-4.8.2.0/GHC/List.hs:800:{-# RULES
./base-4.8.2.0/GHC/List.hs:814:{-# RULES
./base-4.8.2.0/GHC/List.hs:833:{-# RULES
./base-4.8.2.0/GHC/List.hs:845:{-# RULES
./base-4.8.2.0/GHC/List.hs:897:{-# RULES
./base-4.8.2.0/GHC/List.hs:937:{-# RULES
./base-4.8.2.0/GHC/List.hs:976:{-# RULES
./base-4.8.2.0/GHC/Natural.hs:105:{-# RULES
./base-4.8.2.0/GHC/Natural.hs:123:{-# RULES
./base-4.8.2.0/GHC/Natural.hs:141:-- these RULES are valid for Word==Word64 & Int==Int64
./base-4.8.2.0/GHC/Natural.hs:142:{-# RULES
./base-4.8.2.0/GHC/Natural.hs:184:{-# RULES
./base-4.8.2.0/GHC/Real.hs:382:{-# RULES "fromRational/id" fromRational = id :: Rational -> Rational #-}
./base-4.8.2.0/GHC/Real.hs:434:{-# RULES
./base-4.8.2.0/GHC/Real.hs:438:{-# RULES
./base-4.8.2.0/GHC/Real.hs:534:{-# RULES
./base-4.8.2.0/GHC/Real.hs:585:{-# RULES "(^)/Rational"    (^) = (^%^) #-}
./base-4.8.2.0/GHC/Real.hs:593:{-# RULES "(^^)/Rational"   (^^) = (^^%^^) #-}
./base-4.8.2.0/GHC/Real.hs:629:{-# RULES
./base-4.8.2.0/GHC/Real.hs:639:{-# RULES
./base-4.8.2.0/GHC/Word.hs:158:{-# RULES
./base-4.8.2.0/GHC/Word.hs:165:{-# RULES
./base-4.8.2.0/GHC/Word.hs:180:{-# RULES
./base-4.8.2.0/GHC/Word.hs:313:{-# RULES
./base-4.8.2.0/GHC/Word.hs:321:{-# RULES
./base-4.8.2.0/GHC/Word.hs:336:{-# RULES
./base-4.8.2.0/GHC/Word.hs:362:{-# RULES
./base-4.8.2.0/GHC/Word.hs:377:{-# RULES
./base-4.8.2.0/GHC/Word.hs:503:{-# RULES
./base-4.8.2.0/GHC/Word.hs:656:{-# RULES
./base-4.8.2.0/GHC/Word.hs:759:{-# RULES
./base-4.8.2.0/Text/Read/Lex.hs:457:{-# RULES
./bed-and-breakfast-0.3.2/src/Numeric/Matrix.hs:849:{-# RULES
./bed-and-breakfast-0.4/src/Numeric/Matrix.hs:826:{-# RULES
./bed-and-breakfast-0.4.1/src/Numeric/Matrix.hs:871:{-# RULES
./bed-and-breakfast-0.4.2/src/Numeric/Matrix.hs:838:{-# RULES
./bed-and-breakfast-0.4.3/src/Numeric/Matrix.hs:839:{-# RULES
./between-0.9.0.0/src/Data/Function/Between.hs:116:{-# RULES
./binary-0.2/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.3/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.4/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.4.1/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.4.2/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.4.3/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.4.3.1/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.4.4/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.5/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.5.0.1/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.5.0.2/tests/NewBinary.hs:675:{- RULES get = getMaybeInt -}
./binary-0.5.1.0/src/Data/Binary/Builder/Base.hs:489:{-# RULES
./binary-0.5.1.1/src/Data/Binary/Builder/Base.hs:489:{-# RULES
./binary-0.6.0.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.6.0.0/src/Data/Binary/Get/Internal.hs:265:{-# RULES
./binary-0.6.0.0/src/Data/Binary/Get.hs:284:{-# RULES
./binary-0.6.1.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.6.1.0/src/Data/Binary/Get/Internal.hs:267:{-# RULES
./binary-0.6.1.0/src/Data/Binary/Get.hs:284:{-# RULES
./binary-0.6.2.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.6.2.0/src/Data/Binary/Get/Internal.hs:266:{-# RULES
./binary-0.6.2.0/src/Data/Binary/Get.hs:284:{-# RULES
./binary-0.6.3.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.6.3.0/src/Data/Binary/Get/Internal.hs:266:{-# RULES
./binary-0.6.3.0/src/Data/Binary/Get.hs:284:{-# RULES
./binary-0.6.4.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.6.4.0/src/Data/Binary/Get/Internal.hs:266:{-# RULES
./binary-0.6.4.0/src/Data/Binary/Get.hs:306:{-# RULES
./binary-0.7.0.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.0.0/src/Data/Binary/Get/Internal.hs:298:{-# RULES
./binary-0.7.0.0/src/Data/Binary/Get.hs:414:{-# RULES
./binary-0.7.0.1/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.0.1/src/Data/Binary/Get/Internal.hs:298:{-# RULES
./binary-0.7.0.1/src/Data/Binary/Get.hs:414:{-# RULES
./binary-0.7.1.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.1.0/src/Data/Binary/Get/Internal.hs:312:{-# RULES
./binary-0.7.1.0/src/Data/Binary/Get.hs:415:{-# RULES
./binary-0.7.2.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.2.0/src/Data/Binary/Get/Internal.hs:365:{-# RULES
./binary-0.7.2.0/src/Data/Binary/Get.hs:433:{-# RULES
./binary-0.7.2.1/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.2.1/src/Data/Binary/Get/Internal.hs:367:{-# RULES
./binary-0.7.2.1/src/Data/Binary/Get.hs:433:{-# RULES
./binary-0.7.2.2/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.2.2/src/Data/Binary/Get/Internal.hs:367:{-# RULES
./binary-0.7.2.2/src/Data/Binary/Get.hs:433:{-# RULES
./binary-0.7.2.3/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.2.3/src/Data/Binary/Get/Internal.hs:367:{-# RULES
./binary-0.7.2.3/src/Data/Binary/Get.hs:433:{-# RULES
./binary-0.7.3.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.3.0/src/Data/Binary/Get/Internal.hs:367:{-# RULES
./binary-0.7.3.0/src/Data/Binary/Get.hs:433:{-# RULES
./binary-0.7.4.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.4.0/src/Data/Binary/Get/Internal.hs:367:{-# RULES
./binary-0.7.4.0/src/Data/Binary/Get.hs:433:{-# RULES
./binary-0.7.5.0/src/Data/Binary/Builder/Base.hs:491:{-# RULES
./binary-0.7.5.0/src/Data/Binary/Get/Internal.hs:381:{-# RULES
./binary-0.7.5.0/src/Data/Binary/Get.hs:417:{-# RULES
./binary-0.7.6.0/src/Data/Binary/Builder/Base.hs:492:{-# RULES
./binary-0.7.6.0/src/Data/Binary/Get/Internal.hs:381:{-# RULES
./binary-0.7.6.0/src/Data/Binary/Get.hs:415:{-# RULES
./binary-0.7.6.1/src/Data/Binary/Builder/Base.hs:492:{-# RULES
./binary-0.7.6.1/src/Data/Binary/Get/Internal.hs:381:{-# RULES
./binary-0.7.6.1/src/Data/Binary/Get.hs:415:{-# RULES
./binary-0.8.0.0/src/Data/Binary/Builder/Base.hs:507:{-# RULES
./binary-0.8.0.0/src/Data/Binary/Get/Internal.hs:389:{-# RULES
./binary-0.8.0.0/src/Data/Binary/Get.hs:414:{-# RULES
./binary-0.8.0.1/src/Data/Binary/Builder/Base.hs:506:{-# RULES
./binary-0.8.0.1/src/Data/Binary/Get/Internal.hs:390:{-# RULES
./binary-0.8.0.1/src/Data/Binary/Get.hs:414:{-# RULES
./binary-0.8.1.0/src/Data/Binary/Builder/Base.hs:600:{-# RULES
./binary-0.8.1.0/src/Data/Binary/Get/Internal.hs:390:{-# RULES
./binary-0.8.1.0/src/Data/Binary/Get.hs:442:{-# RULES
./binary-0.8.2.0/src/Data/Binary/Builder/Base.hs:600:{-# RULES
./binary-0.8.2.0/src/Data/Binary/Get/Internal.hs:398:{-# RULES
./binary-0.8.2.0/src/Data/Binary/Get.hs:442:{-# RULES
./binary-0.8.2.1/src/Data/Binary/Builder/Base.hs:600:{-# RULES
./binary-0.8.2.1/src/Data/Binary/Get/Internal.hs:398:{-# RULES
./binary-0.8.2.1/src/Data/Binary/Get.hs:442:{-# RULES
./binary-list-0.1.0.2/Data/BinaryList.hs:117:{-# RULES
./binary-list-0.1.0.2/Data/BinaryList.hs:142:{-# RULES
./binary-list-0.2.0.0/Data/BinaryList.hs:112:{-# RULES
./binary-list-0.2.0.0/Data/BinaryList.hs:137:{-# RULES
./binary-list-0.2.0.1/Data/BinaryList.hs:112:{-# RULES
./binary-list-0.2.0.1/Data/BinaryList.hs:137:{-# RULES
./binary-list-0.2.0.2/Data/BinaryList.hs:112:{-# RULES
./binary-list-0.2.0.2/Data/BinaryList.hs:137:{-# RULES
./binary-list-0.2.0.3/Data/BinaryList.hs:112:{-# RULES
./binary-list-0.2.0.3/Data/BinaryList.hs:137:{-# RULES
./binary-list-0.2.0.4/Data/BinaryList.hs:112:{-# RULES
./binary-list-0.2.0.4/Data/BinaryList.hs:137:{-# RULES
./binary-list-0.3.0.0/Data/BinaryList.hs:120:{-# RULES
./binary-list-0.3.0.0/Data/BinaryList.hs:138:{-# RULES
./binary-list-0.3.0.0/Data/BinaryList.hs:143:{-# RULES
./binary-list-0.3.0.0/Data/BinaryList.hs:163:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:95:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:147:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:165:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:170:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:195:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:223:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:228:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:239:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:266:{-# RULES
./binary-list-0.3.1.0/Data/BinaryList.hs:316:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:95:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:147:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:165:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:170:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:197:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:229:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:234:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:249:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:278:{-# RULES
./binary-list-0.3.1.1/Data/BinaryList.hs:334:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:95:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:147:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:165:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:170:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:197:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:229:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:234:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:249:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:278:{-# RULES
./binary-list-0.3.1.2/Data/BinaryList.hs:334:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:98:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:154:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:159:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:169:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:196:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:228:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:233:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:248:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:277:{-# RULES
./binary-list-0.3.2.0/Data/BinaryList.hs:333:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:98:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:154:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:159:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:169:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:196:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:228:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:233:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:248:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:277:{-# RULES
./binary-list-0.3.2.1/Data/BinaryList.hs:333:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:109:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:165:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:170:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:180:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:212:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:244:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:249:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:264:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:293:{-# RULES
./binary-list-0.3.3.0/Data/BinaryList.hs:349:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:110:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:181:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:186:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:196:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:228:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:260:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:265:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:280:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:309:{-# RULES
./binary-list-0.3.4.0/Data/BinaryList.hs:365:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:110:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:181:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:186:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:196:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:228:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:260:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:265:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:280:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:309:{-# RULES
./binary-list-0.3.4.1/Data/BinaryList.hs:365:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:115:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:186:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:191:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:201:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:232:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:262:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:267:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:281:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:310:{-# RULES
./binary-list-0.3.5.0/Data/BinaryList.hs:364:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:115:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:186:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:191:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:201:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:232:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:262:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:267:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:281:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:310:{-# RULES
./binary-list-0.4.0.0/Data/BinaryList.hs:364:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:120:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:191:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:196:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:206:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:237:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:267:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:272:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:286:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:315:{-# RULES
./binary-list-1.0.0.0/Data/BinaryList.hs:369:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:120:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:191:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:196:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:206:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:237:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:267:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:272:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:286:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:315:{-# RULES
./binary-list-1.0.0.1/Data/BinaryList.hs:369:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:120:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:191:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:196:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:206:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:237:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:267:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:272:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:286:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:315:{-# RULES
./binary-list-1.0.1.0/Data/BinaryList.hs:369:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:114:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:185:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:190:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:200:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:231:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:261:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:266:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:280:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:309:{-# RULES
./binary-list-1.1.0.0/Data/BinaryList.hs:363:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:139:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:210:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:215:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:225:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:256:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:286:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:291:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:305:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:334:{-# RULES
./binary-list-1.1.0.1/Data/BinaryList.hs:388:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:139:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:210:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:215:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:225:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:256:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:286:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:291:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:305:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:334:{-# RULES
./binary-list-1.1.0.2/Data/BinaryList.hs:388:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:139:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:210:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:215:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:225:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:256:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:286:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:291:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:305:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:334:{-# RULES
./binary-list-1.1.1.0/Data/BinaryList.hs:388:{-# RULES
./biohazard-0.6.1/src/Bio/Bam/Writer.hs:150:{-# RULES
./biohazard-0.6.2/src/Bio/Bam/Writer.hs:150:{-# RULES
./biohazard-0.6.3/src/Bio/Bam/Writer.hs:150:{-# RULES
./bitset-1.4.7/src/Data/BitSet/Generic.hs:217:{-# RULES
./bitset-1.4.8/src/Data/BitSet/Generic.hs:230:{-# RULES
./bitstream-0.1/Data/Bitstream/Fusion/Monadic.hs:32:{-# RULES "genericTake → take" genericTake = take #-}
./bitstream-0.1/Data/Bitstream/Fusion/Monadic.hs:48:{-# RULES "genericDrop → drop" genericDrop = drop #-}
./bitstream-0.1/Data/Bitstream/Fusion/Monadic.hs:71:{-# RULES "genericIndex → (!!)" genericIndex = (!!) #-}
./bitstream-0.1/Data/Bitstream/Fusion/Monadic.hs:92:{-# RULES "genericReplicateM → replicateM" genericReplicateM = replicateM #-}
./bitstream-0.1/Data/Bitstream/Fusion/Monadic.hs:106:{-# RULES "genericUnfoldrNM → unfoldrNM" genericUnfoldrNM = unfoldrNM #-}
./bitstream-0.1/Data/Bitstream/Fusion/Monadic.hs:122:{-# RULES "genericFindIndexM → findIndexM" genericFindIndexM = findIndexM #-}
./bitstream-0.1/Data/Bitstream/Fusion/Monadic.hs:137:{-# RULES "genericIndexed → indexed" genericIndexed = indexed #-}
./bitstream-0.1/Data/Bitstream/Generic.hs:318:{-# RULES "Bitstream unpack/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:337:{-# RULES "Bitstream head/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:346:{-# RULES "Bitstream last/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:354:{-# RULES "Bitstream null/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:362:{-# RULES "Bitstream length/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:370:{-# RULES "Bitstream concatMap/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:382:{-# RULES "Bitstream and/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:394:{-# RULES "Bitstream or/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:406:{-# RULES "Bitstream any/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:418:{-# RULES "Bitstream all/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:431:{-# RULES "Bitstream scanl1/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:465:{-# RULES "Bitstream foldl/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:474:{-# RULES "Bitstream foldl'/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:483:{-# RULES "Bitstream foldl1/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:491:{-# RULES "Bitstream foldl1'/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:506:{-# RULES "Bitstream foldr/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:515:{-# RULES "Bitstream foldr1/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:540:{-# RULES "Bitstream (!!)/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:577:{-# RULES "Bitstream elem/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:586:{-# RULES "Bitstream notElem/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:596:{-# RULES "Bitstream find/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:606:{-# RULES "Bitstream elemIndex/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:616:{-# RULES "Bitstream elemIndices/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:631:{-# RULES "Bitstream findIndex/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:641:{-# RULES "Bitstream findIndices/unstream fusion"
./bitstream-0.1/Data/Bitstream/Generic.hs:660:{-# RULES "Bitstream zip/unstream fusion" ∀s1 s2.
./bitstream-0.1/Data/Bitstream/Generic.hs:670:{-# RULES "Bitstream zip3/unstream fusion" ∀s1 s2 s3.
./bitstream-0.1/Data/Bitstream/Generic.hs:680:{-# RULES "Bitstream zip4/unstream fusion" ∀s1 s2 s3 s4.
./bitstream-0.1/Data/Bitstream/Generic.hs:690:{-# RULES "Bitstream zip5/unstream fusion" ∀s1 s2 s3 s4 s5.
./bitstream-0.1/Data/Bitstream/Generic.hs:700:{-# RULES "Bitstream zip6/unstream fusion" ∀s1 s2 s3 s4 s5 s6.
./bitstream-0.1/Data/Bitstream/Generic.hs:711:{-# RULES "Bitstream zipWith/unstream fusion" ∀f s1 s2.
./bitstream-0.1/Data/Bitstream/Generic.hs:725:{-# RULES "Bitstream zipWith3/unstream fusion" ∀f s1 s2 s3.
./bitstream-0.1/Data/Bitstream/Generic.hs:740:{-# RULES "Bitstream zipWith4/unstream fusion" ∀f s1 s2 s3 s4.
./bitstream-0.1/Data/Bitstream/Generic.hs:756:{-# RULES "Bitstream zipWith5/unstream fusion" ∀f s1 s2 s3 s4 s5.
./bitstream-0.1/Data/Bitstream/Generic.hs:773:{-# RULES "Bitstream zipWith6/unstream fusion" ∀f s1 s2 s3 s4 s5 s6.
./bitstream-0.1/Data/Bitstream/Generic.hs:833:{-# RULES
./bitstream-0.1/Data/Bitstream/Generic.hs:841:{-# RULES
./bitstream-0.1/Data/Bitstream/Lazy.hs:360:{-# RULES "head → lazyHead" [2]
./bitstream-0.1/Data/Bitstream/Lazy.hs:368:{-# RULES "last → lazyLast" [2]
./bitstream-0.1/Data/Bitstream/Lazy.hs:377:{-# RULES "null → lazyNull" [2] null = lazyNull #-}
./bitstream-0.1/Data/Bitstream/Lazy.hs:383:{-# RULES "length → lazyLength" [2]
./bitstream-0.1/Data/Bitstream/Lazy.hs:394:{-# RULES "and → lazyAnd" [2]
./bitstream-0.1/Data/Bitstream/Lazy.hs:404:{-# RULES "or → lazyOr" [2]
./bitstream-0.1/Data/Bitstream/Lazy.hs:414:{-# RULES "(!!) → lazyIndex" [2]
./bitstream-0.1/Data/Bitstream/Lazy.hs:489:{-# RULES
./bitstream-0.1/Data/Bitstream/Packet.hs:347:{-# RULES "head → packetHeadL" [2] head = packetHeadL #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:353:{-# RULES "head → packetHeadR" [2] head = packetHeadR #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:359:{-# RULES "last → packetLastL" [2] last = packetLastL #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:365:{-# RULES "head → packetLastR" [2] last = packetLastR #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:371:{-# RULES "and → packetAndL" [2] and = packetAndL #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:376:{-# RULES "and → packetAndR" [2] and = packetAndR #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:381:{-# RULES "(!!) → packetIndexL" [2] (!!) = packetIndexL #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:388:{-# RULES "(!!) → packetIndexR" [2] (!!) = packetIndexR #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:405:{-# RULES "null → packetNull" [2] null = packetNull #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:411:{-# RULES "length → packetLength" [2] length = packetLength #-}
./bitstream-0.1/Data/Bitstream/Packet.hs:416:{-# RULES "or → packetOr" [2] or = packetOr #-}
./bitstream-0.1/Data/Bitstream.hs:394:{-# RULES "head → strictHead" [2]
./bitstream-0.1/Data/Bitstream.hs:401:{-# RULES "last → strictLast" [2]
./bitstream-0.1/Data/Bitstream.hs:408:{-# RULES "null → strictNull" [2] null = strictNull #-}
./bitstream-0.1/Data/Bitstream.hs:413:{-# RULES "length → strictLength" [2]
./bitstream-0.1/Data/Bitstream.hs:421:{-# RULES "and → strictAnd" [2]
./bitstream-0.1/Data/Bitstream.hs:429:{-# RULES "or → strictOr" [2]
./bitstream-0.1/Data/Bitstream.hs:437:{-# RULES "(!!) → strictIndex" [2]
./bitstream-0.2/Data/Bitstream/Fusion/Monadic.hs:32:{-# RULES "genericTake → take" genericTake = take #-}
./bitstream-0.2/Data/Bitstream/Fusion/Monadic.hs:48:{-# RULES "genericDrop → drop" genericDrop = drop #-}
./bitstream-0.2/Data/Bitstream/Fusion/Monadic.hs:71:{-# RULES "genericIndex → (!!)" genericIndex = (!!) #-}
./bitstream-0.2/Data/Bitstream/Fusion/Monadic.hs:92:{-# RULES "genericReplicateM → replicateM" genericReplicateM = replicateM #-}
./bitstream-0.2/Data/Bitstream/Fusion/Monadic.hs:106:{-# RULES "genericUnfoldrNM → unfoldrNM" genericUnfoldrNM = unfoldrNM #-}
./bitstream-0.2/Data/Bitstream/Fusion/Monadic.hs:122:{-# RULES "genericFindIndexM → findIndexM" genericFindIndexM = findIndexM #-}
./bitstream-0.2/Data/Bitstream/Fusion/Monadic.hs:137:{-# RULES "genericIndexed → indexed" genericIndexed = indexed #-}
./bitstream-0.2/Data/Bitstream/Generic.hs:214:{-# RULES "Bitstream unpack/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:287:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:317:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:332:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:341:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:350:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:367:{-# RULES "Bitstream head/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:376:{-# RULES "Bitstream last/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:385:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:395:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:404:{-# RULES "Bitstream null/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:413:{-# RULES "Bitstream length/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:421:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:444:{-# RULES "Bitstream foldl/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:453:{-# RULES "Bitstream foldl'/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:462:{-# RULES "Bitstream foldl1/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:470:{-# RULES "Bitstream foldl1'/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:485:{-# RULES "Bitstream foldr/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:494:{-# RULES "Bitstream foldr1/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:507:{-# RULES "Bitstream concatMap/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:519:{-# RULES "Bitstream and/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:531:{-# RULES "Bitstream or/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:543:{-# RULES "Bitstream any/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:555:{-# RULES "Bitstream all/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:574:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:634:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:644:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:655:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:665:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:703:{-# RULES "Bitstream elem/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:726:{-# RULES "Bitstream notElem/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:750:{-# RULES "Bitstream find/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:759:{-# RULES
./bitstream-0.2/Data/Bitstream/Generic.hs:775:{-# RULES "Bitstream (!!)/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:785:{-# RULES "Bitstream elemIndex/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:795:{-# RULES "Bitstream elemIndices/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:810:{-# RULES "Bitstream findIndex/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:820:{-# RULES "Bitstream findIndices/unstream fusion"
./bitstream-0.2/Data/Bitstream/Generic.hs:839:{-# RULES "Bitstream zip/unstream fusion" ∀s1 s2.
./bitstream-0.2/Data/Bitstream/Generic.hs:849:{-# RULES "Bitstream zip3/unstream fusion" ∀s1 s2 s3.
./bitstream-0.2/Data/Bitstream/Generic.hs:859:{-# RULES "Bitstream zip4/unstream fusion" ∀s1 s2 s3 s4.
./bitstream-0.2/Data/Bitstream/Generic.hs:869:{-# RULES "Bitstream zip5/unstream fusion" ∀s1 s2 s3 s4 s5.
./bitstream-0.2/Data/Bitstream/Generic.hs:879:{-# RULES "Bitstream zip6/unstream fusion" ∀s1 s2 s3 s4 s5 s6.
./bitstream-0.2/Data/Bitstream/Generic.hs:890:{-# RULES "Bitstream zipWith/unstream fusion" ∀f s1 s2.
./bitstream-0.2/Data/Bitstream/Generic.hs:904:{-# RULES "Bitstream zipWith3/unstream fusion" ∀f s1 s2 s3.
./bitstream-0.2/Data/Bitstream/Generic.hs:919:{-# RULES "Bitstream zipWith4/unstream fusion" ∀f s1 s2 s3 s4.
./bitstream-0.2/Data/Bitstream/Generic.hs:935:{-# RULES "Bitstream zipWith5/unstream fusion" ∀f s1 s2 s3 s4 s5.
./bitstream-0.2/Data/Bitstream/Generic.hs:952:{-# RULES "Bitstream zipWith6/unstream fusion" ∀f s1 s2 s3 s4 s5 s6.
./bitstream-0.2/Data/Bitstream/Lazy.hs:543:{-# RULES "head → lazyHead" [1]
./bitstream-0.2/Data/Bitstream/Lazy.hs:551:{-# RULES "last → lazyLast" [1]
./bitstream-0.2/Data/Bitstream/Lazy.hs:560:{-# RULES "null → lazyNull" [1] null = lazyNull #-}
./bitstream-0.2/Data/Bitstream/Lazy.hs:566:{-# RULES "length → lazyLength" [1]
./bitstream-0.2/Data/Bitstream/Lazy.hs:577:{-# RULES "and → lazyAnd" [1]
./bitstream-0.2/Data/Bitstream/Lazy.hs:587:{-# RULES "or → lazyOr" [1]
./bitstream-0.2/Data/Bitstream/Lazy.hs:602:{-# RULES "(!!) → lazyIndex" [1]
./bitstream-0.2/Data/Bitstream/Lazy.hs:687:{-# RULES
./bitstream-0.2/Data/Bitstream/Packet.hs:373:{-# RULES "head → packetHeadL" [1] head = packetHeadL #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:379:{-# RULES "head → packetHeadR" [1] head = packetHeadR #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:385:{-# RULES "last → packetLastL" [1] last = packetLastL #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:391:{-# RULES "head → packetLastR" [1] last = packetLastR #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:397:{-# RULES "and → packetAndL" [1] and = packetAndL #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:402:{-# RULES "and → packetAndR" [1] and = packetAndR #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:407:{-# RULES "(!!) → packetIndexL" [1] (!!) = packetIndexL #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:414:{-# RULES "(!!) → packetIndexR" [1] (!!) = packetIndexR #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:431:{-# RULES "null → packetNull" [1] null = packetNull #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:437:{-# RULES "length → packetLength" [1] length = packetLength #-}
./bitstream-0.2/Data/Bitstream/Packet.hs:442:{-# RULES "or → packetOr" [1] or = packetOr #-}
./bitstream-0.2/Data/Bitstream.hs:539:{-# RULES "head → strictHead" [1]
./bitstream-0.2/Data/Bitstream.hs:546:{-# RULES "last → strictLast" [1]
./bitstream-0.2/Data/Bitstream.hs:553:{-# RULES "null → strictNull" [1] null = strictNull #-}
./bitstream-0.2/Data/Bitstream.hs:559:{-# RULES "length → strictLength" [1] length = strictLength #-}
./bitstream-0.2/Data/Bitstream.hs:564:{-# RULES "and → strictAnd" [1]
./bitstream-0.2/Data/Bitstream.hs:572:{-# RULES "or → strictOr" [1]
./bitstream-0.2/Data/Bitstream.hs:580:{-# RULES "(!!) → strictIndex" [1]
./bitstream-0.2/Data/Bitstream.hs:679:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Fusion/Monadic.hs:32:{-# RULES "genericTake → take" genericTake = take #-}
./bitstream-0.2.0.1/Data/Bitstream/Fusion/Monadic.hs:48:{-# RULES "genericDrop → drop" genericDrop = drop #-}
./bitstream-0.2.0.1/Data/Bitstream/Fusion/Monadic.hs:71:{-# RULES "genericIndex → (!!)" genericIndex = (!!) #-}
./bitstream-0.2.0.1/Data/Bitstream/Fusion/Monadic.hs:92:{-# RULES "genericReplicateM → replicateM" genericReplicateM = replicateM #-}
./bitstream-0.2.0.1/Data/Bitstream/Fusion/Monadic.hs:106:{-# RULES "genericUnfoldrNM → unfoldrNM" genericUnfoldrNM = unfoldrNM #-}
./bitstream-0.2.0.1/Data/Bitstream/Fusion/Monadic.hs:122:{-# RULES "genericFindIndexM → findIndexM" genericFindIndexM = findIndexM #-}
./bitstream-0.2.0.1/Data/Bitstream/Fusion/Monadic.hs:137:{-# RULES "genericIndexed → indexed" genericIndexed = indexed #-}
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:214:{-# RULES "Bitstream unpack/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:287:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:317:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:332:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:341:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:350:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:367:{-# RULES "Bitstream head/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:376:{-# RULES "Bitstream last/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:385:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:395:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:404:{-# RULES "Bitstream null/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:413:{-# RULES "Bitstream length/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:421:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:444:{-# RULES "Bitstream foldl/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:453:{-# RULES "Bitstream foldl'/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:462:{-# RULES "Bitstream foldl1/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:470:{-# RULES "Bitstream foldl1'/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:485:{-# RULES "Bitstream foldr/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:494:{-# RULES "Bitstream foldr1/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:507:{-# RULES "Bitstream concatMap/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:519:{-# RULES "Bitstream and/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:531:{-# RULES "Bitstream or/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:543:{-# RULES "Bitstream any/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:555:{-# RULES "Bitstream all/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:574:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:634:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:644:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:655:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:665:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:703:{-# RULES "Bitstream elem/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:726:{-# RULES "Bitstream notElem/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:750:{-# RULES "Bitstream find/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:759:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:775:{-# RULES "Bitstream (!!)/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:785:{-# RULES "Bitstream elemIndex/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:795:{-# RULES "Bitstream elemIndices/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:810:{-# RULES "Bitstream findIndex/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:820:{-# RULES "Bitstream findIndices/unstream fusion"
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:839:{-# RULES "Bitstream zip/unstream fusion" ∀s1 s2.
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:849:{-# RULES "Bitstream zip3/unstream fusion" ∀s1 s2 s3.
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:859:{-# RULES "Bitstream zip4/unstream fusion" ∀s1 s2 s3 s4.
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:869:{-# RULES "Bitstream zip5/unstream fusion" ∀s1 s2 s3 s4 s5.
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:879:{-# RULES "Bitstream zip6/unstream fusion" ∀s1 s2 s3 s4 s5 s6.
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:890:{-# RULES "Bitstream zipWith/unstream fusion" ∀f s1 s2.
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:904:{-# RULES "Bitstream zipWith3/unstream fusion" ∀f s1 s2 s3.
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:919:{-# RULES "Bitstream zipWith4/unstream fusion" ∀f s1 s2 s3 s4.
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:935:{-# RULES "Bitstream zipWith5/unstream fusion" ∀f s1 s2 s3 s4 s5.
./bitstream-0.2.0.1/Data/Bitstream/Generic.hs:952:{-# RULES "Bitstream zipWith6/unstream fusion" ∀f s1 s2 s3 s4 s5 s6.
./bitstream-0.2.0.1/Data/Bitstream/Lazy.hs:543:{-# RULES "head → lazyHead" [1]
./bitstream-0.2.0.1/Data/Bitstream/Lazy.hs:551:{-# RULES "last → lazyLast" [1]
./bitstream-0.2.0.1/Data/Bitstream/Lazy.hs:560:{-# RULES "null → lazyNull" [1] null = lazyNull #-}
./bitstream-0.2.0.1/Data/Bitstream/Lazy.hs:566:{-# RULES "length → lazyLength" [1]
./bitstream-0.2.0.1/Data/Bitstream/Lazy.hs:577:{-# RULES "and → lazyAnd" [1]
./bitstream-0.2.0.1/Data/Bitstream/Lazy.hs:587:{-# RULES "or → lazyOr" [1]
./bitstream-0.2.0.1/Data/Bitstream/Lazy.hs:602:{-# RULES "(!!) → lazyIndex" [1]
./bitstream-0.2.0.1/Data/Bitstream/Lazy.hs:687:{-# RULES
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:373:{-# RULES "head → packetHeadL" [1] head = packetHeadL #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:379:{-# RULES "head → packetHeadR" [1] head = packetHeadR #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:385:{-# RULES "last → packetLastL" [1] last = packetLastL #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:391:{-# RULES "head → packetLastR" [1] last = packetLastR #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:397:{-# RULES "and → packetAndL" [1] and = packetAndL #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:402:{-# RULES "and → packetAndR" [1] and = packetAndR #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:407:{-# RULES "(!!) → packetIndexL" [1] (!!) = packetIndexL #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:414:{-# RULES "(!!) → packetIndexR" [1] (!!) = packetIndexR #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:431:{-# RULES "null → packetNull" [1] null = packetNull #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:437:{-# RULES "length → packetLength" [1] length = packetLength #-}
./bitstream-0.2.0.1/Data/Bitstream/Packet.hs:442:{-# RULES "or → packetOr" [1] or = packetOr #-}
./bitstream-0.2.0.1/Data/Bitstream.hs:539:{-# RULES "head → strictHead" [1]
./bitstream-0.2.0.1/Data/Bitstream.hs:546:{-# RULES "last → strictLast" [1]
./bitstream-0.2.0.1/Data/Bitstream.hs:553:{-# RULES "null → strictNull" [1] null = strictNull #-}
./bitstream-0.2.0.1/Data/Bitstream.hs:559:{-# RULES "length → strictLength" [1] length = strictLength #-}
./bitstream-0.2.0.1/Data/Bitstream.hs:564:{-# RULES "and → strictAnd" [1]
./bitstream-0.2.0.1/Data/Bitstream.hs:572:{-# RULES "or → strictOr" [1]
./bitstream-0.2.0.1/Data/Bitstream.hs:580:{-# RULES "(!!) → strictIndex" [1]
./bitstream-0.2.0.1/Data/Bitstream.hs:679:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Fusion/Monadic.hs:32:{-# RULES "genericTake → take" genericTake = take #-}
./bitstream-0.2.0.2/Data/Bitstream/Fusion/Monadic.hs:48:{-# RULES "genericDrop → drop" genericDrop = drop #-}
./bitstream-0.2.0.2/Data/Bitstream/Fusion/Monadic.hs:71:{-# RULES "genericIndex → (!!)" genericIndex = (!!) #-}
./bitstream-0.2.0.2/Data/Bitstream/Fusion/Monadic.hs:92:{-# RULES "genericReplicateM → replicateM" genericReplicateM = replicateM #-}
./bitstream-0.2.0.2/Data/Bitstream/Fusion/Monadic.hs:106:{-# RULES "genericUnfoldrNM → unfoldrNM" genericUnfoldrNM = unfoldrNM #-}
./bitstream-0.2.0.2/Data/Bitstream/Fusion/Monadic.hs:122:{-# RULES "genericFindIndexM → findIndexM" genericFindIndexM = findIndexM #-}
./bitstream-0.2.0.2/Data/Bitstream/Fusion/Monadic.hs:137:{-# RULES "genericIndexed → indexed" genericIndexed = indexed #-}
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:214:{-# RULES "Bitstream unpack/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:287:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:317:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:332:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:341:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:350:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:367:{-# RULES "Bitstream head/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:376:{-# RULES "Bitstream last/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:385:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:395:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:404:{-# RULES "Bitstream null/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:413:{-# RULES "Bitstream length/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:421:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:444:{-# RULES "Bitstream foldl/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:453:{-# RULES "Bitstream foldl'/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:462:{-# RULES "Bitstream foldl1/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:470:{-# RULES "Bitstream foldl1'/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:485:{-# RULES "Bitstream foldr/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:494:{-# RULES "Bitstream foldr1/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:507:{-# RULES "Bitstream concatMap/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:519:{-# RULES "Bitstream and/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:531:{-# RULES "Bitstream or/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:543:{-# RULES "Bitstream any/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:555:{-# RULES "Bitstream all/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:574:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:634:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:644:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:655:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:665:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:703:{-# RULES "Bitstream elem/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:726:{-# RULES "Bitstream notElem/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:750:{-# RULES "Bitstream find/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:759:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:775:{-# RULES "Bitstream (!!)/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:785:{-# RULES "Bitstream elemIndex/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:795:{-# RULES "Bitstream elemIndices/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:810:{-# RULES "Bitstream findIndex/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:820:{-# RULES "Bitstream findIndices/unstream fusion"
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:839:{-# RULES "Bitstream zip/unstream fusion" ∀s1 s2.
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:849:{-# RULES "Bitstream zip3/unstream fusion" ∀s1 s2 s3.
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:859:{-# RULES "Bitstream zip4/unstream fusion" ∀s1 s2 s3 s4.
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:869:{-# RULES "Bitstream zip5/unstream fusion" ∀s1 s2 s3 s4 s5.
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:879:{-# RULES "Bitstream zip6/unstream fusion" ∀s1 s2 s3 s4 s5 s6.
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:890:{-# RULES "Bitstream zipWith/unstream fusion" ∀f s1 s2.
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:904:{-# RULES "Bitstream zipWith3/unstream fusion" ∀f s1 s2 s3.
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:919:{-# RULES "Bitstream zipWith4/unstream fusion" ∀f s1 s2 s3 s4.
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:935:{-# RULES "Bitstream zipWith5/unstream fusion" ∀f s1 s2 s3 s4 s5.
./bitstream-0.2.0.2/Data/Bitstream/Generic.hs:952:{-# RULES "Bitstream zipWith6/unstream fusion" ∀f s1 s2 s3 s4 s5 s6.
./bitstream-0.2.0.2/Data/Bitstream/Lazy.hs:543:{-# RULES "head → lazyHead" [1]
./bitstream-0.2.0.2/Data/Bitstream/Lazy.hs:551:{-# RULES "last → lazyLast" [1]
./bitstream-0.2.0.2/Data/Bitstream/Lazy.hs:560:{-# RULES "null → lazyNull" [1] null = lazyNull #-}
./bitstream-0.2.0.2/Data/Bitstream/Lazy.hs:566:{-# RULES "length → lazyLength" [1]
./bitstream-0.2.0.2/Data/Bitstream/Lazy.hs:577:{-# RULES "and → lazyAnd" [1]
./bitstream-0.2.0.2/Data/Bitstream/Lazy.hs:587:{-# RULES "or → lazyOr" [1]
./bitstream-0.2.0.2/Data/Bitstream/Lazy.hs:603:{-# RULES "(!!) → lazyIndex" [1]
./bitstream-0.2.0.2/Data/Bitstream/Lazy.hs:688:{-# RULES
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:373:{-# RULES "head → packetHeadL" [1] head = packetHeadL #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:379:{-# RULES "head → packetHeadR" [1] head = packetHeadR #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:385:{-# RULES "last → packetLastL" [1] last = packetLastL #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:391:{-# RULES "head → packetLastR" [1] last = packetLastR #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:397:{-# RULES "and → packetAndL" [1] and = packetAndL #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:402:{-# RULES "and → packetAndR" [1] and = packetAndR #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:407:{-# RULES "(!!) → packetIndexL" [1] (!!) = packetIndexL #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:414:{-# RULES "(!!) → packetIndexR" [1] (!!) = packetIndexR #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:431:{-# RULES "null → packetNull" [1] null = packetNull #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:437:{-# RULES "length → packetLength" [1] length = packetLength #-}
./bitstream-0.2.0.2/Data/Bitstream/Packet.hs:442:{-# RULES "or → packetOr" [1] or = packetOr #-}
./bitstream-0.2.0.2/Data/Bitstream.hs:539:{-# RULES "head → strictHead" [1]
./bitstream-0.2.0.2/Data/Bitstream.hs:546:{-# RULES "last → strictLast" [1]
./bitstream-0.2.0.2/Data/Bitstream.hs:553:{-# RULES "null → strictNull" [1] null = strictNull #-}
./bitstream-0.2.0.2/Data/Bitstream.hs:559:{-# RULES "length → strictLength" [1] length = strictLength #-}
./bitstream-0.2.0.2/Data/Bitstream.hs:564:{-# RULES "and → strictAnd" [1]
./bitstream-0.2.0.2/Data/Bitstream.hs:572:{-# RULES "or → strictOr" [1]
./bitstream-0.2.0.2/Data/Bitstream.hs:580:{-# RULES "(!!) → strictIndex" [1]
./bitstream-0.2.0.2/Data/Bitstream.hs:679:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Fusion/Monadic.hs:32:{-# RULES "genericTake → take" genericTake = take #-}
./bitstream-0.2.0.3/Data/Bitstream/Fusion/Monadic.hs:48:{-# RULES "genericDrop → drop" genericDrop = drop #-}
./bitstream-0.2.0.3/Data/Bitstream/Fusion/Monadic.hs:71:{-# RULES "genericIndex → (!!)" genericIndex = (!!) #-}
./bitstream-0.2.0.3/Data/Bitstream/Fusion/Monadic.hs:92:{-# RULES "genericReplicateM → replicateM" genericReplicateM = replicateM #-}
./bitstream-0.2.0.3/Data/Bitstream/Fusion/Monadic.hs:106:{-# RULES "genericUnfoldrNM → unfoldrNM" genericUnfoldrNM = unfoldrNM #-}
./bitstream-0.2.0.3/Data/Bitstream/Fusion/Monadic.hs:122:{-# RULES "genericFindIndexM → findIndexM" genericFindIndexM = findIndexM #-}
./bitstream-0.2.0.3/Data/Bitstream/Fusion/Monadic.hs:137:{-# RULES "genericIndexed → indexed" genericIndexed = indexed #-}
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:214:{-# RULES "Bitstream unpack/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:287:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:317:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:332:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:341:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:350:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:367:{-# RULES "Bitstream head/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:376:{-# RULES "Bitstream last/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:385:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:395:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:404:{-# RULES "Bitstream null/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:413:{-# RULES "Bitstream length/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:421:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:444:{-# RULES "Bitstream foldl/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:453:{-# RULES "Bitstream foldl'/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:462:{-# RULES "Bitstream foldl1/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:470:{-# RULES "Bitstream foldl1'/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:485:{-# RULES "Bitstream foldr/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:494:{-# RULES "Bitstream foldr1/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:507:{-# RULES "Bitstream concatMap/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:519:{-# RULES "Bitstream and/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:531:{-# RULES "Bitstream or/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:543:{-# RULES "Bitstream any/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:555:{-# RULES "Bitstream all/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:574:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:634:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:644:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:655:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:665:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:703:{-# RULES "Bitstream elem/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:726:{-# RULES "Bitstream notElem/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:750:{-# RULES "Bitstream find/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:759:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:775:{-# RULES "Bitstream (!!)/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:785:{-# RULES "Bitstream elemIndex/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:795:{-# RULES "Bitstream elemIndices/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:810:{-# RULES "Bitstream findIndex/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:820:{-# RULES "Bitstream findIndices/unstream fusion"
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:839:{-# RULES "Bitstream zip/unstream fusion" ∀s1 s2.
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:849:{-# RULES "Bitstream zip3/unstream fusion" ∀s1 s2 s3.
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:859:{-# RULES "Bitstream zip4/unstream fusion" ∀s1 s2 s3 s4.
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:869:{-# RULES "Bitstream zip5/unstream fusion" ∀s1 s2 s3 s4 s5.
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:879:{-# RULES "Bitstream zip6/unstream fusion" ∀s1 s2 s3 s4 s5 s6.
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:890:{-# RULES "Bitstream zipWith/unstream fusion" ∀f s1 s2.
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:904:{-# RULES "Bitstream zipWith3/unstream fusion" ∀f s1 s2 s3.
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:919:{-# RULES "Bitstream zipWith4/unstream fusion" ∀f s1 s2 s3 s4.
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:935:{-# RULES "Bitstream zipWith5/unstream fusion" ∀f s1 s2 s3 s4 s5.
./bitstream-0.2.0.3/Data/Bitstream/Generic.hs:952:{-# RULES "Bitstream zipWith6/unstream fusion" ∀f s1 s2 s3 s4 s5 s6.
./bitstream-0.2.0.3/Data/Bitstream/Lazy.hs:543:{-# RULES "head → lazyHead" [1]
./bitstream-0.2.0.3/Data/Bitstream/Lazy.hs:551:{-# RULES "last → lazyLast" [1]
./bitstream-0.2.0.3/Data/Bitstream/Lazy.hs:560:{-# RULES "null → lazyNull" [1] null = lazyNull #-}
./bitstream-0.2.0.3/Data/Bitstream/Lazy.hs:566:{-# RULES "length → lazyLength" [1]
./bitstream-0.2.0.3/Data/Bitstream/Lazy.hs:577:{-# RULES "and → lazyAnd" [1]
./bitstream-0.2.0.3/Data/Bitstream/Lazy.hs:587:{-# RULES "or → lazyOr" [1]
./bitstream-0.2.0.3/Data/Bitstream/Lazy.hs:603:{-# RULES "(!!) → lazyIndex" [1]
./bitstream-0.2.0.3/Data/Bitstream/Lazy.hs:688:{-# RULES
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:373:{-# RULES "head → packetHeadL" [1] head = packetHeadL #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:379:{-# RULES "head → packetHeadR" [1] head = packetHeadR #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:385:{-# RULES "last → packetLastL" [1] last = packetLastL #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:391:{-# RULES "head → packetLastR" [1] last = packetLastR #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:397:{-# RULES "and → packetAndL" [1] and = packetAndL #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:402:{-# RULES "and → packetAndR" [1] and = packetAndR #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:407:{-# RULES "(!!) → packetIndexL" [1] (!!) = packetIndexL #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:414:{-# RULES "(!!) → packetIndexR" [1] (!!) = packetIndexR #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:431:{-# RULES "null → packetNull" [1] null = packetNull #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:437:{-# RULES "length → packetLength" [1] length = packetLength #-}
./bitstream-0.2.0.3/Data/Bitstream/Packet.hs:442:{-# RULES "or → packetOr" [1] or = packetOr #-}
./bitstream-0.2.0.3/Data/Bitstream.hs:539:{-# RULES "head → strictHead" [1]
./bitstream-0.2.0.3/Data/Bitstream.hs:546:{-# RULES "last → strictLast" [1]
./bitstream-0.2.0.3/Data/Bitstream.hs:553:{-# RULES "null → strictNull" [1] null = strictNull #-}
./bitstream-0.2.0.3/Data/Bitstream.hs:559:{-# RULES "length → strictLength" [1] length = strictLength #-}
./bitstream-0.2.0.3/Data/Bitstream.hs:564:{-# RULES "and → strictAnd" [1]
./bitstream-0.2.0.3/Data/Bitstream.hs:572:{-# RULES "or → strictOr" [1]
./bitstream-0.2.0.3/Data/Bitstream.hs:580:{-# RULES "(!!) → strictIndex" [1]
./bitstream-0.2.0.3/Data/Bitstream.hs:679:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Fusion/Monadic.hs:32:{-# RULES "genericTake → take" genericTake = take #-}
./bitstream-0.2.0.4/Data/Bitstream/Fusion/Monadic.hs:48:{-# RULES "genericDrop → drop" genericDrop = drop #-}
./bitstream-0.2.0.4/Data/Bitstream/Fusion/Monadic.hs:71:{-# RULES "genericIndex → (!!)" genericIndex = (!!) #-}
./bitstream-0.2.0.4/Data/Bitstream/Fusion/Monadic.hs:92:{-# RULES "genericReplicateM → replicateM" genericReplicateM = replicateM #-}
./bitstream-0.2.0.4/Data/Bitstream/Fusion/Monadic.hs:106:{-# RULES "genericUnfoldrNM → unfoldrNM" genericUnfoldrNM = unfoldrNM #-}
./bitstream-0.2.0.4/Data/Bitstream/Fusion/Monadic.hs:122:{-# RULES "genericFindIndexM → findIndexM" genericFindIndexM = findIndexM #-}
./bitstream-0.2.0.4/Data/Bitstream/Fusion/Monadic.hs:137:{-# RULES "genericIndexed → indexed" genericIndexed = indexed #-}
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:215:{-# RULES "Bitstream unpack/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:288:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:325:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:340:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:349:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:358:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:375:{-# RULES "Bitstream head/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:384:{-# RULES "Bitstream last/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:393:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:403:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:412:{-# RULES "Bitstream null/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:421:{-# RULES "Bitstream length/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:429:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:452:{-# RULES "Bitstream foldl/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:461:{-# RULES "Bitstream foldl'/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:470:{-# RULES "Bitstream foldl1/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:478:{-# RULES "Bitstream foldl1'/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:493:{-# RULES "Bitstream foldr/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:502:{-# RULES "Bitstream foldr1/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:515:{-# RULES "Bitstream concatMap/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:527:{-# RULES "Bitstream and/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:539:{-# RULES "Bitstream or/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:551:{-# RULES "Bitstream any/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:563:{-# RULES "Bitstream all/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:582:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:642:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:652:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:663:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:673:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:711:{-# RULES "Bitstream elem/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:734:{-# RULES "Bitstream notElem/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:758:{-# RULES "Bitstream find/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:767:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:783:{-# RULES "Bitstream (!!)/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:793:{-# RULES "Bitstream elemIndex/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:803:{-# RULES "Bitstream elemIndices/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:818:{-# RULES "Bitstream findIndex/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:828:{-# RULES "Bitstream findIndices/unstream fusion"
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:847:{-# RULES "Bitstream zip/unstream fusion" ∀s1 s2.
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:857:{-# RULES "Bitstream zip3/unstream fusion" ∀s1 s2 s3.
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:867:{-# RULES "Bitstream zip4/unstream fusion" ∀s1 s2 s3 s4.
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:877:{-# RULES "Bitstream zip5/unstream fusion" ∀s1 s2 s3 s4 s5.
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:887:{-# RULES "Bitstream zip6/unstream fusion" ∀s1 s2 s3 s4 s5 s6.
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:898:{-# RULES "Bitstream zipWith/unstream fusion" ∀f s1 s2.
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:912:{-# RULES "Bitstream zipWith3/unstream fusion" ∀f s1 s2 s3.
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:927:{-# RULES "Bitstream zipWith4/unstream fusion" ∀f s1 s2 s3 s4.
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:943:{-# RULES "Bitstream zipWith5/unstream fusion" ∀f s1 s2 s3 s4 s5.
./bitstream-0.2.0.4/Data/Bitstream/Generic.hs:960:{-# RULES "Bitstream zipWith6/unstream fusion" ∀f s1 s2 s3 s4 s5 s6.
./bitstream-0.2.0.4/Data/Bitstream/Lazy.hs:543:{-# RULES "head → lazyHead" [1]
./bitstream-0.2.0.4/Data/Bitstream/Lazy.hs:551:{-# RULES "last → lazyLast" [1]
./bitstream-0.2.0.4/Data/Bitstream/Lazy.hs:560:{-# RULES "null → lazyNull" [1] null = lazyNull #-}
./bitstream-0.2.0.4/Data/Bitstream/Lazy.hs:566:{-# RULES "length → lazyLength" [1]
./bitstream-0.2.0.4/Data/Bitstream/Lazy.hs:577:{-# RULES "and → lazyAnd" [1]
./bitstream-0.2.0.4/Data/Bitstream/Lazy.hs:587:{-# RULES "or → lazyOr" [1]
./bitstream-0.2.0.4/Data/Bitstream/Lazy.hs:603:{-# RULES "(!!) → lazyIndex" [1]
./bitstream-0.2.0.4/Data/Bitstream/Lazy.hs:688:{-# RULES
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:373:{-# RULES "head → packetHeadL" [1] head = packetHeadL #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:379:{-# RULES "head → packetHeadR" [1] head = packetHeadR #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:385:{-# RULES "last → packetLastL" [1] last = packetLastL #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:391:{-# RULES "head → packetLastR" [1] last = packetLastR #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:397:{-# RULES "and → packetAndL" [1] and = packetAndL #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:402:{-# RULES "and → packetAndR" [1] and = packetAndR #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:407:{-# RULES "(!!) → packetIndexL" [1] (!!) = packetIndexL #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:414:{-# RULES "(!!) → packetIndexR" [1] (!!) = packetIndexR #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:431:{-# RULES "null → packetNull" [1] null = packetNull #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:437:{-# RULES "length → packetLength" [1] length = packetLength #-}
./bitstream-0.2.0.4/Data/Bitstream/Packet.hs:442:{-# RULES "or → packetOr" [1] or = packetOr #-}
./bitstream-0.2.0.4/Data/Bitstream.hs:539:{-# RULES "head → strictHead" [1]
./bitstream-0.2.0.4/Data/Bitstream.hs:546:{-# RULES "last → strictLast" [1]
./bitstream-0.2.0.4/Data/Bitstream.hs:553:{-# RULES "null → strictNull" [1] null = strictNull #-}
./bitstream-0.2.0.4/Data/Bitstream.hs:559:{-# RULES "length → strictLength" [1] length = strictLength #-}
./bitstream-0.2.0.4/Data/Bitstream.hs:564:{-# RULES "and → strictAnd" [1]
./bitstream-0.2.0.4/Data/Bitstream.hs:572:{-# RULES "or → strictOr" [1]
./bitstream-0.2.0.4/Data/Bitstream.hs:580:{-# RULES "(!!) → strictIndex" [1]
./bitstream-0.2.0.4/Data/Bitstream.hs:679:{-# RULES
./blas-0.4/Data/Matrix/Dense/Operations.hs:335:{-# RULES
./blas-0.4/Data/Vector/Dense/Internal.hs:253:{-# RULES 
./blas-0.4/Data/Vector/Dense/Operations.hs:364:{-# RULES
./blas-0.4.1/Data/Matrix/Dense/Operations.hs:335:{-# RULES
./blas-0.4.1/Data/Vector/Dense/Internal.hs:253:{-# RULES 
./blas-0.4.1/Data/Vector/Dense/Operations.hs:364:{-# RULES
./blas-0.5/BLAS/Matrix/Immutable.hs:66:{-# RULES
./blas-0.5/Data/Matrix/Dense/Operations.hs:287:{-# RULES
./blas-0.5/Data/Vector/Dense/Operations.hs:169:{-# RULES "unsafeGetDot/Double" unsafeGetDot = unsafeGetDotDouble #-}
./blas-0.5/Data/Vector/Dense/Operations.hs:398:{-# RULES
./blas-0.6/BLAS/Matrix/Immutable.hs:105:{-# RULES
./blas-0.7/lib/Data/Matrix/Class/IMatrixBase.hs:153:{-# RULES
./blas-0.7/lib/Data/Matrix/Class/ISolveBase.hs:94:{-# RULES
./blas-0.7.1/lib/Data/Matrix/Class/IMatrixBase.hs:153:{-# RULES
./blas-0.7.1/lib/Data/Matrix/Class/ISolveBase.hs:94:{-# RULES
./blas-0.7.2/lib/Data/Matrix/Class/IMatrixBase.hs:153:{-# RULES
./blas-0.7.2/lib/Data/Matrix/Class/ISolveBase.hs:94:{-# RULES
./blas-0.7.5/lib/Data/Matrix/Class/IMatrixBase.hs:153:{-# RULES
./blas-0.7.5/lib/Data/Matrix/Class/ISolveBase.hs:94:{-# RULES
./blas-0.7.6/lib/Data/Matrix/Class/IMatrixBase.hs:153:{-# RULES
./blas-0.7.6/lib/Data/Matrix/Class/ISolveBase.hs:94:{-# RULES
./blaze-builder-0.2.1.0/benchmarks/LazyByteString.hs:298:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.2.1.1/benchmarks/LazyByteString.hs:298:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.2.1.2/benchmarks/LazyByteString.hs:298:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.2.1.3/benchmarks/LazyByteString.hs:298:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.2.1.4/benchmarks/LazyByteString.hs:298:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.0.0/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.0.1/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.0.2/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.1.0/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.1.1/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.2.0/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.3.0/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.3.1/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.3.2/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.3.3/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.3.3.4/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.4.0.0/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-builder-0.4.0.1/benchmarks/LazyByteString.hs:343:{-# RULES "fromWriteReplicated/writeWord8"
./blaze-textual-0.1.0.0/Blaze/Text/Int.hs:52:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.0/Blaze/Text/Int.hs:52:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.1/Blaze/Text/Int.hs:52:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-0.2.0.2/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-0.2.0.3/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-0.2.0.4/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-0.2.0.5/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-0.2.0.6/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-0.2.0.7/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-0.2.0.8/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-0.2.0.9/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:38:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:39:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:40:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:41:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:42:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:43:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:44:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:45:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:46:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:47:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-0.2.1.0/Blaze/Text/Int.hs:48:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-native-0.2.1/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:44:{-# RULES "integral/Int" integral = bounded :: Int -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:45:{-# RULES "integral/Int8" integral = bounded :: Int8 -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:46:{-# RULES "integral/Int16" integral = bounded :: Int16 -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:47:{-# RULES "integral/Int32" integral = bounded :: Int32 -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:48:{-# RULES "integral/Int64" integral = bounded :: Int64 -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:49:{-# RULES "integral/Word" integral = nonNegative :: Word -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:50:{-# RULES "integral/Word8" integral = nonNegative :: Word8 -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:51:{-# RULES "integral/Word16" integral = nonNegative :: Word16 -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:52:{-# RULES "integral/Word32" integral = nonNegative :: Word32 -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:53:{-# RULES "integral/Word64" integral = nonNegative :: Word64 -> Builder #-}
./blaze-textual-native-0.2.1.1/Blaze/Text/Int.hs:54:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./bloomfilter-1.2.0/Data/BloomFilter.hs:293:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.0/Data/BloomFilter.hs:297:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.0/Data/BloomFilter.hs:301:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.0/Data/BloomFilter.hs:305:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.0/Data/BloomFilter.hs:309:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.0/Data/BloomFilter.hs:313:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.0/Data/BloomFilter.hs:385:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.1/Data/BloomFilter.hs:293:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.1/Data/BloomFilter.hs:297:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.1/Data/BloomFilter.hs:301:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.1/Data/BloomFilter.hs:305:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.1/Data/BloomFilter.hs:309:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.1/Data/BloomFilter.hs:313:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.1/Data/BloomFilter.hs:385:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.2/Data/BloomFilter.hs:293:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.2/Data/BloomFilter.hs:297:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.2/Data/BloomFilter.hs:301:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.2/Data/BloomFilter.hs:305:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.2/Data/BloomFilter.hs:309:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.2/Data/BloomFilter.hs:313:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.2/Data/BloomFilter.hs:385:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.3/Data/BloomFilter.hs:293:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.3/Data/BloomFilter.hs:297:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.3/Data/BloomFilter.hs:301:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.3/Data/BloomFilter.hs:305:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.3/Data/BloomFilter.hs:309:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.3/Data/BloomFilter.hs:313:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.3/Data/BloomFilter.hs:385:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.4/Data/BloomFilter.hs:297:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.4/Data/BloomFilter.hs:301:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.4/Data/BloomFilter.hs:305:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.4/Data/BloomFilter.hs:309:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.4/Data/BloomFilter.hs:313:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.4/Data/BloomFilter.hs:317:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.4/Data/BloomFilter.hs:389:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.5/Data/BloomFilter.hs:297:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.5/Data/BloomFilter.hs:301:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.5/Data/BloomFilter.hs:305:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.5/Data/BloomFilter.hs:309:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.5/Data/BloomFilter.hs:313:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.5/Data/BloomFilter.hs:317:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.5/Data/BloomFilter.hs:389:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6/Data/BloomFilter.hs:297:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6/Data/BloomFilter.hs:301:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6/Data/BloomFilter.hs:305:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6/Data/BloomFilter.hs:309:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6/Data/BloomFilter.hs:313:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6/Data/BloomFilter.hs:317:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6/Data/BloomFilter.hs:389:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6.1/Data/BloomFilter.hs:297:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6.1/Data/BloomFilter.hs:301:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6.1/Data/BloomFilter.hs:305:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6.1/Data/BloomFilter.hs:309:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6.1/Data/BloomFilter.hs:313:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6.1/Data/BloomFilter.hs:317:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6.1/Data/BloomFilter.hs:389:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6.10/Data/BloomFilter.hs:303:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6.10/Data/BloomFilter.hs:307:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6.10/Data/BloomFilter.hs:311:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6.10/Data/BloomFilter.hs:315:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6.10/Data/BloomFilter.hs:319:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6.10/Data/BloomFilter.hs:323:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6.10/Data/BloomFilter.hs:396:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6.2/Data/BloomFilter.hs:297:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6.2/Data/BloomFilter.hs:301:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6.2/Data/BloomFilter.hs:305:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6.2/Data/BloomFilter.hs:309:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6.2/Data/BloomFilter.hs:313:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6.2/Data/BloomFilter.hs:317:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6.2/Data/BloomFilter.hs:389:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6.3/Data/BloomFilter.hs:302:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6.3/Data/BloomFilter.hs:306:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6.3/Data/BloomFilter.hs:310:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6.3/Data/BloomFilter.hs:314:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6.3/Data/BloomFilter.hs:318:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6.3/Data/BloomFilter.hs:322:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6.3/Data/BloomFilter.hs:394:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6.4/Data/BloomFilter.hs:308:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6.4/Data/BloomFilter.hs:312:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6.4/Data/BloomFilter.hs:316:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6.4/Data/BloomFilter.hs:320:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6.4/Data/BloomFilter.hs:324:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6.4/Data/BloomFilter.hs:328:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6.4/Data/BloomFilter.hs:400:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6.5/Data/BloomFilter.hs:308:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6.5/Data/BloomFilter.hs:312:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6.5/Data/BloomFilter.hs:316:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6.5/Data/BloomFilter.hs:320:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6.5/Data/BloomFilter.hs:324:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6.5/Data/BloomFilter.hs:328:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6.5/Data/BloomFilter.hs:400:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6.6/Data/BloomFilter.hs:308:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6.6/Data/BloomFilter.hs:312:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6.6/Data/BloomFilter.hs:316:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6.6/Data/BloomFilter.hs:320:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6.6/Data/BloomFilter.hs:324:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6.6/Data/BloomFilter.hs:328:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6.6/Data/BloomFilter.hs:400:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6.7/Data/BloomFilter.hs:303:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6.7/Data/BloomFilter.hs:307:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6.7/Data/BloomFilter.hs:311:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6.7/Data/BloomFilter.hs:315:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6.7/Data/BloomFilter.hs:319:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6.7/Data/BloomFilter.hs:323:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6.7/Data/BloomFilter.hs:396:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-1.2.6.8/Data/BloomFilter.hs:303:{-# RULES "Bloom insertB . insertB" forall a b u.
./bloomfilter-1.2.6.8/Data/BloomFilter.hs:307:{-# RULES "Bloom insertListB . insertB" forall x xs u.
./bloomfilter-1.2.6.8/Data/BloomFilter.hs:311:{-# RULES "Bloom insertB . insertListB" forall x xs u.
./bloomfilter-1.2.6.8/Data/BloomFilter.hs:315:{-# RULES "Bloom insertListB . insertListB" forall xs ys u.
./bloomfilter-1.2.6.8/Data/BloomFilter.hs:319:{-# RULES "Bloom insertListB . emptyB" forall h n xs.
./bloomfilter-1.2.6.8/Data/BloomFilter.hs:323:{-# RULES "Bloom insertListB . singletonB" forall h n x xs.
./bloomfilter-1.2.6.8/Data/BloomFilter.hs:396:{-# RULES "Bloom insertListB . fromListB" forall h n xs ys.
./bloomfilter-2.0.0.0/Data/BloomFilter.hs:229:{-# RULES "Bloom insert . insert" forall a b u.
./bloomfilter-2.0.0.0/Data/BloomFilter.hs:233:{-# RULES "Bloom insertList . insert" forall x xs u.
./bloomfilter-2.0.0.0/Data/BloomFilter.hs:237:{-# RULES "Bloom insert . insertList" forall x xs u.
./bloomfilter-2.0.0.0/Data/BloomFilter.hs:241:{-# RULES "Bloom insertList . insertList" forall xs ys u.
./bloomfilter-2.0.0.0/Data/BloomFilter.hs:245:{-# RULES "Bloom insertList . empty" forall h n xs.
./bloomfilter-2.0.0.0/Data/BloomFilter.hs:249:{-# RULES "Bloom insertList . singleton" forall h n x xs.
./bloomfilter-2.0.0.0/Data/BloomFilter.hs:303:{-# RULES "Bloom insertList . fromList" forall h n xs ys.
./bloomfilter-2.0.1.0/Data/BloomFilter.hs:229:{-# RULES "Bloom insert . insert" forall a b u.
./bloomfilter-2.0.1.0/Data/BloomFilter.hs:233:{-# RULES "Bloom insertList . insert" forall x xs u.
./bloomfilter-2.0.1.0/Data/BloomFilter.hs:237:{-# RULES "Bloom insert . insertList" forall x xs u.
./bloomfilter-2.0.1.0/Data/BloomFilter.hs:241:{-# RULES "Bloom insertList . insertList" forall xs ys u.
./bloomfilter-2.0.1.0/Data/BloomFilter.hs:245:{-# RULES "Bloom insertList . empty" forall h n xs.
./bloomfilter-2.0.1.0/Data/BloomFilter.hs:249:{-# RULES "Bloom insertList . singleton" forall h n x xs.
./bloomfilter-2.0.1.0/Data/BloomFilter.hs:303:{-# RULES "Bloom insertList . fromList" forall h n xs ys.
./bspack-0.0.3/Data/ByteString/Pack.hs:97:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./bspack-0.0.4/Data/ByteString/Pack.hs:93:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./buildable-0.1.0.0/src/Data/Buildable.hs:122:{-# RULES
./buildable-0.1.0.0/src/Data/Buildable.hs:270:{-# RULES "unbuild/SB.ByteString" forall b. LB.toStrict (B.toLazyByteString (B.byteString b)) = b #-}
./buildable-0.1.0.0/src/Data/Buildable.hs:280:{-# RULES "unbuild/LB.ByteString" forall b. B.toLazyByteString (B.lazyByteString b) = b #-}
./buildable-0.1.0.1/src/Data/Buildable.hs:122:{-# RULES
./buildable-0.1.0.1/src/Data/Buildable.hs:270:{-# RULES "unbuild/SB.ByteString" forall b. LB.toStrict (B.toLazyByteString (B.byteString b)) = b #-}
./buildable-0.1.0.1/src/Data/Buildable.hs:280:{-# RULES "unbuild/LB.ByteString" forall b. B.toLazyByteString (B.lazyByteString b) = b #-}
./buildable-0.1.0.2/src/Data/Buildable.hs:122:{-# RULES
./buildable-0.1.0.2/src/Data/Buildable.hs:270:{-# RULES "unbuild/SB.ByteString" forall b. LB.toStrict (B.toLazyByteString (B.byteString b)) = b #-}
./buildable-0.1.0.2/src/Data/Buildable.hs:280:{-# RULES "unbuild/LB.ByteString" forall b. B.toLazyByteString (B.lazyByteString b) = b #-}
./buildable-0.1.0.3/src/Data/Buildable.hs:122:{-# RULES
./buildable-0.1.0.3/src/Data/Buildable.hs:270:{-# RULES "unbuild/SB.ByteString" forall b. LB.toStrict (B.toLazyByteString (B.byteString b)) = b #-}
./buildable-0.1.0.3/src/Data/Buildable.hs:280:{-# RULES "unbuild/LB.ByteString" forall b. B.toLazyByteString (B.lazyByteString b) = b #-}
./bullet-0.2.1/Physics/Bullet/Raw/C2HS.hs:198:{-# RULES 
./bullet-0.2.2/Physics/Bullet/Raw/C2HS.hs:198:{-# RULES 
./bullet-0.2.3/Physics/Bullet/Raw/C2HS.hs:198:{-# RULES 
./bullet-0.2.4/Physics/Bullet/Raw/C2HS.hs:198:{-# RULES 
./bv-0.2.0/Data/BitVector.hs:142:{-# RULES "bitVec/Integer" bitVec = BV #-}
./bv-0.2.1/Data/BitVector.hs:142:{-# RULES "bitVec/Integer" bitVec = BV #-}
./byteable-0.1.0/Data/Byteable.hs:34:{-# RULES "constEqBytes/ByteString" constEqBytes = constEqByteString #-}
./byteable-0.1.1/Data/Byteable.hs:48:{-# RULES "constEqBytes/ByteString" constEqBytes = constEqByteString #-}
./bytestring-0.10.0.0/bench/BoundsCheckFusion.hs:113:{-# RULES
./bytestring-0.10.0.0/Data/ByteString/Char8.hs:286:{-# RULES
./bytestring-0.10.0.0/Data/ByteString/Char8.hs:506:{-# RULES
./bytestring-0.10.0.0/Data/ByteString/Char8.hs:518:{-# RULES
./bytestring-0.10.0.0/Data/ByteString/Char8.hs:721:{-# RULES
./bytestring-0.10.0.0/Data/ByteString/Char8.hs:798:{-# RULES
./bytestring-0.10.0.0/Data/ByteString/Lazy/Builder/BasicEncoding.hs:582:{-# RULES
./bytestring-0.10.0.0/Data/ByteString/Lazy/Char8.hs:590:{-# RULES
./bytestring-0.10.0.0/Data/ByteString/Lazy/Char8.hs:595:{-# RULES
./bytestring-0.10.0.0/Data/ByteString/Lazy.hs:1004:{-# RULES
./bytestring-0.10.0.0/Data/ByteString.hs:381:{-# RULES
./bytestring-0.10.0.0/Data/ByteString.hs:885:{-# RULES
./bytestring-0.10.0.0/Data/ByteString.hs:938:{-# RULES
./bytestring-0.10.0.0/Data/ByteString.hs:1104:{-# RULES
./bytestring-0.10.0.0/Data/ByteString.hs:1291:{-# RULES
./bytestring-0.10.0.0/Data/ByteString.hs:1518:{-# RULES
./bytestring-0.10.0.0/tests/Properties.hs:1246:-- And check fusion RULES.
./bytestring-0.10.0.1/bench/BoundsCheckFusion.hs:113:{-# RULES
./bytestring-0.10.0.1/Data/ByteString/Char8.hs:286:{-# RULES
./bytestring-0.10.0.1/Data/ByteString/Char8.hs:506:{-# RULES
./bytestring-0.10.0.1/Data/ByteString/Char8.hs:518:{-# RULES
./bytestring-0.10.0.1/Data/ByteString/Char8.hs:721:{-# RULES
./bytestring-0.10.0.1/Data/ByteString/Char8.hs:798:{-# RULES
./bytestring-0.10.0.1/Data/ByteString/Lazy/Builder/BasicEncoding.hs:582:{-# RULES
./bytestring-0.10.0.1/Data/ByteString/Lazy/Char8.hs:590:{-# RULES
./bytestring-0.10.0.1/Data/ByteString/Lazy/Char8.hs:595:{-# RULES
./bytestring-0.10.0.1/Data/ByteString/Lazy.hs:1004:{-# RULES
./bytestring-0.10.0.1/Data/ByteString.hs:381:{-# RULES
./bytestring-0.10.0.1/Data/ByteString.hs:885:{-# RULES
./bytestring-0.10.0.1/Data/ByteString.hs:938:{-# RULES
./bytestring-0.10.0.1/Data/ByteString.hs:1104:{-# RULES
./bytestring-0.10.0.1/Data/ByteString.hs:1291:{-# RULES
./bytestring-0.10.0.1/Data/ByteString.hs:1519:{-# RULES
./bytestring-0.10.0.1/tests/Properties.hs:1246:-- And check fusion RULES.
./bytestring-0.10.0.2/bench/BoundsCheckFusion.hs:113:{-# RULES
./bytestring-0.10.0.2/Data/ByteString/Char8.hs:289:{-# RULES
./bytestring-0.10.0.2/Data/ByteString/Char8.hs:509:{-# RULES
./bytestring-0.10.0.2/Data/ByteString/Char8.hs:521:{-# RULES
./bytestring-0.10.0.2/Data/ByteString/Char8.hs:724:{-# RULES
./bytestring-0.10.0.2/Data/ByteString/Char8.hs:801:{-# RULES
./bytestring-0.10.0.2/Data/ByteString/Lazy/Builder/BasicEncoding.hs:582:{-# RULES
./bytestring-0.10.0.2/Data/ByteString/Lazy/Char8.hs:593:{-# RULES
./bytestring-0.10.0.2/Data/ByteString/Lazy/Char8.hs:598:{-# RULES
./bytestring-0.10.0.2/Data/ByteString/Lazy.hs:1003:{-# RULES
./bytestring-0.10.0.2/Data/ByteString.hs:385:{-# RULES
./bytestring-0.10.0.2/Data/ByteString.hs:886:{-# RULES
./bytestring-0.10.0.2/Data/ByteString.hs:939:{-# RULES
./bytestring-0.10.0.2/Data/ByteString.hs:1105:{-# RULES
./bytestring-0.10.0.2/Data/ByteString.hs:1292:{-# RULES
./bytestring-0.10.0.2/Data/ByteString.hs:1520:{-# RULES
./bytestring-0.10.0.2/tests/Properties.hs:1246:-- And check fusion RULES.
./bytestring-0.10.2.0/bench/BoundsCheckFusion.hs:113:{-# RULES
./bytestring-0.10.2.0/Data/ByteString/Builder/Prim.hs:553:{-# RULES
./bytestring-0.10.2.0/Data/ByteString/Char8.hs:291:{-# RULES
./bytestring-0.10.2.0/Data/ByteString/Char8.hs:519:{-# RULES
./bytestring-0.10.2.0/Data/ByteString/Char8.hs:531:{-# RULES
./bytestring-0.10.2.0/Data/ByteString/Char8.hs:734:{-# RULES
./bytestring-0.10.2.0/Data/ByteString/Char8.hs:811:{-# RULES
./bytestring-0.10.2.0/Data/ByteString/Lazy/Char8.hs:602:{-# RULES
./bytestring-0.10.2.0/Data/ByteString/Lazy/Char8.hs:607:{-# RULES
./bytestring-0.10.2.0/Data/ByteString/Lazy.hs:1013:{-# RULES
./bytestring-0.10.2.0/Data/ByteString.hs:382:{-# RULES
./bytestring-0.10.2.0/Data/ByteString.hs:896:{-# RULES
./bytestring-0.10.2.0/Data/ByteString.hs:949:{-# RULES
./bytestring-0.10.2.0/Data/ByteString.hs:1115:{-# RULES
./bytestring-0.10.2.0/Data/ByteString.hs:1302:{-# RULES
./bytestring-0.10.2.0/Data/ByteString.hs:1530:{-# RULES
./bytestring-0.10.2.0/tests/Properties.hs:1252:-- And check fusion RULES.
./bytestring-0.10.4.0/Data/ByteString/Builder/Internal.hs:520:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Builder/Internal.hs:536:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Builder/Internal.hs:553:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Char8.hs:510:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Char8.hs:522:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Char8.hs:725:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Char8.hs:802:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Internal.hs:247:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Lazy/Char8.hs:602:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Lazy/Char8.hs:607:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Lazy.hs:1012:{-# RULES
./bytestring-0.10.4.0/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-0.10.4.0/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-0.10.4.0/Data/ByteString.hs:385:{-# RULES
./bytestring-0.10.4.0/Data/ByteString.hs:911:{-# RULES
./bytestring-0.10.4.0/Data/ByteString.hs:964:{-# RULES
./bytestring-0.10.4.0/Data/ByteString.hs:1130:{-# RULES
./bytestring-0.10.4.0/Data/ByteString.hs:1317:{-# RULES
./bytestring-0.10.4.0/Data/ByteString.hs:1545:{-# RULES
./bytestring-0.10.4.0/tests/Properties.hs:1258:-- And check fusion RULES.
./bytestring-0.10.4.1/Data/ByteString/Builder/Internal.hs:520:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Builder/Internal.hs:536:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Builder/Internal.hs:553:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Char8.hs:510:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Char8.hs:522:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Char8.hs:725:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Char8.hs:802:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Internal.hs:247:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Lazy/Char8.hs:602:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Lazy/Char8.hs:607:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Lazy.hs:1024:{-# RULES
./bytestring-0.10.4.1/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-0.10.4.1/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-0.10.4.1/Data/ByteString.hs:385:{-# RULES
./bytestring-0.10.4.1/Data/ByteString.hs:911:{-# RULES
./bytestring-0.10.4.1/Data/ByteString.hs:964:{-# RULES
./bytestring-0.10.4.1/Data/ByteString.hs:1130:{-# RULES
./bytestring-0.10.4.1/Data/ByteString.hs:1317:{-# RULES
./bytestring-0.10.4.1/Data/ByteString.hs:1545:{-# RULES
./bytestring-0.10.4.1/tests/Properties.hs:1258:-- And check fusion RULES.
./bytestring-0.10.6.0/Data/ByteString/Builder/Internal.hs:527:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Builder/Internal.hs:543:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Builder/Internal.hs:560:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Char8.hs:506:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Char8.hs:518:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Char8.hs:721:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Char8.hs:798:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Internal.hs:243:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Lazy/Char8.hs:597:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Lazy/Char8.hs:602:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Lazy.hs:992:{-# RULES
./bytestring-0.10.6.0/Data/ByteString/Short/Internal.hs:536:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-0.10.6.0/Data/ByteString/Short/Internal.hs:557:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-0.10.6.0/Data/ByteString.hs:375:{-# RULES
./bytestring-0.10.6.0/Data/ByteString.hs:894:{-# RULES
./bytestring-0.10.6.0/Data/ByteString.hs:949:{-# RULES
./bytestring-0.10.6.0/Data/ByteString.hs:1080:{-# RULES
./bytestring-0.10.6.0/Data/ByteString.hs:1235:{-# RULES
./bytestring-0.10.6.0/Data/ByteString.hs:1414:{-# RULES
./bytestring-0.9/Data/ByteString/Char8.hs:305:{-# RULES
./bytestring-0.9/Data/ByteString/Char8.hs:775:{-# RULES
./bytestring-0.9/Data/ByteString/Char8.hs:802:{-# RULES
./bytestring-0.9/Data/ByteString/Fusion.hs:99:--   and loop; we give them special names to make it easier to trigger RULES
./bytestring-0.9/Data/ByteString/Fusion.hs:234:{-# RULES
./bytestring-0.9/Data/ByteString/Fusion.hs:261:{-# RULES
./bytestring-0.9/Data/ByteString/Fusion.hs:279:Note that this stuff needs ghc-6.5 from May 26 or later for the RULES to
./bytestring-0.9/Data/ByteString/Fusion.hs:399:  -- since we can't be sure how the RULES will combine loops.
./bytestring-0.9/Data/ByteString/Fusion.hs:431:{-# RULES
./bytestring-0.9/Data/ByteString.hs:459:{-# RULES
./bytestring-0.9/Data/ByteString.hs:492:{-# RULES
./bytestring-0.9/Data/ByteString.hs:807:{-# RULES
./bytestring-0.9/Data/ByteString.hs:995:{-# RULES
./bytestring-0.9/Data/ByteString.hs:1001:{-# RULES
./bytestring-0.9/Data/ByteString.hs:1049:{-# RULES
./bytestring-0.9/Data/ByteString.hs:1055:{-# RULES
./bytestring-0.9/Data/ByteString.hs:1225:{-# RULES
./bytestring-0.9/Data/ByteString.hs:1427:{-# RULES
./bytestring-0.9/Data/ByteString.hs:1433:{-# RULES
./bytestring-0.9/Data/ByteString.hs:1600:{-# RULES
./bytestring-0.9.0.1/Data/ByteString/Char8.hs:305:{-# RULES
./bytestring-0.9.0.1/Data/ByteString/Char8.hs:775:{-# RULES
./bytestring-0.9.0.1/Data/ByteString/Char8.hs:802:{-# RULES
./bytestring-0.9.0.1/Data/ByteString/Fusion.hs:99:--   and loop; we give them special names to make it easier to trigger RULES
./bytestring-0.9.0.1/Data/ByteString/Fusion.hs:234:{-# RULES
./bytestring-0.9.0.1/Data/ByteString/Fusion.hs:261:{-# RULES
./bytestring-0.9.0.1/Data/ByteString/Fusion.hs:279:Note that this stuff needs ghc-6.5 from May 26 or later for the RULES to
./bytestring-0.9.0.1/Data/ByteString/Fusion.hs:399:  -- since we can't be sure how the RULES will combine loops.
./bytestring-0.9.0.1/Data/ByteString/Fusion.hs:431:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:459:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:492:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:807:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:995:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:1001:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:1049:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:1055:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:1225:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:1427:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:1433:{-# RULES
./bytestring-0.9.0.1/Data/ByteString.hs:1600:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Char8.hs:305:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Char8.hs:719:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Char8.hs:724:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Char8.hs:798:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Char8.hs:825:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Fusion.hs:99:--   and loop; we give them special names to make it easier to trigger RULES
./bytestring-0.9.0.2/Data/ByteString/Fusion.hs:234:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Fusion.hs:261:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Fusion.hs:279:Note that this stuff needs ghc-6.5 from May 26 or later for the RULES to
./bytestring-0.9.0.2/Data/ByteString/Fusion.hs:399:  -- since we can't be sure how the RULES will combine loops.
./bytestring-0.9.0.2/Data/ByteString/Fusion.hs:431:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Lazy/Char8.hs:581:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Lazy/Char8.hs:586:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Lazy.hs:1043:{-# RULES
./bytestring-0.9.0.2/Data/ByteString/Lazy.hs:1048:{-# RULES
./bytestring-0.9.0.2/Data/ByteString.hs:459:{-# RULES
./bytestring-0.9.0.2/Data/ByteString.hs:925:{-# RULES
./bytestring-0.9.0.2/Data/ByteString.hs:977:{-# RULES
./bytestring-0.9.0.2/Data/ByteString.hs:1148:{-# RULES
./bytestring-0.9.0.2/Data/ByteString.hs:1336:{-# RULES
./bytestring-0.9.0.2/Data/ByteString.hs:1341:{-# RULES
./bytestring-0.9.0.2/Data/ByteString.hs:1507:{-# RULES
./bytestring-0.9.0.2/tests/Properties.hs:882:-- And check fusion RULES.
./bytestring-0.9.0.3/Data/ByteString/Char8.hs:305:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Char8.hs:719:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Char8.hs:724:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Char8.hs:798:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Char8.hs:825:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Fusion.hs:99:--   and loop; we give them special names to make it easier to trigger RULES
./bytestring-0.9.0.3/Data/ByteString/Fusion.hs:234:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Fusion.hs:261:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Fusion.hs:279:Note that this stuff needs ghc-6.5 from May 26 or later for the RULES to
./bytestring-0.9.0.3/Data/ByteString/Fusion.hs:399:  -- since we can't be sure how the RULES will combine loops.
./bytestring-0.9.0.3/Data/ByteString/Fusion.hs:431:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Lazy/Char8.hs:581:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Lazy/Char8.hs:586:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Lazy.hs:1043:{-# RULES
./bytestring-0.9.0.3/Data/ByteString/Lazy.hs:1048:{-# RULES
./bytestring-0.9.0.3/Data/ByteString.hs:459:{-# RULES
./bytestring-0.9.0.3/Data/ByteString.hs:925:{-# RULES
./bytestring-0.9.0.3/Data/ByteString.hs:977:{-# RULES
./bytestring-0.9.0.3/Data/ByteString.hs:1148:{-# RULES
./bytestring-0.9.0.3/Data/ByteString.hs:1336:{-# RULES
./bytestring-0.9.0.3/Data/ByteString.hs:1341:{-# RULES
./bytestring-0.9.0.3/Data/ByteString.hs:1507:{-# RULES
./bytestring-0.9.0.3/tests/Properties.hs:882:-- And check fusion RULES.
./bytestring-0.9.0.4/Data/ByteString/Char8.hs:315:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Char8.hs:729:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Char8.hs:734:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Char8.hs:808:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Char8.hs:835:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Fusion.hs:99:--   and loop; we give them special names to make it easier to trigger RULES
./bytestring-0.9.0.4/Data/ByteString/Fusion.hs:234:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Fusion.hs:261:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Fusion.hs:279:Note that this stuff needs ghc-6.5 from May 26 or later for the RULES to
./bytestring-0.9.0.4/Data/ByteString/Fusion.hs:399:  -- since we can't be sure how the RULES will combine loops.
./bytestring-0.9.0.4/Data/ByteString/Fusion.hs:431:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Lazy/Char8.hs:591:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Lazy/Char8.hs:596:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Lazy.hs:1043:{-# RULES
./bytestring-0.9.0.4/Data/ByteString/Lazy.hs:1048:{-# RULES
./bytestring-0.9.0.4/Data/ByteString.hs:459:{-# RULES
./bytestring-0.9.0.4/Data/ByteString.hs:925:{-# RULES
./bytestring-0.9.0.4/Data/ByteString.hs:977:{-# RULES
./bytestring-0.9.0.4/Data/ByteString.hs:1148:{-# RULES
./bytestring-0.9.0.4/Data/ByteString.hs:1336:{-# RULES
./bytestring-0.9.0.4/Data/ByteString.hs:1341:{-# RULES
./bytestring-0.9.0.4/Data/ByteString.hs:1507:{-# RULES
./bytestring-0.9.0.4/tests/Properties.hs:882:-- And check fusion RULES.
./bytestring-0.9.1.0/Data/ByteString/Char8.hs:317:{-# RULES
./bytestring-0.9.1.0/Data/ByteString/Char8.hs:534:{-# RULES
./bytestring-0.9.1.0/Data/ByteString/Char8.hs:546:{-# RULES
./bytestring-0.9.1.0/Data/ByteString/Char8.hs:749:{-# RULES
./bytestring-0.9.1.0/Data/ByteString/Char8.hs:826:{-# RULES
./bytestring-0.9.1.0/Data/ByteString/Lazy/Char8.hs:585:{-# RULES
./bytestring-0.9.1.0/Data/ByteString/Lazy/Char8.hs:590:{-# RULES
./bytestring-0.9.1.0/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.0/Data/ByteString.hs:452:{-# RULES
./bytestring-0.9.1.0/Data/ByteString.hs:963:{-# RULES
./bytestring-0.9.1.0/Data/ByteString.hs:1016:{-# RULES
./bytestring-0.9.1.0/Data/ByteString.hs:1181:{-# RULES
./bytestring-0.9.1.0/Data/ByteString.hs:1368:{-# RULES
./bytestring-0.9.1.0/Data/ByteString.hs:1598:{-# RULES
./bytestring-0.9.1.0/tests/Properties.hs:1199:-- And check fusion RULES.
./bytestring-0.9.1.1/Data/ByteString/Char8.hs:317:{-# RULES
./bytestring-0.9.1.1/Data/ByteString/Char8.hs:534:{-# RULES
./bytestring-0.9.1.1/Data/ByteString/Char8.hs:546:{-# RULES
./bytestring-0.9.1.1/Data/ByteString/Char8.hs:749:{-# RULES
./bytestring-0.9.1.1/Data/ByteString/Char8.hs:826:{-# RULES
./bytestring-0.9.1.1/Data/ByteString/Lazy/Char8.hs:585:{-# RULES
./bytestring-0.9.1.1/Data/ByteString/Lazy/Char8.hs:590:{-# RULES
./bytestring-0.9.1.1/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.1/Data/ByteString.hs:452:{-# RULES
./bytestring-0.9.1.1/Data/ByteString.hs:963:{-# RULES
./bytestring-0.9.1.1/Data/ByteString.hs:1016:{-# RULES
./bytestring-0.9.1.1/Data/ByteString.hs:1181:{-# RULES
./bytestring-0.9.1.1/Data/ByteString.hs:1368:{-# RULES
./bytestring-0.9.1.1/Data/ByteString.hs:1598:{-# RULES
./bytestring-0.9.1.1/tests/Properties.hs:1199:-- And check fusion RULES.
./bytestring-0.9.1.10/Data/ByteString/Char8.hs:318:{-# RULES
./bytestring-0.9.1.10/Data/ByteString/Char8.hs:535:{-# RULES
./bytestring-0.9.1.10/Data/ByteString/Char8.hs:549:{-# RULES
./bytestring-0.9.1.10/Data/ByteString/Char8.hs:753:{-# RULES
./bytestring-0.9.1.10/Data/ByteString/Char8.hs:830:{-# RULES
./bytestring-0.9.1.10/Data/ByteString/Lazy/Char8.hs:584:{-# RULES
./bytestring-0.9.1.10/Data/ByteString/Lazy/Char8.hs:589:{-# RULES
./bytestring-0.9.1.10/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.10/Data/ByteString.hs:481:{-# RULES
./bytestring-0.9.1.10/Data/ByteString.hs:994:{-# RULES
./bytestring-0.9.1.10/Data/ByteString.hs:1050:{-# RULES
./bytestring-0.9.1.10/Data/ByteString.hs:1217:{-# RULES
./bytestring-0.9.1.10/Data/ByteString.hs:1404:{-# RULES
./bytestring-0.9.1.10/Data/ByteString.hs:1631:{-# RULES
./bytestring-0.9.1.2/Data/ByteString/Char8.hs:317:{-# RULES
./bytestring-0.9.1.2/Data/ByteString/Char8.hs:534:{-# RULES
./bytestring-0.9.1.2/Data/ByteString/Char8.hs:546:{-# RULES
./bytestring-0.9.1.2/Data/ByteString/Char8.hs:749:{-# RULES
./bytestring-0.9.1.2/Data/ByteString/Char8.hs:826:{-# RULES
./bytestring-0.9.1.2/Data/ByteString/Lazy/Char8.hs:585:{-# RULES
./bytestring-0.9.1.2/Data/ByteString/Lazy/Char8.hs:590:{-# RULES
./bytestring-0.9.1.2/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.2/Data/ByteString.hs:452:{-# RULES
./bytestring-0.9.1.2/Data/ByteString.hs:963:{-# RULES
./bytestring-0.9.1.2/Data/ByteString.hs:1016:{-# RULES
./bytestring-0.9.1.2/Data/ByteString.hs:1181:{-# RULES
./bytestring-0.9.1.2/Data/ByteString.hs:1368:{-# RULES
./bytestring-0.9.1.2/Data/ByteString.hs:1598:{-# RULES
./bytestring-0.9.1.2/tests/Properties.hs:1199:-- And check fusion RULES.
./bytestring-0.9.1.3/Data/ByteString/Char8.hs:317:{-# RULES
./bytestring-0.9.1.3/Data/ByteString/Char8.hs:534:{-# RULES
./bytestring-0.9.1.3/Data/ByteString/Char8.hs:546:{-# RULES
./bytestring-0.9.1.3/Data/ByteString/Char8.hs:749:{-# RULES
./bytestring-0.9.1.3/Data/ByteString/Char8.hs:826:{-# RULES
./bytestring-0.9.1.3/Data/ByteString/Lazy/Char8.hs:584:{-# RULES
./bytestring-0.9.1.3/Data/ByteString/Lazy/Char8.hs:589:{-# RULES
./bytestring-0.9.1.3/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.3/Data/ByteString.hs:452:{-# RULES
./bytestring-0.9.1.3/Data/ByteString.hs:963:{-# RULES
./bytestring-0.9.1.3/Data/ByteString.hs:1016:{-# RULES
./bytestring-0.9.1.3/Data/ByteString.hs:1181:{-# RULES
./bytestring-0.9.1.3/Data/ByteString.hs:1368:{-# RULES
./bytestring-0.9.1.3/Data/ByteString.hs:1598:{-# RULES
./bytestring-0.9.1.3/tests/Properties.hs:1199:-- And check fusion RULES.
./bytestring-0.9.1.4/Data/ByteString/Char8.hs:321:{-# RULES
./bytestring-0.9.1.4/Data/ByteString/Char8.hs:538:{-# RULES
./bytestring-0.9.1.4/Data/ByteString/Char8.hs:552:{-# RULES
./bytestring-0.9.1.4/Data/ByteString/Char8.hs:756:{-# RULES
./bytestring-0.9.1.4/Data/ByteString/Char8.hs:833:{-# RULES
./bytestring-0.9.1.4/Data/ByteString/Lazy/Char8.hs:585:{-# RULES
./bytestring-0.9.1.4/Data/ByteString/Lazy/Char8.hs:590:{-# RULES
./bytestring-0.9.1.4/Data/ByteString/Lazy.hs:1029:{-# RULES
./bytestring-0.9.1.4/Data/ByteString.hs:456:{-# RULES
./bytestring-0.9.1.4/Data/ByteString.hs:969:{-# RULES
./bytestring-0.9.1.4/Data/ByteString.hs:1025:{-# RULES
./bytestring-0.9.1.4/Data/ByteString.hs:1191:{-# RULES
./bytestring-0.9.1.4/Data/ByteString.hs:1378:{-# RULES
./bytestring-0.9.1.4/Data/ByteString.hs:1608:{-# RULES
./bytestring-0.9.1.4/tests/Properties.hs:1199:-- And check fusion RULES.
./bytestring-0.9.1.5/Data/ByteString/Char8.hs:318:{-# RULES
./bytestring-0.9.1.5/Data/ByteString/Char8.hs:535:{-# RULES
./bytestring-0.9.1.5/Data/ByteString/Char8.hs:549:{-# RULES
./bytestring-0.9.1.5/Data/ByteString/Char8.hs:753:{-# RULES
./bytestring-0.9.1.5/Data/ByteString/Char8.hs:830:{-# RULES
./bytestring-0.9.1.5/Data/ByteString/Lazy/Char8.hs:584:{-# RULES
./bytestring-0.9.1.5/Data/ByteString/Lazy/Char8.hs:589:{-# RULES
./bytestring-0.9.1.5/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.5/Data/ByteString.hs:466:{-# RULES
./bytestring-0.9.1.5/Data/ByteString.hs:979:{-# RULES
./bytestring-0.9.1.5/Data/ByteString.hs:1035:{-# RULES
./bytestring-0.9.1.5/Data/ByteString.hs:1202:{-# RULES
./bytestring-0.9.1.5/Data/ByteString.hs:1389:{-# RULES
./bytestring-0.9.1.5/Data/ByteString.hs:1616:{-# RULES
./bytestring-0.9.1.6/Data/ByteString/Char8.hs:318:{-# RULES
./bytestring-0.9.1.6/Data/ByteString/Char8.hs:535:{-# RULES
./bytestring-0.9.1.6/Data/ByteString/Char8.hs:549:{-# RULES
./bytestring-0.9.1.6/Data/ByteString/Char8.hs:753:{-# RULES
./bytestring-0.9.1.6/Data/ByteString/Char8.hs:830:{-# RULES
./bytestring-0.9.1.6/Data/ByteString/Lazy/Char8.hs:584:{-# RULES
./bytestring-0.9.1.6/Data/ByteString/Lazy/Char8.hs:589:{-# RULES
./bytestring-0.9.1.6/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.6/Data/ByteString.hs:466:{-# RULES
./bytestring-0.9.1.6/Data/ByteString.hs:979:{-# RULES
./bytestring-0.9.1.6/Data/ByteString.hs:1035:{-# RULES
./bytestring-0.9.1.6/Data/ByteString.hs:1202:{-# RULES
./bytestring-0.9.1.6/Data/ByteString.hs:1389:{-# RULES
./bytestring-0.9.1.6/Data/ByteString.hs:1616:{-# RULES
./bytestring-0.9.1.7/Data/ByteString/Char8.hs:318:{-# RULES
./bytestring-0.9.1.7/Data/ByteString/Char8.hs:535:{-# RULES
./bytestring-0.9.1.7/Data/ByteString/Char8.hs:549:{-# RULES
./bytestring-0.9.1.7/Data/ByteString/Char8.hs:753:{-# RULES
./bytestring-0.9.1.7/Data/ByteString/Char8.hs:830:{-# RULES
./bytestring-0.9.1.7/Data/ByteString/Lazy/Char8.hs:584:{-# RULES
./bytestring-0.9.1.7/Data/ByteString/Lazy/Char8.hs:589:{-# RULES
./bytestring-0.9.1.7/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.7/Data/ByteString.hs:466:{-# RULES
./bytestring-0.9.1.7/Data/ByteString.hs:979:{-# RULES
./bytestring-0.9.1.7/Data/ByteString.hs:1035:{-# RULES
./bytestring-0.9.1.7/Data/ByteString.hs:1202:{-# RULES
./bytestring-0.9.1.7/Data/ByteString.hs:1389:{-# RULES
./bytestring-0.9.1.7/Data/ByteString.hs:1616:{-# RULES
./bytestring-0.9.1.8/Data/ByteString/Char8.hs:318:{-# RULES
./bytestring-0.9.1.8/Data/ByteString/Char8.hs:535:{-# RULES
./bytestring-0.9.1.8/Data/ByteString/Char8.hs:549:{-# RULES
./bytestring-0.9.1.8/Data/ByteString/Char8.hs:753:{-# RULES
./bytestring-0.9.1.8/Data/ByteString/Char8.hs:830:{-# RULES
./bytestring-0.9.1.8/Data/ByteString/Lazy/Char8.hs:584:{-# RULES
./bytestring-0.9.1.8/Data/ByteString/Lazy/Char8.hs:589:{-# RULES
./bytestring-0.9.1.8/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.8/Data/ByteString.hs:471:{-# RULES
./bytestring-0.9.1.8/Data/ByteString.hs:984:{-# RULES
./bytestring-0.9.1.8/Data/ByteString.hs:1040:{-# RULES
./bytestring-0.9.1.8/Data/ByteString.hs:1207:{-# RULES
./bytestring-0.9.1.8/Data/ByteString.hs:1394:{-# RULES
./bytestring-0.9.1.8/Data/ByteString.hs:1621:{-# RULES
./bytestring-0.9.1.9/Data/ByteString/Char8.hs:318:{-# RULES
./bytestring-0.9.1.9/Data/ByteString/Char8.hs:535:{-# RULES
./bytestring-0.9.1.9/Data/ByteString/Char8.hs:549:{-# RULES
./bytestring-0.9.1.9/Data/ByteString/Char8.hs:753:{-# RULES
./bytestring-0.9.1.9/Data/ByteString/Char8.hs:830:{-# RULES
./bytestring-0.9.1.9/Data/ByteString/Lazy/Char8.hs:584:{-# RULES
./bytestring-0.9.1.9/Data/ByteString/Lazy/Char8.hs:589:{-# RULES
./bytestring-0.9.1.9/Data/ByteString/Lazy.hs:1028:{-# RULES
./bytestring-0.9.1.9/Data/ByteString.hs:480:{-# RULES
./bytestring-0.9.1.9/Data/ByteString.hs:993:{-# RULES
./bytestring-0.9.1.9/Data/ByteString.hs:1049:{-# RULES
./bytestring-0.9.1.9/Data/ByteString.hs:1216:{-# RULES
./bytestring-0.9.1.9/Data/ByteString.hs:1403:{-# RULES
./bytestring-0.9.1.9/Data/ByteString.hs:1630:{-# RULES
./bytestring-0.9.2.0/Data/ByteString/Char8.hs:319:{-# RULES
./bytestring-0.9.2.0/Data/ByteString/Char8.hs:536:{-# RULES
./bytestring-0.9.2.0/Data/ByteString/Char8.hs:548:{-# RULES
./bytestring-0.9.2.0/Data/ByteString/Char8.hs:751:{-# RULES
./bytestring-0.9.2.0/Data/ByteString/Char8.hs:828:{-# RULES
./bytestring-0.9.2.0/Data/ByteString/Lazy/Char8.hs:587:{-# RULES
./bytestring-0.9.2.0/Data/ByteString/Lazy/Char8.hs:592:{-# RULES
./bytestring-0.9.2.0/Data/ByteString/Lazy.hs:1029:{-# RULES
./bytestring-0.9.2.0/Data/ByteString.hs:482:{-# RULES
./bytestring-0.9.2.0/Data/ByteString.hs:993:{-# RULES
./bytestring-0.9.2.0/Data/ByteString.hs:1046:{-# RULES
./bytestring-0.9.2.0/Data/ByteString.hs:1212:{-# RULES
./bytestring-0.9.2.0/Data/ByteString.hs:1399:{-# RULES
./bytestring-0.9.2.0/Data/ByteString.hs:1626:{-# RULES
./bytestring-0.9.2.0/tests/Properties.hs:1244:-- And check fusion RULES.
./bytestring-0.9.2.1/Data/ByteString/Char8.hs:322:{-# RULES
./bytestring-0.9.2.1/Data/ByteString/Char8.hs:539:{-# RULES
./bytestring-0.9.2.1/Data/ByteString/Char8.hs:551:{-# RULES
./bytestring-0.9.2.1/Data/ByteString/Char8.hs:754:{-# RULES
./bytestring-0.9.2.1/Data/ByteString/Char8.hs:831:{-# RULES
./bytestring-0.9.2.1/Data/ByteString/Lazy/Char8.hs:590:{-# RULES
./bytestring-0.9.2.1/Data/ByteString/Lazy/Char8.hs:595:{-# RULES
./bytestring-0.9.2.1/Data/ByteString/Lazy.hs:1032:{-# RULES
./bytestring-0.9.2.1/Data/ByteString.hs:485:{-# RULES
./bytestring-0.9.2.1/Data/ByteString.hs:996:{-# RULES
./bytestring-0.9.2.1/Data/ByteString.hs:1049:{-# RULES
./bytestring-0.9.2.1/Data/ByteString.hs:1215:{-# RULES
./bytestring-0.9.2.1/Data/ByteString.hs:1402:{-# RULES
./bytestring-0.9.2.1/Data/ByteString.hs:1629:{-# RULES
./bytestring-0.9.2.1/tests/Properties.hs:1244:-- And check fusion RULES.
./bytestring-builder-0.10.4.0/src/Data/ByteString/Builder/Internal.hs:520:{-# RULES
./bytestring-builder-0.10.4.0/src/Data/ByteString/Builder/Internal.hs:536:{-# RULES
./bytestring-builder-0.10.4.0/src/Data/ByteString/Builder/Internal.hs:553:{-# RULES
./bytestring-builder-0.10.4.0/src/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-builder-0.10.4.0/src/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-builder-0.10.4.0/src/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-builder-0.10.4.0.1/src/Data/ByteString/Builder/Internal.hs:520:{-# RULES
./bytestring-builder-0.10.4.0.1/src/Data/ByteString/Builder/Internal.hs:536:{-# RULES
./bytestring-builder-0.10.4.0.1/src/Data/ByteString/Builder/Internal.hs:553:{-# RULES
./bytestring-builder-0.10.4.0.1/src/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-builder-0.10.4.0.1/src/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-builder-0.10.4.0.1/src/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-builder-0.10.4.0.2/src/Data/ByteString/Builder/Internal.hs:520:{-# RULES
./bytestring-builder-0.10.4.0.2/src/Data/ByteString/Builder/Internal.hs:536:{-# RULES
./bytestring-builder-0.10.4.0.2/src/Data/ByteString/Builder/Internal.hs:553:{-# RULES
./bytestring-builder-0.10.4.0.2/src/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-builder-0.10.4.0.2/src/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-builder-0.10.4.0.2/src/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-builder-0.10.4.1.0/src/Data/ByteString/Builder/Internal.hs:520:{-# RULES
./bytestring-builder-0.10.4.1.0/src/Data/ByteString/Builder/Internal.hs:536:{-# RULES
./bytestring-builder-0.10.4.1.0/src/Data/ByteString/Builder/Internal.hs:553:{-# RULES
./bytestring-builder-0.10.4.1.0/src/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-builder-0.10.4.1.0/src/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-builder-0.10.4.1.0/src/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-builder-0.10.4.1.1/src/Data/ByteString/Builder/Internal.hs:520:{-# RULES
./bytestring-builder-0.10.4.1.1/src/Data/ByteString/Builder/Internal.hs:536:{-# RULES
./bytestring-builder-0.10.4.1.1/src/Data/ByteString/Builder/Internal.hs:553:{-# RULES
./bytestring-builder-0.10.4.1.1/src/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-builder-0.10.4.1.1/src/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-builder-0.10.4.1.1/src/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-builder-0.10.4.1.2/src/Data/ByteString/Builder/Internal.hs:520:{-# RULES
./bytestring-builder-0.10.4.1.2/src/Data/ByteString/Builder/Internal.hs:536:{-# RULES
./bytestring-builder-0.10.4.1.2/src/Data/ByteString/Builder/Internal.hs:553:{-# RULES
./bytestring-builder-0.10.4.1.2/src/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-builder-0.10.4.1.2/src/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-builder-0.10.4.1.2/src/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-builder-0.10.6.0.0/src/Data/ByteString/Builder/Internal.hs:527:{-# RULES
./bytestring-builder-0.10.6.0.0/src/Data/ByteString/Builder/Internal.hs:543:{-# RULES
./bytestring-builder-0.10.6.0.0/src/Data/ByteString/Builder/Internal.hs:560:{-# RULES
./bytestring-builder-0.10.6.0.0/src/Data/ByteString/Builder/Prim.hs:556:{-# RULES
./bytestring-builder-0.10.6.0.0/src/Data/ByteString/Short/Internal.hs:536:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-builder-0.10.6.0.0/src/Data/ByteString/Short/Internal.hs:557:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-short-0.0.1.0/src/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-short-0.0.1.0/src/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./bytestring-short-0.1.0.0/src/Data/ByteString/Short/Internal.hs:533:{-# RULES "copyAddrToByteArray# dst_off=0"
./bytestring-short-0.1.0.0/src/Data/ByteString/Short/Internal.hs:554:{-# RULES "copyByteArrayToAddr# src_off=0"
./c2hs-0.15.0/C2HS.hs:197:{-# RULES 
./c2hs-0.15.1/C2HS.hs:197:{-# RULES 
./c2hs-0.16.0/C2HS.hs:197:{-# RULES 
./c2hs-0.16.2/C2HS.hs:197:{-# RULES 
./caledon-2.0.0.0/AST.hs:307:{-# RULES
./caledon-2.0.0.0/AST.hs:311:{-# RULES
./caledon-2.1.0.0/AST.hs:308:{-# RULES
./caledon-2.1.0.0/AST.hs:312:{-# RULES
./caledon-2.1.1.0/AST.hs:308:{-# RULES
./caledon-2.1.1.0/AST.hs:312:{-# RULES
./caledon-3.0.0.0/AST.hs:320:{-# RULES
./caledon-3.0.0.0/AST.hs:324:{-# RULES
./caledon-3.1.0.0/AST.hs:178:{-# RULES
./caledon-3.1.0.0/AST.hs:182:{-# RULES
./caledon-3.2.0.0/AST.hs:178:{-# RULES
./caledon-3.2.0.0/AST.hs:182:{-# RULES
./caledon-3.2.1.0/AST.hs:178:{-# RULES
./caledon-3.2.1.0/AST.hs:182:{-# RULES
./capped-list-1.0/Data/CappedList.hs:108:{-# RULES
./capped-list-1.0/Data/CappedList.hs:121:{-# RULES
./capped-list-1.1/Data/CappedList.hs:108:{-# RULES
./capped-list-1.1/Data/CappedList.hs:121:{-# RULES
./capped-list-1.2/Data/CappedList.hs:164:{-# RULES
./capped-list-1.2/Data/CappedList.hs:177:{-# RULES
./caramia-0.1.0.0/src/Caramia/Shader.hs:482:-- these are for RULES firing
./caramia-0.1.0.0/src/Caramia/Shader.hs:502:{-# RULES "transpose/glProgramUniformMatrix3fv" forall (a :: Matrix33) b c.
./caramia-0.1.0.0/src/Caramia/Shader.hs:506:{-# RULES "transpose/glProgramUniformMatrix4fv" forall (a :: Matrix44) b c.
./caramia-0.2.0.0/src/Graphics/Caramia/Shader.hs:511:-- these are for RULES firing
./caramia-0.2.0.0/src/Graphics/Caramia/Shader.hs:531:{-# RULES "transpose/glProgramUniformMatrix3fv" forall (a :: Matrix33) b c.
./caramia-0.2.0.0/src/Graphics/Caramia/Shader.hs:535:{-# RULES "transpose/glProgramUniformMatrix4fv" forall (a :: Matrix44) b c.
./caramia-0.2.0.1/src/Graphics/Caramia/Shader.hs:511:-- these are for RULES firing
./caramia-0.2.0.1/src/Graphics/Caramia/Shader.hs:531:{-# RULES "transpose/glProgramUniformMatrix3fv" forall (a :: Matrix33) b c.
./caramia-0.2.0.1/src/Graphics/Caramia/Shader.hs:535:{-# RULES "transpose/glProgramUniformMatrix4fv" forall (a :: Matrix44) b c.
./caramia-0.3.0.0/src/Graphics/Caramia/Shader.hs:511:-- these are for RULES firing
./caramia-0.3.0.0/src/Graphics/Caramia/Shader.hs:531:{-# RULES "transpose/glProgramUniformMatrix3fv" forall (a :: Matrix33) b c.
./caramia-0.3.0.0/src/Graphics/Caramia/Shader.hs:535:{-# RULES "transpose/glProgramUniformMatrix4fv" forall (a :: Matrix44) b c.
./caramia-0.3.0.1/src/Graphics/Caramia/Shader.hs:511:-- these are for RULES firing
./caramia-0.3.0.1/src/Graphics/Caramia/Shader.hs:531:{-# RULES "transpose/glProgramUniformMatrix3fv" forall (a :: Matrix33) b c.
./caramia-0.3.0.1/src/Graphics/Caramia/Shader.hs:535:{-# RULES "transpose/glProgramUniformMatrix4fv" forall (a :: Matrix44) b c.
./caramia-0.4.0.0/src/Graphics/Caramia/Shader.hs:512:-- these are for RULES firing
./caramia-0.4.0.0/src/Graphics/Caramia/Shader.hs:532:{-# RULES "transpose/glProgramUniformMatrix3fv" forall (a :: Matrix33) b c.
./caramia-0.4.0.0/src/Graphics/Caramia/Shader.hs:536:{-# RULES "transpose/glProgramUniformMatrix4fv" forall (a :: Matrix44) b c.
./carray-0.1.0.0/Data/Array/CArray/Base.hs:139:{-# RULES
./carray-0.1.0.0/Data/Array/CArray/Base.hs:146:{-# RULES
./carray-0.1.0.0/Data/Array/CArray/Base.hs:250:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.1/Data/Array/CArray/Base.hs:138:{-# RULES
./carray-0.1.1/Data/Array/CArray/Base.hs:145:{-# RULES
./carray-0.1.1/Data/Array/CArray/Base.hs:249:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.2/Data/Array/CArray/Base.hs:172:{-# RULES
./carray-0.1.2/Data/Array/CArray/Base.hs:179:{-# RULES
./carray-0.1.2/Data/Array/CArray/Base.hs:283:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.3/Data/Array/CArray/Base.hs:177:{-# RULES
./carray-0.1.3/Data/Array/CArray/Base.hs:184:{-# RULES
./carray-0.1.3/Data/Array/CArray/Base.hs:288:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.4/Data/Array/CArray/Base.hs:178:{-# RULES
./carray-0.1.4/Data/Array/CArray/Base.hs:185:{-# RULES
./carray-0.1.4/Data/Array/CArray/Base.hs:289:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.5/Data/Array/CArray/Base.hs:177:{-# RULES
./carray-0.1.5/Data/Array/CArray/Base.hs:184:{-# RULES
./carray-0.1.5/Data/Array/CArray/Base.hs:288:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.5.1/Data/Array/CArray/Base.hs:178:{-# RULES
./carray-0.1.5.1/Data/Array/CArray/Base.hs:185:{-# RULES
./carray-0.1.5.1/Data/Array/CArray/Base.hs:289:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.5.2/Data/Array/CArray/Base.hs:180:{-# RULES
./carray-0.1.5.2/Data/Array/CArray/Base.hs:187:{-# RULES
./carray-0.1.5.2/Data/Array/CArray/Base.hs:288:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.6/src/Data/Array/CArray/Base.hs:195:{-# RULES
./carray-0.1.6/src/Data/Array/CArray/Base.hs:202:{-# RULES
./carray-0.1.6/src/Data/Array/CArray/Base.hs:301:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.6.1/src/Data/Array/CArray/Base.hs:195:{-# RULES
./carray-0.1.6.1/src/Data/Array/CArray/Base.hs:202:{-# RULES
./carray-0.1.6.1/src/Data/Array/CArray/Base.hs:301:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.6.2/src/Data/Array/CArray/Base.hs:195:{-# RULES
./carray-0.1.6.2/src/Data/Array/CArray/Base.hs:202:{-# RULES
./carray-0.1.6.2/src/Data/Array/CArray/Base.hs:301:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./carray-0.1.6.3/src/Data/Array/CArray/Base.hs:200:{-# RULES
./carray-0.1.6.3/src/Data/Array/CArray/Base.hs:207:{-# RULES
./carray-0.1.6.3/src/Data/Array/CArray/Base.hs:306:{-# RULES "cmpCArray/Int" cmpCArray = cmpIntCArray #-}
./case-insensitive-1.0/Data/CaseInsensitive.hs:166:-- Rewrite RULES
./case-insensitive-1.0/Data/CaseInsensitive.hs:169:{-# RULES
./case-insensitive-1.0.0.1/Data/CaseInsensitive.hs:171:-- Rewrite RULES
./case-insensitive-1.0.0.1/Data/CaseInsensitive.hs:174:{-# RULES
./case-insensitive-1.0.0.2/Data/CaseInsensitive.hs:171:-- Rewrite RULES
./case-insensitive-1.0.0.2/Data/CaseInsensitive.hs:174:{-# RULES
./case-insensitive-1.1/Data/CaseInsensitive/Internal.hs:175:-- Rewrite RULES
./case-insensitive-1.1/Data/CaseInsensitive/Internal.hs:178:{-# RULES
./case-insensitive-1.1.0.1/Data/CaseInsensitive/Internal.hs:175:-- Rewrite RULES
./case-insensitive-1.1.0.1/Data/CaseInsensitive/Internal.hs:178:{-# RULES "mk/ByteString" forall (bs :: B.ByteString). mk bs = CI bs (foldCaseBS bs) #-}
./case-insensitive-1.1.0.2/Data/CaseInsensitive/Internal.hs:175:-- Rewrite RULES
./case-insensitive-1.1.0.2/Data/CaseInsensitive/Internal.hs:178:{-# RULES "mk/ByteString" forall (bs :: B.ByteString). mk bs = CI bs (foldCaseBS bs) #-}
./case-insensitive-1.1.0.3/Data/CaseInsensitive/Internal.hs:175:-- Rewrite RULES
./case-insensitive-1.1.0.3/Data/CaseInsensitive/Internal.hs:178:{-# RULES "mk/ByteString" forall (bs :: B.ByteString). mk bs = CI bs (foldCaseBS bs) #-}
./case-insensitive-1.2.0.0/Data/CaseInsensitive/Internal.hs:176:-- Rewrite RULES
./case-insensitive-1.2.0.0/Data/CaseInsensitive/Internal.hs:179:{-# RULES "mk/ByteString" forall (bs :: B.ByteString). mk bs = CI bs (foldCaseBS bs) #-}
./case-insensitive-1.2.0.1/Data/CaseInsensitive/Internal.hs:177:-- Rewrite RULES
./case-insensitive-1.2.0.1/Data/CaseInsensitive/Internal.hs:180:{-# RULES "foldCase/ByteString" foldCase = foldCaseBS #-}
./case-insensitive-1.2.0.2/Data/CaseInsensitive/Internal.hs:177:-- Rewrite RULES
./case-insensitive-1.2.0.2/Data/CaseInsensitive/Internal.hs:180:{-# RULES "foldCase/ByteString" foldCase = foldCaseBS #-}
./case-insensitive-1.2.0.3/Data/CaseInsensitive/Internal.hs:177:-- Rewrite RULES
./case-insensitive-1.2.0.3/Data/CaseInsensitive/Internal.hs:180:{-# RULES "foldCase/ByteString" foldCase = foldCaseBS #-}
./case-insensitive-1.2.0.4/Data/CaseInsensitive/Internal.hs:177:-- Rewrite RULES
./case-insensitive-1.2.0.4/Data/CaseInsensitive/Internal.hs:180:{-# RULES "foldCase/ByteString" foldCase = foldCaseBS #-}
./case-insensitive-1.2.0.5/Data/CaseInsensitive/Internal.hs:177:-- Rewrite RULES
./case-insensitive-1.2.0.5/Data/CaseInsensitive/Internal.hs:180:{-# RULES "foldCase/ByteString" foldCase = foldCaseBS #-}
./cash-0.1.0.0/src/Math/ComputerAlgebra/Cash/SCSCP_API.hs:74:{-# RULES "notrace" forall a b. trace a b = b #-}
./cash-0.1.0.1/src/Math/ComputerAlgebra/Cash/SCSCP_API.hs:74:{-# RULES "notrace" forall a b. trace a b = b #-}
./cassava-0.1.0.0/Data/Csv/Conversion/Internal.hs:27:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.1.0.0/Data/Csv/Conversion/Internal.hs:29:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.1.0.0/Data/Csv/Conversion/Internal.hs:31:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.1.0.0/Data/Csv/Conversion/Internal.hs:33:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.1.0.0/Data/Csv/Conversion/Internal.hs:35:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.1.0.0/Data/Csv/Conversion/Internal.hs:37:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.1.0.0/Data/Csv/Conversion/Internal.hs:39:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.1.0.0/Data/Csv/Conversion/Internal.hs:41:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.1.0.0/Data/Csv/Conversion/Internal.hs:43:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.1.0.0/Data/Csv/Encoding.hs:90:{-# RULES
./cassava-0.1.0.1/Data/Csv/Conversion/Internal.hs:27:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.1.0.1/Data/Csv/Conversion/Internal.hs:29:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.1.0.1/Data/Csv/Conversion/Internal.hs:31:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.1.0.1/Data/Csv/Conversion/Internal.hs:33:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.1.0.1/Data/Csv/Conversion/Internal.hs:35:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.1.0.1/Data/Csv/Conversion/Internal.hs:37:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.1.0.1/Data/Csv/Conversion/Internal.hs:39:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.1.0.1/Data/Csv/Conversion/Internal.hs:41:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.1.0.1/Data/Csv/Conversion/Internal.hs:43:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.1.0.1/Data/Csv/Encoding.hs:90:{-# RULES
./cassava-0.2.0.0/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.2.0.0/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.2.0.0/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.2.0.0/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.2.0.0/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.2.0.0/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.2.0.0/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.2.0.0/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.2.0.0/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.2.0.0/Data/Csv/Encoding.hs:115:{-# RULES
./cassava-0.2.1.0/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.2.1.0/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.2.1.0/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.2.1.0/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.2.1.0/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.2.1.0/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.2.1.0/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.2.1.0/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.2.1.0/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.2.1.0/Data/Csv/Encoding.hs:115:{-# RULES
./cassava-0.2.1.1/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.2.1.1/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.2.1.1/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.2.1.1/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.2.1.1/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.2.1.1/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.2.1.1/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.2.1.1/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.2.1.1/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.2.1.1/Data/Csv/Encoding.hs:115:{-# RULES
./cassava-0.2.1.2/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.2.1.2/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.2.1.2/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.2.1.2/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.2.1.2/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.2.1.2/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.2.1.2/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.2.1.2/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.2.1.2/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.2.1.2/Data/Csv/Encoding.hs:116:{-# RULES
./cassava-0.2.2.0/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.2.2.0/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.2.2.0/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.2.2.0/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.2.2.0/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.2.2.0/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.2.2.0/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.2.2.0/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.2.2.0/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.2.2.0/Data/Csv/Encoding.hs:108:{-# RULES
./cassava-0.3.0.0/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.3.0.0/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.3.0.0/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.3.0.0/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.3.0.0/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.3.0.0/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.3.0.0/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.3.0.0/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.3.0.0/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.3.0.0/Data/Csv/Encoding.hs:109:{-# RULES
./cassava-0.3.0.1/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.3.0.1/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.3.0.1/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.3.0.1/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.3.0.1/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.3.0.1/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.3.0.1/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.3.0.1/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.3.0.1/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.3.0.1/Data/Csv/Encoding.hs:109:{-# RULES
./cassava-0.4.0.0/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.0.0/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.0.0/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.0.0/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.0.0/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.0.0/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.0.0/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.0.0/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.0.0/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.0.0/Data/Csv/Encoding.hs:109:{-# RULES
./cassava-0.4.1.0/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.1.0/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.1.0/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.1.0/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.1.0/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.1.0/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.1.0/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.1.0/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.1.0/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.1.0/Data/Csv/Encoding.hs:109:{-# RULES
./cassava-0.4.2.0/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.2.0/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.2.0/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.2.0/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.2.0/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.2.0/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.2.0/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.2.0/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.2.0/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.2.0/Data/Csv/Encoding.hs:109:{-# RULES
./cassava-0.4.2.1/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.2.1/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.2.1/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.2.1/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.2.1/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.2.1/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.2.1/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.2.1/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.2.1/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.2.1/Data/Csv/Encoding.hs:109:{-# RULES
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:27:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:29:{-# RULES "formatDecimal/Int8" formatDecimal = formatBoundedSigned
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:31:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:33:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:35:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:37:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:39:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:41:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:43:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.2.2/Data/Csv/Conversion/Internal.hs:45:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.2.2/Data/Csv/Encoding.hs:113:{-# RULES
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:27:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:29:{-# RULES "formatDecimal/Int8" formatDecimal = formatBoundedSigned
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:31:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:33:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:35:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:37:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:39:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:41:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:43:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.2.3/Data/Csv/Conversion/Internal.hs:45:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.2.3/Data/Csv/Encoding.hs:113:{-# RULES
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:27:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:29:{-# RULES "formatDecimal/Int8" formatDecimal = formatBoundedSigned
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:31:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:33:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:35:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:37:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:39:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:41:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:43:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.2.4/Data/Csv/Conversion/Internal.hs:45:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.2.4/Data/Csv/Encoding.hs:113:{-# RULES
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:27:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:29:{-# RULES "formatDecimal/Int8" formatDecimal = formatBoundedSigned
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:31:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:33:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:35:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:37:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:39:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:41:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:43:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.3.0/Data/Csv/Conversion/Internal.hs:45:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.3.0/Data/Csv/Encoding.hs:129:{-# RULES
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:27:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:29:{-# RULES "formatDecimal/Int8" formatDecimal = formatBoundedSigned
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:31:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:33:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:35:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:37:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:39:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:41:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:43:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.3.1/Data/Csv/Conversion/Internal.hs:45:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.3.1/Data/Csv/Encoding.hs:129:{-# RULES
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:27:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:29:{-# RULES "formatDecimal/Int8" formatDecimal = formatBoundedSigned
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:31:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:33:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:35:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:37:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:39:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:41:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:43:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.4.0/Data/Csv/Conversion/Internal.hs:45:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.4.0/Data/Csv/Encoding.hs:129:{-# RULES
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:26:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int8" formatDecimal = formatBoundedSigned
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./cassava-0.4.5.0/Data/Csv/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cassava-0.4.5.0/Data/Csv/Encoding.hs:125:{-# RULES
./categories-0.54.0/Control/Category/Associative.hs:37:{-# RULES
./categories-0.54.0/Control/Category/Braided.hs:43:{-# RULES
./categories-0.54.0/Control/Category/Braided.hs:58:{-# RULES
./categories-0.54.0/Control/Category/Cartesian/Closed.hs:47:{-# RULES
./categories-0.54.0/Control/Category/Cartesian/Closed.hs:79:{-# RULES
./categories-0.54.0/Control/Category/Cartesian.hs:64:{-# RULES
./categories-0.54.0/Control/Category/Cartesian.hs:122:{-# RULES
./categories-0.54.0/Control/Category/Distributive.hs:51:{-# RULES
./categories-0.54.0/Control/Category/Monoidal.hs:68:{-# RULES
./categories-0.54.1/Control/Category/Associative.hs:37:{-# RULES
./categories-0.54.1/Control/Category/Braided.hs:43:{-# RULES
./categories-0.54.1/Control/Category/Braided.hs:58:{-# RULES
./categories-0.54.1/Control/Category/Cartesian/Closed.hs:47:{-# RULES
./categories-0.54.1/Control/Category/Cartesian/Closed.hs:79:{-# RULES
./categories-0.54.1/Control/Category/Cartesian.hs:64:{-# RULES
./categories-0.54.1/Control/Category/Cartesian.hs:122:{-# RULES
./categories-0.54.1/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.54.1/Control/Category/Monoidal.hs:68:{-# RULES
./categories-0.55.0/Control/Category/Associative.hs:37:{-# RULES
./categories-0.55.0/Control/Category/Braided.hs:43:{-# RULES
./categories-0.55.0/Control/Category/Braided.hs:58:{-# RULES
./categories-0.55.0/Control/Category/Cartesian/Closed.hs:47:{-# RULES
./categories-0.55.0/Control/Category/Cartesian/Closed.hs:79:{-# RULES
./categories-0.55.0/Control/Category/Cartesian.hs:64:{-# RULES
./categories-0.55.0/Control/Category/Cartesian.hs:122:{-# RULES
./categories-0.55.0/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.55.0/Control/Category/Monoidal.hs:68:{-# RULES
./categories-0.55.1/Control/Category/Associative.hs:37:{-- RULES
./categories-0.55.1/Control/Category/Braided.hs:43:{- RULES
./categories-0.55.1/Control/Category/Braided.hs:58:{-- RULES
./categories-0.55.1/Control/Category/Cartesian/Closed.hs:47:{-# RULES
./categories-0.55.1/Control/Category/Cartesian/Closed.hs:79:{-# RULES
./categories-0.55.1/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.55.1/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.55.1/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.55.1/Control/Category/Monoidal.hs:68:{-- RULES
./categories-0.55.2/Control/Category/Associative.hs:37:{-- RULES
./categories-0.55.2/Control/Category/Braided.hs:43:{- RULES
./categories-0.55.2/Control/Category/Braided.hs:58:{-- RULES
./categories-0.55.2/Control/Category/Cartesian/Closed.hs:47:{-# RULES
./categories-0.55.2/Control/Category/Cartesian/Closed.hs:79:{-# RULES
./categories-0.55.2/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.55.2/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.55.2/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.55.2/Control/Category/Monoidal.hs:68:{-- RULES
./categories-0.56.0/Control/Category/Associative.hs:37:{-- RULES
./categories-0.56.0/Control/Category/Braided.hs:49:{- RULES
./categories-0.56.0/Control/Category/Braided.hs:64:{-- RULES
./categories-0.56.0/Control/Category/Cartesian/Closed.hs:47:{-# RULES
./categories-0.56.0/Control/Category/Cartesian/Closed.hs:79:{-# RULES
./categories-0.56.0/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.56.0/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.56.0/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.56.0/Control/Category/Monoidal.hs:68:{-- RULES
./categories-0.57.0/Control/Category/Associative.hs:37:{-- RULES
./categories-0.57.0/Control/Category/Braided.hs:49:{- RULES
./categories-0.57.0/Control/Category/Braided.hs:64:{-- RULES
./categories-0.57.0/Control/Category/Cartesian/Closed.hs:54:{-# RULES
./categories-0.57.0/Control/Category/Cartesian/Closed.hs:86:{-# RULES
./categories-0.57.0/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.57.0/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.57.0/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.57.0/Control/Category/Monoidal.hs:66:{-- RULES
./categories-0.58.0/Control/Category/Associative.hs:37:{-- RULES
./categories-0.58.0/Control/Category/Braided.hs:49:{- RULES
./categories-0.58.0/Control/Category/Braided.hs:64:{-- RULES
./categories-0.58.0/Control/Category/Cartesian/Closed.hs:54:{-# RULES
./categories-0.58.0/Control/Category/Cartesian/Closed.hs:86:{-# RULES
./categories-0.58.0/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.58.0/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.58.0/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.58.0/Control/Category/Monoidal.hs:65:{-- RULES
./categories-0.58.0.1/Control/Category/Associative.hs:37:{-- RULES
./categories-0.58.0.1/Control/Category/Braided.hs:49:{- RULES
./categories-0.58.0.1/Control/Category/Braided.hs:64:{-- RULES
./categories-0.58.0.1/Control/Category/Cartesian/Closed.hs:54:{-# RULES
./categories-0.58.0.1/Control/Category/Cartesian/Closed.hs:86:{-# RULES
./categories-0.58.0.1/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.58.0.1/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.58.0.1/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.58.0.1/Control/Category/Monoidal.hs:65:{-- RULES
./categories-0.58.0.3/Control/Category/Associative.hs:37:{-- RULES
./categories-0.58.0.3/Control/Category/Braided.hs:49:{- RULES
./categories-0.58.0.3/Control/Category/Braided.hs:64:{-- RULES
./categories-0.58.0.3/Control/Category/Cartesian/Closed.hs:54:{-# RULES
./categories-0.58.0.3/Control/Category/Cartesian/Closed.hs:86:{-# RULES
./categories-0.58.0.3/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.58.0.3/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.58.0.3/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.58.0.3/Control/Category/Monoidal.hs:65:{-- RULES
./categories-0.58.0.4/Control/Category/Associative.hs:37:{-- RULES
./categories-0.58.0.4/Control/Category/Braided.hs:49:{- RULES
./categories-0.58.0.4/Control/Category/Braided.hs:64:{-- RULES
./categories-0.58.0.4/Control/Category/Cartesian/Closed.hs:54:{-# RULES
./categories-0.58.0.4/Control/Category/Cartesian/Closed.hs:86:{-# RULES
./categories-0.58.0.4/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.58.0.4/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.58.0.4/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.58.0.4/Control/Category/Monoidal.hs:65:{-- RULES
./categories-0.58.0.5/Control/Category/Associative.hs:37:{-- RULES
./categories-0.58.0.5/Control/Category/Braided.hs:49:{- RULES
./categories-0.58.0.5/Control/Category/Braided.hs:64:{-- RULES
./categories-0.58.0.5/Control/Category/Cartesian/Closed.hs:54:{-# RULES
./categories-0.58.0.5/Control/Category/Cartesian/Closed.hs:86:{-# RULES
./categories-0.58.0.5/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.58.0.5/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.58.0.5/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.58.0.5/Control/Category/Monoidal.hs:65:{-- RULES
./categories-0.59/Control/Category/Associative.hs:37:{-- RULES
./categories-0.59/Control/Category/Braided.hs:49:{- RULES
./categories-0.59/Control/Category/Braided.hs:64:{-- RULES
./categories-0.59/Control/Category/Cartesian/Closed.hs:54:{-# RULES
./categories-0.59/Control/Category/Cartesian/Closed.hs:86:{-# RULES
./categories-0.59/Control/Category/Cartesian.hs:64:{-- RULES
./categories-0.59/Control/Category/Cartesian.hs:122:{-- RULES
./categories-0.59/Control/Category/Distributive.hs:53:{-# RULES
./categories-0.59/Control/Category/Monoidal.hs:65:{-- RULES
./categories-1.0/Control/Category/Associative.hs:31:{-- RULES
./categories-1.0/Control/Category/Braided.hs:49:{- RULES
./categories-1.0/Control/Category/Braided.hs:64:{-- RULES
./categories-1.0/Control/Category/Cartesian/Closed.hs:49:{-# RULES
./categories-1.0/Control/Category/Cartesian/Closed.hs:74:{-# RULES
./categories-1.0/Control/Category/Cartesian.hs:48:{-- RULES
./categories-1.0/Control/Category/Cartesian.hs:91:{-- RULES
./categories-1.0/Control/Category/Distributive.hs:39:{-# RULES
./categories-1.0/Control/Category/Monoidal.hs:67:{-- RULES
./categories-1.0.0.1/Control/Category/Associative.hs:31:{-- RULES
./categories-1.0.0.1/Control/Category/Braided.hs:49:{- RULES
./categories-1.0.0.1/Control/Category/Braided.hs:64:{-- RULES
./categories-1.0.0.1/Control/Category/Cartesian/Closed.hs:49:{-# RULES
./categories-1.0.0.1/Control/Category/Cartesian/Closed.hs:74:{-# RULES
./categories-1.0.0.1/Control/Category/Cartesian.hs:48:{-- RULES
./categories-1.0.0.1/Control/Category/Cartesian.hs:91:{-- RULES
./categories-1.0.0.1/Control/Category/Distributive.hs:39:{-# RULES
./categories-1.0.0.1/Control/Category/Monoidal.hs:67:{-- RULES
./categories-1.0.1/Control/Category/Associative.hs:31:{-- RULES
./categories-1.0.1/Control/Category/Braided.hs:49:{- RULES
./categories-1.0.1/Control/Category/Braided.hs:64:{-- RULES
./categories-1.0.1/Control/Category/Cartesian/Closed.hs:49:{-# RULES
./categories-1.0.1/Control/Category/Cartesian/Closed.hs:74:{-# RULES
./categories-1.0.1/Control/Category/Cartesian.hs:48:{-- RULES
./categories-1.0.1/Control/Category/Cartesian.hs:91:{-- RULES
./categories-1.0.1/Control/Category/Distributive.hs:39:{-# RULES
./categories-1.0.1/Control/Category/Monoidal.hs:67:{-- RULES
./categories-1.0.2/Control/Category/Associative.hs:31:{-- RULES
./categories-1.0.2/Control/Category/Braided.hs:49:{- RULES
./categories-1.0.2/Control/Category/Braided.hs:64:{-- RULES
./categories-1.0.2/Control/Category/Cartesian/Closed.hs:49:{-# RULES
./categories-1.0.2/Control/Category/Cartesian/Closed.hs:74:{-# RULES
./categories-1.0.2/Control/Category/Cartesian.hs:48:{-- RULES
./categories-1.0.2/Control/Category/Cartesian.hs:91:{-- RULES
./categories-1.0.2/Control/Category/Distributive.hs:39:{-# RULES
./categories-1.0.2/Control/Category/Monoidal.hs:67:{-- RULES
./categories-1.0.3/Control/Category/Associative.hs:31:{-- RULES
./categories-1.0.3/Control/Category/Braided.hs:49:{- RULES
./categories-1.0.3/Control/Category/Braided.hs:64:{-- RULES
./categories-1.0.3/Control/Category/Cartesian/Closed.hs:49:{-# RULES
./categories-1.0.3/Control/Category/Cartesian/Closed.hs:74:{-# RULES
./categories-1.0.3/Control/Category/Cartesian.hs:48:{-- RULES
./categories-1.0.3/Control/Category/Cartesian.hs:91:{-- RULES
./categories-1.0.3/Control/Category/Distributive.hs:39:{-# RULES
./categories-1.0.3/Control/Category/Monoidal.hs:67:{-- RULES
./categories-1.0.4/Control/Category/Associative.hs:31:{-- RULES
./categories-1.0.4/Control/Category/Braided.hs:49:{- RULES
./categories-1.0.4/Control/Category/Braided.hs:64:{-- RULES
./categories-1.0.4/Control/Category/Cartesian/Closed.hs:49:{-# RULES
./categories-1.0.4/Control/Category/Cartesian/Closed.hs:74:{-# RULES
./categories-1.0.4/Control/Category/Cartesian.hs:48:{-- RULES
./categories-1.0.4/Control/Category/Cartesian.hs:91:{-- RULES
./categories-1.0.4/Control/Category/Distributive.hs:39:{-# RULES
./categories-1.0.4/Control/Category/Monoidal.hs:67:{-- RULES
./categories-1.0.5/src/Control/Category/Associative.hs:31:{-- RULES
./categories-1.0.5/src/Control/Category/Braided.hs:49:{- RULES
./categories-1.0.5/src/Control/Category/Braided.hs:64:{-- RULES
./categories-1.0.5/src/Control/Category/Cartesian/Closed.hs:49:{-# RULES
./categories-1.0.5/src/Control/Category/Cartesian/Closed.hs:74:{-# RULES
./categories-1.0.5/src/Control/Category/Cartesian.hs:48:{-- RULES
./categories-1.0.5/src/Control/Category/Cartesian.hs:91:{-- RULES
./categories-1.0.5/src/Control/Category/Distributive.hs:39:{-# RULES
./categories-1.0.5/src/Control/Category/Monoidal.hs:67:{-- RULES
./categories-1.0.6/src/Control/Category/Associative.hs:35:{-- RULES
./categories-1.0.6/src/Control/Category/Braided.hs:53:{-- RULES
./categories-1.0.6/src/Control/Category/Braided.hs:68:{-- RULES
./categories-1.0.6/src/Control/Category/Cartesian/Closed.hs:53:{-# RULES
./categories-1.0.6/src/Control/Category/Cartesian/Closed.hs:78:{-# RULES
./categories-1.0.6/src/Control/Category/Cartesian.hs:52:{-- RULES
./categories-1.0.6/src/Control/Category/Cartesian.hs:95:{-- RULES
./categories-1.0.6/src/Control/Category/Distributive.hs:42:{-- RULES
./categories-1.0.6/src/Control/Category/Monoidal.hs:67:{-- RULES
./categories-1.0.7/src/Control/Category/Associative.hs:35:{-- RULES
./categories-1.0.7/src/Control/Category/Braided.hs:53:{-- RULES
./categories-1.0.7/src/Control/Category/Braided.hs:68:{-- RULES
./categories-1.0.7/src/Control/Category/Cartesian/Closed.hs:53:{-# RULES
./categories-1.0.7/src/Control/Category/Cartesian/Closed.hs:78:{-# RULES
./categories-1.0.7/src/Control/Category/Cartesian.hs:52:{-- RULES
./categories-1.0.7/src/Control/Category/Cartesian.hs:95:{-- RULES
./categories-1.0.7/src/Control/Category/Distributive.hs:42:{-- RULES
./categories-1.0.7/src/Control/Category/Monoidal.hs:67:{-- RULES
./category-extras-0.44.1/src/Control/Bifunctor/Associative.hs:34:{-# RULES
./category-extras-0.44.1/src/Control/Bifunctor/Braided.hs:41:{-# RULES
./category-extras-0.44.1/src/Control/Bifunctor/Monoidal.hs:58:{-# RULES
./category-extras-0.44.1/src/Control/Comonad/Parameterized/Class.hs:34:{-# RULES
./category-extras-0.44.1/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.44.1/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.44.1/src/Control/Functor/Pointed.hs:23:{-# RULES
./category-extras-0.44.1/src/Control/Functor/Representable.hs:20:{-# RULES
./category-extras-0.44.2/src/Control/Bifunctor/Associative.hs:38:{-# RULES
./category-extras-0.44.2/src/Control/Bifunctor/Braided.hs:45:{-# RULES
./category-extras-0.44.2/src/Control/Bifunctor/Monoidal.hs:64:{-# RULES
./category-extras-0.44.2/src/Control/Comonad/Parameterized.hs:41:{-# RULES
./category-extras-0.44.2/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.44.2/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.44.2/src/Control/Functor/Pointed/Indexed.hs:35:{-# RULES
./category-extras-0.44.2/src/Control/Functor/Pointed/Parameterized.hs:23:{-# RULES
./category-extras-0.44.2/src/Control/Functor/Pointed.hs:28:{-# RULES
./category-extras-0.44.2/src/Control/Functor/Representable.hs:20:{-# RULES
./category-extras-0.44.4/src/Control/Bifunctor/Associative.hs:38:{-# RULES
./category-extras-0.44.4/src/Control/Bifunctor/Braided.hs:45:{-# RULES
./category-extras-0.44.4/src/Control/Bifunctor/Monoidal.hs:64:{-# RULES
./category-extras-0.44.4/src/Control/Bifunctor/Pointed.hs:26:{-# RULES
./category-extras-0.44.4/src/Control/Comonad/Parameterized.hs:35:{-# RULES
./category-extras-0.44.4/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.44.4/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.44.4/src/Control/Functor/HigherOrder.hs:57:{-# RULES
./category-extras-0.44.4/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.44.4/src/Control/Functor/Pointed.hs:27:{-# RULES
./category-extras-0.44.4/src/Control/Functor/Representable.hs:20:{-# RULES
./category-extras-0.50.1/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.50.1/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.50.1/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.50.1/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.50.1/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.50.1/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.50.1/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.50.1/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.50.1/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.50.1/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.50.1/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.50.1/src/Control/Functor/HigherOrder.hs:57:{-# RULES
./category-extras-0.50.1/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.50.1/src/Control/Functor/Pointed.hs:33:{-# RULES
./category-extras-0.50.1/src/Control/Functor/Pointed.hs:63:{-# RULES
./category-extras-0.50.1/src/Control/Functor/Representable.hs:20:{-# RULES
./category-extras-0.50.3/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.50.3/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.50.3/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.50.3/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.50.3/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.50.3/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.50.3/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.50.3/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.50.3/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.50.3/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.50.3/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.50.3/src/Control/Functor/HigherOrder.hs:57:{-# RULES
./category-extras-0.50.3/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.50.3/src/Control/Functor/Pointed.hs:33:{-# RULES
./category-extras-0.50.3/src/Control/Functor/Pointed.hs:63:{-# RULES
./category-extras-0.50.3/src/Control/Functor/Representable.hs:20:{-# RULES
./category-extras-0.51.0/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.51.0/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.51.0/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.51.0/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.51.0/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.51.0/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.51.0/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.51.0/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.51.0/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.51.0/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.51.0/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.51.0/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.51.0/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.51.0/src/Control/Functor/Pointed.hs:33:{-# RULES
./category-extras-0.51.0/src/Control/Functor/Pointed.hs:63:{-# RULES
./category-extras-0.51.0/src/Control/Functor/Representable.hs:20:{-# RULES
./category-extras-0.51.2/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.51.2/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.51.2/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.51.2/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.51.2/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.51.2/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.51.2/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.51.2/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.51.2/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.51.2/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.51.2/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.51.2/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.51.2/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.51.2/src/Control/Functor/Pointed.hs:33:{-# RULES
./category-extras-0.51.2/src/Control/Functor/Pointed.hs:63:{-# RULES
./category-extras-0.51.2/src/Control/Functor/Representable.hs:20:{-# RULES
./category-extras-0.51.3/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.51.3/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.51.3/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.51.3/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.51.3/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.51.3/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.51.3/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.51.3/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.51.3/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.51.3/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.51.3/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.51.3/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.51.3/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.51.3/src/Control/Functor/Pointed.hs:33:{-# RULES
./category-extras-0.51.3/src/Control/Functor/Pointed.hs:63:{-# RULES
./category-extras-0.51.3/src/Control/Functor/Representable.hs:20:{-# RULES
./category-extras-0.52.0/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.52.0/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.52.0/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.52.0/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.52.0/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.52.0/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.52.0/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.52.0/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.52.0/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.52.0/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.52.0/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.52.0/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.52.0/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.52.0/src/Control/Functor/Pointed.hs:34:{-# RULES
./category-extras-0.52.0/src/Control/Functor/Pointed.hs:64:{-# RULES
./category-extras-0.52.0/src/Control/Functor/Representable.hs:22:{-# RULES
./category-extras-0.52.1/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.52.1/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.52.1/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.52.1/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.52.1/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.52.1/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.52.1/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.52.1/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.52.1/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.52.1/src/Control/Functor/Full.hs:27:{-# RULES
./category-extras-0.52.1/src/Control/Functor/Full.hs:46:{-# RULES
./category-extras-0.52.1/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.52.1/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.52.1/src/Control/Functor/Pointed.hs:34:{-# RULES
./category-extras-0.52.1/src/Control/Functor/Pointed.hs:64:{-# RULES
./category-extras-0.52.1/src/Control/Functor/Representable.hs:22:{-# RULES
./category-extras-0.52.3/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.52.3/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.52.3/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.52.3/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.52.3/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.52.3/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.52.3/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.52.3/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.52.3/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.52.3/src/Control/Functor/Full.hs:30:{-# RULES
./category-extras-0.52.3/src/Control/Functor/Full.hs:50:{-# RULES
./category-extras-0.52.3/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.52.3/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.52.3/src/Control/Functor/Internal/Adjunction.hs:161:{-# RULES
./category-extras-0.52.3/src/Control/Functor/Pointed.hs:34:{-# RULES
./category-extras-0.52.3/src/Control/Functor/Pointed.hs:64:{-# RULES
./category-extras-0.53.0/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.53.0/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.53.0/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.53.0/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.53.0/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.53.0/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.53.0/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.53.0/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.53.0/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.53.0/src/Control/Functor/Full.hs:30:{-# RULES
./category-extras-0.53.0/src/Control/Functor/Full.hs:50:{-# RULES
./category-extras-0.53.0/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.53.0/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.53.0/src/Control/Functor/Internal/Adjunction.hs:161:{-# RULES
./category-extras-0.53.0/src/Control/Functor/Pointed.hs:34:{-# RULES
./category-extras-0.53.0/src/Control/Functor/Pointed.hs:64:{-# RULES
./category-extras-0.53.1/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.53.1/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.53.1/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.53.1/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.53.1/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.53.1/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.53.1/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.53.1/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.53.1/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.53.1/src/Control/Functor/Full.hs:30:{-# RULES
./category-extras-0.53.1/src/Control/Functor/Full.hs:50:{-# RULES
./category-extras-0.53.1/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.53.1/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.53.1/src/Control/Functor/Internal/Adjunction.hs:161:{-# RULES
./category-extras-0.53.1/src/Control/Functor/Pointed.hs:34:{-# RULES
./category-extras-0.53.1/src/Control/Functor/Pointed.hs:64:{-# RULES
./category-extras-0.53.3/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.53.3/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.53.3/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.53.3/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.53.3/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.53.3/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.53.3/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.53.3/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.53.3/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.53.3/src/Control/Functor/Full.hs:30:{-# RULES
./category-extras-0.53.3/src/Control/Functor/Full.hs:50:{-# RULES
./category-extras-0.53.3/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.53.3/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.53.3/src/Control/Functor/Internal/Adjunction.hs:161:{-# RULES
./category-extras-0.53.3/src/Control/Functor/Pointed.hs:34:{-# RULES
./category-extras-0.53.3/src/Control/Functor/Pointed.hs:64:{-# RULES
./category-extras-0.53.4/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.53.4/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.53.4/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.53.4/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.53.4/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.53.4/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.53.4/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.53.4/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.53.4/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.53.4/src/Control/Functor/Full.hs:30:{-# RULES
./category-extras-0.53.4/src/Control/Functor/Full.hs:50:{-# RULES
./category-extras-0.53.4/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.53.4/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.53.4/src/Control/Functor/Internal/Adjunction.hs:161:{-# RULES
./category-extras-0.53.4/src/Control/Functor/Pointed.hs:34:{-# RULES
./category-extras-0.53.4/src/Control/Functor/Pointed.hs:64:{-# RULES
./category-extras-0.53.5/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.53.5/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.53.5/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.53.5/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.53.5/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.53.5/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.53.5/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.53.5/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.53.5/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.53.5/src/Control/Functor/Full.hs:30:{-# RULES
./category-extras-0.53.5/src/Control/Functor/Full.hs:50:{-# RULES
./category-extras-0.53.5/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.53.5/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.53.5/src/Control/Functor/Internal/Adjunction.hs:161:{-# RULES
./category-extras-0.53.5/src/Control/Functor/Pointed.hs:34:{-# RULES
./category-extras-0.53.5/src/Control/Functor/Pointed.hs:64:{-# RULES
./category-extras-0.53.5.1/src/Control/Category/Associative.hs:38:{-# RULES
./category-extras-0.53.5.1/src/Control/Category/Braided.hs:46:{-# RULES
./category-extras-0.53.5.1/src/Control/Category/Cartesian/Closed.hs:43:{-# RULES
./category-extras-0.53.5.1/src/Control/Category/Cartesian/Closed.hs:68:{-# RULES
./category-extras-0.53.5.1/src/Control/Category/Cartesian.hs:60:{-# RULES
./category-extras-0.53.5.1/src/Control/Category/Cartesian.hs:105:{-# RULES
./category-extras-0.53.5.1/src/Control/Category/Distributive.hs:37:{-# RULES
./category-extras-0.53.5.1/src/Control/Category/Monoidal.hs:69:{-# RULES
./category-extras-0.53.5.1/src/Control/Comonad/Parameterized.hs:34:{-# RULES
./category-extras-0.53.5.1/src/Control/Functor/Full.hs:30:{-# RULES
./category-extras-0.53.5.1/src/Control/Functor/Full.hs:50:{-# RULES
./category-extras-0.53.5.1/src/Control/Functor/HigherOrder.hs:90:{-# RULES
./category-extras-0.53.5.1/src/Control/Functor/Indexed.hs:31:{-# RULES
./category-extras-0.53.5.1/src/Control/Functor/Internal/Adjunction.hs:161:{-# RULES
./category-extras-0.53.5.1/src/Control/Functor/Pointed.hs:34:{-# RULES
./category-extras-0.53.5.1/src/Control/Functor/Pointed.hs:64:{-# RULES
./chalkboard-0.1/Graphics/Chalkboard/Utils.hs:111:{-# RULES "distance <= w" forall t u w . distance t u <= w = distanceLe t u w #-}
./chalkboard-0.2/Graphics/Chalkboard/Utils.hs:111:{-# RULES "distance <= w" forall t u w . distance t u <= w = distanceLe t u w #-}
./chalkboard-1.9.0.15/Graphics/ChalkBoard/Utils.hs:74:{-# RULES "distance <= w" forall t u w . distance t u <= w = distanceLe t u w #-}
./chalkboard-1.9.0.16/Graphics/ChalkBoard/Utils.hs:74:{-# RULES "distance <= w" forall t u w . distance t u <= w = distanceLe t u w #-}
./cipher-aes-0.2.10/Crypto/Cipher/AES.hs:299: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cipher-aes-0.2.11/Crypto/Cipher/AES.hs:299: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cipher-aes-0.2.9/Crypto/Cipher/AES.hs:297: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./clutterhs-0.1/C2HS.hs:197:{-# RULES 
./colour-2.2.0/Data/Colour/SRGB.hs:44:# RULES "sRGBBounded" 
./colour-2.2.1/Data/Colour/SRGB.hs:44:# RULES "sRGBBounded" 
./colour-2.3.2/Data/Colour/SRGB.hs:44:# RULES "sRGBBounded" 
./combinatorics-0.1.0/src/Math/Combinatorics/Binomial.hs:24:Some identities, but not really material for RULES:
./compact-map-2008.11.8/src/Data/CompactMap/Fetch.hs:34:{-# RULES "extractElement/ByteString" extractElement = extractElementBS #-}
./compact-map-2008.11.8/src/Data/CompactMap/Fetch.hs:50:{-# RULES "extractElement/RawString" extractElement = extractElementRaw #-}
./compact-map-2008.11.9/src/Data/CompactMap/Fetch.hs:37:{-# RULES "extractElement/Int" extractElement = extractElementInt #-}
./compact-map-2008.11.9/src/Data/CompactMap/Fetch.hs:59:{-# RULES "extractElement/ByteString" extractElement = extractElementBS #-}
./compact-string-0.3.1/Data/CompactString.hs:319:{-# RULES
./compact-string-0.3.1/Data/CompactString.hs:807:{-# RULES
./compact-string-0.3.1/Data/CompactString.hs:847:{-# RULES
./compact-string-0.3.1/Data/CompactString.hs:914:{-# RULES
./compact-string-fix-0.3.1/Data/CompactString.hs:319:{-# RULES
./compact-string-fix-0.3.1/Data/CompactString.hs:807:{-# RULES
./compact-string-fix-0.3.1/Data/CompactString.hs:847:{-# RULES
./compact-string-fix-0.3.1/Data/CompactString.hs:914:{-# RULES
./compact-string-fix-0.3.2/Data/CompactString.hs:319:{-# RULES
./compact-string-fix-0.3.2/Data/CompactString.hs:807:{-# RULES
./compact-string-fix-0.3.2/Data/CompactString.hs:847:{-# RULES
./compact-string-fix-0.3.2/Data/CompactString.hs:914:{-# RULES
./compdata-0.1/src/Data/Comp/Algebra.hs:554:#ifndef NO_RULES
./compdata-0.1/src/Data/Comp/Algebra.hs:555:{-# RULES
./compdata-0.1/src/Data/Comp/Algebra.hs:566:{-# RULES 
./compdata-0.1/src/Data/Comp/Algebra.hs:577:{-# RULES
./compdata-0.10/src/Data/Comp/Algebra.hs:676:#ifndef NO_RULES
./compdata-0.10/src/Data/Comp/Algebra.hs:677:{-# RULES
./compdata-0.10/src/Data/Comp/Algebra.hs:800:{-# RULES
./compdata-0.10/src/Data/Comp/Algebra.hs:931:{-# RULES
./compdata-0.2/src/Data/Comp/Algebra.hs:514:#ifndef NO_RULES
./compdata-0.2/src/Data/Comp/Algebra.hs:515:{-# RULES
./compdata-0.2/src/Data/Comp/Algebra.hs:523:{-# RULES 
./compdata-0.2/src/Data/Comp/Algebra.hs:534:{-# RULES
./compdata-0.3/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.3/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.3/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.3/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.3/src/Data/Comp/MultiParam/Algebra.hs:313:#ifndef NO_RULES
./compdata-0.3/src/Data/Comp/MultiParam/Algebra.hs:314:{-# RULES
./compdata-0.3/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES 
./compdata-0.3/src/Data/Comp/MultiParam/Algebra.hs:334:{-# RULES
./compdata-0.3/src/Data/Comp/Param/Algebra.hs:674:#ifndef NO_RULES
./compdata-0.3/src/Data/Comp/Param/Algebra.hs:675:{-# RULES
./compdata-0.3/src/Data/Comp/Param/Algebra.hs:799:{-# RULES 
./compdata-0.4/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.4/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.4/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.4/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.4/src/Data/Comp/MultiParam/Algebra.hs:313:#ifndef NO_RULES
./compdata-0.4/src/Data/Comp/MultiParam/Algebra.hs:314:{-# RULES
./compdata-0.4/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES 
./compdata-0.4/src/Data/Comp/MultiParam/Algebra.hs:334:{-# RULES
./compdata-0.4/src/Data/Comp/Param/Algebra.hs:674:#ifndef NO_RULES
./compdata-0.4/src/Data/Comp/Param/Algebra.hs:675:{-# RULES
./compdata-0.4/src/Data/Comp/Param/Algebra.hs:799:{-# RULES 
./compdata-0.4.1/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.4.1/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.4.1/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.4.1/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.4.1/src/Data/Comp/MultiParam/Algebra.hs:313:#ifndef NO_RULES
./compdata-0.4.1/src/Data/Comp/MultiParam/Algebra.hs:314:{-# RULES
./compdata-0.4.1/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES 
./compdata-0.4.1/src/Data/Comp/MultiParam/Algebra.hs:334:{-# RULES
./compdata-0.4.1/src/Data/Comp/Param/Algebra.hs:674:#ifndef NO_RULES
./compdata-0.4.1/src/Data/Comp/Param/Algebra.hs:675:{-# RULES
./compdata-0.4.1/src/Data/Comp/Param/Algebra.hs:799:{-# RULES 
./compdata-0.5/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.5/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.5/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.5/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.5/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.5/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.5/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.5/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.5/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.5/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.5/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.5/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.5/src/Data/Comp/Param/Term.hs:84:{-# RULES
./compdata-0.5.1/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.5.1/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.5.1/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.5.1/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.5.1/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.5.1/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.5.1/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.5.1/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.5.1/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.5.1/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.5.1/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.5.1/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.5.1/src/Data/Comp/Param/Term.hs:84:{-# RULES
./compdata-0.5.2/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.5.2/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.5.2/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.5.2/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.5.2/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.5.2/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.5.2/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.5.2/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.5.2/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.5.2/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.5.2/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.5.2/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.5.2/src/Data/Comp/Param/Term.hs:84:{-# RULES
./compdata-0.5.3/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.5.3/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.5.3/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.5.3/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.5.3/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.5.3/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.5.3/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.5.3/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.5.3/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.5.3/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.5.3/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.5.3/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.5.3/src/Data/Comp/Param/Term.hs:84:{-# RULES
./compdata-0.6/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.6/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.6/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.6/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.6/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.6/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.6/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.6/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.6/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.6/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.6/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.6/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.6/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-0.6.1/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.6.1/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.6.1/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.6.1/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.6.1/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.6.1/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.6.1/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.6.1/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.6.1/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.6.1/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.6.1/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.6.1/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.6.1/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-0.6.1.1/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.6.1.1/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.6.1.1/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.6.1.1/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.6.1.1/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.6.1.1/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.6.1.1/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.6.1.1/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.6.1.1/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.6.1.1/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.6.1.1/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.6.1.1/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.6.1.1/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-0.6.1.2/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.6.1.2/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.6.1.2/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.6.1.2/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.6.1.2/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.6.1.2/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.6.1.2/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.6.1.2/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.6.1.2/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.6.1.2/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.6.1.2/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.6.1.2/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.6.1.2/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-0.6.1.3/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.6.1.3/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.6.1.3/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.6.1.3/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.6.1.3/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.6.1.3/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.6.1.3/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.6.1.3/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.6.1.3/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.6.1.3/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.6.1.3/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.6.1.3/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.6.1.3/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-0.6.1.4/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.6.1.4/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.6.1.4/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.6.1.4/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.6.1.4/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.6.1.4/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.6.1.4/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.6.1.4/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.6.1.4/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.6.1.4/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.6.1.4/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.6.1.4/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.6.1.4/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-0.7/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.7/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.7/src/Data/Comp/Algebra.hs:794:{-# RULES 
./compdata-0.7/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.7/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.7/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.7/src/Data/Comp/MultiParam/Algebra.hs:332:{-# RULES 
./compdata-0.7/src/Data/Comp/MultiParam/Algebra.hs:343:{-# RULES
./compdata-0.7/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.7/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.7/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.7/src/Data/Comp/Param/Algebra.hs:832:{-# RULES 
./compdata-0.7/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-0.7.0.1/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.7.0.1/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.7.0.1/src/Data/Comp/Algebra.hs:793:{-# RULES 
./compdata-0.7.0.1/src/Data/Comp/Algebra.hs:924:{-# RULES
./compdata-0.7.0.1/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.7.0.1/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.7.0.1/src/Data/Comp/MultiParam/Algebra.hs:331:{-# RULES 
./compdata-0.7.0.1/src/Data/Comp/MultiParam/Algebra.hs:341:{-# RULES
./compdata-0.7.0.1/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.7.0.1/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.7.0.1/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.7.0.1/src/Data/Comp/Param/Algebra.hs:831:{-# RULES 
./compdata-0.7.0.1/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-0.7.0.2/src/Data/Comp/Algebra.hs:669:#ifndef NO_RULES
./compdata-0.7.0.2/src/Data/Comp/Algebra.hs:670:{-# RULES
./compdata-0.7.0.2/src/Data/Comp/Algebra.hs:793:{-# RULES 
./compdata-0.7.0.2/src/Data/Comp/Algebra.hs:924:{-# RULES
./compdata-0.7.0.2/src/Data/Comp/MultiParam/Algebra.hs:322:#ifndef NO_RULES
./compdata-0.7.0.2/src/Data/Comp/MultiParam/Algebra.hs:323:{-# RULES
./compdata-0.7.0.2/src/Data/Comp/MultiParam/Algebra.hs:331:{-# RULES 
./compdata-0.7.0.2/src/Data/Comp/MultiParam/Algebra.hs:341:{-# RULES
./compdata-0.7.0.2/src/Data/Comp/MultiParam/Term.hs:106:{-# RULES
./compdata-0.7.0.2/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-0.7.0.2/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-0.7.0.2/src/Data/Comp/Param/Algebra.hs:831:{-# RULES 
./compdata-0.7.0.2/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-0.8/src/Data/Comp/Algebra.hs:671:#ifndef NO_RULES
./compdata-0.8/src/Data/Comp/Algebra.hs:672:{-# RULES
./compdata-0.8/src/Data/Comp/Algebra.hs:795:{-# RULES 
./compdata-0.8/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.8.0.1/src/Data/Comp/Algebra.hs:671:#ifndef NO_RULES
./compdata-0.8.0.1/src/Data/Comp/Algebra.hs:672:{-# RULES
./compdata-0.8.0.1/src/Data/Comp/Algebra.hs:795:{-# RULES 
./compdata-0.8.0.1/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.8.1.0/src/Data/Comp/Algebra.hs:671:#ifndef NO_RULES
./compdata-0.8.1.0/src/Data/Comp/Algebra.hs:672:{-# RULES
./compdata-0.8.1.0/src/Data/Comp/Algebra.hs:795:{-# RULES 
./compdata-0.8.1.0/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.8.1.1/src/Data/Comp/Algebra.hs:671:#ifndef NO_RULES
./compdata-0.8.1.1/src/Data/Comp/Algebra.hs:672:{-# RULES
./compdata-0.8.1.1/src/Data/Comp/Algebra.hs:795:{-# RULES 
./compdata-0.8.1.1/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.8.1.2/src/Data/Comp/Algebra.hs:671:#ifndef NO_RULES
./compdata-0.8.1.2/src/Data/Comp/Algebra.hs:672:{-# RULES
./compdata-0.8.1.2/src/Data/Comp/Algebra.hs:795:{-# RULES 
./compdata-0.8.1.2/src/Data/Comp/Algebra.hs:926:{-# RULES
./compdata-0.8.1.3/src/Data/Comp/Algebra.hs:676:#ifndef NO_RULES
./compdata-0.8.1.3/src/Data/Comp/Algebra.hs:677:{-# RULES
./compdata-0.8.1.3/src/Data/Comp/Algebra.hs:800:{-# RULES
./compdata-0.8.1.3/src/Data/Comp/Algebra.hs:931:{-# RULES
./compdata-0.9/src/Data/Comp/Algebra.hs:676:#ifndef NO_RULES
./compdata-0.9/src/Data/Comp/Algebra.hs:677:{-# RULES
./compdata-0.9/src/Data/Comp/Algebra.hs:800:{-# RULES
./compdata-0.9/src/Data/Comp/Algebra.hs:931:{-# RULES
./compdata-param-0.8/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-param-0.8/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-param-0.8/src/Data/Comp/Param/Algebra.hs:831:{-# RULES 
./compdata-param-0.8/src/Data/Comp/Param/Multi/Algebra.hs:322:#ifndef NO_RULES
./compdata-param-0.8/src/Data/Comp/Param/Multi/Algebra.hs:323:{-# RULES
./compdata-param-0.8/src/Data/Comp/Param/Multi/Algebra.hs:331:{-# RULES 
./compdata-param-0.8/src/Data/Comp/Param/Multi/Algebra.hs:341:{-# RULES
./compdata-param-0.8/src/Data/Comp/Param/Multi/Term.hs:106:{-# RULES
./compdata-param-0.8/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-param-0.8.0.1/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-param-0.8.0.1/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-param-0.8.0.1/src/Data/Comp/Param/Algebra.hs:831:{-# RULES 
./compdata-param-0.8.0.1/src/Data/Comp/Param/Multi/Algebra.hs:322:#ifndef NO_RULES
./compdata-param-0.8.0.1/src/Data/Comp/Param/Multi/Algebra.hs:323:{-# RULES
./compdata-param-0.8.0.1/src/Data/Comp/Param/Multi/Algebra.hs:331:{-# RULES 
./compdata-param-0.8.0.1/src/Data/Comp/Param/Multi/Algebra.hs:341:{-# RULES
./compdata-param-0.8.0.1/src/Data/Comp/Param/Multi/Term.hs:106:{-# RULES
./compdata-param-0.8.0.1/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-param-0.8.0.2/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-param-0.8.0.2/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-param-0.8.0.2/src/Data/Comp/Param/Algebra.hs:831:{-# RULES 
./compdata-param-0.8.0.2/src/Data/Comp/Param/Multi/Algebra.hs:322:#ifndef NO_RULES
./compdata-param-0.8.0.2/src/Data/Comp/Param/Multi/Algebra.hs:323:{-# RULES
./compdata-param-0.8.0.2/src/Data/Comp/Param/Multi/Algebra.hs:331:{-# RULES 
./compdata-param-0.8.0.2/src/Data/Comp/Param/Multi/Algebra.hs:341:{-# RULES
./compdata-param-0.8.0.2/src/Data/Comp/Param/Multi/Term.hs:106:{-# RULES
./compdata-param-0.8.0.2/src/Data/Comp/Param/Term.hs:92:{-# RULES
./compdata-param-0.9/src/Data/Comp/Param/Algebra.hs:707:#ifndef NO_RULES
./compdata-param-0.9/src/Data/Comp/Param/Algebra.hs:708:{-# RULES
./compdata-param-0.9/src/Data/Comp/Param/Algebra.hs:831:{-# RULES 
./compdata-param-0.9/src/Data/Comp/Param/Multi/Algebra.hs:322:#ifndef NO_RULES
./compdata-param-0.9/src/Data/Comp/Param/Multi/Algebra.hs:323:{-# RULES
./compdata-param-0.9/src/Data/Comp/Param/Multi/Algebra.hs:331:{-# RULES 
./compdata-param-0.9/src/Data/Comp/Param/Multi/Algebra.hs:341:{-# RULES
./compdata-param-0.9/src/Data/Comp/Param/Multi/Term.hs:106:{-# RULES
./compdata-param-0.9/src/Data/Comp/Param/Term.hs:92:{-# RULES
./composition-tree-0.1.0.0/Data/Compositions/Internal.hs:9:{-# RULES
./composition-tree-0.1.0.0/Data/Compositions/Internal.hs:123:--   Rewrite @RULES@ are provided for compilers which support them.
./composition-tree-0.1.0.1/Data/Compositions/Internal.hs:9:{-# RULES
./composition-tree-0.1.0.1/Data/Compositions/Internal.hs:123:--   Rewrite @RULES@ are provided for compilers which support them.
./composition-tree-0.1.1.0/Data/Compositions/Internal.hs:14:{-# RULES
./composition-tree-0.1.1.0/Data/Compositions/Internal.hs:135:--   Rewrite @RULES@ are provided for compilers which support them.
./composition-tree-0.2.0.0/Data/Compositions/Internal.hs:14:{-# RULES
./composition-tree-0.2.0.0/Data/Compositions/Internal.hs:138:--   Rewrite @RULES@ are provided for compilers which support them.
./composition-tree-0.2.0.0/Data/Compositions/Snoc.hs:35:{-# RULES
./composition-tree-0.2.0.0/Data/Compositions/Snoc.hs:132:--   Rewrite @RULES@ are provided for compilers which support them.
./composition-tree-0.2.0.1/Data/Compositions/Internal.hs:14:{-# RULES
./composition-tree-0.2.0.1/Data/Compositions/Internal.hs:138:--   Rewrite @RULES@ are provided for compilers which support them.
./composition-tree-0.2.0.1/Data/Compositions/Snoc/Internal.hs:15:{-# RULES
./composition-tree-0.2.0.1/Data/Compositions/Snoc/Internal.hs:112:--   Rewrite @RULES@ are provided for compilers which support them.
./compressed-0.1/Data/Compressed/RunLengthEncoding.hs:244:{-# RULES "encode/recode"     encode = recode #-}
./compressed-0.1/Data/Compressed/RunLengthEncoding.hs:245:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-0.1.1/Data/Compressed/RunLengthEncoding.hs:243:{-# RULES "encode/recode"     encode = recode #-}
./compressed-0.1.1/Data/Compressed/RunLengthEncoding.hs:244:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-0.1.2/Data/Compressed/RunLengthEncoding.hs:242:{-# RULES "encode/recode"     encode = recode #-}
./compressed-0.1.2/Data/Compressed/RunLengthEncoding.hs:243:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-0.1.3/Data/Compressed/RunLengthEncoding.hs:241:{-# RULES "encode/recode"     encode = recode #-}
./compressed-0.1.3/Data/Compressed/RunLengthEncoding.hs:242:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-0.1.4/Data/Compressed/RunLengthEncoding.hs:241:{-# RULES "encode/recode"     encode = recode #-}
./compressed-0.1.4/Data/Compressed/RunLengthEncoding.hs:242:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-0.2/Data/Compressed/RunLengthEncoding.hs:241:{-# RULES "encode/recode"     encode = recode #-}
./compressed-0.2/Data/Compressed/RunLengthEncoding.hs:242:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-0.3/Data/Compressed/RunLengthEncoding.hs:241:{-# RULES "encode/recode"     encode = recode #-}
./compressed-0.3/Data/Compressed/RunLengthEncoding.hs:242:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-3.0/Data/Compressed/RunLengthEncoding.hs:251:{-# RULES "encode/recode"     encode = recode #-}
./compressed-3.0/Data/Compressed/RunLengthEncoding.hs:252:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-3.0.0.1/Data/Compressed/RunLengthEncoding.hs:250:{-# RULES "encode/recode"     encode = recode #-}
./compressed-3.0.0.1/Data/Compressed/RunLengthEncoding.hs:251:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-3.0.1/src/Data/Compressed/RunLengthEncoding.hs:250:{-# RULES "encode/recode"     encode = recode #-}
./compressed-3.0.1/src/Data/Compressed/RunLengthEncoding.hs:251:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-3.0.2/src/Data/Compressed/RunLengthEncoding.hs:254:{-# RULES "encode/recode"     encode = recode #-}
./compressed-3.0.2/src/Data/Compressed/RunLengthEncoding.hs:255:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-3.0.3/src/Data/Compressed/RunLengthEncoding.hs:254:{-# RULES "encode/recode"     encode = recode #-}
./compressed-3.0.3/src/Data/Compressed/RunLengthEncoding.hs:255:{-# RULES "encode/encodeList" encode = encodeList #-}
./compressed-3.10/src/Data/Compressed/RunLengthEncoding.hs:254:{-# RULES "encode/recode"     encode = recode #-}
./compressed-3.10/src/Data/Compressed/RunLengthEncoding.hs:255:{-# RULES "encode/encodeList" encode = encodeList #-}
./computational-algebra-0.1.3.1/Algebra/Internal.hs:257:{-# RULES
./computational-algebra-0.1.3.1/Algebra/Ring/Polynomial.hs:103:{-# RULES
./computational-algebra-0.1.3.1/Algebra/Ring/Polynomial.hs:502:{-# RULES
./computational-algebra-0.1.3.5/Algebra/Internal.hs:257:{-# RULES
./computational-algebra-0.1.3.5/Algebra/Ring/Polynomial.hs:103:{-# RULES
./computational-algebra-0.1.3.5/Algebra/Ring/Polynomial.hs:502:{-# RULES
./computational-algebra-0.1.3.6/Algebra/Internal.hs:257:{-# RULES
./computational-algebra-0.1.3.6/Algebra/Ring/Polynomial.hs:103:{-# RULES
./computational-algebra-0.1.3.6/Algebra/Ring/Polynomial.hs:502:{-# RULES
./computational-algebra-0.2.0.0/Algebra/Ring/Polynomial.hs:109:{-# RULES
./computational-algebra-0.2.0.0/Algebra/Ring/Polynomial.hs:508:{-# RULES
./computational-algebra-0.3.0.0/Algebra/Ring/Polynomial.hs:111:{-# RULES
./computational-algebra-0.3.0.0/Algebra/Ring/Polynomial.hs:510:{-# RULES
./concurrent-sa-1.0.0/Control/Concurrent/Annealer/Population.hs:80:{-# RULES
./concurrent-sa-1.0.1/Control/Concurrent/Annealer/Population.hs:80:{-# RULES
./ConcurrentUtils-0.4.0.0/Control/CUtils/DataParallel.hs:98:{-# RULES
./ConcurrentUtils-0.4.1.0/Control/CUtils/DataParallel.hs:98:{-# RULES
./ConcurrentUtils-0.4.2.0/Control/CUtils/DataParallel.hs:98:{-# RULES
./conduit-0.5.0/Data/Conduit/Internal.hs:209:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.0/Data/Conduit/Internal.hs:218:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.0/Data/Conduit/Internal.hs:253:{-# RULES
./conduit-0.5.0/Data/Conduit/Internal.hs:269:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.0/Data/Conduit/Internal.hs:498:{-# RULES
./conduit-0.5.1/Data/Conduit/Internal.hs:209:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.1/Data/Conduit/Internal.hs:218:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.1/Data/Conduit/Internal.hs:253:{-# RULES
./conduit-0.5.1/Data/Conduit/Internal.hs:269:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.1/Data/Conduit/Internal.hs:498:{-# RULES
./conduit-0.5.2/Data/Conduit/Internal.hs:211:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.2/Data/Conduit/Internal.hs:220:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.2/Data/Conduit/Internal.hs:255:{-# RULES
./conduit-0.5.2/Data/Conduit/Internal.hs:271:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.2/Data/Conduit/Internal.hs:500:{-# RULES
./conduit-0.5.2.1/Data/Conduit/Internal.hs:211:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.2.1/Data/Conduit/Internal.hs:220:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.2.1/Data/Conduit/Internal.hs:255:{-# RULES
./conduit-0.5.2.1/Data/Conduit/Internal.hs:271:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.2.1/Data/Conduit/Internal.hs:500:{-# RULES
./conduit-0.5.2.2/Data/Conduit/Internal.hs:211:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.2.2/Data/Conduit/Internal.hs:220:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.2.2/Data/Conduit/Internal.hs:255:{-# RULES
./conduit-0.5.2.2/Data/Conduit/Internal.hs:271:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.2.2/Data/Conduit/Internal.hs:494:{-# RULES
./conduit-0.5.2.3/Data/Conduit/Internal.hs:211:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.2.3/Data/Conduit/Internal.hs:220:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.2.3/Data/Conduit/Internal.hs:255:{-# RULES
./conduit-0.5.2.3/Data/Conduit/Internal.hs:271:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.2.3/Data/Conduit/Internal.hs:494:{-# RULES
./conduit-0.5.2.4/Data/Conduit/Internal.hs:211:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.2.4/Data/Conduit/Internal.hs:220:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.2.4/Data/Conduit/Internal.hs:255:{-# RULES
./conduit-0.5.2.4/Data/Conduit/Internal.hs:271:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.2.4/Data/Conduit/Internal.hs:500:{-# RULES
./conduit-0.5.2.5/Data/Conduit/Internal.hs:211:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.2.5/Data/Conduit/Internal.hs:220:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.2.5/Data/Conduit/Internal.hs:255:{-# RULES
./conduit-0.5.2.5/Data/Conduit/Internal.hs:271:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.2.5/Data/Conduit/Internal.hs:513:{-# RULES
./conduit-0.5.2.6/Data/Conduit/Internal.hs:211:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.2.6/Data/Conduit/Internal.hs:220:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.2.6/Data/Conduit/Internal.hs:255:{-# RULES
./conduit-0.5.2.6/Data/Conduit/Internal.hs:271:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.2.6/Data/Conduit/Internal.hs:513:{-# RULES
./conduit-0.5.2.7/Data/Conduit/Internal.hs:211:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.2.7/Data/Conduit/Internal.hs:220:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.2.7/Data/Conduit/Internal.hs:255:{-# RULES
./conduit-0.5.2.7/Data/Conduit/Internal.hs:271:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.2.7/Data/Conduit/Internal.hs:513:{-# RULES
./conduit-0.5.3/Data/Conduit/Internal.hs:211:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.3/Data/Conduit/Internal.hs:220:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.3/Data/Conduit/Internal.hs:255:{-# RULES
./conduit-0.5.3/Data/Conduit/Internal.hs:271:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.3/Data/Conduit/Internal.hs:513:{-# RULES
./conduit-0.5.3/Data/Conduit/List.hs:222:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-0.5.3/Data/Conduit/List.hs:223:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-0.5.3/Data/Conduit/List.hs:224:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-0.5.3/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-0.5.3/Data/Conduit/List.hs:227:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.3/Data/Conduit/List.hs:228:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.3/Data/Conduit/List.hs:229:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.3/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.3/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-0.5.3/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-0.5.4/Data/Conduit/Internal.hs:220:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.4/Data/Conduit/Internal.hs:229:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.4/Data/Conduit/Internal.hs:264:{-# RULES
./conduit-0.5.4/Data/Conduit/Internal.hs:280:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.4/Data/Conduit/Internal.hs:522:{-# RULES
./conduit-0.5.4/Data/Conduit/List.hs:222:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-0.5.4/Data/Conduit/List.hs:223:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-0.5.4/Data/Conduit/List.hs:224:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-0.5.4/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-0.5.4/Data/Conduit/List.hs:227:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4/Data/Conduit/List.hs:228:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4/Data/Conduit/List.hs:229:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-0.5.4/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-0.5.4.1/Data/Conduit/Internal.hs:220:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.4.1/Data/Conduit/Internal.hs:229:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.4.1/Data/Conduit/Internal.hs:264:{-# RULES
./conduit-0.5.4.1/Data/Conduit/Internal.hs:280:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.4.1/Data/Conduit/Internal.hs:522:{-# RULES
./conduit-0.5.4.1/Data/Conduit/List.hs:222:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-0.5.4.1/Data/Conduit/List.hs:223:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-0.5.4.1/Data/Conduit/List.hs:224:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-0.5.4.1/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-0.5.4.1/Data/Conduit/List.hs:227:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4.1/Data/Conduit/List.hs:228:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4.1/Data/Conduit/List.hs:229:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4.1/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4.1/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-0.5.4.1/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-0.5.4.2/Data/Conduit/Internal.hs:220:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.4.2/Data/Conduit/Internal.hs:229:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.4.2/Data/Conduit/Internal.hs:264:{-# RULES
./conduit-0.5.4.2/Data/Conduit/Internal.hs:280:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.4.2/Data/Conduit/Internal.hs:522:{-# RULES
./conduit-0.5.4.2/Data/Conduit/List.hs:222:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-0.5.4.2/Data/Conduit/List.hs:223:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-0.5.4.2/Data/Conduit/List.hs:224:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-0.5.4.2/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-0.5.4.2/Data/Conduit/List.hs:227:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4.2/Data/Conduit/List.hs:228:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4.2/Data/Conduit/List.hs:229:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4.2/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.4.2/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-0.5.4.2/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-0.5.5/Data/Conduit/Internal.hs:220:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.5/Data/Conduit/Internal.hs:229:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.5/Data/Conduit/Internal.hs:264:{-# RULES
./conduit-0.5.5/Data/Conduit/Internal.hs:280:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.5/Data/Conduit/Internal.hs:522:{-# RULES
./conduit-0.5.5/Data/Conduit/List.hs:222:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-0.5.5/Data/Conduit/List.hs:223:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-0.5.5/Data/Conduit/List.hs:224:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-0.5.5/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-0.5.5/Data/Conduit/List.hs:227:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.5/Data/Conduit/List.hs:228:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.5/Data/Conduit/List.hs:229:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.5/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.5/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-0.5.5/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-0.5.6/Data/Conduit/Internal.hs:220:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-0.5.6/Data/Conduit/Internal.hs:229:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-0.5.6/Data/Conduit/Internal.hs:264:{-# RULES
./conduit-0.5.6/Data/Conduit/Internal.hs:280:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-0.5.6/Data/Conduit/Internal.hs:522:{-# RULES
./conduit-0.5.6/Data/Conduit/List.hs:223:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-0.5.6/Data/Conduit/List.hs:224:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-0.5.6/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-0.5.6/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-0.5.6/Data/Conduit/List.hs:228:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.6/Data/Conduit/List.hs:229:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.6/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.6/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-0.5.6/Data/Conduit/List.hs:233:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-0.5.6/Data/Conduit/List.hs:234:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.0/Data/Conduit/Internal.hs:192:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.0/Data/Conduit/Internal.hs:201:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.0/Data/Conduit/Internal.hs:236:{-# RULES
./conduit-1.0.0/Data/Conduit/Internal.hs:252:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.0/Data/Conduit/Internal.hs:494:{-# RULES
./conduit-1.0.0/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.0/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.0/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.0/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.0/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.0/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.0.1/Data/Conduit/Internal.hs:192:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.0.1/Data/Conduit/Internal.hs:201:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.0.1/Data/Conduit/Internal.hs:236:{-# RULES
./conduit-1.0.0.1/Data/Conduit/Internal.hs:252:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.0.1/Data/Conduit/Internal.hs:494:{-# RULES
./conduit-1.0.0.1/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.0.1/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.0.1/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.0.1/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.0.1/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0.1/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0.1/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0.1/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0.1/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.0.1/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.0.2/Data/Conduit/Internal.hs:192:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.0.2/Data/Conduit/Internal.hs:201:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.0.2/Data/Conduit/Internal.hs:236:{-# RULES
./conduit-1.0.0.2/Data/Conduit/Internal.hs:252:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.0.2/Data/Conduit/Internal.hs:494:{-# RULES
./conduit-1.0.0.2/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.0.2/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.0.2/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.0.2/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.0.2/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0.2/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0.2/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0.2/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.0.2/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.0.2/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.1/Data/Conduit/Internal.hs:202:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.1/Data/Conduit/Internal.hs:211:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.1/Data/Conduit/Internal.hs:246:{-# RULES
./conduit-1.0.1/Data/Conduit/Internal.hs:262:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.1/Data/Conduit/Internal.hs:504:{-# RULES
./conduit-1.0.1/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.1/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.1/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.1/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.1/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.1/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.1/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.1/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.1/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.1/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.10/Data/Conduit/Internal.hs:293:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.10/Data/Conduit/Internal.hs:302:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.10/Data/Conduit/Internal.hs:337:{-# RULES
./conduit-1.0.10/Data/Conduit/Internal.hs:352:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.10/Data/Conduit/Internal.hs:605:{-# RULES
./conduit-1.0.10/Data/Conduit/List.hs:243:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.10/Data/Conduit/List.hs:244:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.10/Data/Conduit/List.hs:245:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.10/Data/Conduit/List.hs:246:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.10/Data/Conduit/List.hs:248:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.10/Data/Conduit/List.hs:249:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.10/Data/Conduit/List.hs:250:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.10/Data/Conduit/List.hs:251:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.10/Data/Conduit/List.hs:253:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.10/Data/Conduit/List.hs:254:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.10.1/Data/Conduit/Internal.hs:294:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.10.1/Data/Conduit/Internal.hs:303:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.10.1/Data/Conduit/Internal.hs:338:{-# RULES
./conduit-1.0.10.1/Data/Conduit/Internal.hs:353:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.10.1/Data/Conduit/Internal.hs:626:{-# RULES
./conduit-1.0.10.1/Data/Conduit/List.hs:190:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:249:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:250:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:261:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:262:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:266:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:267:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:271:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:272:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:458:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:459:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.10.1/Data/Conduit/List.hs:468:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.11/Data/Conduit/Internal.hs:303:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.11/Data/Conduit/Internal.hs:312:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.11/Data/Conduit/Internal.hs:347:{-# RULES
./conduit-1.0.11/Data/Conduit/Internal.hs:362:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.11/Data/Conduit/Internal.hs:635:{-# RULES
./conduit-1.0.11/Data/Conduit/List.hs:191:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.11/Data/Conduit/List.hs:250:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.11/Data/Conduit/List.hs:251:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.11/Data/Conduit/List.hs:262:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.11/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.11/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.11/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.11/Data/Conduit/List.hs:267:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.11/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.11/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.11/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.11/Data/Conduit/List.hs:272:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.11/Data/Conduit/List.hs:273:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.11/Data/Conduit/List.hs:459:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.11/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.11/Data/Conduit/List.hs:469:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.11.1/Data/Conduit/Internal.hs:303:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.11.1/Data/Conduit/Internal.hs:312:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.11.1/Data/Conduit/Internal.hs:347:{-# RULES
./conduit-1.0.11.1/Data/Conduit/Internal.hs:362:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.11.1/Data/Conduit/Internal.hs:635:{-# RULES
./conduit-1.0.11.1/Data/Conduit/List.hs:191:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:250:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:251:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:262:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:267:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:272:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:273:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:459:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.11.1/Data/Conduit/List.hs:469:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.12/Data/Conduit/Internal.hs:303:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.12/Data/Conduit/Internal.hs:312:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.12/Data/Conduit/Internal.hs:347:{-# RULES
./conduit-1.0.12/Data/Conduit/Internal.hs:362:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.12/Data/Conduit/Internal.hs:635:{-# RULES
./conduit-1.0.12/Data/Conduit/List.hs:191:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.12/Data/Conduit/List.hs:250:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.12/Data/Conduit/List.hs:251:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.12/Data/Conduit/List.hs:262:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.12/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.12/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.12/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.12/Data/Conduit/List.hs:267:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.12/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.12/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.12/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.12/Data/Conduit/List.hs:272:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.12/Data/Conduit/List.hs:273:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.12/Data/Conduit/List.hs:459:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.12/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.12/Data/Conduit/List.hs:469:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.13/Data/Conduit/Internal.hs:310:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.13/Data/Conduit/Internal.hs:319:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.13/Data/Conduit/Internal.hs:354:{-# RULES
./conduit-1.0.13/Data/Conduit/Internal.hs:369:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.13/Data/Conduit/Internal.hs:642:{-# RULES
./conduit-1.0.13/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.13/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.13/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.13/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.13/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.13/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.13/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.13/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.13/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.13/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.13/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.13/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.13/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.13/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.13/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.13/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.13.1/Data/Conduit/Internal.hs:310:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.13.1/Data/Conduit/Internal.hs:319:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.13.1/Data/Conduit/Internal.hs:354:{-# RULES
./conduit-1.0.13.1/Data/Conduit/Internal.hs:369:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.13.1/Data/Conduit/Internal.hs:642:{-# RULES
./conduit-1.0.13.1/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.13.1/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.14/Data/Conduit/Internal.hs:310:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.14/Data/Conduit/Internal.hs:319:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.14/Data/Conduit/Internal.hs:354:{-# RULES
./conduit-1.0.14/Data/Conduit/Internal.hs:369:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.14/Data/Conduit/Internal.hs:642:{-# RULES
./conduit-1.0.14/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.14/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.14/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.14/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.14/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.14/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.14/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.14/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.14/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.14/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.14/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.14/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.14/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.14/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.14/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.14/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.15/Data/Conduit/Internal.hs:310:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.15/Data/Conduit/Internal.hs:319:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.15/Data/Conduit/Internal.hs:354:{-# RULES
./conduit-1.0.15/Data/Conduit/Internal.hs:369:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.15/Data/Conduit/Internal.hs:642:{-# RULES
./conduit-1.0.15/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.15/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.15/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.15/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.15/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.15/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.15/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.15/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.15/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.15/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.15/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.15/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.15/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.15/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.15/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.15/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.15/Data/Conduit.hs:148:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.0.15/Data/Conduit.hs:162:{-# RULES
./conduit-1.0.15/Data/Conduit.hs:183:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.0.15.1/Data/Conduit/Internal.hs:310:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.15.1/Data/Conduit/Internal.hs:319:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.15.1/Data/Conduit/Internal.hs:354:{-# RULES
./conduit-1.0.15.1/Data/Conduit/Internal.hs:369:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.15.1/Data/Conduit/Internal.hs:642:{-# RULES
./conduit-1.0.15.1/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.15.1/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.15.1/Data/Conduit.hs:148:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.0.15.1/Data/Conduit.hs:162:{-# RULES
./conduit-1.0.15.1/Data/Conduit.hs:183:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.0.16/Data/Conduit/Internal.hs:310:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.16/Data/Conduit/Internal.hs:319:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.16/Data/Conduit/Internal.hs:354:{-# RULES
./conduit-1.0.16/Data/Conduit/Internal.hs:369:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.16/Data/Conduit/Internal.hs:642:{-# RULES
./conduit-1.0.16/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.16/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.16/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.16/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.16/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.16/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.16/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.16/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.16/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.16/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.16/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.16/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.16/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.16/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.16/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.16/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.16/Data/Conduit.hs:150:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.0.16/Data/Conduit.hs:164:{-# RULES
./conduit-1.0.16/Data/Conduit.hs:185:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.0.17/Data/Conduit/Internal.hs:316:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.17/Data/Conduit/Internal.hs:325:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.17/Data/Conduit/Internal.hs:360:{-# RULES
./conduit-1.0.17/Data/Conduit/Internal.hs:375:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.17/Data/Conduit/Internal.hs:648:{-# RULES
./conduit-1.0.17/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.17/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.17/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.17/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.17/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.17/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.17/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.17/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.17/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.17/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.17/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.17/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.17/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.17/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.17/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.17/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.17/Data/Conduit.hs:167:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.0.17/Data/Conduit.hs:181:{-# RULES
./conduit-1.0.17/Data/Conduit.hs:202:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.0.17.1/Data/Conduit/Internal.hs:316:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.17.1/Data/Conduit/Internal.hs:325:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.17.1/Data/Conduit/Internal.hs:360:{-# RULES
./conduit-1.0.17.1/Data/Conduit/Internal.hs:375:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.17.1/Data/Conduit/Internal.hs:648:{-# RULES
./conduit-1.0.17.1/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.0.17.1/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.0.17.1/Data/Conduit.hs:167:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.0.17.1/Data/Conduit.hs:181:{-# RULES
./conduit-1.0.17.1/Data/Conduit.hs:202:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.0.2/Data/Conduit/Internal.hs:202:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.2/Data/Conduit/Internal.hs:211:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.2/Data/Conduit/Internal.hs:246:{-# RULES
./conduit-1.0.2/Data/Conduit/Internal.hs:262:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.2/Data/Conduit/Internal.hs:504:{-# RULES
./conduit-1.0.2/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.2/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.2/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.2/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.2/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.2/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.2/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.2/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.2/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.2/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.3/Data/Conduit/Internal.hs:202:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.3/Data/Conduit/Internal.hs:211:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.3/Data/Conduit/Internal.hs:246:{-# RULES
./conduit-1.0.3/Data/Conduit/Internal.hs:262:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.3/Data/Conduit/Internal.hs:513:{-# RULES
./conduit-1.0.3/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.3/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.3/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.3/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.3/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.3/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.3/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.3/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.3/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.3/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.4/Data/Conduit/Internal.hs:203:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.4/Data/Conduit/Internal.hs:212:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.4/Data/Conduit/Internal.hs:247:{-# RULES
./conduit-1.0.4/Data/Conduit/Internal.hs:263:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.4/Data/Conduit/Internal.hs:516:{-# RULES
./conduit-1.0.4/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.4/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.4/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.4/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.4/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.4/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.4.1/Data/Conduit/Internal.hs:203:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.4.1/Data/Conduit/Internal.hs:212:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.4.1/Data/Conduit/Internal.hs:247:{-# RULES
./conduit-1.0.4.1/Data/Conduit/Internal.hs:263:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.4.1/Data/Conduit/Internal.hs:516:{-# RULES
./conduit-1.0.4.1/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.4.1/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.4.1/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.4.1/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.4.1/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4.1/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4.1/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4.1/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4.1/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.4.1/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.4.2/Data/Conduit/Internal.hs:203:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.4.2/Data/Conduit/Internal.hs:212:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.4.2/Data/Conduit/Internal.hs:247:{-# RULES
./conduit-1.0.4.2/Data/Conduit/Internal.hs:263:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.4.2/Data/Conduit/Internal.hs:516:{-# RULES
./conduit-1.0.4.2/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.4.2/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.4.2/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.4.2/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.4.2/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4.2/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4.2/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4.2/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.4.2/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.4.2/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.5/Data/Conduit/Internal.hs:203:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.5/Data/Conduit/Internal.hs:212:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.5/Data/Conduit/Internal.hs:247:{-# RULES
./conduit-1.0.5/Data/Conduit/Internal.hs:263:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.5/Data/Conduit/Internal.hs:516:{-# RULES
./conduit-1.0.5/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.5/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.5/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.5/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.5/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.5/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.5/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.5/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.5/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.5/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.5.1/Data/Conduit/Internal.hs:203:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.5.1/Data/Conduit/Internal.hs:212:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.5.1/Data/Conduit/Internal.hs:247:{-# RULES
./conduit-1.0.5.1/Data/Conduit/Internal.hs:263:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.5.1/Data/Conduit/Internal.hs:516:{-# RULES
./conduit-1.0.5.1/Data/Conduit/List.hs:225:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.5.1/Data/Conduit/List.hs:226:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.5.1/Data/Conduit/List.hs:227:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.5.1/Data/Conduit/List.hs:228:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.5.1/Data/Conduit/List.hs:230:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.5.1/Data/Conduit/List.hs:231:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.5.1/Data/Conduit/List.hs:232:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.5.1/Data/Conduit/List.hs:233:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.5.1/Data/Conduit/List.hs:235:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.5.1/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.6/Data/Conduit/Internal.hs:203:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.6/Data/Conduit/Internal.hs:212:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.6/Data/Conduit/Internal.hs:247:{-# RULES
./conduit-1.0.6/Data/Conduit/Internal.hs:263:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.6/Data/Conduit/Internal.hs:516:{-# RULES
./conduit-1.0.6/Data/Conduit/List.hs:231:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.6/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.6/Data/Conduit/List.hs:233:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.6/Data/Conduit/List.hs:234:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.6/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.6/Data/Conduit/List.hs:237:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.6/Data/Conduit/List.hs:238:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.6/Data/Conduit/List.hs:239:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.6/Data/Conduit/List.hs:241:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.6/Data/Conduit/List.hs:242:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.7/Data/Conduit/Internal.hs:290:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.7/Data/Conduit/Internal.hs:299:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.7/Data/Conduit/Internal.hs:334:{-# RULES
./conduit-1.0.7/Data/Conduit/Internal.hs:350:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.7/Data/Conduit/Internal.hs:603:{-# RULES
./conduit-1.0.7/Data/Conduit/List.hs:231:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.7/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.7/Data/Conduit/List.hs:233:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.7/Data/Conduit/List.hs:234:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.7/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7/Data/Conduit/List.hs:237:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7/Data/Conduit/List.hs:238:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7/Data/Conduit/List.hs:239:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7/Data/Conduit/List.hs:241:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.7/Data/Conduit/List.hs:242:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.7.1/Data/Conduit/Internal.hs:290:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.7.1/Data/Conduit/Internal.hs:299:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.7.1/Data/Conduit/Internal.hs:334:{-# RULES
./conduit-1.0.7.1/Data/Conduit/Internal.hs:350:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.7.1/Data/Conduit/Internal.hs:603:{-# RULES
./conduit-1.0.7.1/Data/Conduit/List.hs:231:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.7.1/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.7.1/Data/Conduit/List.hs:233:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.7.1/Data/Conduit/List.hs:234:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.7.1/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.1/Data/Conduit/List.hs:237:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.1/Data/Conduit/List.hs:238:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.1/Data/Conduit/List.hs:239:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.1/Data/Conduit/List.hs:241:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.7.1/Data/Conduit/List.hs:242:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.7.2/Data/Conduit/Internal.hs:290:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.7.2/Data/Conduit/Internal.hs:299:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.7.2/Data/Conduit/Internal.hs:334:{-# RULES
./conduit-1.0.7.2/Data/Conduit/Internal.hs:350:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.7.2/Data/Conduit/Internal.hs:603:{-# RULES
./conduit-1.0.7.2/Data/Conduit/List.hs:231:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.7.2/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.7.2/Data/Conduit/List.hs:233:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.7.2/Data/Conduit/List.hs:234:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.7.2/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.2/Data/Conduit/List.hs:237:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.2/Data/Conduit/List.hs:238:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.2/Data/Conduit/List.hs:239:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.2/Data/Conduit/List.hs:241:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.7.2/Data/Conduit/List.hs:242:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.7.3/Data/Conduit/Internal.hs:290:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.7.3/Data/Conduit/Internal.hs:299:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.7.3/Data/Conduit/Internal.hs:334:{-# RULES
./conduit-1.0.7.3/Data/Conduit/Internal.hs:350:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.7.3/Data/Conduit/Internal.hs:603:{-# RULES
./conduit-1.0.7.3/Data/Conduit/List.hs:231:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.7.3/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.7.3/Data/Conduit/List.hs:233:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.7.3/Data/Conduit/List.hs:234:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.7.3/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.3/Data/Conduit/List.hs:237:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.3/Data/Conduit/List.hs:238:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.3/Data/Conduit/List.hs:239:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.3/Data/Conduit/List.hs:241:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.7.3/Data/Conduit/List.hs:242:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.7.4/Data/Conduit/Internal.hs:290:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.7.4/Data/Conduit/Internal.hs:299:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.7.4/Data/Conduit/Internal.hs:334:{-# RULES
./conduit-1.0.7.4/Data/Conduit/Internal.hs:350:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.7.4/Data/Conduit/Internal.hs:603:{-# RULES
./conduit-1.0.7.4/Data/Conduit/List.hs:231:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.7.4/Data/Conduit/List.hs:232:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.7.4/Data/Conduit/List.hs:233:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.7.4/Data/Conduit/List.hs:234:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.7.4/Data/Conduit/List.hs:236:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.4/Data/Conduit/List.hs:237:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.4/Data/Conduit/List.hs:238:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.4/Data/Conduit/List.hs:239:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.7.4/Data/Conduit/List.hs:241:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.7.4/Data/Conduit/List.hs:242:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.8/Data/Conduit/Internal.hs:290:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.8/Data/Conduit/Internal.hs:299:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.8/Data/Conduit/Internal.hs:334:{-# RULES
./conduit-1.0.8/Data/Conduit/Internal.hs:350:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.8/Data/Conduit/Internal.hs:603:{-# RULES
./conduit-1.0.8/Data/Conduit/List.hs:243:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.8/Data/Conduit/List.hs:244:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.8/Data/Conduit/List.hs:245:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.8/Data/Conduit/List.hs:246:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.8/Data/Conduit/List.hs:248:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.8/Data/Conduit/List.hs:249:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.8/Data/Conduit/List.hs:250:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.8/Data/Conduit/List.hs:251:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.8/Data/Conduit/List.hs:253:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.8/Data/Conduit/List.hs:254:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.9/Data/Conduit/Internal.hs:292:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.9/Data/Conduit/Internal.hs:301:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.9/Data/Conduit/Internal.hs:336:{-# RULES
./conduit-1.0.9/Data/Conduit/Internal.hs:352:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.9/Data/Conduit/Internal.hs:605:{-# RULES
./conduit-1.0.9/Data/Conduit/List.hs:243:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.9/Data/Conduit/List.hs:244:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.9/Data/Conduit/List.hs:245:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.9/Data/Conduit/List.hs:246:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.9/Data/Conduit/List.hs:248:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9/Data/Conduit/List.hs:249:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9/Data/Conduit/List.hs:250:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9/Data/Conduit/List.hs:251:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9/Data/Conduit/List.hs:253:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.9/Data/Conduit/List.hs:254:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.9.1/Data/Conduit/Internal.hs:292:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.9.1/Data/Conduit/Internal.hs:301:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.9.1/Data/Conduit/Internal.hs:336:{-# RULES
./conduit-1.0.9.1/Data/Conduit/Internal.hs:351:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.9.1/Data/Conduit/Internal.hs:604:{-# RULES
./conduit-1.0.9.1/Data/Conduit/List.hs:243:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.9.1/Data/Conduit/List.hs:244:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.9.1/Data/Conduit/List.hs:245:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.9.1/Data/Conduit/List.hs:246:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.9.1/Data/Conduit/List.hs:248:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.1/Data/Conduit/List.hs:249:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.1/Data/Conduit/List.hs:250:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.1/Data/Conduit/List.hs:251:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.1/Data/Conduit/List.hs:253:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.9.1/Data/Conduit/List.hs:254:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.9.2/Data/Conduit/Internal.hs:292:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.9.2/Data/Conduit/Internal.hs:301:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.9.2/Data/Conduit/Internal.hs:336:{-# RULES
./conduit-1.0.9.2/Data/Conduit/Internal.hs:351:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.9.2/Data/Conduit/Internal.hs:604:{-# RULES
./conduit-1.0.9.2/Data/Conduit/List.hs:243:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.9.2/Data/Conduit/List.hs:244:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.9.2/Data/Conduit/List.hs:245:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.9.2/Data/Conduit/List.hs:246:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.9.2/Data/Conduit/List.hs:248:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.2/Data/Conduit/List.hs:249:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.2/Data/Conduit/List.hs:250:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.2/Data/Conduit/List.hs:251:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.2/Data/Conduit/List.hs:253:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.9.2/Data/Conduit/List.hs:254:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.0.9.3/Data/Conduit/Internal.hs:293:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.0.9.3/Data/Conduit/Internal.hs:302:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.0.9.3/Data/Conduit/Internal.hs:337:{-# RULES
./conduit-1.0.9.3/Data/Conduit/Internal.hs:352:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.0.9.3/Data/Conduit/Internal.hs:605:{-# RULES
./conduit-1.0.9.3/Data/Conduit/List.hs:243:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.0.9.3/Data/Conduit/List.hs:244:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.0.9.3/Data/Conduit/List.hs:245:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.0.9.3/Data/Conduit/List.hs:246:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.0.9.3/Data/Conduit/List.hs:248:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.3/Data/Conduit/List.hs:249:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.3/Data/Conduit/List.hs:250:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.3/Data/Conduit/List.hs:251:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.0.9.3/Data/Conduit/List.hs:253:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.0.9.3/Data/Conduit/List.hs:254:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.0/Data/Conduit/Internal.hs:318:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.0/Data/Conduit/Internal.hs:327:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.0/Data/Conduit/Internal.hs:366:{-# RULES
./conduit-1.1.0/Data/Conduit/Internal.hs:383:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.0/Data/Conduit/Internal.hs:656:{-# RULES
./conduit-1.1.0/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.0/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.0/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.0/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.0/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.0/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.0/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.0/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.0/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.0/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.0/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.0/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.0/Data/Conduit.hs:162:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.0/Data/Conduit.hs:180:{-# RULES
./conduit-1.1.0/Data/Conduit.hs:202:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.0.1/Data/Conduit/Internal.hs:318:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.0.1/Data/Conduit/Internal.hs:327:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.0.1/Data/Conduit/Internal.hs:366:{-# RULES
./conduit-1.1.0.1/Data/Conduit/Internal.hs:383:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.0.1/Data/Conduit/Internal.hs:656:{-# RULES
./conduit-1.1.0.1/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.0.1/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.0.1/Data/Conduit.hs:162:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.0.1/Data/Conduit.hs:180:{-# RULES
./conduit-1.1.0.1/Data/Conduit.hs:202:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.0.2/Data/Conduit/Internal.hs:318:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.0.2/Data/Conduit/Internal.hs:327:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.0.2/Data/Conduit/Internal.hs:366:{-# RULES
./conduit-1.1.0.2/Data/Conduit/Internal.hs:383:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.0.2/Data/Conduit/Internal.hs:656:{-# RULES
./conduit-1.1.0.2/Data/Conduit/List.hs:192:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:251:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:252:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:263:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:264:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:265:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:266:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:268:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:269:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:270:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:271:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:273:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:460:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:461:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.0.2/Data/Conduit/List.hs:470:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.0.2/Data/Conduit.hs:162:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.0.2/Data/Conduit.hs:180:{-# RULES
./conduit-1.1.0.2/Data/Conduit.hs:202:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.1/Data/Conduit/Internal.hs:318:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.1/Data/Conduit/Internal.hs:327:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.1/Data/Conduit/Internal.hs:366:{-# RULES
./conduit-1.1.1/Data/Conduit/Internal.hs:383:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.1/Data/Conduit/Internal.hs:656:{-# RULES
./conduit-1.1.1/Data/Conduit/List.hs:196:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.1/Data/Conduit/List.hs:255:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.1/Data/Conduit/List.hs:256:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.1/Data/Conduit/List.hs:267:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.1/Data/Conduit/List.hs:268:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.1/Data/Conduit/List.hs:269:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.1/Data/Conduit/List.hs:270:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.1/Data/Conduit/List.hs:272:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.1/Data/Conduit/List.hs:273:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.1/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.1/Data/Conduit/List.hs:275:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.1/Data/Conduit/List.hs:277:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.1/Data/Conduit/List.hs:278:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.1/Data/Conduit/List.hs:494:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.1/Data/Conduit/List.hs:495:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.1/Data/Conduit/List.hs:504:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.1/Data/Conduit.hs:162:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.1/Data/Conduit.hs:180:{-# RULES
./conduit-1.1.1/Data/Conduit.hs:202:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.1.1/Data/Conduit/Internal.hs:318:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.1.1/Data/Conduit/Internal.hs:327:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.1.1/Data/Conduit/Internal.hs:366:{-# RULES
./conduit-1.1.1.1/Data/Conduit/Internal.hs:383:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.1.1/Data/Conduit/Internal.hs:656:{-# RULES
./conduit-1.1.1.1/Data/Conduit/List.hs:196:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:255:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:256:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:267:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:268:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:269:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:270:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:272:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:273:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:274:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:275:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:277:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:278:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:494:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:495:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.1.1/Data/Conduit/List.hs:504:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.1.1/Data/Conduit.hs:162:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.1.1/Data/Conduit.hs:180:{-# RULES
./conduit-1.1.1.1/Data/Conduit.hs:202:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.2/Data/Conduit/Internal.hs:318:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.2/Data/Conduit/Internal.hs:327:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.2/Data/Conduit/Internal.hs:366:{-# RULES
./conduit-1.1.2/Data/Conduit/Internal.hs:383:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.2/Data/Conduit/Internal.hs:656:{-# RULES
./conduit-1.1.2/Data/Conduit/List.hs:213:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.2/Data/Conduit/List.hs:272:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.2/Data/Conduit/List.hs:273:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.2/Data/Conduit/List.hs:284:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.2/Data/Conduit/List.hs:285:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.2/Data/Conduit/List.hs:286:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.2/Data/Conduit/List.hs:287:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.2/Data/Conduit/List.hs:289:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.2/Data/Conduit/List.hs:290:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.2/Data/Conduit/List.hs:291:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.2/Data/Conduit/List.hs:292:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.2/Data/Conduit/List.hs:294:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.2/Data/Conduit/List.hs:295:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.2/Data/Conduit/List.hs:511:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.2/Data/Conduit/List.hs:512:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.2/Data/Conduit/List.hs:521:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.2/Data/Conduit.hs:162:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.2/Data/Conduit.hs:180:{-# RULES
./conduit-1.1.2/Data/Conduit.hs:202:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.2.1/Data/Conduit/Internal.hs:318:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.2.1/Data/Conduit/Internal.hs:327:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.2.1/Data/Conduit/Internal.hs:366:{-# RULES
./conduit-1.1.2.1/Data/Conduit/Internal.hs:383:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.2.1/Data/Conduit/Internal.hs:656:{-# RULES
./conduit-1.1.2.1/Data/Conduit/List.hs:213:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:272:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:273:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:284:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:285:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:286:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:287:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:289:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:290:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:291:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:292:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:294:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:295:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:511:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:512:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.2.1/Data/Conduit/List.hs:521:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.2.1/Data/Conduit.hs:162:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.2.1/Data/Conduit.hs:180:{-# RULES
./conduit-1.1.2.1/Data/Conduit.hs:202:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.3/Data/Conduit/Internal.hs:318:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.3/Data/Conduit/Internal.hs:327:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.3/Data/Conduit/Internal.hs:366:{-# RULES
./conduit-1.1.3/Data/Conduit/Internal.hs:383:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.3/Data/Conduit/Internal.hs:656:{-# RULES
./conduit-1.1.3/Data/Conduit/List.hs:213:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.3/Data/Conduit/List.hs:272:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.3/Data/Conduit/List.hs:273:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.3/Data/Conduit/List.hs:284:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.3/Data/Conduit/List.hs:285:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.3/Data/Conduit/List.hs:286:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.3/Data/Conduit/List.hs:287:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.3/Data/Conduit/List.hs:289:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.3/Data/Conduit/List.hs:290:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.3/Data/Conduit/List.hs:291:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.3/Data/Conduit/List.hs:292:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.3/Data/Conduit/List.hs:294:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.3/Data/Conduit/List.hs:295:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.3/Data/Conduit/List.hs:511:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.3/Data/Conduit/List.hs:512:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.3/Data/Conduit/List.hs:521:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.3/Data/Conduit.hs:163:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.3/Data/Conduit.hs:181:{-# RULES
./conduit-1.1.3/Data/Conduit.hs:203:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.4/Data/Conduit/Internal.hs:320:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.4/Data/Conduit/Internal.hs:329:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.4/Data/Conduit/Internal.hs:368:{-# RULES
./conduit-1.1.4/Data/Conduit/Internal.hs:385:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.4/Data/Conduit/Internal.hs:658:{-# RULES
./conduit-1.1.4/Data/Conduit/List.hs:213:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.4/Data/Conduit/List.hs:272:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.4/Data/Conduit/List.hs:273:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.4/Data/Conduit/List.hs:284:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.4/Data/Conduit/List.hs:285:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.4/Data/Conduit/List.hs:286:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.4/Data/Conduit/List.hs:287:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.4/Data/Conduit/List.hs:289:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.4/Data/Conduit/List.hs:290:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.4/Data/Conduit/List.hs:291:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.4/Data/Conduit/List.hs:292:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.4/Data/Conduit/List.hs:294:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.4/Data/Conduit/List.hs:295:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.4/Data/Conduit/List.hs:511:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.4/Data/Conduit/List.hs:512:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.4/Data/Conduit/List.hs:521:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.4/Data/Conduit.hs:165:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.4/Data/Conduit.hs:183:{-# RULES
./conduit-1.1.4/Data/Conduit.hs:205:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.5/Data/Conduit/Internal.hs:321:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.5/Data/Conduit/Internal.hs:330:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.5/Data/Conduit/Internal.hs:369:{-# RULES
./conduit-1.1.5/Data/Conduit/Internal.hs:386:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.5/Data/Conduit/Internal.hs:659:{-# RULES
./conduit-1.1.5/Data/Conduit/List.hs:213:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.5/Data/Conduit/List.hs:272:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.5/Data/Conduit/List.hs:273:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.5/Data/Conduit/List.hs:284:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.5/Data/Conduit/List.hs:285:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.5/Data/Conduit/List.hs:286:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.5/Data/Conduit/List.hs:287:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.5/Data/Conduit/List.hs:289:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.5/Data/Conduit/List.hs:290:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.5/Data/Conduit/List.hs:291:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.5/Data/Conduit/List.hs:292:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.5/Data/Conduit/List.hs:294:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.5/Data/Conduit/List.hs:295:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.5/Data/Conduit/List.hs:511:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.5/Data/Conduit/List.hs:512:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.5/Data/Conduit/List.hs:521:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.5/Data/Conduit.hs:169:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.5/Data/Conduit.hs:187:{-# RULES
./conduit-1.1.5/Data/Conduit.hs:209:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.6/Data/Conduit/Internal.hs:341:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.6/Data/Conduit/Internal.hs:350:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.6/Data/Conduit/Internal.hs:389:{-# RULES
./conduit-1.1.6/Data/Conduit/Internal.hs:406:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.6/Data/Conduit/Internal.hs:679:{-# RULES
./conduit-1.1.6/Data/Conduit/List.hs:213:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.6/Data/Conduit/List.hs:272:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.6/Data/Conduit/List.hs:273:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.6/Data/Conduit/List.hs:284:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.6/Data/Conduit/List.hs:285:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.6/Data/Conduit/List.hs:286:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.6/Data/Conduit/List.hs:287:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.6/Data/Conduit/List.hs:289:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.6/Data/Conduit/List.hs:290:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.6/Data/Conduit/List.hs:291:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.6/Data/Conduit/List.hs:292:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.6/Data/Conduit/List.hs:294:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.6/Data/Conduit/List.hs:295:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.6/Data/Conduit/List.hs:511:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.6/Data/Conduit/List.hs:512:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.6/Data/Conduit/List.hs:521:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.6/Data/Conduit.hs:169:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.6/Data/Conduit.hs:187:{-# RULES
./conduit-1.1.6/Data/Conduit.hs:209:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.1.7/Data/Conduit/Internal.hs:341:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.1.7/Data/Conduit/Internal.hs:350:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.1.7/Data/Conduit/Internal.hs:389:{-# RULES
./conduit-1.1.7/Data/Conduit/Internal.hs:406:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.1.7/Data/Conduit/Internal.hs:679:{-# RULES
./conduit-1.1.7/Data/Conduit/List.hs:214:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.1.7/Data/Conduit/List.hs:273:{-# RULES "source/map fusion $=" forall f src. src $= map f = mapFuseRight src f #-}
./conduit-1.1.7/Data/Conduit/List.hs:274:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.1.7/Data/Conduit/List.hs:285:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.1.7/Data/Conduit/List.hs:286:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.1.7/Data/Conduit/List.hs:287:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.1.7/Data/Conduit/List.hs:288:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.1.7/Data/Conduit/List.hs:290:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.7/Data/Conduit/List.hs:291:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.7/Data/Conduit/List.hs:292:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.7/Data/Conduit/List.hs:293:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.1.7/Data/Conduit/List.hs:295:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.1.7/Data/Conduit/List.hs:296:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.1.7/Data/Conduit/List.hs:541:{-# RULES "source/filter fusion $=" forall f src. src $= filter f = filterFuseRight src f #-}
./conduit-1.1.7/Data/Conduit/List.hs:542:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.1.7/Data/Conduit/List.hs:551:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.1.7/Data/Conduit.hs:169:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = ConduitM (NeedInput (unConduitM . y) (unConduitM . const x)) #-}
./conduit-1.1.7/Data/Conduit.hs:187:{-# RULES
./conduit-1.1.7/Data/Conduit.hs:209:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.0/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.0/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:736:{-# RULES "$= is =$=" ($=) = (=$=) #-}
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:752:{-# RULES "=$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:802:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:1173:{-# RULES "ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:1174:{-# RULES "ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:1176:{-# RULES "ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:1177:{-# RULES "ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:1179:{-# RULES "ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:1180:{-# RULES "ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:1182:{-# RULES
./conduit-1.2.0/Data/Conduit/Internal/Conduit.hs:1192:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.0/Data/Conduit/Internal/Fusion.hs:50:{-# RULES "fuseStream" forall left right.
./conduit-1.2.0/Data/Conduit/Internal/Fusion.hs:73:{-# RULES "connectStream" forall left right.
./conduit-1.2.0/Data/Conduit/Internal/Fusion.hs:98:{-# RULES "connectStream1" forall left right.
./conduit-1.2.0/Data/Conduit/Internal/Fusion.hs:129:{-# RULES "connectStream2" forall left right.
./conduit-1.2.0/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.0/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.0/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.0/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.0/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.0/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.0/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.0/Data/Conduit/List.hs:137:{-# RULES "unstream enumFromTo" forall x y.
./conduit-1.2.0/Data/Conduit/List.hs:172:{-# RULES "enumFromTo<Int>"
./conduit-1.2.0/Data/Conduit/List.hs:191:{-# RULES "unstream replicate" forall i a.
./conduit-1.2.0/Data/Conduit/List.hs:219:{-# RULES "unstream replicateM" forall i a.
./conduit-1.2.0/Data/Conduit/List.hs:252:{-# RULES "unstream fold" forall f b.
./conduit-1.2.0/Data/Conduit/List.hs:289:{-# RULES "unstream foldM" forall f b.
./conduit-1.2.0/Data/Conduit/List.hs:337:{-# RULES "$$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.0/Data/Conduit/List.hs:353:{-# RULES "$$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.0/Data/Conduit/List.hs:397:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.0/Data/Conduit/List.hs:456:{-# RULES "unstream map" forall f.
./conduit-1.2.0/Data/Conduit/List.hs:478:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.0/Data/Conduit/List.hs:490:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.0/Data/Conduit/List.hs:491:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.0/Data/Conduit/List.hs:492:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.0/Data/Conduit/List.hs:493:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.0/Data/Conduit/List.hs:495:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0/Data/Conduit/List.hs:496:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0/Data/Conduit/List.hs:497:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0/Data/Conduit/List.hs:498:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0/Data/Conduit/List.hs:500:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.0/Data/Conduit/List.hs:501:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.0/Data/Conduit/List.hs:518:{-# RULES "unstream mapM" forall f.
./conduit-1.2.0/Data/Conduit/List.hs:682:{-# RULES "unstream consume" consume = unstream (streamConduit consumeC consumeS) #-}
./conduit-1.2.0/Data/Conduit/List.hs:787:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.0/Data/Conduit/List.hs:796:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.0.1/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.0.1/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:736:{-# RULES "$= is =$=" ($=) = (=$=) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:752:{-# RULES "=$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:802:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:1173:{-# RULES "ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:1174:{-# RULES "ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:1176:{-# RULES "ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:1177:{-# RULES "ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:1179:{-# RULES "ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:1180:{-# RULES "ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:1182:{-# RULES
./conduit-1.2.0.1/Data/Conduit/Internal/Conduit.hs:1192:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.0.1/Data/Conduit/Internal/Fusion.hs:50:{-# RULES "fuseStream" forall left right.
./conduit-1.2.0.1/Data/Conduit/Internal/Fusion.hs:73:{-# RULES "connectStream" forall left right.
./conduit-1.2.0.1/Data/Conduit/Internal/Fusion.hs:98:{-# RULES "connectStream1" forall left right.
./conduit-1.2.0.1/Data/Conduit/Internal/Fusion.hs:129:{-# RULES "connectStream2" forall left right.
./conduit-1.2.0.1/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.0.1/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.0.1/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.0.1/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:137:{-# RULES "unstream enumFromTo" forall x y.
./conduit-1.2.0.1/Data/Conduit/List.hs:172:{-# RULES "enumFromTo<Int>"
./conduit-1.2.0.1/Data/Conduit/List.hs:191:{-# RULES "unstream replicate" forall i a.
./conduit-1.2.0.1/Data/Conduit/List.hs:219:{-# RULES "unstream replicateM" forall i a.
./conduit-1.2.0.1/Data/Conduit/List.hs:252:{-# RULES "unstream fold" forall f b.
./conduit-1.2.0.1/Data/Conduit/List.hs:289:{-# RULES "unstream foldM" forall f b.
./conduit-1.2.0.1/Data/Conduit/List.hs:337:{-# RULES "$$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:353:{-# RULES "$$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:397:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:456:{-# RULES "unstream map" forall f.
./conduit-1.2.0.1/Data/Conduit/List.hs:478:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:490:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:491:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:492:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:493:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:495:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:496:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:497:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:498:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:500:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:501:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:518:{-# RULES "unstream mapM" forall f.
./conduit-1.2.0.1/Data/Conduit/List.hs:682:{-# RULES "unstream consume" consume = unstream (streamConduit consumeC consumeS) #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:787:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.0.1/Data/Conduit/List.hs:796:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.0.2/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.0.2/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:737:{-# RULES "$= is =$=" ($=) = (=$=) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:753:{-# RULES "=$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:803:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:1174:{-# RULES "ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:1175:{-# RULES "ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:1177:{-# RULES "ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:1178:{-# RULES "ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:1180:{-# RULES "ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:1181:{-# RULES "ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:1183:{-# RULES
./conduit-1.2.0.2/Data/Conduit/Internal/Conduit.hs:1193:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.0.2/Data/Conduit/Internal/Fusion.hs:50:{-# RULES "fuseStream" forall left right.
./conduit-1.2.0.2/Data/Conduit/Internal/Fusion.hs:73:{-# RULES "connectStream" forall left right.
./conduit-1.2.0.2/Data/Conduit/Internal/Fusion.hs:98:{-# RULES "connectStream1" forall left right.
./conduit-1.2.0.2/Data/Conduit/Internal/Fusion.hs:129:{-# RULES "connectStream2" forall left right.
./conduit-1.2.0.2/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.0.2/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.0.2/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.0.2/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:137:{-# RULES "unstream enumFromTo" forall x y.
./conduit-1.2.0.2/Data/Conduit/List.hs:172:{-# RULES "enumFromTo<Int>"
./conduit-1.2.0.2/Data/Conduit/List.hs:191:{-# RULES "unstream replicate" forall i a.
./conduit-1.2.0.2/Data/Conduit/List.hs:219:{-# RULES "unstream replicateM" forall i a.
./conduit-1.2.0.2/Data/Conduit/List.hs:252:{-# RULES "unstream fold" forall f b.
./conduit-1.2.0.2/Data/Conduit/List.hs:289:{-# RULES "unstream foldM" forall f b.
./conduit-1.2.0.2/Data/Conduit/List.hs:337:{-# RULES "$$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:353:{-# RULES "$$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:397:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:456:{-# RULES "unstream map" forall f.
./conduit-1.2.0.2/Data/Conduit/List.hs:478:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:490:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:491:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:492:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:493:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:495:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:496:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:497:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:498:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:500:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:501:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:518:{-# RULES "unstream mapM" forall f.
./conduit-1.2.0.2/Data/Conduit/List.hs:682:{-# RULES "unstream consume" consume = unstream (streamConduit consumeC consumeS) #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:787:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.0.2/Data/Conduit/List.hs:796:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.1/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.1/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:738:{-# RULES "$= is =$=" ($=) = (=$=) #-}
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:754:{-# RULES "=$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:804:{-# RULES "await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:1182:{-# RULES "ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:1183:{-# RULES "ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:1185:{-# RULES "ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:1186:{-# RULES "ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:1188:{-# RULES "ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:1189:{-# RULES "ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:1191:{-# RULES
./conduit-1.2.1/Data/Conduit/Internal/Conduit.hs:1201:{-# RULES "leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.1/Data/Conduit/Internal/Fusion.hs:50:{-# RULES "fuseStream" forall left right.
./conduit-1.2.1/Data/Conduit/Internal/Fusion.hs:72:{-# RULES "runStream" forall stream.
./conduit-1.2.1/Data/Conduit/Internal/Fusion.hs:95:{-# RULES "connectStream" forall left right.
./conduit-1.2.1/Data/Conduit/Internal/Fusion.hs:120:{-# RULES "connectStream1" forall left right.
./conduit-1.2.1/Data/Conduit/Internal/Fusion.hs:151:{-# RULES "connectStream2" forall left right.
./conduit-1.2.1/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.1/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.1/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.1/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.1/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.1/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.1/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.1/Data/Conduit/List.hs:137:{-# RULES "unstream enumFromTo" forall x y.
./conduit-1.2.1/Data/Conduit/List.hs:172:{-# RULES "enumFromTo<Int>"
./conduit-1.2.1/Data/Conduit/List.hs:191:{-# RULES "unstream replicate" forall i a.
./conduit-1.2.1/Data/Conduit/List.hs:219:{-# RULES "unstream replicateM" forall i a.
./conduit-1.2.1/Data/Conduit/List.hs:252:{-# RULES "unstream fold" forall f b.
./conduit-1.2.1/Data/Conduit/List.hs:289:{-# RULES "unstream foldM" forall f b.
./conduit-1.2.1/Data/Conduit/List.hs:337:{-# RULES "$$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.1/Data/Conduit/List.hs:353:{-# RULES "$$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.1/Data/Conduit/List.hs:397:{-# RULES "connect to mapM_" forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.1/Data/Conduit/List.hs:456:{-# RULES "unstream map" forall f.
./conduit-1.2.1/Data/Conduit/List.hs:478:{-# RULES "source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.1/Data/Conduit/List.hs:490:{-# RULES "map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.1/Data/Conduit/List.hs:491:{-# RULES "map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.1/Data/Conduit/List.hs:492:{-# RULES "map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.1/Data/Conduit/List.hs:493:{-# RULES "map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.1/Data/Conduit/List.hs:495:{-# RULES "map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.1/Data/Conduit/List.hs:496:{-# RULES "map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.1/Data/Conduit/List.hs:497:{-# RULES "map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.1/Data/Conduit/List.hs:498:{-# RULES "map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.1/Data/Conduit/List.hs:500:{-# RULES "map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.1/Data/Conduit/List.hs:501:{-# RULES "map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.1/Data/Conduit/List.hs:518:{-# RULES "unstream mapM" forall f.
./conduit-1.2.1/Data/Conduit/List.hs:682:{-# RULES "unstream consume" consume = unstream (streamConduit consumeC consumeS) #-}
./conduit-1.2.1/Data/Conduit/List.hs:787:{-# RULES "source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.1/Data/Conduit/List.hs:796:{-# RULES "connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.2/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.2/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:738:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:754:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:804:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:1182:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:1183:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:1185:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:1186:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:1188:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:1189:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:1191:{-# RULES
./conduit-1.2.2/Data/Conduit/Internal/Conduit.hs:1201:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.2/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.2/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.2/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.2/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.2/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.2/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.2/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.2/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.2/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.2/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.2/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.2/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.2/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.2/Data/Conduit/List.hs:254:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.2/Data/Conduit/List.hs:270:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.2/Data/Conduit/List.hs:313:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.2/Data/Conduit/List.hs:388:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.2/Data/Conduit/List.hs:400:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.2/Data/Conduit/List.hs:401:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.2/Data/Conduit/List.hs:402:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.2/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.2/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2/Data/Conduit/List.hs:407:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.2/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.2/Data/Conduit/List.hs:723:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.2/Data/Conduit/List.hs:747:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.2.1/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.2.1/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:738:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:754:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:804:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:1182:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:1183:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:1185:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:1186:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:1188:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:1189:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:1191:{-# RULES
./conduit-1.2.2.1/Data/Conduit/Internal/Conduit.hs:1201:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.2.1/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.2.1/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.2.1/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.2.1/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.2.1/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.2.1/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.2.1/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.2.1/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.2.1/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.2.1/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:254:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:270:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:313:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:388:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:400:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:401:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:402:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:407:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:723:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.2.1/Data/Conduit/List.hs:747:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.2.2/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.2.2/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:738:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:754:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:804:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:1182:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:1183:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:1185:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:1186:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:1188:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:1189:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:1191:{-# RULES
./conduit-1.2.2.2/Data/Conduit/Internal/Conduit.hs:1201:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.2.2/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.2.2/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.2.2/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.2.2/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.2.2/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.2.2/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.2.2/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.2.2/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.2.2/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.2.2/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:257:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:273:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:316:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:391:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:413:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:726:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.2.2/Data/Conduit/List.hs:750:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.3/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.3/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:738:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:754:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:804:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:1182:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:1183:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:1185:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:1186:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:1188:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:1189:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:1191:{-# RULES
./conduit-1.2.3/Data/Conduit/Internal/Conduit.hs:1201:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.3/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.3/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.3/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.3/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.3/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.3/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.3/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.3/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.3/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.3/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.3/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.3/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.3/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.3/Data/Conduit/List.hs:257:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.3/Data/Conduit/List.hs:273:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.3/Data/Conduit/List.hs:316:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.3/Data/Conduit/List.hs:391:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.3/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.3/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.3/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.3/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.3/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.3/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.3/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.3/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.3/Data/Conduit/List.hs:413:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.3/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.3/Data/Conduit/List.hs:726:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.3/Data/Conduit/List.hs:750:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.3.1/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.3.1/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:738:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:754:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:804:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:1182:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:1183:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:1185:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:1186:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:1188:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:1189:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:1191:{-# RULES
./conduit-1.2.3.1/Data/Conduit/Internal/Conduit.hs:1201:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.3.1/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.3.1/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.3.1/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.3.1/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.3.1/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.3.1/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.3.1/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.3.1/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.3.1/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.3.1/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:257:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:273:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:316:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:391:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:413:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:726:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.3.1/Data/Conduit/List.hs:750:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.4/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.4/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:739:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:755:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:805:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:1212:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:1213:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:1215:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:1216:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:1218:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:1219:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:1221:{-# RULES
./conduit-1.2.4/Data/Conduit/Internal/Conduit.hs:1231:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.4/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.4/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.4/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.4/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.4/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.4/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.4/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.4/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.4/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.4/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.4/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.4/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.4/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.4/Data/Conduit/List.hs:257:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.4/Data/Conduit/List.hs:273:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.4/Data/Conduit/List.hs:316:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.4/Data/Conduit/List.hs:391:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.4/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.4/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.4/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.4/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.4/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4/Data/Conduit/List.hs:413:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.4/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.4/Data/Conduit/List.hs:726:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.4/Data/Conduit/List.hs:750:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.4.1/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.4.1/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:731:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:739:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:790:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:1203:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:1204:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:1206:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:1207:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:1209:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:1210:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:1212:{-# RULES
./conduit-1.2.4.1/Data/Conduit/Internal/Conduit.hs:1222:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.4.1/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.4.1/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.4.1/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.4.1/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.4.1/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.4.1/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.4.1/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.4.1/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.4.1/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.4.1/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:257:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:273:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:316:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:391:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:413:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:727:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.4.1/Data/Conduit/List.hs:751:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.4.2/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.4.2/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:731:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:739:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:790:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:1203:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:1204:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:1206:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:1207:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:1209:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:1210:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:1212:{-# RULES
./conduit-1.2.4.2/Data/Conduit/Internal/Conduit.hs:1222:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.4.2/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.4.2/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.4.2/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.4.2/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.4.2/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.4.2/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.4.2/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.4.2/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.4.2/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.4.2/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:257:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:273:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:316:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:391:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:413:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:727:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.4.2/Data/Conduit/List.hs:751:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.4.3/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.4.3/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:731:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:739:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:790:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:1203:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:1204:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:1206:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:1207:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:1209:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:1210:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:1212:{-# RULES
./conduit-1.2.4.3/Data/Conduit/Internal/Conduit.hs:1222:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.4.3/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.4.3/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.4.3/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.4.3/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.4.3/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.4.3/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.4.3/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.4.3/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.4.3/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.4.3/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:257:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:273:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:316:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:391:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:413:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:727:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.4.3/Data/Conduit/List.hs:751:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.5/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.5/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:731:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:739:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:790:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:1203:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:1204:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:1206:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:1207:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:1209:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:1210:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:1212:{-# RULES
./conduit-1.2.5/Data/Conduit/Internal/Conduit.hs:1222:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.5/Data/Conduit/Internal/Fusion.hs:67:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.5/Data/Conduit/Internal/Fusion.hs:89:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.5/Data/Conduit/Internal/Fusion.hs:112:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.5/Data/Conduit/Internal/Fusion.hs:137:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.5/Data/Conduit/Internal/Fusion.hs:168:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.5/Data/Conduit/Internal/List/Stream.hs:69:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.5/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.5/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.5/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.5/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.5/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.5/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.5/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.5/Data/Conduit/List.hs:257:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.5/Data/Conduit/List.hs:273:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.5/Data/Conduit/List.hs:316:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.5/Data/Conduit/List.hs:391:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.5/Data/Conduit/List.hs:403:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.5/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.5/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.5/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.5/Data/Conduit/List.hs:408:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.5/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.5/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.5/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.5/Data/Conduit/List.hs:413:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.5/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.5/Data/Conduit/List.hs:728:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.5/Data/Conduit/List.hs:752:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.5.1/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.5.1/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:731:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:739:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:790:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:1203:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:1204:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:1206:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:1207:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:1209:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:1210:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:1212:{-# RULES
./conduit-1.2.5.1/Data/Conduit/Internal/Conduit.hs:1222:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.5.1/Data/Conduit/Internal/Fusion.hs:68:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.5.1/Data/Conduit/Internal/Fusion.hs:90:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.5.1/Data/Conduit/Internal/Fusion.hs:113:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.5.1/Data/Conduit/Internal/Fusion.hs:138:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.5.1/Data/Conduit/Internal/Fusion.hs:169:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.5.1/Data/Conduit/Internal/List/Stream.hs:70:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.5.1/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.5.1/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.5.1/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.5.1/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:258:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:274:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:317:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:392:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:407:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:412:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:415:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:729:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.5.1/Data/Conduit/List.hs:753:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.6/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.6/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:772:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:780:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:831:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:1244:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:1245:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:1247:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:1248:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:1250:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:1251:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:1253:{-# RULES
./conduit-1.2.6/Data/Conduit/Internal/Conduit.hs:1263:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.6/Data/Conduit/Internal/Fusion.hs:68:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.6/Data/Conduit/Internal/Fusion.hs:90:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.6/Data/Conduit/Internal/Fusion.hs:113:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.6/Data/Conduit/Internal/Fusion.hs:138:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.6/Data/Conduit/Internal/Fusion.hs:169:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.6/Data/Conduit/Internal/List/Stream.hs:70:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.6/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.6/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.6/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.6/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.6/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.6/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.6/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.6/Data/Conduit/List.hs:258:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.6/Data/Conduit/List.hs:274:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.6/Data/Conduit/List.hs:317:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.6/Data/Conduit/List.hs:392:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.6/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.6/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.6/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.6/Data/Conduit/List.hs:407:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.6/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6/Data/Conduit/List.hs:412:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.6/Data/Conduit/List.hs:415:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.6/Data/Conduit/List.hs:729:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.6/Data/Conduit/List.hs:753:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.6.1/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.6.1/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:773:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:781:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:832:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:1245:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:1246:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:1248:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:1249:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:1251:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:1252:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:1254:{-# RULES
./conduit-1.2.6.1/Data/Conduit/Internal/Conduit.hs:1264:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.6.1/Data/Conduit/Internal/Fusion.hs:68:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.6.1/Data/Conduit/Internal/Fusion.hs:90:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.6.1/Data/Conduit/Internal/Fusion.hs:113:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.6.1/Data/Conduit/Internal/Fusion.hs:138:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.6.1/Data/Conduit/Internal/Fusion.hs:169:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.6.1/Data/Conduit/Internal/List/Stream.hs:70:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.6.1/Data/Conduit/Internal/Pipe.hs:223:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Pipe.hs:232:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Pipe.hs:271:{-# RULES
./conduit-1.2.6.1/Data/Conduit/Internal/Pipe.hs:289:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Pipe.hs:530:{-# RULES
./conduit-1.2.6.1/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.6.1/Data/Conduit/Internal/Pipe.hs:632:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:258:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:274:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:317:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:392:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:407:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:412:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:415:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:729:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.6.1/Data/Conduit/List.hs:753:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-1.2.6.2/benchmarks/optimize-201408.hs:315:{-# RULES "unstream slidingWindowC"
./conduit-1.2.6.2/benchmarks/optimize-201408.hs:361:{-# RULES "unstream slidingVectorC"
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:773:{-# RULES "conduit: $= is =$=" ($=) = (=$=) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:781:{-# RULES "conduit: =$ is =$=" (=$) = (=$=) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:832:{-# RULES "conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:1245:{-# RULES "conduit: ConduitM: lift x >>= f" forall m f. lift m >>= f = ConduitM (PipeM (liftM (unConduitM . f) m)) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:1246:{-# RULES "conduit: ConduitM: lift x >> f" forall m f. lift m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) m)) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:1248:{-# RULES "conduit: ConduitM: liftIO x >>= f" forall m (f :: MonadIO m => a -> ConduitM i o m r). liftIO m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftIO m))) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:1249:{-# RULES "conduit: ConduitM: liftIO x >> f" forall m (f :: MonadIO m => ConduitM i o m r). liftIO m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftIO m))) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:1251:{-# RULES "conduit: ConduitM: liftBase x >>= f" forall m (f :: MonadBase b m => a -> ConduitM i o m r). liftBase m >>= f = ConduitM (PipeM (liftM (unConduitM . f) (liftBase m))) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:1252:{-# RULES "conduit: ConduitM: liftBase x >> f" forall m (f :: MonadBase b m => ConduitM i o m r). liftBase m >> f = ConduitM (PipeM (liftM (\_ -> unConduitM f) (liftBase m))) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:1254:{-# RULES
./conduit-1.2.6.2/Data/Conduit/Internal/Conduit.hs:1264:{-# RULES "conduit: leftover l >> p" forall l (p :: ConduitM i o m r). leftover l >> p =
./conduit-1.2.6.2/Data/Conduit/Internal/Fusion.hs:68:{-# RULES "conduit: fuseStream" forall left right.
./conduit-1.2.6.2/Data/Conduit/Internal/Fusion.hs:90:{-# RULES "conduit: runStream" forall stream.
./conduit-1.2.6.2/Data/Conduit/Internal/Fusion.hs:113:{-# RULES "conduit: connectStream" forall left right.
./conduit-1.2.6.2/Data/Conduit/Internal/Fusion.hs:138:{-# RULES "conduit: connectStream1" forall left right.
./conduit-1.2.6.2/Data/Conduit/Internal/Fusion.hs:169:{-# RULES "conduit: connectStream2" forall left right.
./conduit-1.2.6.2/Data/Conduit/Internal/List/Stream.hs:70:{-# RULES "conduit: enumFromTo<Int>" forall f t.
./conduit-1.2.6.2/Data/Conduit/Internal/Pipe.hs:222:{-# RULES "conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Pipe.hs:231:{-# RULES "conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Pipe.hs:270:{-# RULES
./conduit-1.2.6.2/Data/Conduit/Internal/Pipe.hs:288:{-# RULES "conduit: leftover l >> p" forall l (p :: Pipe l i o u m r). leftover l >> p = Leftover p l #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Pipe.hs:529:{-# RULES
./conduit-1.2.6.2/Data/Conduit/Internal/Pipe.hs:630:{-# RULES "conduit: Pipe: lift x >>= f" forall m f. lift m >>= f = PipeM (liftM f m) #-}
./conduit-1.2.6.2/Data/Conduit/Internal/Pipe.hs:631:{-# RULES "conduit: Pipe: lift x >> f" forall m f. lift m >> f = PipeM (liftM (\_ -> f) m) #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:258:{-# RULES "conduit: $$ fold" forall src f b. src $$ fold f b = connectFold src f b #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:274:{-# RULES "conduit: $$ foldM" forall src f b. src $$ foldM f b = connectFoldM src f b #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:317:{-# RULES "conduit: connect to mapM_" [2] forall f src. src $$ mapM_ f = srcMapM_ src f #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:392:{-# RULES "conduit: source/map fusion =$=" forall f src. src =$= map f = mapFuseRight src f #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:404:{-# RULES "conduit: map-to-mapOutput pipeL" forall f src. pipeL src (map f) = mapOutput f src #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:405:{-# RULES "conduit: map-to-mapOutput $=" forall f src. src $= (map f) = mapOutput f src #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:406:{-# RULES "conduit: map-to-mapOutput pipe" forall f src. pipe src (map f) = mapOutput f src #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:407:{-# RULES "conduit: map-to-mapOutput >+>" forall f src. src >+> (map f) = mapOutput f src #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:409:{-# RULES "conduit: map-to-mapInput pipeL" forall f sink. pipeL (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:410:{-# RULES "conduit: map-to-mapInput =$" forall f sink. map f =$ sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:411:{-# RULES "conduit: map-to-mapInput pipe" forall f sink. pipe (map f) sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:412:{-# RULES "conduit: map-to-mapInput >+>" forall f sink. map f >+> sink = mapInput f (Prelude.const Prelude.Nothing) sink #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:414:{-# RULES "conduit: map-to-mapOutput =$=" forall f con. con =$= map f = mapOutput f con #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:415:{-# RULES "conduit: map-to-mapInput =$=" forall f con. map f =$= con = mapInput f (Prelude.const Prelude.Nothing) con #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:729:{-# RULES "conduit: source/filter fusion =$=" forall f src. src =$= filter f = filterFuseRight src f #-}
./conduit-1.2.6.2/Data/Conduit/List.hs:753:{-# RULES "conduit: connect to sinkNull" forall src. src $$ sinkNull = srcSinkNull src #-}
./conduit-combinators-0.2.1/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.1/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.2/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.2/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.3/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.3/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.3.1/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.3.1/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.4/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.4/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.4.1/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.4.1/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.5/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.5/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.5.1/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.5.1/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.5.2/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.5.2/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.6/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.6/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.6.1/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.6.1/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.7/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.7/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.8/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.8/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.8.2/Data/Conduit/Combinators/Internal.hs:52:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.8.2/Data/Conduit/Combinators/Internal.hs:84:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.2.8.3/Data/Conduit/Combinators/Internal.hs:57:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.2.8.3/Data/Conduit/Combinators/Internal.hs:93:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.3.0/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.3.0/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.3.0/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-0.3.0.1/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.3.0.1/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.3.0.1/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-0.3.0.2/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.3.0.2/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.3.0.2/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-0.3.0.3/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.3.0.3/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.3.0.3/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-0.3.0.4/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.3.0.4/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.3.0.4/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-0.3.0.5/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.3.0.5/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.3.0.5/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-0.3.0.6/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.3.0.6/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.3.0.6/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-0.3.1/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-0.3.1/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-0.3.1/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-1.0.0/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-1.0.0/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-1.0.0/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-1.0.1/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-1.0.1/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-1.0.1/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-1.0.1.1/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-1.0.1.1/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-1.0.1.1/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-1.0.2/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-1.0.2/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-1.0.2/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-1.0.3/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-1.0.3/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-1.0.3/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./conduit-combinators-1.0.3.1/Data/Conduit/Combinators/Internal.hs:60:{-# RULES "initReplicateConnect" forall mseed f cnt sink.
./conduit-combinators-1.0.3.1/Data/Conduit/Combinators/Internal.hs:95:{-# RULES "initRepeatConnect" forall mseed f sink.
./conduit-combinators-1.0.3.1/Data/Conduit/Combinators/Stream.hs:9:-- versions here because instead they have @RULES@ which inline a
./const-math-ghc-plugin-0.1.0.0/ConstMath/Rules.hs:40:{-# RULES
./const-math-ghc-plugin-0.2.0.0/ConstMath/Rules.hs:40:{-# RULES
./containers-0.5.0.0/Data/IntMap/Base.hs:1791:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.0.0/Data/IntMap/Base.hs:1792:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.0.0/Data/IntMap/Base.hs:1793:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.0.0/Data/IntMap/Base.hs:1794:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.0.0/Data/IntMap/Base.hs:1795:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.0.0/Data/IntMap/Base.hs:1796:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.0.0/Data/IntMap/Base.hs:1797:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.0.0/Data/IntMap/Base.hs:1798:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.0.0/Data/IntSet/Base.hs:930:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.0.0/Data/IntSet/Base.hs:931:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.0.0/Data/IntSet/Base.hs:932:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.0.0/Data/IntSet/Base.hs:933:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.0.0/Data/Map/Base.hs:2003:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.0.0/Data/Map/Base.hs:2004:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.0.0/Data/Map/Base.hs:2005:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.0.0/Data/Map/Base.hs:2006:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.0.0/Data/Map/Base.hs:2007:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.0.0/Data/Map/Base.hs:2008:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.0.0/Data/Map/Base.hs:2009:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.0.0/Data/Map/Base.hs:2010:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.0.0/Data/Set/Base.hs:769:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.0.0/Data/Set/Base.hs:770:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.0.0/Data/Set/Base.hs:771:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.0.0/Data/Set/Base.hs:772:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.1.0/Data/IntMap/Base.hs:1811:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.1.0/Data/IntMap/Base.hs:1812:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.1.0/Data/IntMap/Base.hs:1813:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.1.0/Data/IntMap/Base.hs:1814:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.1.0/Data/IntMap/Base.hs:1815:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.1.0/Data/IntMap/Base.hs:1816:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.1.0/Data/IntMap/Base.hs:1817:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.1.0/Data/IntMap/Base.hs:1818:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.1.0/Data/IntSet/Base.hs:959:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.1.0/Data/IntSet/Base.hs:960:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.1.0/Data/IntSet/Base.hs:961:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.1.0/Data/IntSet/Base.hs:962:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.1.0/Data/Map/Base.hs:2046:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.1.0/Data/Map/Base.hs:2047:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.1.0/Data/Map/Base.hs:2048:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.1.0/Data/Map/Base.hs:2049:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.1.0/Data/Map/Base.hs:2050:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.1.0/Data/Map/Base.hs:2051:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.1.0/Data/Map/Base.hs:2052:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.1.0/Data/Map/Base.hs:2053:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.1.0/Data/Set/Base.hs:774:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.1.0/Data/Set/Base.hs:775:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.1.0/Data/Set/Base.hs:776:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.1.0/Data/Set/Base.hs:777:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.2.0/Data/IntMap/Base.hs:1823:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.2.0/Data/IntMap/Base.hs:1824:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.2.0/Data/IntMap/Base.hs:1825:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.2.0/Data/IntMap/Base.hs:1826:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.2.0/Data/IntMap/Base.hs:1827:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.2.0/Data/IntMap/Base.hs:1828:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.2.0/Data/IntMap/Base.hs:1829:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.2.0/Data/IntMap/Base.hs:1830:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.2.0/Data/IntSet/Base.hs:973:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.2.0/Data/IntSet/Base.hs:974:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.2.0/Data/IntSet/Base.hs:975:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.2.0/Data/IntSet/Base.hs:976:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.2.0/Data/Map/Base.hs:2060:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.2.0/Data/Map/Base.hs:2061:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.2.0/Data/Map/Base.hs:2062:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.2.0/Data/Map/Base.hs:2063:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.2.0/Data/Map/Base.hs:2064:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.2.0/Data/Map/Base.hs:2065:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.2.0/Data/Map/Base.hs:2066:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.2.0/Data/Map/Base.hs:2067:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.2.0/Data/Set/Base.hs:789:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.2.0/Data/Set/Base.hs:790:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.2.0/Data/Set/Base.hs:791:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.2.0/Data/Set/Base.hs:792:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.2.1/Data/IntMap/Base.hs:1800:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.2.1/Data/IntMap/Base.hs:1801:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.2.1/Data/IntMap/Base.hs:1802:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.2.1/Data/IntMap/Base.hs:1803:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.2.1/Data/IntMap/Base.hs:1804:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.2.1/Data/IntMap/Base.hs:1805:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.2.1/Data/IntMap/Base.hs:1806:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.2.1/Data/IntMap/Base.hs:1807:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.2.1/Data/IntSet/Base.hs:956:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.2.1/Data/IntSet/Base.hs:957:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.2.1/Data/IntSet/Base.hs:958:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.2.1/Data/IntSet/Base.hs:959:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.2.1/Data/Map/Base.hs:2061:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.2.1/Data/Map/Base.hs:2062:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.2.1/Data/Map/Base.hs:2063:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.2.1/Data/Map/Base.hs:2064:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.2.1/Data/Map/Base.hs:2065:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.2.1/Data/Map/Base.hs:2066:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.2.1/Data/Map/Base.hs:2067:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.2.1/Data/Map/Base.hs:2068:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.2.1/Data/Set/Base.hs:789:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.2.1/Data/Set/Base.hs:790:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.2.1/Data/Set/Base.hs:791:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.2.1/Data/Set/Base.hs:792:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.3.0/Data/IntMap/Base.hs:1822:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.3.0/Data/IntMap/Base.hs:1823:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.3.0/Data/IntMap/Base.hs:1824:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.3.0/Data/IntMap/Base.hs:1825:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.3.0/Data/IntMap/Base.hs:1826:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.3.0/Data/IntMap/Base.hs:1827:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.3.0/Data/IntMap/Base.hs:1828:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.3.0/Data/IntMap/Base.hs:1829:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.3.0/Data/IntSet/Base.hs:956:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.3.0/Data/IntSet/Base.hs:957:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.3.0/Data/IntSet/Base.hs:958:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.3.0/Data/IntSet/Base.hs:959:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.3.0/Data/Map/Base.hs:2076:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.3.0/Data/Map/Base.hs:2077:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.3.0/Data/Map/Base.hs:2078:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.3.0/Data/Map/Base.hs:2079:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.3.0/Data/Map/Base.hs:2080:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.3.0/Data/Map/Base.hs:2081:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.3.0/Data/Map/Base.hs:2082:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.3.0/Data/Map/Base.hs:2083:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.3.0/Data/Set/Base.hs:797:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.3.0/Data/Set/Base.hs:798:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.3.0/Data/Set/Base.hs:799:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.3.0/Data/Set/Base.hs:800:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.3.1/Data/IntMap/Base.hs:1822:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.3.1/Data/IntMap/Base.hs:1823:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.3.1/Data/IntMap/Base.hs:1824:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.3.1/Data/IntMap/Base.hs:1825:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.3.1/Data/IntMap/Base.hs:1826:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.3.1/Data/IntMap/Base.hs:1827:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.3.1/Data/IntMap/Base.hs:1828:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.3.1/Data/IntMap/Base.hs:1829:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.3.1/Data/IntSet/Base.hs:956:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.3.1/Data/IntSet/Base.hs:957:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.3.1/Data/IntSet/Base.hs:958:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.3.1/Data/IntSet/Base.hs:959:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.3.1/Data/Map/Base.hs:2076:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.3.1/Data/Map/Base.hs:2077:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.3.1/Data/Map/Base.hs:2078:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.3.1/Data/Map/Base.hs:2079:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.3.1/Data/Map/Base.hs:2080:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.3.1/Data/Map/Base.hs:2081:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.3.1/Data/Map/Base.hs:2082:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.3.1/Data/Map/Base.hs:2083:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.3.1/Data/Set/Base.hs:797:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.3.1/Data/Set/Base.hs:798:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.3.1/Data/Set/Base.hs:799:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.3.1/Data/Set/Base.hs:800:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.4.0/Data/IntMap/Base.hs:1823:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.4.0/Data/IntMap/Base.hs:1824:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.4.0/Data/IntMap/Base.hs:1825:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.4.0/Data/IntMap/Base.hs:1826:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.4.0/Data/IntMap/Base.hs:1827:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.4.0/Data/IntMap/Base.hs:1828:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.4.0/Data/IntMap/Base.hs:1829:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.4.0/Data/IntMap/Base.hs:1830:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.4.0/Data/IntSet/Base.hs:977:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.4.0/Data/IntSet/Base.hs:978:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.4.0/Data/IntSet/Base.hs:979:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.4.0/Data/IntSet/Base.hs:980:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.4.0/Data/Map/Base.hs:2077:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.4.0/Data/Map/Base.hs:2078:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.4.0/Data/Map/Base.hs:2079:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.4.0/Data/Map/Base.hs:2080:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.4.0/Data/Map/Base.hs:2081:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.4.0/Data/Map/Base.hs:2082:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.4.0/Data/Map/Base.hs:2083:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.4.0/Data/Map/Base.hs:2084:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.4.0/Data/Set/Base.hs:798:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.4.0/Data/Set/Base.hs:799:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.4.0/Data/Set/Base.hs:800:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.4.0/Data/Set/Base.hs:801:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.5.0/Data/IntMap/Base.hs:1823:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.5.0/Data/IntMap/Base.hs:1824:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.5.0/Data/IntMap/Base.hs:1825:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.5.0/Data/IntMap/Base.hs:1826:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.5.0/Data/IntMap/Base.hs:1827:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.5.0/Data/IntMap/Base.hs:1828:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.5.0/Data/IntMap/Base.hs:1829:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.5.0/Data/IntMap/Base.hs:1830:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.5.0/Data/IntSet/Base.hs:977:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.5.0/Data/IntSet/Base.hs:978:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.5.0/Data/IntSet/Base.hs:979:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.5.0/Data/IntSet/Base.hs:980:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.5.0/Data/Map/Base.hs:2081:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.5.0/Data/Map/Base.hs:2082:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.5.0/Data/Map/Base.hs:2083:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.5.0/Data/Map/Base.hs:2084:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.5.0/Data/Map/Base.hs:2085:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.5.0/Data/Map/Base.hs:2086:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.5.0/Data/Map/Base.hs:2087:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.5.0/Data/Map/Base.hs:2088:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.5.0/Data/Set/Base.hs:802:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.5.0/Data/Set/Base.hs:803:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.5.0/Data/Set/Base.hs:804:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.5.0/Data/Set/Base.hs:805:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.5.1/Data/IntMap/Base.hs:1823:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.5.1/Data/IntMap/Base.hs:1824:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.5.1/Data/IntMap/Base.hs:1825:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.5.1/Data/IntMap/Base.hs:1826:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.5.1/Data/IntMap/Base.hs:1827:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.5.1/Data/IntMap/Base.hs:1828:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.5.1/Data/IntMap/Base.hs:1829:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.5.1/Data/IntMap/Base.hs:1830:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.5.1/Data/IntSet/Base.hs:977:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.5.1/Data/IntSet/Base.hs:978:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.5.1/Data/IntSet/Base.hs:979:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.5.1/Data/IntSet/Base.hs:980:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.5.1/Data/Map/Base.hs:2081:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.5.1/Data/Map/Base.hs:2082:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.5.1/Data/Map/Base.hs:2083:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.5.1/Data/Map/Base.hs:2084:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.5.1/Data/Map/Base.hs:2085:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.5.1/Data/Map/Base.hs:2086:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.5.1/Data/Map/Base.hs:2087:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.5.1/Data/Map/Base.hs:2088:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.5.1/Data/Set/Base.hs:802:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.5.1/Data/Set/Base.hs:803:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.5.1/Data/Set/Base.hs:804:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.5.1/Data/Set/Base.hs:805:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.6.0/Data/IntMap/Base.hs:1309:{-# RULES
./containers-0.5.6.0/Data/IntMap/Base.hs:1314:-- Safe coercions were introduced in 7.8, but did not play well with RULES yet.
./containers-0.5.6.0/Data/IntMap/Base.hs:1315:{-# RULES
./containers-0.5.6.0/Data/IntMap/Base.hs:1334:{-# RULES
./containers-0.5.6.0/Data/IntMap/Base.hs:1918:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.6.0/Data/IntMap/Base.hs:1919:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.6.0/Data/IntMap/Base.hs:1920:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.6.0/Data/IntMap/Base.hs:1921:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.6.0/Data/IntMap/Base.hs:1922:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.6.0/Data/IntMap/Base.hs:1923:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.6.0/Data/IntMap/Base.hs:1924:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.6.0/Data/IntMap/Base.hs:1925:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.6.0/Data/IntMap/Strict.hs:724:{-# RULES
./containers-0.5.6.0/Data/IntMap/Strict.hs:729:{-# RULES
./containers-0.5.6.0/Data/IntMap/Strict.hs:748:{-# RULES
./containers-0.5.6.0/Data/IntSet/Base.hs:979:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.6.0/Data/IntSet/Base.hs:980:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.6.0/Data/IntSet/Base.hs:981:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.6.0/Data/IntSet/Base.hs:982:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.6.0/Data/Map/Base.hs:1667:{-# RULES
./containers-0.5.6.0/Data/Map/Base.hs:1672:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.0/Data/Map/Base.hs:1673:{-# RULES
./containers-0.5.6.0/Data/Map/Base.hs:1689:{-# RULES
./containers-0.5.6.0/Data/Map/Base.hs:2130:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.6.0/Data/Map/Base.hs:2131:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.6.0/Data/Map/Base.hs:2132:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.6.0/Data/Map/Base.hs:2133:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.6.0/Data/Map/Base.hs:2134:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.6.0/Data/Map/Base.hs:2135:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.6.0/Data/Map/Base.hs:2136:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.6.0/Data/Map/Base.hs:2137:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.6.0/Data/Map/Strict.hs:940:{-# RULES
./containers-0.5.6.0/Data/Map/Strict.hs:945:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.0/Data/Map/Strict.hs:946:{-# RULES
./containers-0.5.6.0/Data/Map/Strict.hs:964:{-# RULES
./containers-0.5.6.0/Data/Sequence.hs:226:{-# RULES
./containers-0.5.6.0/Data/Sequence.hs:231:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.0/Data/Sequence.hs:232:{-# RULES
./containers-0.5.6.0/Data/Sequence.hs:1359:{-# RULES
./containers-0.5.6.0/Data/Set/Base.hs:854:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.6.0/Data/Set/Base.hs:855:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.6.0/Data/Set/Base.hs:856:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.6.0/Data/Set/Base.hs:857:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.6.0/Data/Tree.hs:82:-- well enough with RULES to do what we want.
./containers-0.5.6.0/Data/Tree.hs:84:{-# RULES
./containers-0.5.6.1/Data/IntMap/Base.hs:1299:{-# RULES
./containers-0.5.6.1/Data/IntMap/Base.hs:1304:-- Safe coercions were introduced in 7.8, but did not play well with RULES yet.
./containers-0.5.6.1/Data/IntMap/Base.hs:1305:{-# RULES
./containers-0.5.6.1/Data/IntMap/Base.hs:1324:{-# RULES
./containers-0.5.6.1/Data/IntMap/Base.hs:1908:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.6.1/Data/IntMap/Base.hs:1909:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.6.1/Data/IntMap/Base.hs:1910:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.6.1/Data/IntMap/Base.hs:1911:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.6.1/Data/IntMap/Base.hs:1912:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.6.1/Data/IntMap/Base.hs:1913:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.6.1/Data/IntMap/Base.hs:1914:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.6.1/Data/IntMap/Base.hs:1915:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.6.1/Data/IntMap/Strict.hs:727:{-# RULES
./containers-0.5.6.1/Data/IntMap/Strict.hs:732:{-# RULES
./containers-0.5.6.1/Data/IntMap/Strict.hs:751:{-# RULES
./containers-0.5.6.1/Data/IntSet/Base.hs:961:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.6.1/Data/IntSet/Base.hs:962:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.6.1/Data/IntSet/Base.hs:963:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.6.1/Data/IntSet/Base.hs:964:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.6.1/Data/Map/Base.hs:1654:{-# RULES
./containers-0.5.6.1/Data/Map/Base.hs:1659:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.1/Data/Map/Base.hs:1660:{-# RULES
./containers-0.5.6.1/Data/Map/Base.hs:1676:{-# RULES
./containers-0.5.6.1/Data/Map/Base.hs:2117:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.6.1/Data/Map/Base.hs:2118:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.6.1/Data/Map/Base.hs:2119:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.6.1/Data/Map/Base.hs:2120:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.6.1/Data/Map/Base.hs:2121:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.6.1/Data/Map/Base.hs:2122:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.6.1/Data/Map/Base.hs:2123:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.6.1/Data/Map/Base.hs:2124:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.6.1/Data/Map/Strict.hs:927:{-# RULES
./containers-0.5.6.1/Data/Map/Strict.hs:932:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.1/Data/Map/Strict.hs:933:{-# RULES
./containers-0.5.6.1/Data/Map/Strict.hs:951:{-# RULES
./containers-0.5.6.1/Data/Sequence.hs:218:{-# RULES
./containers-0.5.6.1/Data/Sequence.hs:223:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.1/Data/Sequence.hs:224:{-# RULES
./containers-0.5.6.1/Data/Sequence.hs:1348:{-# RULES
./containers-0.5.6.1/Data/Set/Base.hs:842:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.6.1/Data/Set/Base.hs:843:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.6.1/Data/Set/Base.hs:844:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.6.1/Data/Set/Base.hs:845:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.6.1/Data/Tree.hs:77:-- well enough with RULES to do what we want.
./containers-0.5.6.1/Data/Tree.hs:79:{-# RULES
./containers-0.5.6.2/Data/IntMap/Base.hs:1299:{-# RULES
./containers-0.5.6.2/Data/IntMap/Base.hs:1304:-- Safe coercions were introduced in 7.8, but did not play well with RULES yet.
./containers-0.5.6.2/Data/IntMap/Base.hs:1305:{-# RULES
./containers-0.5.6.2/Data/IntMap/Base.hs:1324:{-# RULES
./containers-0.5.6.2/Data/IntMap/Base.hs:1908:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.6.2/Data/IntMap/Base.hs:1909:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.6.2/Data/IntMap/Base.hs:1910:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.6.2/Data/IntMap/Base.hs:1911:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.6.2/Data/IntMap/Base.hs:1912:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.6.2/Data/IntMap/Base.hs:1913:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.6.2/Data/IntMap/Base.hs:1914:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.6.2/Data/IntMap/Base.hs:1915:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.6.2/Data/IntMap/Strict.hs:727:{-# RULES
./containers-0.5.6.2/Data/IntMap/Strict.hs:732:{-# RULES
./containers-0.5.6.2/Data/IntMap/Strict.hs:751:{-# RULES
./containers-0.5.6.2/Data/IntSet/Base.hs:961:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.6.2/Data/IntSet/Base.hs:962:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.6.2/Data/IntSet/Base.hs:963:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.6.2/Data/IntSet/Base.hs:964:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.6.2/Data/Map/Base.hs:1654:{-# RULES
./containers-0.5.6.2/Data/Map/Base.hs:1659:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.2/Data/Map/Base.hs:1660:{-# RULES
./containers-0.5.6.2/Data/Map/Base.hs:1676:{-# RULES
./containers-0.5.6.2/Data/Map/Base.hs:2117:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.6.2/Data/Map/Base.hs:2118:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.6.2/Data/Map/Base.hs:2119:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.6.2/Data/Map/Base.hs:2120:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.6.2/Data/Map/Base.hs:2121:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.6.2/Data/Map/Base.hs:2122:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.6.2/Data/Map/Base.hs:2123:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.6.2/Data/Map/Base.hs:2124:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.6.2/Data/Map/Strict.hs:927:{-# RULES
./containers-0.5.6.2/Data/Map/Strict.hs:932:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.2/Data/Map/Strict.hs:933:{-# RULES
./containers-0.5.6.2/Data/Map/Strict.hs:951:{-# RULES
./containers-0.5.6.2/Data/Sequence.hs:219:{-# RULES
./containers-0.5.6.2/Data/Sequence.hs:224:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.2/Data/Sequence.hs:225:{-# RULES
./containers-0.5.6.2/Data/Sequence.hs:1584:{-# RULES
./containers-0.5.6.2/Data/Set/Base.hs:842:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.6.2/Data/Set/Base.hs:843:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.6.2/Data/Set/Base.hs:844:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.6.2/Data/Set/Base.hs:845:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.6.2/Data/Tree.hs:77:-- well enough with RULES to do what we want.
./containers-0.5.6.2/Data/Tree.hs:79:{-# RULES
./containers-0.5.6.3/Data/IntMap/Base.hs:1304:{-# RULES
./containers-0.5.6.3/Data/IntMap/Base.hs:1309:-- Safe coercions were introduced in 7.8, but did not play well with RULES yet.
./containers-0.5.6.3/Data/IntMap/Base.hs:1310:{-# RULES
./containers-0.5.6.3/Data/IntMap/Base.hs:1329:{-# RULES
./containers-0.5.6.3/Data/IntMap/Base.hs:1913:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.6.3/Data/IntMap/Base.hs:1914:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.6.3/Data/IntMap/Base.hs:1915:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.6.3/Data/IntMap/Base.hs:1916:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.6.3/Data/IntMap/Base.hs:1917:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.6.3/Data/IntMap/Base.hs:1918:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.6.3/Data/IntMap/Base.hs:1919:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.6.3/Data/IntMap/Base.hs:1920:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.6.3/Data/IntMap/Strict.hs:727:{-# RULES
./containers-0.5.6.3/Data/IntMap/Strict.hs:732:{-# RULES
./containers-0.5.6.3/Data/IntMap/Strict.hs:751:{-# RULES
./containers-0.5.6.3/Data/IntSet/Base.hs:963:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.6.3/Data/IntSet/Base.hs:964:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.6.3/Data/IntSet/Base.hs:965:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.6.3/Data/IntSet/Base.hs:966:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.6.3/Data/Map/Base.hs:1659:{-# RULES
./containers-0.5.6.3/Data/Map/Base.hs:1664:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.3/Data/Map/Base.hs:1665:{-# RULES
./containers-0.5.6.3/Data/Map/Base.hs:1681:{-# RULES
./containers-0.5.6.3/Data/Map/Base.hs:2122:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.6.3/Data/Map/Base.hs:2123:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.6.3/Data/Map/Base.hs:2124:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.6.3/Data/Map/Base.hs:2125:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.6.3/Data/Map/Base.hs:2126:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.6.3/Data/Map/Base.hs:2127:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.6.3/Data/Map/Base.hs:2128:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.6.3/Data/Map/Base.hs:2129:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.6.3/Data/Map/Strict.hs:931:{-# RULES
./containers-0.5.6.3/Data/Map/Strict.hs:936:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.3/Data/Map/Strict.hs:937:{-# RULES
./containers-0.5.6.3/Data/Map/Strict.hs:955:{-# RULES
./containers-0.5.6.3/Data/Sequence.hs:231:{-# RULES
./containers-0.5.6.3/Data/Sequence.hs:236:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.6.3/Data/Sequence.hs:237:{-# RULES
./containers-0.5.6.3/Data/Sequence.hs:1595:{-# RULES
./containers-0.5.6.3/Data/Set/Base.hs:848:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.6.3/Data/Set/Base.hs:849:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.6.3/Data/Set/Base.hs:850:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.6.3/Data/Set/Base.hs:851:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.6.3/Data/Tree.hs:82:-- well enough with RULES to do what we want.
./containers-0.5.6.3/Data/Tree.hs:84:{-# RULES
./containers-0.5.7.0/Data/IntMap/Base.hs:1313:{-# RULES
./containers-0.5.7.0/Data/IntMap/Base.hs:1318:-- Safe coercions were introduced in 7.8, but did not play well with RULES yet.
./containers-0.5.7.0/Data/IntMap/Base.hs:1319:{-# RULES
./containers-0.5.7.0/Data/IntMap/Base.hs:1338:{-# RULES
./containers-0.5.7.0/Data/IntMap/Base.hs:1922:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.7.0/Data/IntMap/Base.hs:1923:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.7.0/Data/IntMap/Base.hs:1924:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.7.0/Data/IntMap/Base.hs:1925:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.7.0/Data/IntMap/Base.hs:1926:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.7.0/Data/IntMap/Base.hs:1927:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.7.0/Data/IntMap/Base.hs:1928:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.7.0/Data/IntMap/Base.hs:1929:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.7.0/Data/IntMap/Strict.hs:727:{-# RULES
./containers-0.5.7.0/Data/IntMap/Strict.hs:732:{-# RULES
./containers-0.5.7.0/Data/IntMap/Strict.hs:751:{-# RULES
./containers-0.5.7.0/Data/IntSet/Base.hs:973:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.7.0/Data/IntSet/Base.hs:974:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.7.0/Data/IntSet/Base.hs:975:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.7.0/Data/IntSet/Base.hs:976:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.7.0/Data/Map/Base.hs:1668:{-# RULES
./containers-0.5.7.0/Data/Map/Base.hs:1673:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.7.0/Data/Map/Base.hs:1674:{-# RULES
./containers-0.5.7.0/Data/Map/Base.hs:1690:{-# RULES
./containers-0.5.7.0/Data/Map/Base.hs:2131:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.7.0/Data/Map/Base.hs:2132:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.7.0/Data/Map/Base.hs:2133:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.7.0/Data/Map/Base.hs:2134:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.7.0/Data/Map/Base.hs:2135:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.7.0/Data/Map/Base.hs:2136:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.7.0/Data/Map/Base.hs:2137:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.7.0/Data/Map/Base.hs:2138:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.7.0/Data/Map/Strict.hs:931:{-# RULES
./containers-0.5.7.0/Data/Map/Strict.hs:936:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.7.0/Data/Map/Strict.hs:937:{-# RULES
./containers-0.5.7.0/Data/Map/Strict.hs:955:{-# RULES
./containers-0.5.7.0/Data/Sequence.hs:237:{-# RULES
./containers-0.5.7.0/Data/Sequence.hs:242:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.7.0/Data/Sequence.hs:243:{-# RULES
./containers-0.5.7.0/Data/Sequence.hs:1652:{-# RULES
./containers-0.5.7.0/Data/Set/Base.hs:860:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.7.0/Data/Set/Base.hs:861:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.7.0/Data/Set/Base.hs:862:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.7.0/Data/Set/Base.hs:863:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.7.0/Data/Tree.hs:81:-- well enough with RULES to do what we want.
./containers-0.5.7.0/Data/Tree.hs:83:{-# RULES
./containers-0.5.7.1/Data/IntMap/Base.hs:1313:{-# RULES
./containers-0.5.7.1/Data/IntMap/Base.hs:1318:-- Safe coercions were introduced in 7.8, but did not play well with RULES yet.
./containers-0.5.7.1/Data/IntMap/Base.hs:1319:{-# RULES
./containers-0.5.7.1/Data/IntMap/Base.hs:1338:{-# RULES
./containers-0.5.7.1/Data/IntMap/Base.hs:1922:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.7.1/Data/IntMap/Base.hs:1923:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.7.1/Data/IntMap/Base.hs:1924:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.7.1/Data/IntMap/Base.hs:1925:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.7.1/Data/IntMap/Base.hs:1926:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.7.1/Data/IntMap/Base.hs:1927:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.7.1/Data/IntMap/Base.hs:1928:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.7.1/Data/IntMap/Base.hs:1929:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.7.1/Data/IntMap/Strict.hs:727:{-# RULES
./containers-0.5.7.1/Data/IntMap/Strict.hs:732:{-# RULES
./containers-0.5.7.1/Data/IntMap/Strict.hs:751:{-# RULES
./containers-0.5.7.1/Data/IntSet/Base.hs:973:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.7.1/Data/IntSet/Base.hs:974:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.7.1/Data/IntSet/Base.hs:975:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.7.1/Data/IntSet/Base.hs:976:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.7.1/Data/Map/Base.hs:1668:{-# RULES
./containers-0.5.7.1/Data/Map/Base.hs:1673:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.7.1/Data/Map/Base.hs:1674:{-# RULES
./containers-0.5.7.1/Data/Map/Base.hs:1690:{-# RULES
./containers-0.5.7.1/Data/Map/Base.hs:2131:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./containers-0.5.7.1/Data/Map/Base.hs:2132:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./containers-0.5.7.1/Data/Map/Base.hs:2133:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./containers-0.5.7.1/Data/Map/Base.hs:2134:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./containers-0.5.7.1/Data/Map/Base.hs:2135:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./containers-0.5.7.1/Data/Map/Base.hs:2136:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./containers-0.5.7.1/Data/Map/Base.hs:2137:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./containers-0.5.7.1/Data/Map/Base.hs:2138:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./containers-0.5.7.1/Data/Map/Strict.hs:931:{-# RULES
./containers-0.5.7.1/Data/Map/Strict.hs:936:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.7.1/Data/Map/Strict.hs:937:{-# RULES
./containers-0.5.7.1/Data/Map/Strict.hs:955:{-# RULES
./containers-0.5.7.1/Data/Sequence.hs:237:{-# RULES
./containers-0.5.7.1/Data/Sequence.hs:242:-- Safe coercions were introduced in 7.8, but did not work well with RULES yet.
./containers-0.5.7.1/Data/Sequence.hs:243:{-# RULES
./containers-0.5.7.1/Data/Sequence.hs:1652:{-# RULES
./containers-0.5.7.1/Data/Set/Base.hs:860:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./containers-0.5.7.1/Data/Set/Base.hs:861:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./containers-0.5.7.1/Data/Set/Base.hs:862:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./containers-0.5.7.1/Data/Set/Base.hs:863:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./containers-0.5.7.1/Data/Tree.hs:81:-- well enough with RULES to do what we want.
./containers-0.5.7.1/Data/Tree.hs:83:{-# RULES
./copilot-0.21/Language/Copilot/Core.hs:62:{-# RULES
./copilot-0.21/Language/Copilot/Language.hs:483:{-# RULES
./copilot-0.22/Language/Copilot/Core.hs:62:{-# RULES
./copilot-0.22/Language/Copilot/Language.hs:483:{-# RULES
./copilot-0.23/Language/Copilot/Core.hs:82:{-# RULES
./copilot-0.23/Language/Copilot/Language.hs:506:{-# RULES
./copilot-0.25/Language/Copilot/Core.hs:82:{-# RULES
./copilot-0.25/Language/Copilot/Language.hs:643:{-# RULES
./copilot-0.26/Language/Copilot/Core.hs:82:{-# RULES
./copilot-0.26/Language/Copilot/Language.hs:519:{-# RULES
./copilot-0.27/Language/Copilot/Core.hs:86:{-# RULES
./copilot-0.27/Language/Copilot/Language.hs:499:{-# RULES
./copilot-0.28/Language/Copilot/Core.hs:87:{-# RULES
./copilot-0.28/Language/Copilot/Language.hs:543:{-# RULES
./copilot-1.0/Language/Copilot/Core.hs:144:{-# RULES
./copilot-1.0/Language/Copilot/Language.hs:216:{-# RULES
./copilot-1.0.1/Language/Copilot/Core.hs:145:{-# RULES
./copilot-1.0.1/Language/Copilot/Language.hs:216:{-# RULES
./copilot-1.0.2/Language/Copilot/Core.hs:150:{-# RULES
./copilot-1.0.2/Language/Copilot/Language.hs:194:{-# RULES
./cryptohash-0.10.0/Crypto/Hash/MD2.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/MD2.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/MD2.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/MD2.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/MD2.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/MD4.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/MD4.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/MD4.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/MD4.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/MD4.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/MD5.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/MD5.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/MD5.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/MD5.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/MD5.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/RIPEMD160.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/RIPEMD160.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/RIPEMD160.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/RIPEMD160.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/RIPEMD160.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA1.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/SHA1.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA1.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA1.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/SHA1.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA224.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/SHA224.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA224.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA224.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/SHA224.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA256.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/SHA256.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA256.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA256.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/SHA256.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA3.hs:50:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA3.hs:51:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA3.hs:52:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/SHA3.hs:53:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA384.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/SHA384.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA384.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA384.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/SHA384.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA512.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/SHA512.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA512.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/SHA512.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/SHA512.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/Skein256.hs:50:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.10.0/Crypto/Hash/Skein256.hs:51:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.10.0/Crypto/Hash/Skein256.hs:52:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/Skein256.hs:53:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.10.0/Crypto/Hash/Skein512.hs:50:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.10.0/Crypto/Hash/Skein512.hs:51:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.10.0/Crypto/Hash/Skein512.hs:52:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/Skein512.hs:53:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.10.0/Crypto/Hash/Tiger.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/Tiger.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/Tiger.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/Tiger.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/Tiger.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.10.0/Crypto/Hash/Whirlpool.hs:49:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.10.0/Crypto/Hash/Whirlpool.hs:50:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/Whirlpool.hs:51:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.10.0/Crypto/Hash/Whirlpool.hs:52:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.10.0/Crypto/Hash/Whirlpool.hs:53:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/MD2.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/MD2.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/MD2.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/MD2.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/MD2.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/MD4.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/MD4.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/MD4.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/MD4.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/MD4.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/MD5.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/MD5.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/MD5.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/MD5.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/MD5.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/RIPEMD160.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/RIPEMD160.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/RIPEMD160.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/RIPEMD160.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/RIPEMD160.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA1.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/SHA1.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA1.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA1.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/SHA1.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA224.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/SHA224.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA224.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA224.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/SHA224.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA256.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/SHA256.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA256.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA256.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/SHA256.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA3.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA3.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA3.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/SHA3.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA384.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/SHA384.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA384.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA384.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/SHA384.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA512.hs:51:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/SHA512.hs:52:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA512.hs:53:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/SHA512.hs:54:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/SHA512.hs:55:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/Skein256.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.0/Crypto/Hash/Skein256.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.0/Crypto/Hash/Skein256.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/Skein256.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.0/Crypto/Hash/Skein512.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.0/Crypto/Hash/Skein512.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.0/Crypto/Hash/Skein512.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/Skein512.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.0/Crypto/Hash/Tiger.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/Tiger.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/Tiger.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/Tiger.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/Tiger.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.0/Crypto/Hash/Whirlpool.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.0/Crypto/Hash/Whirlpool.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/Whirlpool.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.0/Crypto/Hash/Whirlpool.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.0/Crypto/Hash/Whirlpool.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/MD2.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/MD2.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/MD2.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/MD2.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/MD2.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/MD4.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/MD4.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/MD4.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/MD4.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/MD4.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/MD5.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/MD5.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/MD5.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/MD5.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/MD5.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/RIPEMD160.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/RIPEMD160.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/RIPEMD160.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/RIPEMD160.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/RIPEMD160.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA1.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/SHA1.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA1.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA1.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/SHA1.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA224.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/SHA224.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA224.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA224.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/SHA224.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA256.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/SHA256.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA256.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA256.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/SHA256.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA3.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA3.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA3.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/SHA3.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA384.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/SHA384.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA384.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA384.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/SHA384.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA512.hs:51:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/SHA512.hs:52:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA512.hs:53:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/SHA512.hs:54:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/SHA512.hs:55:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/Skein256.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.1/Crypto/Hash/Skein256.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.1/Crypto/Hash/Skein256.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/Skein256.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.1/Crypto/Hash/Skein512.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.1/Crypto/Hash/Skein512.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.1/Crypto/Hash/Skein512.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/Skein512.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.1/Crypto/Hash/Tiger.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/Tiger.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/Tiger.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/Tiger.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/Tiger.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.1/Crypto/Hash/Whirlpool.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.1/Crypto/Hash/Whirlpool.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/Whirlpool.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.1/Crypto/Hash/Whirlpool.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.1/Crypto/Hash/Whirlpool.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/MD2.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/MD2.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/MD2.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/MD2.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/MD2.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/MD4.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/MD4.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/MD4.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/MD4.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/MD4.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/MD5.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/MD5.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/MD5.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/MD5.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/MD5.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/RIPEMD160.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/RIPEMD160.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/RIPEMD160.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/RIPEMD160.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/RIPEMD160.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA1.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/SHA1.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA1.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA1.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/SHA1.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA224.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/SHA224.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA224.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA224.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/SHA224.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA256.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/SHA256.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA256.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA256.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/SHA256.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA3.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA3.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA3.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/SHA3.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA384.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/SHA384.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA384.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA384.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/SHA384.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA512.hs:51:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/SHA512.hs:52:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA512.hs:53:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/SHA512.hs:54:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/SHA512.hs:55:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/Skein256.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.2/Crypto/Hash/Skein256.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.2/Crypto/Hash/Skein256.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/Skein256.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.2/Crypto/Hash/Skein512.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.2/Crypto/Hash/Skein512.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.2/Crypto/Hash/Skein512.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/Skein512.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.2/Crypto/Hash/Tiger.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/Tiger.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/Tiger.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/Tiger.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/Tiger.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.2/Crypto/Hash/Whirlpool.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.2/Crypto/Hash/Whirlpool.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/Whirlpool.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.2/Crypto/Hash/Whirlpool.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.2/Crypto/Hash/Whirlpool.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/MD2.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/MD2.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/MD2.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/MD2.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/MD2.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/MD4.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/MD4.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/MD4.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/MD4.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/MD4.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/MD5.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/MD5.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/MD5.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/MD5.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/MD5.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/RIPEMD160.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/RIPEMD160.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/RIPEMD160.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/RIPEMD160.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/RIPEMD160.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA1.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/SHA1.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA1.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA1.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/SHA1.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA224.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/SHA224.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA224.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA224.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/SHA224.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA256.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/SHA256.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA256.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA256.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/SHA256.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA3.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA3.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA3.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/SHA3.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA384.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/SHA384.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA384.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA384.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/SHA384.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA512.hs:51:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/SHA512.hs:52:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA512.hs:53:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/SHA512.hs:54:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/SHA512.hs:55:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/Skein256.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.3/Crypto/Hash/Skein256.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.3/Crypto/Hash/Skein256.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/Skein256.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.3/Crypto/Hash/Skein512.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.3/Crypto/Hash/Skein512.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.3/Crypto/Hash/Skein512.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/Skein512.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.3/Crypto/Hash/Tiger.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/Tiger.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/Tiger.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/Tiger.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/Tiger.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.3/Crypto/Hash/Whirlpool.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.3/Crypto/Hash/Whirlpool.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/Whirlpool.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.3/Crypto/Hash/Whirlpool.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.3/Crypto/Hash/Whirlpool.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/MD2.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/MD2.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/MD2.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/MD2.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/MD2.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/MD4.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/MD4.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/MD4.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/MD4.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/MD4.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/MD5.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/MD5.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/MD5.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/MD5.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/MD5.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/RIPEMD160.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/RIPEMD160.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/RIPEMD160.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/RIPEMD160.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/RIPEMD160.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA1.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/SHA1.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA1.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA1.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/SHA1.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA224.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/SHA224.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA224.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA224.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/SHA224.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA256.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/SHA256.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA256.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA256.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/SHA256.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA3.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA3.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA3.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/SHA3.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA384.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/SHA384.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA384.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA384.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/SHA384.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA512.hs:51:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/SHA512.hs:52:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA512.hs:53:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/SHA512.hs:54:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/SHA512.hs:55:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/Skein256.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.4/Crypto/Hash/Skein256.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.4/Crypto/Hash/Skein256.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/Skein256.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.4/Crypto/Hash/Skein512.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.4/Crypto/Hash/Skein512.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.4/Crypto/Hash/Skein512.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/Skein512.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.4/Crypto/Hash/Tiger.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/Tiger.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/Tiger.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/Tiger.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/Tiger.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.4/Crypto/Hash/Whirlpool.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.4/Crypto/Hash/Whirlpool.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/Whirlpool.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.4/Crypto/Hash/Whirlpool.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.4/Crypto/Hash/Whirlpool.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/MD2.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/MD2.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/MD2.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/MD2.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/MD2.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/MD4.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/MD4.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/MD4.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/MD4.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/MD4.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/MD5.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/MD5.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/MD5.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/MD5.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/MD5.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/RIPEMD160.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/RIPEMD160.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/RIPEMD160.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/RIPEMD160.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/RIPEMD160.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA1.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/SHA1.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA1.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA1.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/SHA1.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA224.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/SHA224.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA224.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA224.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/SHA224.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA256.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/SHA256.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA256.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA256.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/SHA256.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA3.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA3.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA3.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/SHA3.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA384.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/SHA384.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA384.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA384.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/SHA384.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA512.hs:51:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/SHA512.hs:52:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA512.hs:53:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/SHA512.hs:54:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/SHA512.hs:55:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/Skein256.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.5/Crypto/Hash/Skein256.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.5/Crypto/Hash/Skein256.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/Skein256.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.5/Crypto/Hash/Skein512.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.5/Crypto/Hash/Skein512.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.5/Crypto/Hash/Skein512.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/Skein512.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.5/Crypto/Hash/Tiger.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/Tiger.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/Tiger.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/Tiger.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/Tiger.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.5/Crypto/Hash/Whirlpool.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.5/Crypto/Hash/Whirlpool.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/Whirlpool.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.5/Crypto/Hash/Whirlpool.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.5/Crypto/Hash/Whirlpool.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/MD2.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/MD2.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/MD2.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/MD2.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/MD2.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/MD4.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/MD4.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/MD4.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/MD4.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/MD4.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/MD5.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/MD5.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/MD5.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/MD5.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/MD5.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/RIPEMD160.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/RIPEMD160.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/RIPEMD160.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/RIPEMD160.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/RIPEMD160.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA1.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/SHA1.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA1.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA1.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/SHA1.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA224.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/SHA224.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA224.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA224.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/SHA224.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA256.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/SHA256.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA256.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA256.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/SHA256.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA3.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA3.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA3.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/SHA3.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA384.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/SHA384.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA384.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA384.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/SHA384.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA512.hs:51:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/SHA512.hs:52:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA512.hs:53:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/SHA512.hs:54:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/SHA512.hs:55:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/Skein256.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.6/Crypto/Hash/Skein256.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.6/Crypto/Hash/Skein256.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/Skein256.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.6/Crypto/Hash/Skein512.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.6/Crypto/Hash/Skein512.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.6/Crypto/Hash/Skein512.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/Skein512.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.6/Crypto/Hash/Tiger.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/Tiger.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/Tiger.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/Tiger.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/Tiger.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.6/Crypto/Hash/Whirlpool.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.6/Crypto/Hash/Whirlpool.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/Whirlpool.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.6/Crypto/Hash/Whirlpool.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.6/Crypto/Hash/Whirlpool.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/MD2.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/MD2.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/MD2.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/MD2.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/MD2.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/MD4.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/MD4.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/MD4.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/MD4.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/MD4.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/MD5.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/MD5.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/MD5.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/MD5.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/MD5.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/RIPEMD160.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/RIPEMD160.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/RIPEMD160.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/RIPEMD160.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/RIPEMD160.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA1.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/SHA1.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA1.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA1.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/SHA1.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA224.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/SHA224.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA224.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA224.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/SHA224.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA256.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/SHA256.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA256.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA256.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/SHA256.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA3.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA3.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA3.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/SHA3.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA384.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/SHA384.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA384.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA384.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/SHA384.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA512.hs:51:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/SHA512.hs:52:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA512.hs:53:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/SHA512.hs:54:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/SHA512.hs:55:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/Skein256.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.7/Crypto/Hash/Skein256.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.7/Crypto/Hash/Skein256.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/Skein256.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.7/Crypto/Hash/Skein512.hs:51:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.11.7/Crypto/Hash/Skein512.hs:52:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.11.7/Crypto/Hash/Skein512.hs:53:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/Skein512.hs:54:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.11.7/Crypto/Hash/Tiger.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/Tiger.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/Tiger.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/Tiger.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/Tiger.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.11.7/Crypto/Hash/Whirlpool.hs:50:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.11.7/Crypto/Hash/Whirlpool.hs:51:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/Whirlpool.hs:52:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.11.7/Crypto/Hash/Whirlpool.hs:53:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.11.7/Crypto/Hash/Whirlpool.hs:54:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/MD2.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/MD2.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/MD2.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/MD2.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/MD2.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/MD4.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/MD4.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/MD4.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/MD4.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/MD4.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/MD5.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/MD5.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/MD5.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/MD5.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/MD5.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/RIPEMD160.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/RIPEMD160.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/RIPEMD160.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/RIPEMD160.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/RIPEMD160.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA1.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/SHA1.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA1.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA1.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/SHA1.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA224.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/SHA224.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA224.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA224.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/SHA224.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA256.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/SHA256.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA256.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA256.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/SHA256.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA3.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA3.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA3.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/SHA3.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA384.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/SHA384.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA384.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA384.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/SHA384.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA512.hs:76:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/SHA512.hs:77:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA512.hs:78:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/SHA512.hs:79:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/SHA512.hs:80:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/Skein256.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.0/Crypto/Hash/Skein256.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.0/Crypto/Hash/Skein256.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/Skein256.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.0/Crypto/Hash/Skein512.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.0/Crypto/Hash/Skein512.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.0/Crypto/Hash/Skein512.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/Skein512.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.0/Crypto/Hash/Tiger.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/Tiger.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/Tiger.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/Tiger.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/Tiger.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.0/Crypto/Hash/Whirlpool.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.0/Crypto/Hash/Whirlpool.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/Whirlpool.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.0/Crypto/Hash/Whirlpool.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.0/Crypto/Hash/Whirlpool.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/MD2.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/MD2.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/MD2.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/MD2.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/MD2.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/MD4.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/MD4.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/MD4.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/MD4.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/MD4.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/MD5.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/MD5.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/MD5.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/MD5.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/MD5.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/RIPEMD160.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/RIPEMD160.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/RIPEMD160.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/RIPEMD160.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/RIPEMD160.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA1.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/SHA1.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA1.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA1.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/SHA1.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA224.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/SHA224.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA224.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA224.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/SHA224.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA256.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/SHA256.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA256.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA256.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/SHA256.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA3.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA3.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA3.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/SHA3.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA384.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/SHA384.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA384.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA384.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/SHA384.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA512.hs:76:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/SHA512.hs:77:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA512.hs:78:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/SHA512.hs:79:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/SHA512.hs:80:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/Skein256.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.1/Crypto/Hash/Skein256.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.1/Crypto/Hash/Skein256.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/Skein256.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.1/Crypto/Hash/Skein512.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.1/Crypto/Hash/Skein512.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.1/Crypto/Hash/Skein512.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/Skein512.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.1/Crypto/Hash/Tiger.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/Tiger.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/Tiger.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/Tiger.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/Tiger.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.1/Crypto/Hash/Whirlpool.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.1/Crypto/Hash/Whirlpool.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/Whirlpool.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.1/Crypto/Hash/Whirlpool.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.1/Crypto/Hash/Whirlpool.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/MD2.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/MD2.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/MD2.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/MD2.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/MD2.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/MD4.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/MD4.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/MD4.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/MD4.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/MD4.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/MD5.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/MD5.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/MD5.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/MD5.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/MD5.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/RIPEMD160.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/RIPEMD160.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/RIPEMD160.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/RIPEMD160.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/RIPEMD160.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA1.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/SHA1.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA1.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA1.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/SHA1.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA224.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/SHA224.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA224.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA224.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/SHA224.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA256.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/SHA256.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA256.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA256.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/SHA256.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA3.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA3.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA3.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/SHA3.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA384.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/SHA384.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA384.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA384.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/SHA384.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA512.hs:76:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/SHA512.hs:77:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA512.hs:78:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/SHA512.hs:79:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/SHA512.hs:80:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/Skein256.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.2/Crypto/Hash/Skein256.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.2/Crypto/Hash/Skein256.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/Skein256.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.2/Crypto/Hash/Skein512.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.2/Crypto/Hash/Skein512.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.2/Crypto/Hash/Skein512.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/Skein512.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.2/Crypto/Hash/Tiger.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/Tiger.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/Tiger.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/Tiger.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/Tiger.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.2/Crypto/Hash/Whirlpool.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.2/Crypto/Hash/Whirlpool.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/Whirlpool.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.2/Crypto/Hash/Whirlpool.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.2/Crypto/Hash/Whirlpool.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/MD2.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/MD2.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/MD2.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/MD2.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/MD2.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/MD4.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/MD4.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/MD4.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/MD4.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/MD4.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/MD5.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/MD5.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/MD5.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/MD5.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/MD5.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/RIPEMD160.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/RIPEMD160.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/RIPEMD160.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/RIPEMD160.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/RIPEMD160.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA1.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/SHA1.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA1.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA1.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/SHA1.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA224.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/SHA224.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA224.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA224.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/SHA224.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA256.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/SHA256.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA256.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA256.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/SHA256.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA3.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA3.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA3.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/SHA3.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA384.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/SHA384.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA384.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA384.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/SHA384.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA512.hs:76:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/SHA512.hs:77:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA512.hs:78:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/SHA512.hs:79:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/SHA512.hs:80:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/Skein256.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.3/Crypto/Hash/Skein256.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.3/Crypto/Hash/Skein256.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/Skein256.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.3/Crypto/Hash/Skein512.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.3/Crypto/Hash/Skein512.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.3/Crypto/Hash/Skein512.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/Skein512.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.3/Crypto/Hash/Tiger.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/Tiger.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/Tiger.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/Tiger.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/Tiger.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.3/Crypto/Hash/Whirlpool.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.3/Crypto/Hash/Whirlpool.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/Whirlpool.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.3/Crypto/Hash/Whirlpool.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.3/Crypto/Hash/Whirlpool.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/MD2.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/MD2.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/MD2.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/MD2.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/MD2.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/MD4.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/MD4.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/MD4.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/MD4.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/MD4.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/MD5.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/MD5.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/MD5.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/MD5.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/MD5.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/RIPEMD160.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/RIPEMD160.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/RIPEMD160.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/RIPEMD160.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/RIPEMD160.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA1.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/SHA1.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA1.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA1.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/SHA1.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA224.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/SHA224.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA224.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA224.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/SHA224.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA256.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/SHA256.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA256.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA256.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/SHA256.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA3.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA3.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA3.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/SHA3.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA384.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/SHA384.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA384.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA384.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/SHA384.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA512.hs:76:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/SHA512.hs:77:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA512.hs:78:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/SHA512.hs:79:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/SHA512.hs:80:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/Skein256.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.4/Crypto/Hash/Skein256.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.4/Crypto/Hash/Skein256.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/Skein256.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.4/Crypto/Hash/Skein512.hs:76:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.8.4/Crypto/Hash/Skein512.hs:77:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.8.4/Crypto/Hash/Skein512.hs:78:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/Skein512.hs:79:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.8.4/Crypto/Hash/Tiger.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/Tiger.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/Tiger.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/Tiger.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/Tiger.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.8.4/Crypto/Hash/Whirlpool.hs:75:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.8.4/Crypto/Hash/Whirlpool.hs:76:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/Whirlpool.hs:77:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.8.4/Crypto/Hash/Whirlpool.hs:78:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.8.4/Crypto/Hash/Whirlpool.hs:79:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/MD2.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/MD2.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/MD2.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/MD2.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/MD2.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/MD4.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/MD4.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/MD4.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/MD4.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/MD4.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/MD5.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/MD5.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/MD5.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/MD5.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/MD5.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/RIPEMD160.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/RIPEMD160.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/RIPEMD160.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/RIPEMD160.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/RIPEMD160.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA1.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/SHA1.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA1.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA1.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/SHA1.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA224.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/SHA224.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA224.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA224.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/SHA224.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA256.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/SHA256.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA256.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA256.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/SHA256.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA3.hs:84:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA3.hs:85:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA3.hs:86:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/SHA3.hs:87:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA384.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/SHA384.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA384.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA384.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/SHA384.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA512.hs:84:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/SHA512.hs:85:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA512.hs:86:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/SHA512.hs:87:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/SHA512.hs:88:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/Skein256.hs:84:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.9.0/Crypto/Hash/Skein256.hs:85:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.9.0/Crypto/Hash/Skein256.hs:86:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/Skein256.hs:87:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.9.0/Crypto/Hash/Skein512.hs:84:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.9.0/Crypto/Hash/Skein512.hs:85:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.9.0/Crypto/Hash/Skein512.hs:86:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/Skein512.hs:87:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.9.0/Crypto/Hash/Tiger.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/Tiger.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/Tiger.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/Tiger.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/Tiger.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.0/Crypto/Hash/Whirlpool.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.0/Crypto/Hash/Whirlpool.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/Whirlpool.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.0/Crypto/Hash/Whirlpool.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.0/Crypto/Hash/Whirlpool.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/MD2.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/MD2.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/MD2.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/MD2.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/MD2.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/MD4.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/MD4.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/MD4.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/MD4.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/MD4.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/MD5.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/MD5.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/MD5.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/MD5.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/MD5.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/RIPEMD160.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/RIPEMD160.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/RIPEMD160.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/RIPEMD160.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/RIPEMD160.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA1.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/SHA1.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA1.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA1.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/SHA1.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA224.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/SHA224.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA224.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA224.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/SHA224.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA256.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/SHA256.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA256.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA256.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/SHA256.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA3.hs:84:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA3.hs:85:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA3.hs:86:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/SHA3.hs:87:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA384.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/SHA384.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA384.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA384.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/SHA384.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA512.hs:84:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/SHA512.hs:85:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA512.hs:86:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/SHA512.hs:87:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/SHA512.hs:88:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/Skein256.hs:84:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.9.1/Crypto/Hash/Skein256.hs:85:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.9.1/Crypto/Hash/Skein256.hs:86:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/Skein256.hs:87:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.9.1/Crypto/Hash/Skein512.hs:84:{-# RULES "hash" forall b i. finalize (update (init i) b) = hash i b #-}
./cryptohash-0.9.1/Crypto/Hash/Skein512.hs:85:{-# RULES "hash.list1" forall b i. finalize (updates (init i) [b]) = hash i b #-}
./cryptohash-0.9.1/Crypto/Hash/Skein512.hs:86:{-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/Skein512.hs:87:{-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
./cryptohash-0.9.1/Crypto/Hash/Tiger.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/Tiger.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/Tiger.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/Tiger.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/Tiger.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptohash-0.9.1/Crypto/Hash/Whirlpool.hs:83:{-# RULES "digestSize" B.length (finalize init) = digestSize #-}
./cryptohash-0.9.1/Crypto/Hash/Whirlpool.hs:84:{-# RULES "hash" forall b. finalize (update init b) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/Whirlpool.hs:85:{-# RULES "hash.list1" forall b. finalize (updates init [b]) = hash b #-}
./cryptohash-0.9.1/Crypto/Hash/Whirlpool.hs:86:{-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
./cryptohash-0.9.1/Crypto/Hash/Whirlpool.hs:87:{-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
./cryptonite-0.1/Crypto/Cipher/AES/Primitive.hs:241: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.10/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.11/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.12/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.13/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.2/Crypto/Cipher/AES/Primitive.hs:241: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.3/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.4/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.5/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.6/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.7/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.8/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./cryptonite-0.9/Crypto/Cipher/AES/Primitive.hs:229: - RULES "snd . genCounter" forall ctx iv len .  snd (genCounter ctx iv len) = genCTR ctx iv len
./csv-conduit-0.6.2/src/Data/CSV/Conduit/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.2/src/Data/CSV/Conduit/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.2/src/Data/CSV/Conduit/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.2/src/Data/CSV/Conduit/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.2/src/Data/CSV/Conduit/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./csv-conduit-0.6.2/src/Data/CSV/Conduit/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./csv-conduit-0.6.2/src/Data/CSV/Conduit/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./csv-conduit-0.6.2/src/Data/CSV/Conduit/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./csv-conduit-0.6.2/src/Data/CSV/Conduit/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./csv-conduit-0.6.2.1/src/Data/CSV/Conduit/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.2.1/src/Data/CSV/Conduit/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.2.1/src/Data/CSV/Conduit/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.2.1/src/Data/CSV/Conduit/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.2.1/src/Data/CSV/Conduit/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./csv-conduit-0.6.2.1/src/Data/CSV/Conduit/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./csv-conduit-0.6.2.1/src/Data/CSV/Conduit/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./csv-conduit-0.6.2.1/src/Data/CSV/Conduit/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./csv-conduit-0.6.2.1/src/Data/CSV/Conduit/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./csv-conduit-0.6.3/src/Data/CSV/Conduit/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.3/src/Data/CSV/Conduit/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.3/src/Data/CSV/Conduit/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.3/src/Data/CSV/Conduit/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.3/src/Data/CSV/Conduit/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./csv-conduit-0.6.3/src/Data/CSV/Conduit/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./csv-conduit-0.6.3/src/Data/CSV/Conduit/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./csv-conduit-0.6.3/src/Data/CSV/Conduit/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./csv-conduit-0.6.3/src/Data/CSV/Conduit/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./csv-conduit-0.6.5/src/Data/CSV/Conduit/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.5/src/Data/CSV/Conduit/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.5/src/Data/CSV/Conduit/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.5/src/Data/CSV/Conduit/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.5/src/Data/CSV/Conduit/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./csv-conduit-0.6.5/src/Data/CSV/Conduit/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./csv-conduit-0.6.5/src/Data/CSV/Conduit/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./csv-conduit-0.6.5/src/Data/CSV/Conduit/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./csv-conduit-0.6.5/src/Data/CSV/Conduit/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./csv-conduit-0.6.6/src/Data/CSV/Conduit/Conversion/Internal.hs:28:{-# RULES "formatDecimal/Int" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.6/src/Data/CSV/Conduit/Conversion/Internal.hs:30:{-# RULES "formatDecimal/Int16" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.6/src/Data/CSV/Conduit/Conversion/Internal.hs:32:{-# RULES "formatDecimal/Int32" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.6/src/Data/CSV/Conduit/Conversion/Internal.hs:34:{-# RULES "formatDecimal/Int64" formatDecimal = formatBoundedSigned
./csv-conduit-0.6.6/src/Data/CSV/Conduit/Conversion/Internal.hs:36:{-# RULES "formatDecimal/Word" formatDecimal = formatPositive
./csv-conduit-0.6.6/src/Data/CSV/Conduit/Conversion/Internal.hs:38:{-# RULES "formatDecimal/Word8" formatDecimal = formatPositive
./csv-conduit-0.6.6/src/Data/CSV/Conduit/Conversion/Internal.hs:40:{-# RULES "formatDecimal/Word16" formatDecimal = formatPositive
./csv-conduit-0.6.6/src/Data/CSV/Conduit/Conversion/Internal.hs:42:{-# RULES "formatDecimal/Word32" formatDecimal = formatPositive
./csv-conduit-0.6.6/src/Data/CSV/Conduit/Conversion/Internal.hs:44:{-# RULES "formatDecimal/Word64" formatDecimal = formatPositive
./cubicbezier-0.4.0.1/Geom2D/CubicBezier/Basic.hs:181:{-# RULES "evalBezierDerivs/cubic" evalBezierDerivs = evalBezierDerivsCubic #-}
./cubicbezier-0.4.0.1/Geom2D/CubicBezier/Basic.hs:182:{-# RULES "evalBezierDerivs/quad"  evalBezierDerivs = evalBezierDerivsQuad #-}
./cubicbezier-0.4.0.1/Geom2D/CubicBezier/Basic.hs:208:{-# RULES "reorient/cubic" reorient = reorientCubic #-}
./cubicbezier-0.4.0.1/Geom2D/CubicBezier/Basic.hs:209:{-# RULES "reorient/quad"  reorient = reorientQuad #-}
./cubicbezier-0.4.0.1/Geom2D/CubicBezier/Basic.hs:243:{-# RULES "evalBezier/cubic" evalBezier = evalBezierCubic #-}
./cubicbezier-0.4.0.1/Geom2D/CubicBezier/Basic.hs:244:{-# RULES "evalBezier/quad"  evalBezier = evalBezierQuad #-}
./cubicbezier-0.4.0.1/Geom2D/CubicBezier/Basic.hs:390:{-# RULES "splitBezier/cubic" splitBezier = splitBezierCubic #-}
./cubicbezier-0.4.0.1/Geom2D/CubicBezier/Basic.hs:391:{-# RULES "splitBezier/quad"  splitBezier = splitBezierQuad #-}
./cubicbezier-0.4.0.1/Math/BernsteinPoly.hs:26:{-# RULES "toScaled/fromScaled" forall a. toScaled (fromScaled a) = a;
./cubicbezier-0.4.0.2/Geom2D/CubicBezier/Basic.hs:181:{-# RULES "evalBezierDerivs/cubic" evalBezierDerivs = evalBezierDerivsCubic #-}
./cubicbezier-0.4.0.2/Geom2D/CubicBezier/Basic.hs:182:{-# RULES "evalBezierDerivs/quad"  evalBezierDerivs = evalBezierDerivsQuad #-}
./cubicbezier-0.4.0.2/Geom2D/CubicBezier/Basic.hs:208:{-# RULES "reorient/cubic" reorient = reorientCubic #-}
./cubicbezier-0.4.0.2/Geom2D/CubicBezier/Basic.hs:209:{-# RULES "reorient/quad"  reorient = reorientQuad #-}
./cubicbezier-0.4.0.2/Geom2D/CubicBezier/Basic.hs:243:{-# RULES "evalBezier/cubic" evalBezier = evalBezierCubic #-}
./cubicbezier-0.4.0.2/Geom2D/CubicBezier/Basic.hs:244:{-# RULES "evalBezier/quad"  evalBezier = evalBezierQuad #-}
./cubicbezier-0.4.0.2/Geom2D/CubicBezier/Basic.hs:390:{-# RULES "splitBezier/cubic" splitBezier = splitBezierCubic #-}
./cubicbezier-0.4.0.2/Geom2D/CubicBezier/Basic.hs:391:{-# RULES "splitBezier/quad"  splitBezier = splitBezierQuad #-}
./cubicbezier-0.4.0.2/Math/BernsteinPoly.hs:26:{-# RULES "toScaled/fromScaled" forall a. toScaled (fromScaled a) = a;
./cuboid-0.13/FRP/Yampa.hs:675:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./cuda-0.1/examples/common/src/C2HS.hs:201:{-# RULES 
./cuda-0.1/Foreign/CUDA/Internal/C2HS.hs:202:{-# RULES 
./cuda-0.2/examples/common/src/C2HS.hs:201:{-# RULES 
./cuda-0.2/Foreign/CUDA/Internal/C2HS.hs:202:{-# RULES 
./cuda-0.2.1/examples/common/src/C2HS.hs:201:{-# RULES 
./cuda-0.2.1/Foreign/CUDA/Internal/C2HS.hs:202:{-# RULES 
./cuda-0.2.2/examples/common/src/C2HS.hs:201:{-# RULES 
./cuda-0.2.2/Foreign/CUDA/Internal/C2HS.hs:202:{-# RULES 
./cuda-0.3.2/examples/common/src/C2HS.hs:201:{-# RULES 
./cuda-0.3.2/Foreign/CUDA/Internal/C2HS.hs:202:{-# RULES 
./cuda-0.3.2.1/examples/common/src/C2HS.hs:201:{-# RULES 
./cuda-0.3.2.1/Foreign/CUDA/Internal/C2HS.hs:201:{-# RULES 
./cuda-0.3.2.2/examples/common/src/C2HS.hs:201:{-# RULES 
./cuda-0.3.2.2/Foreign/CUDA/Internal/C2HS.hs:201:{-# RULES 
./cuda-0.4.0.0/Foreign/CUDA/Internal/C2HS.hs:201:{-# RULES 
./cuda-0.4.0.1/Foreign/CUDA/Internal/C2HS.hs:201:{-# RULES 
./cuda-0.4.0.2/Foreign/CUDA/Internal/C2HS.hs:201:{-# RULES 
./cuda-0.4.1.0/Foreign/CUDA/Internal/C2HS.hs:201:{-# RULES 
./cuda-0.4.1.1/Foreign/CUDA/Internal/C2HS.hs:201:{-# RULES 
./cuda-0.5.0.0/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.5.0.1/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.5.0.2/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.5.1.0/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.5.1.1/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.6.0.0/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.6.0.1/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.6.5.0/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.6.5.1/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.6.6.0/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.6.6.1/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.6.6.2/Foreign/CUDA/Internal/C2HS.hs:190:{-# RULES
./cuda-0.6.7.0/Foreign/CUDA/Internal/C2HS.hs:198:{-# RULES
./cuda-0.7.0.0/Foreign/CUDA/Internal/C2HS.hs:198:{-# RULES
./cufft-0.1.0.1/Foreign/CUDA/FFT/Internal/C2HS.hs:28:{-# RULES
./cufft-0.1.0.2/Foreign/CUDA/FFT/Internal/C2HS.hs:28:{-# RULES
./cufft-0.1.0.3/Foreign/CUDA/FFT/Internal/C2HS.hs:28:{-# RULES
./cufft-0.1.1.0/Foreign/CUDA/FFT/Internal/C2HS.hs:28:{-# RULES
./cufft-0.1.2.0/Foreign/CUDA/FFT/Internal/C2HS.hs:29:{-# RULES
./cufft-0.1.2.1/Foreign/CUDA/FFT/Internal/C2HS.hs:29:{-# RULES
./CV-0.3/C2HS.hs:197:{-# RULES 
./CV-0.3/C2HSTools.hs:197:{-# RULES 
./CV-0.3.0.1/C2HS.hs:197:{-# RULES 
./CV-0.3.0.1/C2HSTools.hs:197:{-# RULES 
./CV-0.3.0.2/C2HS.hs:197:{-# RULES 
./CV-0.3.0.2/C2HSTools.hs:197:{-# RULES 
./CV-0.3.1.2/C2HS.hs:197:{-# RULES 
./CV-0.3.1.2/C2HSTools.hs:197:{-# RULES 
./CV-0.3.4/C2HS.hs:197:{-# RULES 
./CV-0.3.4/C2HSTools.hs:197:{-# RULES 
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2061:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2062:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2063:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2064:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2065:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2066:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2067:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2068:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Set/Base.hs:789:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Set/Base.hs:790:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Set/Base.hs:791:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./darcs-2.10.0/containers-0.5.2.1/Darcs/Data/Set/Base.hs:792:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2061:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2062:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2063:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2064:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2065:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2066:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2067:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2068:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Set/Base.hs:789:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Set/Base.hs:790:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Set/Base.hs:791:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./darcs-2.10.1/containers-0.5.2.1/Darcs/Data/Set/Base.hs:792:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2061:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2062:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2063:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2064:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2065:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2066:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2067:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2068:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Set/Base.hs:789:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Set/Base.hs:790:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Set/Base.hs:791:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./darcs-2.10.2/containers-0.5.2.1/Darcs/Data/Set/Base.hs:792:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2061:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2062:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2063:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2064:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2065:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2066:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2067:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Map/Base.hs:2068:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Set/Base.hs:789:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Set/Base.hs:790:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Set/Base.hs:791:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./darcs-2.10.3/containers-0.5.2.1/Darcs/Data/Set/Base.hs:792:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./data-fin-0.1.0/src/Data/Number/Fin/Int16.hs:109:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int16.hs:176:{- RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int16.hs:187:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int16.hs:300:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int16.hs:416:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.0/src/Data/Number/Fin/Int32.hs:109:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int32.hs:176:{- RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int32.hs:187:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int32.hs:300:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int32.hs:416:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.0/src/Data/Number/Fin/Int64.hs:109:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int64.hs:176:{- RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int64.hs:187:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int64.hs:300:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int64.hs:416:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.0/src/Data/Number/Fin/Int8.hs:109:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int8.hs:176:{- RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int8.hs:187:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int8.hs:300:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Int8.hs:416:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.0/src/Data/Number/Fin/Integer.hs:113:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Integer.hs:180:{- RULES
./data-fin-0.1.0/src/Data/Number/Fin/Integer.hs:191:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Integer.hs:304:{-# RULES
./data-fin-0.1.0/src/Data/Number/Fin/Integer.hs:419:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1/src/Data/Number/Fin/Int16.hs:113:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int16.hs:180:{- RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int16.hs:191:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int16.hs:304:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int16.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1/src/Data/Number/Fin/Int32.hs:113:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int32.hs:180:{- RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int32.hs:191:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int32.hs:304:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int32.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1/src/Data/Number/Fin/Int64.hs:113:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int64.hs:180:{- RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int64.hs:191:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int64.hs:304:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int64.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1/src/Data/Number/Fin/Int8.hs:113:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int8.hs:180:{- RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int8.hs:191:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int8.hs:304:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Int8.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1/src/Data/Number/Fin/Integer.hs:118:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Integer.hs:185:{- RULES
./data-fin-0.1.1/src/Data/Number/Fin/Integer.hs:196:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Integer.hs:309:{-# RULES
./data-fin-0.1.1/src/Data/Number/Fin/Integer.hs:424:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.1/src/Data/Number/Fin/Int16.hs:113:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int16.hs:180:{- RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int16.hs:191:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int16.hs:304:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int16.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.1/src/Data/Number/Fin/Int32.hs:113:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int32.hs:180:{- RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int32.hs:191:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int32.hs:304:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int32.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.1/src/Data/Number/Fin/Int64.hs:113:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int64.hs:180:{- RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int64.hs:191:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int64.hs:304:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int64.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.1/src/Data/Number/Fin/Int8.hs:113:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int8.hs:180:{- RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int8.hs:191:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int8.hs:304:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Int8.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.1/src/Data/Number/Fin/Integer.hs:118:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Integer.hs:185:{- RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Integer.hs:196:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Integer.hs:309:{-# RULES
./data-fin-0.1.1.1/src/Data/Number/Fin/Integer.hs:424:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.2/src/Data/Number/Fin/Int16.hs:113:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int16.hs:180:{- RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int16.hs:191:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int16.hs:304:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int16.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.2/src/Data/Number/Fin/Int32.hs:113:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int32.hs:180:{- RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int32.hs:191:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int32.hs:304:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int32.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.2/src/Data/Number/Fin/Int64.hs:113:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int64.hs:180:{- RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int64.hs:191:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int64.hs:304:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int64.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.2/src/Data/Number/Fin/Int8.hs:113:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int8.hs:180:{- RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int8.hs:191:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int8.hs:304:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Int8.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.2/src/Data/Number/Fin/Integer.hs:118:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Integer.hs:185:{- RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Integer.hs:196:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Integer.hs:309:{-# RULES
./data-fin-0.1.1.2/src/Data/Number/Fin/Integer.hs:424:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.3/src/Data/Number/Fin/Int16.hs:113:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int16.hs:180:{- RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int16.hs:191:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int16.hs:304:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int16.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.3/src/Data/Number/Fin/Int32.hs:113:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int32.hs:180:{- RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int32.hs:191:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int32.hs:304:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int32.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.3/src/Data/Number/Fin/Int64.hs:113:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int64.hs:180:{- RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int64.hs:191:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int64.hs:304:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int64.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.3/src/Data/Number/Fin/Int8.hs:113:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int8.hs:180:{- RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int8.hs:191:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int8.hs:304:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Int8.hs:420:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./data-fin-0.1.1.3/src/Data/Number/Fin/Integer.hs:118:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Integer.hs:185:{- RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Integer.hs:196:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Integer.hs:309:{-# RULES
./data-fin-0.1.1.3/src/Data/Number/Fin/Integer.hs:424:-- TODO: RULES for toFin.fromFin and fromFin.toFin
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataN.hs:109:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataN.hs:110:  {-# RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  {-# RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataN.hs:186:  {-# RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataP.hs:230:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataP.hs:231:  {-# RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataP.hs:264:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataP.hs:287:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataP.hs:288:  {-# RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataP.hs:369:  {-# RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataP.hs:395:  {-# RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataP.hs:456:  {-# RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:123:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:124:  {-  RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:137:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:138:  {-  RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:163:  {-  RULES
./deepseq-bounded-0.5.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataN.hs:109:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataN.hs:110:  {-# RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  {-# RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataN.hs:186:  {-# RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataP.hs:230:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataP.hs:231:  {-# RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataP.hs:264:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataP.hs:287:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataP.hs:288:  {-# RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataP.hs:369:  {-# RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataP.hs:395:  {-# RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataP.hs:456:  {-# RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:123:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:124:  {-  RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:137:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:138:  {-  RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:163:  {-  RULES
./deepseq-bounded-0.5.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataN.hs:109:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataN.hs:110:  {-# RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  {-# RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataN.hs:186:  {-# RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataP.hs:230:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataP.hs:231:  {-# RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataP.hs:264:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataP.hs:287:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataP.hs:288:  {-# RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataP.hs:369:  {-# RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataP.hs:395:  {-# RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataP.hs:456:  {-# RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:123:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:124:  {-  RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:137:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:138:  {-  RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:163:  {-  RULES
./deepseq-bounded-0.5.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataN.hs:109:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataN.hs:110:  {-# RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  {-# RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataN.hs:186:  {-# RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataP.hs:230:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataP.hs:231:  {-# RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataP.hs:264:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataP.hs:287:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataP.hs:288:  {-# RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataP.hs:369:  {-# RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataP.hs:395:  {-# RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataP.hs:456:  {-# RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:123:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:124:  {-  RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:137:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:138:  {-  RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:163:  {-  RULES
./deepseq-bounded-0.5.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataN.hs:109:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataN.hs:110:  {-# RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  {-# RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataN.hs:186:  {-# RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataP.hs:230:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataP.hs:231:  {-# RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataP.hs:264:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataP.hs:287:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataP.hs:288:  {-# RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataP.hs:369:  {-# RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataP.hs:395:  {-# RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataP.hs:456:  {-# RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:123:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:124:  {-  RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:137:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:138:  {-  RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:163:  {-  RULES
./deepseq-bounded-0.5.4/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataN.hs:109:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataN.hs:110:  {-# RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  {-# RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataN.hs:186:  {-# RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataP.hs:230:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataP.hs:231:  {-# RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataP.hs:264:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataP.hs:287:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataP.hs:288:  {-# RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataP.hs:369:  {-# RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataP.hs:395:  {-# RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataP.hs:456:  {-# RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:123:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:124:  {-  RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:137:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:138:  {-  RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:163:  {-  RULES
./deepseq-bounded-0.5.5/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:201:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:202:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:247:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:248:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:312:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:343:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:481:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:138:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:139:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:172:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:195:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:196:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:277:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:303:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:364:  {-# RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.6.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:202:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:203:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:248:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:249:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:313:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:344:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:482:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:138:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:139:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:172:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:195:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:196:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:277:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:303:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:364:  {-# RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.6.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:204:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:205:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:250:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:251:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:315:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:346:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:484:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:138:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:139:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:172:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:195:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:196:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:277:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:303:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:364:  {-# RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.6.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:204:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:205:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:250:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:251:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:315:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:346:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:484:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:138:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:139:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:172:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:195:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:196:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:277:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:303:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:364:  {-# RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.6.0.3/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:204:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:205:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:250:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:251:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:315:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:346:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:484:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:138:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:139:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:172:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:195:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:196:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:277:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:303:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:364:  {-# RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.6.1.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:204:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:205:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:250:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:251:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:315:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:346:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_new_grammar.hs:484:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:138:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:139:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:172:  -- As for the RULES, I think they're not ready to use now...
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:195:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:196:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:277:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:303:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataP_old_grammar.hs:364:  {-# RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.6.2.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:306:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:307:  {-# RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:352:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:353:  {-# RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:417:  {-# RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:448:  {-# RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:586:  {-# RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.7.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataP.hs:306:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataP.hs:307:  {-# RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataP.hs:352:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataP.hs:353:  {-# RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataP.hs:417:  {-# RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataP.hs:448:  {-# RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataP.hs:586:  {-# RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.7.0.1/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataP.hs:306:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataP.hs:307:  {-# RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataP.hs:352:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataP.hs:353:  {-# RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataP.hs:417:  {-# RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataP.hs:448:  {-# RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataP.hs:586:  {-# RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.7.0.2/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:139:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:140:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:169:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataN.hs:218:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:365:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:366:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:414:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:453:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:454:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:499:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:500:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:564:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:595:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataP.hs:736:  {-# RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:132:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:133:  {-  RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:146:  -- XXX Partially-applied; is that okay in GHC RULES?
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:147:  {-  RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:176:  {-  RULES
./deepseq-bounded-0.8.0.0/src/Control/DeepSeq/Bounded/NFDataPDyn.hs:189:  {-  RULES
./derive-0.1.1/Data/Derive/Uniplate.hs:192:-- ATTEMPT BASED ON THE RULES IN THE PAPER
./derive-0.1.1/Data/Derive/Uniplate.hs:198:-- RULES FROM THE PAPER
./derive-0.1.2/Data/Derive/Uniplate.hs:192:-- ATTEMPT BASED ON THE RULES IN THE PAPER
./derive-0.1.2/Data/Derive/Uniplate.hs:198:-- RULES FROM THE PAPER
./derive-0.1.3/Data/Derive/Uniplate.hs:192:-- ATTEMPT BASED ON THE RULES IN THE PAPER
./derive-0.1.3/Data/Derive/Uniplate.hs:198:-- RULES FROM THE PAPER
./derive-0.1.4/Data/Derive/Uniplate.hs:192:-- ATTEMPT BASED ON THE RULES IN THE PAPER
./derive-0.1.4/Data/Derive/Uniplate.hs:198:-- RULES FROM THE PAPER
./diffarray-0.1/Data/Array/Diff.hs:399:{-# RULES
./diffarray-0.1/Data/Array/Diff.hs:414:{-# RULES
./diffarray-0.1/Data/Array/Diff.hs:434:{-# RULES
./diffarray-0.1/Data/Array/Diff.hs:454:{-# RULES
./diffarray-0.1.1/Data/Array/Diff.hs:399:{-# RULES
./diffarray-0.1.1/Data/Array/Diff.hs:414:{-# RULES
./diffarray-0.1.1/Data/Array/Diff.hs:434:{-# RULES
./diffarray-0.1.1/Data/Array/Diff.hs:454:{-# RULES
./dph-lifted-copy-0.6.0.1/Data/Array/Parallel/Lifted/Closure.hs:82:{-# RULES
./dph-lifted-copy-0.6.0.1/Data/Array/Parallel/Lifted/Unboxed.hs:71:{-# RULES
./dph-lifted-copy-0.6.0.1/Data/Array/Parallel/Lifted/Unboxed.hs:120:{-# RULES
./dph-lifted-copy-0.6.0.1/Data/Array/Parallel/Lifted/Unboxed.hs:131:{-# RULES
./dph-lifted-copy-0.6.0.1/Data/Array/Parallel/Lifted/Unboxed.hs:351:{-# RULES
./dph-lifted-copy-0.6.1.1/Data/Array/Parallel/Lifted/Closure.hs:82:{-# RULES
./dph-lifted-copy-0.6.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:71:{-# RULES
./dph-lifted-copy-0.6.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:120:{-# RULES
./dph-lifted-copy-0.6.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:131:{-# RULES
./dph-lifted-copy-0.6.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:351:{-# RULES
./dph-lifted-copy-0.7.0.1/Data/Array/Parallel/Lifted/Closure.hs:83:{-# RULES
./dph-lifted-copy-0.7.0.1/Data/Array/Parallel/Lifted/Unboxed.hs:71:{-# RULES
./dph-lifted-copy-0.7.0.1/Data/Array/Parallel/Lifted/Unboxed.hs:120:{-# RULES
./dph-lifted-copy-0.7.0.1/Data/Array/Parallel/Lifted/Unboxed.hs:131:{-# RULES
./dph-lifted-copy-0.7.0.1/Data/Array/Parallel/Lifted/Unboxed.hs:351:{-# RULES
./dph-lifted-vseg-0.6.0.1/Data/Array/Parallel/Prim.hs:299:{-# RULES
./dph-lifted-vseg-0.6.0.2/Data/Array/Parallel/Prim.hs:299:{-# RULES
./dph-lifted-vseg-0.6.1.1/Data/Array/Parallel/Prim.hs:299:{-# RULES
./dph-lifted-vseg-0.6.1.2/Data/Array/Parallel/Prim.hs:299:{-# RULES
./dph-lifted-vseg-0.7.0.1/Data/Array/Parallel/Prim.hs:422:{-# RULES
./dph-par-0.5.1.1/Data/Array/Parallel/Lifted/Closure.hs:82:{-# RULES
./dph-par-0.5.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:71:{-# RULES
./dph-par-0.5.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:119:{-# RULES
./dph-par-0.5.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:130:{-# RULES
./dph-par-0.5.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:350:{-# RULES
./dph-prim-par-0.5.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:42:--   between RULES, but the actual value is never used.
./dph-prim-par-0.5.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:106:--         through RULES. Without it, splitJoinD would be a loop breaker.
./dph-prim-par-0.5.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:132:--         through RULES. Without it, splitJoinD would be a loop breaker.
./dph-prim-par-0.5.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:174:{-# RULES
./dph-prim-par-0.5.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:193:{-# RULES
./dph-prim-par-0.5.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:342:{-# RULES
./dph-prim-par-0.5.1.1/Data/Array/Parallel/Unlifted/Distributed/Combinators.hs:68:{-# RULES
./dph-prim-par-0.5.1.1/Data/Array/Parallel/Unlifted/Distributed/Combinators.hs:97:{-# RULES
./dph-prim-par-0.6.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:44:--   between RULES, but the actual value is never used.
./dph-prim-par-0.6.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:128:--         through RULES. Without it, splitJoinD would be a loop breaker.
./dph-prim-par-0.6.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:159:--         through RULES. Without it, splitJoinD would be a loop breaker.
./dph-prim-par-0.6.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:206:{-# RULES
./dph-prim-par-0.6.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:225:{-# RULES
./dph-prim-par-0.6.0.1/Data/Array/Parallel/Unlifted/Distributed/Combinators.hs:83:{-# RULES
./dph-prim-par-0.6.0.1/Data/Array/Parallel/Unlifted/Distributed/Combinators.hs:113:{-# RULES
./dph-prim-par-0.6.0.1/Data/Array/Parallel/Unlifted/Distributed/USegd.hs:340:{-# RULES
./dph-prim-par-0.6.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:44:--   between RULES, but the actual value is never used.
./dph-prim-par-0.6.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:128:--         through RULES. Without it, splitJoinD would be a loop breaker.
./dph-prim-par-0.6.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:159:--         through RULES. Without it, splitJoinD would be a loop breaker.
./dph-prim-par-0.6.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:206:{-# RULES
./dph-prim-par-0.6.1.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:225:{-# RULES
./dph-prim-par-0.6.1.1/Data/Array/Parallel/Unlifted/Distributed/Combinators.hs:83:{-# RULES
./dph-prim-par-0.6.1.1/Data/Array/Parallel/Unlifted/Distributed/Combinators.hs:113:{-# RULES
./dph-prim-par-0.6.1.1/Data/Array/Parallel/Unlifted/Distributed/USegd.hs:340:{-# RULES
./dph-prim-par-0.7.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:44:--   between RULES, but the actual value is never used.
./dph-prim-par-0.7.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:138:--         through RULES. Without it, splitJoinD would be a loop breaker.
./dph-prim-par-0.7.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:186:--         through RULES. Without it, splitJoinD would be a loop breaker.
./dph-prim-par-0.7.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:228:{-# RULES
./dph-prim-par-0.7.0.1/Data/Array/Parallel/Unlifted/Distributed/Arrays.hs:247:{-# RULES
./dph-prim-par-0.7.0.1/Data/Array/Parallel/Unlifted/Distributed/Combinators.hs:77:{-# RULES
./dph-prim-par-0.7.0.1/Data/Array/Parallel/Unlifted/Distributed/Combinators.hs:123:{-# RULES
./dph-prim-par-0.7.0.1/Data/Array/Parallel/Unlifted/Distributed/Data/USegd/Split.hs:347:{-# RULES
./dph-prim-seq-0.5.1.1/Data/Array/Parallel/Unlifted/Sequential/Vector.hs:338:{-# RULES
./dph-prim-seq-0.6.0.1/Data/Array/Parallel/Unlifted/Sequential/Vector.hs:396:{-# RULES
./dph-prim-seq-0.6.1.1/Data/Array/Parallel/Unlifted/Sequential/Vector.hs:396:{-# RULES
./dph-prim-seq-0.7.0.1/Data/Array/Parallel/Unlifted/Sequential/Vector.hs:398:{-# RULES
./dph-seq-0.5.1.1/Data/Array/Parallel/Lifted/Closure.hs:82:{-# RULES
./dph-seq-0.5.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:71:{-# RULES
./dph-seq-0.5.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:119:{-# RULES
./dph-seq-0.5.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:130:{-# RULES
./dph-seq-0.5.1.1/Data/Array/Parallel/Lifted/Unboxed.hs:350:{-# RULES
./dynamic-plot-0.1.0.0/Graphics/Dynamic/Plot/R2.hs:129:-- {-# RULES "plot/R->R" plot = fnPlot #-}
./dynamic-plot-0.1.0.1/Graphics/Dynamic/Plot/R2.hs:144:-- {-# RULES "plot/R->R" plot = fnPlot #-}
./dynamic-plot-0.1.1.0/Graphics/Dynamic/Plot/R2.hs:147:-- {-# RULES "plot/R->R" plot = fnPlot #-}
./dynamic-plot-0.1.1.1/Graphics/Dynamic/Plot/R2.hs:153:-- {-# RULES "plot/R->R" plot = fnPlot #-}
./dynamic-plot-0.1.1.2/Graphics/Dynamic/Plot/R2.hs:154:-- {-# RULES "plot/R->R" plot = fnPlot #-}
./dynamic-plot-0.1.2.0/Graphics/Dynamic/Plot/R2.hs:151:-- {-# RULES "plot/R->R" plot = fnPlot #-}
./elevator-0.1.1/src/Control/Elevator.hs:55:{-# RULES "elevate/id" [~2] elevate = id #-}
./elevator-0.1.1.1/src/Control/Elevator.hs:59:{-# RULES "elevate/id" [~2] elevate = id #-}
./elevator-0.1.2/src/Control/Elevator.hs:59:{-# RULES "elevate/id" [~2] elevate = id #-}
./elevator-0.1.3/src/Control/Elevator.hs:60:{-# RULES "elevate/id" [~2] elevate = id #-}
./elevator-0.2/src/Control/Elevator.hs:76:{-# RULES "elevate/id" [~2] elevate = id #-}
./elevator-0.2.1/src/Control/Elevator.hs:66:{-# RULES "elevate/id" [~2] elevate = id #-}
./elevator-0.2.2/src/Control/Elevator.hs:67:{-# RULES "elevate/id" [~2] elevate = id #-}
./elevator-0.2.3/src/Control/Elevator.hs:70:{-# RULES "elevate/id" [~2] elevate = id #-}
./epanet-haskell-2.0.12.1/Epanet.hs:125:en_RULESTEP :: Int
./epanet-haskell-2.0.12.1/Epanet.hs:126:en_RULESTEP = 7
./epanet-haskell-2.0.12.2/Epanet.hs:125:en_RULESTEP :: Int
./epanet-haskell-2.0.12.2/Epanet.hs:126:en_RULESTEP = 7
./epanet-haskell-2.0.12.3/Epanet.hs:125:en_RULESTEP :: Int
./epanet-haskell-2.0.12.3/Epanet.hs:126:en_RULESTEP = 7
./epanet-haskell-2.0.12.4/Epanet.hs:125:en_RULESTEP :: Int
./epanet-haskell-2.0.12.4/Epanet.hs:126:en_RULESTEP = 7
./equational-reasoning-0.2.0.5/Proof/Equational.hs:180:{-# RULES
./equational-reasoning-0.2.0.6/Proof/Equational.hs:180:{-# RULES
./equational-reasoning-0.2.0.7/Proof/Equational.hs:180:{-# RULES
./EstProgress-0.3.0.0/Data/Progress.hs:175:{-# RULES
./euphoria-0.6.0.1/FRP/Euphoria/Update.hs:108:{-# RULES "mappendUpdateIO/()" mappendUpdateIO = mappendUpdateIOUnit #-}
./exact-combinatorics-0.2.0/src/Math/Combinatorics/Exact/Binomial.hs:24:Some identities, but not really material for RULES:
./exact-combinatorics-0.2.0.4/src/Math/Combinatorics/Exact/Binomial.hs:24:Some identities, but not really material for RULES:
./exact-combinatorics-0.2.0.7/src/Math/Combinatorics/Exact/Binomial.hs:24:Some identities, but not really material for RULES:
./exact-combinatorics-0.2.0.8/src/Math/Combinatorics/Exact/Binomial.hs:24:Some identities, but not really material for RULES:
./exposed-containers-0.5.5.1/Data/IntMap/Base.hs:1845:{-# RULES "IntMap.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./exposed-containers-0.5.5.1/Data/IntMap/Base.hs:1846:{-# RULES "IntMap.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./exposed-containers-0.5.5.1/Data/IntMap/Base.hs:1847:{-# RULES "IntMap.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./exposed-containers-0.5.5.1/Data/IntMap/Base.hs:1848:{-# RULES "IntMap.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./exposed-containers-0.5.5.1/Data/IntMap/Base.hs:1849:{-# RULES "IntMap.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./exposed-containers-0.5.5.1/Data/IntMap/Base.hs:1850:{-# RULES "IntMap.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./exposed-containers-0.5.5.1/Data/IntMap/Base.hs:1851:{-# RULES "IntMap.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./exposed-containers-0.5.5.1/Data/IntMap/Base.hs:1852:{-# RULES "IntMap.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./exposed-containers-0.5.5.1/Data/IntSet/Base.hs:997:{-# RULES "IntSet.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./exposed-containers-0.5.5.1/Data/IntSet/Base.hs:998:{-# RULES "IntSet.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./exposed-containers-0.5.5.1/Data/IntSet/Base.hs:999:{-# RULES "IntSet.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./exposed-containers-0.5.5.1/Data/IntSet/Base.hs:1000:{-# RULES "IntSet.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./exposed-containers-0.5.5.1/Data/Map/Base.hs:2103:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./exposed-containers-0.5.5.1/Data/Map/Base.hs:2104:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./exposed-containers-0.5.5.1/Data/Map/Base.hs:2105:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./exposed-containers-0.5.5.1/Data/Map/Base.hs:2106:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./exposed-containers-0.5.5.1/Data/Map/Base.hs:2107:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./exposed-containers-0.5.5.1/Data/Map/Base.hs:2108:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./exposed-containers-0.5.5.1/Data/Map/Base.hs:2109:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./exposed-containers-0.5.5.1/Data/Map/Base.hs:2110:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./exposed-containers-0.5.5.1/Data/Set/Base.hs:824:{-# RULES "Set.toAscList" [~1] forall s . toAscList s = build (\c n -> foldrFB c n s) #-}
./exposed-containers-0.5.5.1/Data/Set/Base.hs:825:{-# RULES "Set.toAscListBack" [1] foldrFB (:) [] = toAscList #-}
./exposed-containers-0.5.5.1/Data/Set/Base.hs:826:{-# RULES "Set.toDescList" [~1] forall s . toDescList s = build (\c n -> foldlFB (\xs x -> c x xs) n s) #-}
./exposed-containers-0.5.5.1/Data/Set/Base.hs:827:{-# RULES "Set.toDescListBack" [1] foldlFB (\xs x -> x : xs) [] = toDescList #-}
./factory-0.1.0.2/src/Factory/Math/Implementations/Primes.hs:188:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	--CAVEAT: doesn't fire when built with profiling enabled ?!
./factory-0.1.0.2/src/Factory/Math/Power.hs:145:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.1.0.3/src/Factory/Math/Implementations/Primes.hs:193:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	--CAVEAT: doesn't fire when built with profiling enabled ?!
./factory-0.1.0.3/src/Factory/Math/Power.hs:145:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.2.0.0/src/Factory/Math/Implementations/Primes/SieveOfAtkin.hs:238:{-# RULES "sieveOfAtkin/Int" sieveOfAtkin = sieveOfAtkinInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.0/src/Factory/Math/Implementations/Primes/SieveOfEratosthenes.hs:122:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.0/src/Factory/Math/PerfectPower.hs:89:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.2.0.1/src/Factory/Math/Implementations/Primes/SieveOfAtkin.hs:238:{-# RULES "sieveOfAtkin/Int" sieveOfAtkin = sieveOfAtkinInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.1/src/Factory/Math/Implementations/Primes/SieveOfEratosthenes.hs:122:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.1/src/Factory/Math/PerfectPower.hs:89:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.2.0.2/src/Factory/Math/Implementations/Primes/SieveOfAtkin.hs:235:{-# RULES "sieveOfAtkin/Int" sieveOfAtkin = sieveOfAtkinInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.2/src/Factory/Math/Implementations/Primes/SieveOfEratosthenes.hs:122:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.2/src/Factory/Math/PerfectPower.hs:89:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.2.0.3/src/Factory/Math/Implementations/Primes/SieveOfAtkin.hs:235:{-# RULES "sieveOfAtkin/Int" sieveOfAtkin = sieveOfAtkinInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.3/src/Factory/Math/Implementations/Primes/SieveOfEratosthenes.hs:122:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.3/src/Factory/Math/PerfectPower.hs:89:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.2.0.4/src/Factory/Math/Implementations/Primes/SieveOfAtkin.hs:235:{-# RULES "sieveOfAtkin/Int" sieveOfAtkin = sieveOfAtkinInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.4/src/Factory/Math/Implementations/Primes/SieveOfEratosthenes.hs:122:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.4/src/Factory/Math/PerfectPower.hs:89:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.2.0.5/src/Factory/Math/Implementations/Primes/SieveOfAtkin.hs:235:{-# RULES "sieveOfAtkin/Int" sieveOfAtkin = sieveOfAtkinInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.5/src/Factory/Math/Implementations/Primes/SieveOfEratosthenes.hs:122:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.0.5/src/Factory/Math/PerfectPower.hs:89:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.2.1.0/src/Factory/Math/Implementations/Primes/SieveOfAtkin.hs:235:{-# RULES "sieveOfAtkin/Int" sieveOfAtkin = sieveOfAtkinInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.1.0/src/Factory/Math/Implementations/Primes/SieveOfEratosthenes.hs:127:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	--CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.1.0/src/Factory/Math/PerfectPower.hs:89:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.2.1.1/src/Factory/Math/Implementations/Primes/SieveOfAtkin.hs:229:{-# RULES "sieveOfAtkin/Int" sieveOfAtkin = sieveOfAtkinInt #-}	-- CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.1.1/src/Factory/Math/Implementations/Primes/SieveOfEratosthenes.hs:127:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	-- CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.1.1/src/Factory/Math/PerfectPower.hs:89:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./factory-0.2.1.2/src-lib/Factory/Math/Implementations/Primes/SieveOfAtkin.hs:229:{-# RULES "sieveOfAtkin/Int" sieveOfAtkin = sieveOfAtkinInt #-}	-- CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.1.2/src-lib/Factory/Math/Implementations/Primes/SieveOfEratosthenes.hs:127:{-# RULES "sieveOfEratosthenes/Int" sieveOfEratosthenes = sieveOfEratosthenesInt #-}	-- CAVEAT: doesn't fire when built with profiling enabled.
./factory-0.2.1.2/src-lib/Factory/Math/PerfectPower.hs:89:{-# RULES "isPerfectPower/Int" isPerfectPower = isPerfectPowerInt #-}
./failable-list-0.2/Data/FailableList.hs:113:{-# RULES
./failable-list-0.2/Data/FailableList.hs:126:{-# RULES
./fast-builder-0.0.0.0/Data/ByteString/FastBuilder/Internal.hs:459:{-# RULES "FastBuilder: builderFromString/unpackCString#"
./fast-builder-0.0.0.1/Data/ByteString/FastBuilder/Internal.hs:459:{-# RULES "FastBuilder: builderFromString/unpackCString#"
./fast-builder-0.0.0.2/Data/ByteString/FastBuilder/Internal.hs:483:{-# RULES "FastBuilder: builderFromString/unpackCString#"
./fast-builder-0.0.0.2/Data/ByteString/FastBuilder/Internal.hs:498:-- | 'write' as a state transformer. Used for RULES.
./fast-builder-0.0.0.2/Data/ByteString/FastBuilder/Internal.hs:505:{-# RULES "fast-builder: write/write"
./fast-math-0.1/Numeric/FastMath/Infinitesimal.hs:7:{-# RULES
./fast-math-0.1/Numeric/FastMath.hs:4:-- Namely, this otherwise empty module contains RULES that rewrite @x-x@,
./fast-math-0.1/Numeric/FastMath.hs:16:{-# RULES
./fast-math-1.0/Numeric/FastMath/Approximation.hs:10:-- All of these RULES should be safe in the presence of `NaN` and `Infinity`
./fast-math-1.0/Numeric/FastMath/Approximation.hs:30:{-# RULES
./fast-math-1.0/Numeric/FastMath/Approximation.hs:70:{-# RULES
./fast-math-1.0/Numeric/FastMath/Approximation.hs:114:{-# RULES
./fast-math-1.0/Numeric/FastMath/Approximation.hs:138:{-# RULES 
./fast-math-1.0/Numeric/FastMath/Approximation.hs:146:{-# RULES
./fast-math-1.0/Numeric/FastMath/Approximation.hs:163:{-# RULES
./fast-math-1.0/Numeric/FastMath/Approximation.hs:173:{-# RULES
./fast-math-1.0/Numeric/FastMath/Approximation.hs:189:{-# RULES
./fast-math-1.0/Numeric/FastMath/Approximation.hs:208:{-# RULES
./fast-math-1.0/Numeric/FastMath/Approximation.hs:231:{-# RULES 
./fast-math-1.0/Numeric/FastMath/Approximation.hs:244:{-# RULES
./fast-math-1.0/Numeric/FastMath/NaN.hs:13:{-# RULES
./fast-math-1.0/Numeric/FastMath/NaN.hs:24:{-# RULES
./fast-math-1.0/Numeric/FastMath/SignedZeros.hs:2:-- contains RULES that ignore this distinction.  
./fast-math-1.0/Numeric/FastMath/SignedZeros.hs:11:{-# RULES
./fast-math-1.0/Numeric/FastMath/SignedZeros.hs:17:{-# RULES
./fast-math-1.0/Numeric/FastMath.hs:7:-- looking at the source code.  RULES pragmas are surprisingly readable.
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:10:-- All of these RULES should be safe in the presence of `NaN` and `Infinity`
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:30:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:70:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:114:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:138:{-# RULES 
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:146:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:163:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:173:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:189:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:208:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:231:{-# RULES 
./fast-math-1.0.1/Numeric/FastMath/Approximation.hs:244:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/NaN.hs:13:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/NaN.hs:24:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/SignedZeros.hs:2:-- contains RULES that ignore this distinction.  
./fast-math-1.0.1/Numeric/FastMath/SignedZeros.hs:11:{-# RULES
./fast-math-1.0.1/Numeric/FastMath/SignedZeros.hs:17:{-# RULES
./fast-math-1.0.1/Numeric/FastMath.hs:7:-- looking at the source code.  RULES pragmas are surprisingly readable.
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:10:-- All of these RULES should be safe in the presence of `NaN` and `Infinity`
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:30:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:70:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:114:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:138:{-# RULES 
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:146:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:163:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:173:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:189:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:208:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:231:{-# RULES 
./fast-math-1.0.2/Numeric/FastMath/Approximation.hs:244:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/NaN.hs:13:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/NaN.hs:24:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/SignedZeros.hs:2:-- contains RULES that ignore this distinction.  
./fast-math-1.0.2/Numeric/FastMath/SignedZeros.hs:11:{-# RULES
./fast-math-1.0.2/Numeric/FastMath/SignedZeros.hs:17:{-# RULES
./fast-math-1.0.2/Numeric/FastMath.hs:7:-- looking at the source code.  RULES pragmas are surprisingly readable.
./fgl-5.4.2.2/Data/Graph/Inductive/PatriciaTree.hs:5:-- more performance, using GHC's RULES pragma:
./fgl-5.4.2.2/Data/Graph/Inductive/PatriciaTree.hs:88:{-# RULES
./fgl-5.4.2.2/Data/Graph/Inductive/PatriciaTree.hs:97:{-# RULES
./fgl-5.4.2.2/Data/Graph/Inductive/PatriciaTree.hs:110:{-# RULES
./fgl-5.4.2.2/Data/Graph/Inductive/PatriciaTree.hs:120:{-# RULES
./fgl-5.4.2.2/Data/Graph/Inductive/PatriciaTree.hs:130:{-# RULES
./fgl-5.4.2.3/Data/Graph/Inductive/PatriciaTree.hs:7:-- more performance, using GHC's RULES pragma:
./fgl-5.4.2.3/Data/Graph/Inductive/PatriciaTree.hs:92:{-# RULES
./fgl-5.4.2.3/Data/Graph/Inductive/PatriciaTree.hs:101:{-# RULES
./fgl-5.4.2.3/Data/Graph/Inductive/PatriciaTree.hs:114:{-# RULES
./fgl-5.4.2.3/Data/Graph/Inductive/PatriciaTree.hs:124:{-# RULES
./fgl-5.4.2.3/Data/Graph/Inductive/PatriciaTree.hs:134:{-# RULES
./fgl-5.4.2.4/Data/Graph/Inductive/PatriciaTree.hs:7:-- more performance, using GHC's RULES pragma:
./fgl-5.4.2.4/Data/Graph/Inductive/PatriciaTree.hs:92:{-# RULES
./fgl-5.4.2.4/Data/Graph/Inductive/PatriciaTree.hs:101:{-# RULES
./fgl-5.4.2.4/Data/Graph/Inductive/PatriciaTree.hs:114:{-# RULES
./fgl-5.4.2.4/Data/Graph/Inductive/PatriciaTree.hs:124:{-# RULES
./fgl-5.4.2.4/Data/Graph/Inductive/PatriciaTree.hs:134:{-# RULES
./fgl-5.5.0.0/Data/Graph/Inductive/PatriciaTree.hs:7:-- more performance, using GHC's RULES pragma:
./fgl-5.5.0.0/Data/Graph/Inductive/PatriciaTree.hs:106:{-# RULES
./fgl-5.5.0.0/Data/Graph/Inductive/PatriciaTree.hs:115:{-# RULES
./fgl-5.5.0.0/Data/Graph/Inductive/PatriciaTree.hs:128:{-# RULES
./fgl-5.5.0.0/Data/Graph/Inductive/PatriciaTree.hs:138:{-# RULES
./fgl-5.5.0.0/Data/Graph/Inductive/PatriciaTree.hs:148:{-# RULES
./fgl-5.5.0.1/Data/Graph/Inductive/PatriciaTree.hs:7:-- more performance, using GHC's RULES pragma:
./fgl-5.5.0.1/Data/Graph/Inductive/PatriciaTree.hs:110:{-# RULES
./fgl-5.5.0.1/Data/Graph/Inductive/PatriciaTree.hs:119:{-# RULES
./fgl-5.5.0.1/Data/Graph/Inductive/PatriciaTree.hs:132:{-# RULES
./fgl-5.5.0.1/Data/Graph/Inductive/PatriciaTree.hs:142:{-# RULES
./fgl-5.5.0.1/Data/Graph/Inductive/PatriciaTree.hs:152:{-# RULES
./fgl-5.5.1.0/Data/Graph/Inductive/PatriciaTree.hs:7:-- more performance, using GHC's RULES pragma:
./fgl-5.5.1.0/Data/Graph/Inductive/PatriciaTree.hs:110:{-# RULES
./fgl-5.5.1.0/Data/Graph/Inductive/PatriciaTree.hs:119:{-# RULES
./fgl-5.5.1.0/Data/Graph/Inductive/PatriciaTree.hs:132:{-# RULES
./fgl-5.5.1.0/Data/Graph/Inductive/PatriciaTree.hs:142:{-# RULES
./fgl-5.5.1.0/Data/Graph/Inductive/PatriciaTree.hs:152:{-# RULES
./fgl-5.5.2.0/Data/Graph/Inductive/PatriciaTree.hs:10:-- more performance, using GHC's RULES pragma:
./fgl-5.5.2.0/Data/Graph/Inductive/PatriciaTree.hs:135:{-# RULES
./fgl-5.5.2.0/Data/Graph/Inductive/PatriciaTree.hs:143:{-# RULES
./fgl-5.5.2.0/Data/Graph/Inductive/PatriciaTree.hs:155:{-# RULES
./fgl-5.5.2.0/Data/Graph/Inductive/PatriciaTree.hs:164:{-# RULES
./fgl-5.5.2.0/Data/Graph/Inductive/PatriciaTree.hs:173:{-# RULES
./fgl-5.5.2.1/Data/Graph/Inductive/PatriciaTree.hs:10:-- more performance, using GHC's RULES pragma:
./fgl-5.5.2.1/Data/Graph/Inductive/PatriciaTree.hs:141:{-# RULES
./fgl-5.5.2.1/Data/Graph/Inductive/PatriciaTree.hs:149:{-# RULES
./fgl-5.5.2.1/Data/Graph/Inductive/PatriciaTree.hs:161:{-# RULES
./fgl-5.5.2.1/Data/Graph/Inductive/PatriciaTree.hs:170:{-# RULES
./fgl-5.5.2.1/Data/Graph/Inductive/PatriciaTree.hs:179:{-# RULES
./fgl-5.5.2.2/Data/Graph/Inductive/PatriciaTree.hs:10:-- more performance, using GHC's RULES pragma:
./fgl-5.5.2.2/Data/Graph/Inductive/PatriciaTree.hs:141:{-# RULES
./fgl-5.5.2.2/Data/Graph/Inductive/PatriciaTree.hs:149:{-# RULES
./fgl-5.5.2.2/Data/Graph/Inductive/PatriciaTree.hs:161:{-# RULES
./fgl-5.5.2.2/Data/Graph/Inductive/PatriciaTree.hs:170:{-# RULES
./fgl-5.5.2.2/Data/Graph/Inductive/PatriciaTree.hs:179:{-# RULES
./fgl-5.5.2.2/Data/Graph/Inductive/PatriciaTree.hs:188:{-# RULES
./fgl-5.5.2.3/Data/Graph/Inductive/PatriciaTree.hs:10:-- more performance, using GHC's RULES pragma:
./fgl-5.5.2.3/Data/Graph/Inductive/PatriciaTree.hs:141:{-# RULES
./fgl-5.5.2.3/Data/Graph/Inductive/PatriciaTree.hs:149:{-# RULES
./fgl-5.5.2.3/Data/Graph/Inductive/PatriciaTree.hs:161:{-# RULES
./fgl-5.5.2.3/Data/Graph/Inductive/PatriciaTree.hs:170:{-# RULES
./fgl-5.5.2.3/Data/Graph/Inductive/PatriciaTree.hs:179:{-# RULES
./fgl-5.5.2.3/Data/Graph/Inductive/PatriciaTree.hs:188:{-# RULES
./firstify-0.1/Yhc/Core/Firstify/Paper.hs:208:        -- SIMPLIFY RULES
./fixed-point-0.1.0.0/Data/Fixed/Binary.hs:120:{-# RULES
./fixed-point-0.1.0.1/Data/Fixed/Binary.hs:120:{-# RULES
./fixed-point-0.2.0.0/Data/Fixed/Binary.hs:149:{-# RULES
./fixed-point-0.2.0.0/Data/Fixed/Binary.hs:192:{-# RULES
./fixed-point-0.3.0.0/Data/Fixed/Binary.hs:211:{-# RULES
./fixed-point-0.3.0.0/Data/Fixed/Binary.hs:251:{-# RULES
./fixed-point-0.4.0.0/Data/Fixed/Binary.hs:211:{-# RULES
./fixed-point-0.4.0.0/Data/Fixed/Binary.hs:269:{-# RULES
./fixed-point-0.4.0.0/Data/Fixed/Binary.hs:341:{-# RULES
./fixed-point-0.4.0.1/Data/Fixed/Binary.hs:211:{-# RULES
./fixed-point-0.4.0.1/Data/Fixed/Binary.hs:269:{-# RULES
./fixed-point-0.4.0.1/Data/Fixed/Binary.hs:341:{-# RULES
./fixed-point-0.5.0.0/Data/Fixed/Binary.hs:159:{-# RULES
./fixed-point-0.5.0.0/Data/Fixed/Binary.hs:217:{-# RULES
./fixed-point-0.5.0.0/Data/Fixed/Binary.hs:289:{-# RULES
./fixed-point-0.5.0.1/Data/Fixed/Binary.hs:158:{-# RULES
./fixed-point-0.5.0.1/Data/Fixed/Binary.hs:216:{-# RULES
./fixed-point-0.5.0.1/Data/Fixed/Binary.hs:288:{-# RULES
./fixed-precision-0.3.0/Numeric/Fixed.hs:43:{-# RULES
./fixed-precision-0.4.0/Numeric/Fixed.hs:43:{-# RULES
./fixed-vector-0.1/Data/Vector/Fixed/Internal.hs:159:-- removed with RULES. Following identity is used. Of course @f@ must
./fixed-vector-0.1/Data/Vector/Fixed/Internal.hs:197:{-# RULES "inspect/construct"
./fixed-vector-0.1.1/Data/Vector/Fixed/Internal.hs:159:-- removed with RULES. Following identity is used. Of course @f@ must
./fixed-vector-0.1.1/Data/Vector/Fixed/Internal.hs:197:{-# RULES "inspect/construct"
./fixed-vector-0.1.2/Data/Vector/Fixed/Internal.hs:167:-- removed with RULES. Following identity is used. Of course @f@ must
./fixed-vector-0.1.2/Data/Vector/Fixed/Internal.hs:205:{-# RULES "inspect/construct"
./fixed-vector-0.1.2.1/Data/Vector/Fixed/Internal.hs:167:-- removed with RULES. Following identity is used. Of course @f@ must
./fixed-vector-0.1.2.1/Data/Vector/Fixed/Internal.hs:205:{-# RULES "inspect/construct"
./fixed-vector-0.2.0.0/Data/Vector/Fixed/Cont.hs:364:{-# RULES "cvec/vector"
./fixed-vector-0.3.0.0/Data/Vector/Fixed/Cont.hs:593:{-# RULES
./fixed-vector-0.3.0.0/Data/Vector/Fixed.hs:127:{-# RULES
./fixed-vector-0.3.0.1/Data/Vector/Fixed/Cont.hs:593:{-# RULES
./fixed-vector-0.3.0.1/Data/Vector/Fixed.hs:127:{-# RULES
./fixed-vector-0.4.0.0/Data/Vector/Fixed/Cont.hs:610:{-# RULES
./fixed-vector-0.4.0.0/Data/Vector/Fixed.hs:156:{-# RULES
./fixed-vector-0.4.1.0/Data/Vector/Fixed/Cont.hs:610:{-# RULES
./fixed-vector-0.4.1.0/Data/Vector/Fixed.hs:157:{-# RULES
./fixed-vector-0.4.2.0/Data/Vector/Fixed/Cont.hs:638:{-# RULES
./fixed-vector-0.4.2.0/Data/Vector/Fixed.hs:161:{-# RULES
./fixed-vector-0.4.3.0/Data/Vector/Fixed/Cont.hs:638:{-# RULES
./fixed-vector-0.4.3.0/Data/Vector/Fixed.hs:161:{-# RULES
./fixed-vector-0.4.4.0/Data/Vector/Fixed/Cont.hs:653:{-# RULES
./fixed-vector-0.4.4.0/Data/Vector/Fixed.hs:161:{-# RULES
./fixed-vector-0.5.0.0/Data/Vector/Fixed/Cont.hs:940:{-# RULES
./fixed-vector-0.5.0.0/Data/Vector/Fixed.hs:202:{-# RULES
./fixed-vector-0.5.1.0/Data/Vector/Fixed/Cont.hs:940:{-# RULES
./fixed-vector-0.5.1.0/Data/Vector/Fixed.hs:204:{-# RULES
./fixed-vector-0.5.1.2/Data/Vector/Fixed/Cont.hs:940:{-# RULES
./fixed-vector-0.5.1.2/Data/Vector/Fixed.hs:204:{-# RULES
./fixed-vector-0.6.0.0/Data/Vector/Fixed/Cont.hs:992:{-# RULES
./fixed-vector-0.6.0.0/Data/Vector/Fixed.hs:226:{-# RULES
./fixed-vector-0.6.1.0/Data/Vector/Fixed/Cont.hs:1039:{-# RULES
./fixed-vector-0.6.1.0/Data/Vector/Fixed.hs:230:{-# RULES
./fixed-vector-0.6.1.1/Data/Vector/Fixed/Cont.hs:1039:{-# RULES
./fixed-vector-0.6.1.1/Data/Vector/Fixed.hs:229:{-# RULES
./fixed-vector-0.6.2.0/Data/Vector/Fixed/Cont.hs:1043:{-# RULES
./fixed-vector-0.6.2.0/Data/Vector/Fixed.hs:229:{-# RULES
./fixed-vector-0.6.3.0/Data/Vector/Fixed/Cont.hs:1079:{-# RULES
./fixed-vector-0.6.3.0/Data/Vector/Fixed.hs:231:{-# RULES
./fixed-vector-0.6.3.1/Data/Vector/Fixed/Cont.hs:1079:{-# RULES
./fixed-vector-0.6.3.1/Data/Vector/Fixed.hs:231:{-# RULES
./fixed-vector-0.6.4.0/Data/Vector/Fixed/Cont.hs:1120:{-# RULES
./fixed-vector-0.6.4.0/Data/Vector/Fixed.hs:231:{-# RULES
./fixed-vector-0.7.0.0/Data/Vector/Fixed/Cont.hs:1195:{-# RULES
./fixed-vector-0.7.0.0/Data/Vector/Fixed.hs:233:{-# RULES
./fixed-vector-0.7.0.1/Data/Vector/Fixed/Cont.hs:1195:{-# RULES
./fixed-vector-0.7.0.1/Data/Vector/Fixed.hs:232:{-# RULES
./fixed-vector-0.7.0.2/Data/Vector/Fixed/Cont.hs:1195:{-# RULES
./fixed-vector-0.7.0.2/Data/Vector/Fixed.hs:232:{-# RULES
./fixed-vector-0.7.0.3/Data/Vector/Fixed/Cont.hs:1195:{-# RULES
./fixed-vector-0.7.0.3/Data/Vector/Fixed.hs:232:{-# RULES
./fixed-vector-0.8.0.0/Data/Vector/Fixed/Cont.hs:1219:{-# RULES
./fixed-vector-0.8.0.0/Data/Vector/Fixed.hs:251:{-# RULES
./fixed-vector-0.8.1.0/Data/Vector/Fixed/Cont.hs:1227:{-# RULES
./fixed-vector-0.8.1.0/Data/Vector/Fixed.hs:252:{-# RULES
./floating-bits-0.3.0.0/src/Data/Bits/Floating.hs:75:{-# RULES "showFloat/++" forall f s . showFloat f ++ s = showsFloat f s #-}
./for-free-0.1/Control/ForFree.hs:207:  -- {-# RULES "join=joinFree" join = joinFree #-};
./for-free-0.1/Control/ForFree.hs:314:  -- {-# RULES "join=joinFreeT" join = joinFreeT #-};
./free-game-0.9.3.3/Graphics/UI/FreeGame/Base.hs:134:{-# RULES
./free-game-0.9.3.4/Graphics/UI/FreeGame/Base.hs:133:{-# RULES
./free-game-0.9.3.5/Graphics/UI/FreeGame/Base.hs:133:{-# RULES
./free-game-0.9.4/Graphics/UI/FreeGame/Base.hs:140:{-# RULES
./free-game-0.9.4.1/Graphics/UI/FreeGame/Base.hs:140:{-# RULES
./free-game-0.9.4.2/Graphics/UI/FreeGame/Base.hs:140:{-# RULES
./free-game-0.9.4.3/Graphics/UI/FreeGame/Base.hs:140:{-# RULES
./free-game-1.0.3/FreeGame/UI.hs:70:{-# RULES "reUI/Frame" reUI = id #-}
./free-game-1.0.4/FreeGame/UI.hs:75:{-# RULES "reUI/sameness" reUI = id #-}
./free-game-1.0.5/FreeGame/UI.hs:62:{-# RULES "reGame/sameness" reGame = id #-}
./free-game-1.0.5/FreeGame/UI.hs:67:{-# RULES "reFrame/sameness" reFrame = id #-}
./free-game-1.0.5/FreeGame/UI.hs:88:{-# RULES "reUI/sameness" reUI = id #-}
./free-game-1.1/FreeGame/UI.hs:62:{-# RULES "reGame/sameness" reGame = id #-}
./free-game-1.1/FreeGame/UI.hs:67:{-# RULES "reFrame/sameness" reFrame = id #-}
./free-game-1.1/FreeGame/UI.hs:88:{-# RULES "reUI/sameness" reUI = id #-}
./free-game-1.1.78/FreeGame/UI.hs:63:{-# RULES "reGame/sameness" reGame = id #-}
./free-game-1.1.78/FreeGame/UI.hs:69:{-# RULES "reFrame/sameness" reFrame = id #-}
./free-game-1.1.78/FreeGame/UI.hs:92:{-# RULES "reUI/sameness" reUI = id #-}
./free-game-1.1.79/FreeGame/UI.hs:63:{-# RULES "reGame/sameness" reGame = id #-}
./free-game-1.1.79/FreeGame/UI.hs:69:{-# RULES "reFrame/sameness" reFrame = id #-}
./free-game-1.1.79/FreeGame/UI.hs:92:{-# RULES "reUI/sameness" reUI = id #-}
./free-game-1.1.80/FreeGame/UI.hs:64:{-# RULES "reGame/sameness" reGame = id #-}
./free-game-1.1.80/FreeGame/UI.hs:70:{-# RULES "reFrame/sameness" reFrame = id #-}
./free-game-1.1.80/FreeGame/UI.hs:94:{-# RULES "reUI/sameness" reUI = id #-}
./free-game-1.1.81/FreeGame/UI.hs:70:{-# RULES "reGame/sameness" reGame = id #-}
./free-game-1.1.81/FreeGame/UI.hs:76:{-# RULES "reFrame/sameness" reFrame = id #-}
./free-game-1.1.81/FreeGame/UI.hs:100:{-# RULES "reUI/sameness" reUI = id #-}
./freesect-0.0.5/HSE/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./freesect-0.0.5/HSE/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./freesect-0.0.5/HSE/Annotated/Syntax.hs:845:-- | Activation clause of a RULES pragma.
./freesect-0.0.5/HSE/Annotated/Syntax.hs:855:-- | The body of a RULES pragma.
./freesect-0.0.5/HSE/Annotated/Syntax.hs:864:-- | Variables used in a RULES pragma, optionally annotated with types
./freesect-0.0.5/HSE/InternalParser.hs:3034:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./freesect-0.0.5/HSE/InternalParser.hs:7677:	Loc happy_dollar_dollar RULES -> cont 126#;
./freesect-0.0.5/HSE/Lexer.hs:137:        | RULES
./freesect-0.0.5/HSE/Lexer.hs:301: ( "rules",             RULES           ),
./freesect-0.0.5/HSE/Lexer.hs:1269:  RULES             -> "{-# RULES"
./freesect-0.0.5/HSE/Pretty.hs:468:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./freesect-0.0.5/HSE/Syntax.hs:322:     -- ^ A RULES pragma
./freesect-0.0.5/HSE/Syntax.hs:738:-- | Activation clause of a RULES pragma.
./freesect-0.0.5/HSE/Syntax.hs:749:-- | The body of a RULES pragma.
./freesect-0.0.5/HSE/Syntax.hs:758:-- | Variables used in a RULES pragma, optionally annotated with types
./freesect-0.6/HSE/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./freesect-0.6/HSE/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./freesect-0.6/HSE/Annotated/Syntax.hs:845:-- | Activation clause of a RULES pragma.
./freesect-0.6/HSE/Annotated/Syntax.hs:855:-- | The body of a RULES pragma.
./freesect-0.6/HSE/Annotated/Syntax.hs:864:-- | Variables used in a RULES pragma, optionally annotated with types
./freesect-0.6/HSE/InternalParser.hs:3034:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./freesect-0.6/HSE/InternalParser.hs:7677:	Loc happy_dollar_dollar RULES -> cont 126#;
./freesect-0.6/HSE/Lexer.hs:137:        | RULES
./freesect-0.6/HSE/Lexer.hs:301: ( "rules",             RULES           ),
./freesect-0.6/HSE/Lexer.hs:1269:  RULES             -> "{-# RULES"
./freesect-0.6/HSE/Pretty.hs:468:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./freesect-0.6/HSE/Syntax.hs:322:     -- ^ A RULES pragma
./freesect-0.6/HSE/Syntax.hs:738:-- | Activation clause of a RULES pragma.
./freesect-0.6/HSE/Syntax.hs:749:-- | The body of a RULES pragma.
./freesect-0.6/HSE/Syntax.hs:758:-- | Variables used in a RULES pragma, optionally annotated with types
./freesect-0.7/HSE/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./freesect-0.7/HSE/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./freesect-0.7/HSE/Annotated/Syntax.hs:845:-- | Activation clause of a RULES pragma.
./freesect-0.7/HSE/Annotated/Syntax.hs:855:-- | The body of a RULES pragma.
./freesect-0.7/HSE/Annotated/Syntax.hs:864:-- | Variables used in a RULES pragma, optionally annotated with types
./freesect-0.7/HSE/InternalParser.hs:3034:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./freesect-0.7/HSE/InternalParser.hs:7677:	Loc happy_dollar_dollar RULES -> cont 126#;
./freesect-0.7/HSE/Lexer.hs:137:        | RULES
./freesect-0.7/HSE/Lexer.hs:301: ( "rules",             RULES           ),
./freesect-0.7/HSE/Lexer.hs:1269:  RULES             -> "{-# RULES"
./freesect-0.7/HSE/Pretty.hs:468:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./freesect-0.7/HSE/Syntax.hs:322:     -- ^ A RULES pragma
./freesect-0.7/HSE/Syntax.hs:738:-- | Activation clause of a RULES pragma.
./freesect-0.7/HSE/Syntax.hs:749:-- | The body of a RULES pragma.
./freesect-0.7/HSE/Syntax.hs:758:-- | Variables used in a RULES pragma, optionally annotated with types
./freesect-0.8/HSE/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./freesect-0.8/HSE/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./freesect-0.8/HSE/Annotated/Syntax.hs:845:-- | Activation clause of a RULES pragma.
./freesect-0.8/HSE/Annotated/Syntax.hs:855:-- | The body of a RULES pragma.
./freesect-0.8/HSE/Annotated/Syntax.hs:864:-- | Variables used in a RULES pragma, optionally annotated with types
./freesect-0.8/HSE/InternalParser.hs:3034:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./freesect-0.8/HSE/InternalParser.hs:7677:	Loc happy_dollar_dollar RULES -> cont 126#;
./freesect-0.8/HSE/Lexer.hs:137:        | RULES
./freesect-0.8/HSE/Lexer.hs:301: ( "rules",             RULES           ),
./freesect-0.8/HSE/Lexer.hs:1269:  RULES             -> "{-# RULES"
./freesect-0.8/HSE/Pretty.hs:468:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./freesect-0.8/HSE/Syntax.hs:322:     -- ^ A RULES pragma
./freesect-0.8/HSE/Syntax.hs:738:-- | Activation clause of a RULES pragma.
./freesect-0.8/HSE/Syntax.hs:749:-- | The body of a RULES pragma.
./freesect-0.8/HSE/Syntax.hs:758:-- | Variables used in a RULES pragma, optionally annotated with types
./friday-0.1/src/Vision/Histogram.hs:44:{-# RULES
./friday-0.1.1/src/Vision/Histogram.hs:44:{-# RULES
./friday-0.1.2/src/Vision/Histogram.hs:44:{-# RULES
./friday-0.1.3/src/Vision/Histogram.hs:44:{-# RULES
./friday-0.1.4/src/Vision/Histogram.hs:44:{-# RULES
./friday-0.1.5/src/Vision/Histogram.hs:43:{-# RULES
./friday-0.2.0.1/src/Vision/Histogram.hs:49:{-# RULES
./friday-0.2.0.2/src/Vision/Histogram.hs:49:{-# RULES
./friday-0.2.1.0/src/Vision/Histogram.hs:49:{-# RULES
./friday-0.2.1.1/src/Vision/Histogram.hs:49:{-# RULES
./friday-0.2.1.2/src/Vision/Histogram.hs:49:{-# RULES
./friday-0.2.2.0/src/Vision/Histogram.hs:49:{-# RULES
./GeomPredicates-SSE-0.2/Numeric/Geometric/Predicates/Interval.hs:36:{-# RULES "incircleSSE/Double" incircleSSE = incircleSSE_D #-}
./GeomPredicates-SSE-0.2/Numeric/Geometric/Predicates/Interval.hs:37:{-# RULES "cinttSSE/Double"    cinttSSE    = cinttSSE_D #-}
./GeomPredicates-SSE-0.2/Numeric/Geometric/Predicates/Interval.hs:38:{-# RULES "ccwSSE/Double"      ccwSSE      = ccwSSE_D #-}
./GeomPredicates-SSE-0.2/Numeric/Geometric/Predicates/Interval.hs:40:{-# RULES "incircleSSE/Float" incircleSSE = incircleSSE_F #-}
./GeomPredicates-SSE-0.2/Numeric/Geometric/Predicates/Interval.hs:41:{-# RULES "cinttSSE/Float"    cinttSSE    = cinttSSE_F #-}
./GeomPredicates-SSE-0.2/Numeric/Geometric/Predicates/Interval.hs:42:{-# RULES "ccwSSE/Float"      ccwSSE      = ccwSSE_F #-}
./ghc-exactprint-0.2/tests/examples/Dead1.hs:13:{-# RULES
./ghc-exactprint-0.2/tests/examples/Rules.hs:6:{-# RULES "map-loop" [ ~  ]  forall f . map' f = map' (id . f) #-}
./ghc-exactprint-0.2/tests/examples/Rules.hs:16:{-# RULES "foo1" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.2/tests/examples/Rules.hs:21:{-# RULES "foo2" [~ 1 ] forall x. foo2 x = x #-}
./ghc-exactprint-0.2/tests/examples/Rules.hs:26:{-# RULES "foo3" forall x. foo3 x = x #-}
./ghc-exactprint-0.2/tests/examples/Rules.hs:36:{-# RULES
./ghc-exactprint-0.3/tests/examples/Dead1.hs:13:{-# RULES
./ghc-exactprint-0.3/tests/examples/Internals.hs:389:{-# RULES
./ghc-exactprint-0.3/tests/examples/Internals.hs:402:{-# RULES
./ghc-exactprint-0.3/tests/examples/Internals.hs:414:{-# RULES
./ghc-exactprint-0.3/tests/examples/Internals.hs:425:{-# RULES
./ghc-exactprint-0.3/tests/examples/Rules.hs:5:{-# RULES "map-loop" [ ~  ]  forall f . map' f = map' (id . f) #-}
./ghc-exactprint-0.3/tests/examples/Rules.hs:15:{-# RULES "foo1" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.3/tests/examples/Rules.hs:20:{-# RULES "foo2" [~ 1 ] forall x. foo2 x = x #-}
./ghc-exactprint-0.3/tests/examples/Rules.hs:25:{-# RULES "foo3" forall x. foo3 x = x #-}
./ghc-exactprint-0.3/tests/examples/Rules.hs:35:{-# RULES
./ghc-exactprint-0.3/tests/examples/RulesSemi.hs:2:{-# RULES
./ghc-exactprint-0.3/tests/examples/UnicodeRules.hs:12:{-# RULES "head → strictHead" [1]
./ghc-exactprint-0.3.1/tests/examples/Dead1.hs:13:{-# RULES
./ghc-exactprint-0.3.1/tests/examples/Internals.hs:389:{-# RULES
./ghc-exactprint-0.3.1/tests/examples/Internals.hs:402:{-# RULES
./ghc-exactprint-0.3.1/tests/examples/Internals.hs:414:{-# RULES
./ghc-exactprint-0.3.1/tests/examples/Internals.hs:425:{-# RULES
./ghc-exactprint-0.3.1/tests/examples/Rules.hs:5:{-# RULES "map-loop" [ ~  ]  forall f . map' f = map' (id . f) #-}
./ghc-exactprint-0.3.1/tests/examples/Rules.hs:15:{-# RULES "foo1" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.3.1/tests/examples/Rules.hs:20:{-# RULES "foo2" [~ 1 ] forall x. foo2 x = x #-}
./ghc-exactprint-0.3.1/tests/examples/Rules.hs:25:{-# RULES "foo3" forall x. foo3 x = x #-}
./ghc-exactprint-0.3.1/tests/examples/Rules.hs:35:{-# RULES
./ghc-exactprint-0.3.1/tests/examples/RulesSemi.hs:2:{-# RULES
./ghc-exactprint-0.3.1/tests/examples/UnicodeRules.hs:12:{-# RULES "head → strictHead" [1]
./ghc-exactprint-0.3.1.1/tests/examples/Dead1.hs:13:{-# RULES
./ghc-exactprint-0.3.1.1/tests/examples/Internals.hs:389:{-# RULES
./ghc-exactprint-0.3.1.1/tests/examples/Internals.hs:402:{-# RULES
./ghc-exactprint-0.3.1.1/tests/examples/Internals.hs:414:{-# RULES
./ghc-exactprint-0.3.1.1/tests/examples/Internals.hs:425:{-# RULES
./ghc-exactprint-0.3.1.1/tests/examples/Rules.hs:5:{-# RULES "map-loop" [ ~  ]  forall f . map' f = map' (id . f) #-}
./ghc-exactprint-0.3.1.1/tests/examples/Rules.hs:15:{-# RULES "foo1" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.3.1.1/tests/examples/Rules.hs:20:{-# RULES "foo2" [~ 1 ] forall x. foo2 x = x #-}
./ghc-exactprint-0.3.1.1/tests/examples/Rules.hs:25:{-# RULES "foo3" forall x. foo3 x = x #-}
./ghc-exactprint-0.3.1.1/tests/examples/Rules.hs:35:{-# RULES
./ghc-exactprint-0.3.1.1/tests/examples/RulesSemi.hs:2:{-# RULES
./ghc-exactprint-0.3.1.1/tests/examples/UnicodeRules.hs:12:{-# RULES "head → strictHead" [1]
./ghc-exactprint-0.4.0.0/tests/examples/Dead1.hs:13:{-# RULES
./ghc-exactprint-0.4.0.0/tests/examples/Internals.hs:389:{-# RULES
./ghc-exactprint-0.4.0.0/tests/examples/Internals.hs:402:{-# RULES
./ghc-exactprint-0.4.0.0/tests/examples/Internals.hs:414:{-# RULES
./ghc-exactprint-0.4.0.0/tests/examples/Internals.hs:425:{-# RULES
./ghc-exactprint-0.4.0.0/tests/examples/Rules.hs:5:{-# RULES "map-loop" [ ~  ]  forall f . map' f = map' (id . f) #-}
./ghc-exactprint-0.4.0.0/tests/examples/Rules.hs:15:{-# RULES "foo1" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.4.0.0/tests/examples/Rules.hs:20:{-# RULES "foo2" [~ 1 ] forall x. foo2 x = x #-}
./ghc-exactprint-0.4.0.0/tests/examples/Rules.hs:25:{-# RULES "foo3" forall x. foo3 x = x #-}
./ghc-exactprint-0.4.0.0/tests/examples/Rules.hs:35:{-# RULES
./ghc-exactprint-0.4.0.0/tests/examples/RulesSemi.hs:2:{-# RULES
./ghc-exactprint-0.4.0.0/tests/examples/UnicodeRules.hs:12:{-# RULES "head → strictHead" [1]
./ghc-exactprint-0.4.1.0/tests/examples/Dead1.hs:13:{-# RULES
./ghc-exactprint-0.4.1.0/tests/examples/Internals.hs:389:{-# RULES
./ghc-exactprint-0.4.1.0/tests/examples/Internals.hs:402:{-# RULES
./ghc-exactprint-0.4.1.0/tests/examples/Internals.hs:414:{-# RULES
./ghc-exactprint-0.4.1.0/tests/examples/Internals.hs:425:{-# RULES
./ghc-exactprint-0.4.1.0/tests/examples/Rules.hs:5:{-# RULES "map-loop" [ ~  ]  forall f . map' f = map' (id . f) #-}
./ghc-exactprint-0.4.1.0/tests/examples/Rules.hs:15:{-# RULES "foo1" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.4.1.0/tests/examples/Rules.hs:20:{-# RULES "foo2" [~ 1 ] forall x. foo2 x = x #-}
./ghc-exactprint-0.4.1.0/tests/examples/Rules.hs:25:{-# RULES "foo3" forall x. foo3 x = x #-}
./ghc-exactprint-0.4.1.0/tests/examples/Rules.hs:35:{-# RULES
./ghc-exactprint-0.4.1.0/tests/examples/RulesSemi.hs:2:{-# RULES
./ghc-exactprint-0.4.1.0/tests/examples/UnicodeRules.hs:12:{-# RULES "head → strictHead" [1]
./ghc-exactprint-0.4.2.0/tests/examples/Dead1.hs:13:{-# RULES
./ghc-exactprint-0.4.2.0/tests/examples/Internals.hs:389:{-# RULES
./ghc-exactprint-0.4.2.0/tests/examples/Internals.hs:402:{-# RULES
./ghc-exactprint-0.4.2.0/tests/examples/Internals.hs:414:{-# RULES
./ghc-exactprint-0.4.2.0/tests/examples/Internals.hs:425:{-# RULES
./ghc-exactprint-0.4.2.0/tests/examples/Rules.hs:5:{-# RULES "map-loop" [ ~  ]  forall f . map' f = map' (id . f) #-}
./ghc-exactprint-0.4.2.0/tests/examples/Rules.hs:15:{-# RULES "foo1" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.4.2.0/tests/examples/Rules.hs:20:{-# RULES "foo2" [~ 1 ] forall x. foo2 x = x #-}
./ghc-exactprint-0.4.2.0/tests/examples/Rules.hs:25:{-# RULES "foo3" forall x. foo3 x = x #-}
./ghc-exactprint-0.4.2.0/tests/examples/Rules.hs:35:{-# RULES
./ghc-exactprint-0.4.2.0/tests/examples/RulesSemi.hs:2:{-# RULES
./ghc-exactprint-0.4.2.0/tests/examples/UnicodeRules.hs:12:{-# RULES "head → strictHead" [1]
./ghc-exactprint-0.5.0.0/tests/examples/failing/UnicodeRules.hs:12:{-# RULES "head → strictHead" [1]
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Dead1.hs:13:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Internals.hs:389:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Internals.hs:402:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Internals.hs:414:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Internals.hs:425:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Rules.hs:5:{-# RULES "map-loop" [ ~  ]  forall f . map' f = map' (id . f) #-}
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Rules.hs:15:{-# RULES "foo1" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Rules.hs:20:{-# RULES "foo2" [~ 1 ] forall x. foo2 x = x #-}
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Rules.hs:25:{-# RULES "foo3" forall x. foo3 x = x #-}
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/Rules.hs:35:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc710/RulesSemi.hs:2:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc8/RuleDefiningPlugin.hs:5:{-# RULES "unsound" forall x. show x = "SHOWED" #-}
./ghc-exactprint-0.5.0.0/tests/examples/ghc8/T10627.hs:14:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc8/T10689.hs:9:{-# RULES "foo" forall (x :: Foo a Char). f x = True #-}
./ghc-exactprint-0.5.0.0/tests/examples/ghc8/T10698.hs:12:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc8/T10698.hs:21:{-# RULES
./ghc-exactprint-0.5.0.0/tests/examples/ghc8/Test10313.hs:25:{-# RULES "foo1\x67" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.5.0.1/tests/examples/failing/UnicodeRules.hs:12:{-# RULES "head → strictHead" [1]
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Dead1.hs:13:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Internals.hs:389:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Internals.hs:402:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Internals.hs:414:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Internals.hs:425:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Rules.hs:5:{-# RULES "map-loop" [ ~  ]  forall f . map' f = map' (id . f) #-}
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Rules.hs:15:{-# RULES "foo1" [ 1] forall x. foo1 x = x #-}
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Rules.hs:20:{-# RULES "foo2" [~ 1 ] forall x. foo2 x = x #-}
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Rules.hs:25:{-# RULES "foo3" forall x. foo3 x = x #-}
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/Rules.hs:35:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc710/RulesSemi.hs:2:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc8/RuleDefiningPlugin.hs:5:{-# RULES "unsound" forall x. show x = "SHOWED" #-}
./ghc-exactprint-0.5.0.1/tests/examples/ghc8/T10627.hs:14:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc8/T10689.hs:9:{-# RULES "foo" forall (x :: Foo a Char). f x = True #-}
./ghc-exactprint-0.5.0.1/tests/examples/ghc8/T10698.hs:12:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc8/T10698.hs:21:{-# RULES
./ghc-exactprint-0.5.0.1/tests/examples/ghc8/Test10313.hs:25:{-# RULES "foo1\x67" [ 1] forall x. foo1 x = x #-}
./ginsu-0.8.0/GenUtil.hs:130:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ginsu-0.8.0/GenUtil.hs:131:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ginsu-0.8.0/GenUtil.hs:132:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ginsu-0.8.0/GenUtil.hs:133:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ginsu-0.8.0/GenUtil.hs:134:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ginsu-0.8.0/GenUtil.hs:135:{-# RULES "snub/[]" snub [] = [] #-}
./ginsu-0.8.0/GenUtil.hs:136:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ginsu-0.8.0/GenUtil.hs:344:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ginsu-0.8.0/GenUtil.hs:345:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ginsu-0.8.0.1/GenUtil.hs:130:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ginsu-0.8.0.1/GenUtil.hs:131:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ginsu-0.8.0.1/GenUtil.hs:132:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ginsu-0.8.0.1/GenUtil.hs:133:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ginsu-0.8.0.1/GenUtil.hs:134:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ginsu-0.8.0.1/GenUtil.hs:135:{-# RULES "snub/[]" snub [] = [] #-}
./ginsu-0.8.0.1/GenUtil.hs:136:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ginsu-0.8.0.1/GenUtil.hs:344:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./ginsu-0.8.0.1/GenUtil.hs:345:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./ginsu-0.8.0.2/GenUtil.hs:132:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ginsu-0.8.0.2/GenUtil.hs:133:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ginsu-0.8.0.2/GenUtil.hs:134:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ginsu-0.8.0.2/GenUtil.hs:135:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ginsu-0.8.0.2/GenUtil.hs:136:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ginsu-0.8.0.2/GenUtil.hs:137:{-# RULES "snub/[]" snub [] = [] #-}
./ginsu-0.8.0.2/GenUtil.hs:138:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ginsu-0.8.1/GenUtil.hs:133:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ginsu-0.8.1/GenUtil.hs:134:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ginsu-0.8.1/GenUtil.hs:135:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ginsu-0.8.1/GenUtil.hs:136:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ginsu-0.8.1/GenUtil.hs:137:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ginsu-0.8.1/GenUtil.hs:138:{-# RULES "snub/[]" snub [] = [] #-}
./ginsu-0.8.1/GenUtil.hs:139:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ginsu-0.8.1.1/GenUtil.hs:133:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ginsu-0.8.1.1/GenUtil.hs:134:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ginsu-0.8.1.1/GenUtil.hs:135:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ginsu-0.8.1.1/GenUtil.hs:136:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ginsu-0.8.1.1/GenUtil.hs:137:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ginsu-0.8.1.1/GenUtil.hs:138:{-# RULES "snub/[]" snub [] = [] #-}
./ginsu-0.8.1.1/GenUtil.hs:139:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ginsu-0.8.2/GenUtil.hs:133:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ginsu-0.8.2/GenUtil.hs:134:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ginsu-0.8.2/GenUtil.hs:135:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ginsu-0.8.2/GenUtil.hs:136:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ginsu-0.8.2/GenUtil.hs:137:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ginsu-0.8.2/GenUtil.hs:138:{-# RULES "snub/[]" snub [] = [] #-}
./ginsu-0.8.2/GenUtil.hs:139:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./ginsu-0.8.2.1/GenUtil.hs:133:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./ginsu-0.8.2.1/GenUtil.hs:134:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./ginsu-0.8.2.1/GenUtil.hs:135:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./ginsu-0.8.2.1/GenUtil.hs:136:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./ginsu-0.8.2.1/GenUtil.hs:137:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./ginsu-0.8.2.1/GenUtil.hs:138:{-# RULES "snub/[]" snub [] = [] #-}
./ginsu-0.8.2.1/GenUtil.hs:139:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./glpk-hs-0.0.0/Data/LinearProgram/GLPK.hs:122:{-# RULES
./glpk-hs-0.0.1/Data/LinearProgram/GLPK.hs:129:{-# RULES
./glpk-hs-0.0.2/Data/LinearProgram/GLPK.hs:134:{-# RULES
./glpk-hs-0.0.3/Data/LinearProgram/GLPK/Solver.hs:117:{-# RULES
./glpk-hs-0.0.4/Data/LinearProgram/GLPK/Solver.hs:117:{-# RULES
./glpk-hs-0.1.0/Data/LinearProgram/Common.hs:13:{-# RULES
./glpk-hs-0.2.0/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.2.0/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.2.1/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.2.1/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.2.2/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.2.2/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.2.3/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.2.3/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.2.4/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.2.4/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.3.1/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.3.1/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.3.1/Data/LinearProgram/LinExpr.hs:55:{-# RULES
./glpk-hs-0.3.2/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.3.2/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.3.2/Data/LinearProgram/LinExpr.hs:55:{-# RULES
./glpk-hs-0.3.3/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.3.3/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.3.3/Data/LinearProgram/LinExpr.hs:55:{-# RULES
./glpk-hs-0.3.4/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.3.4/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.3.4/Data/LinearProgram/LinExpr.hs:55:{-# RULES
./glpk-hs-0.3.5/Data/Algebra/Module.hs:105:{-# RULES
./glpk-hs-0.3.5/Data/LinearProgram/Common.hs:15:{-# RULES
./glpk-hs-0.3.5/Data/LinearProgram/LinExpr.hs:55:{-# RULES
./gmndl-0.1/gmndl.hs:43:{-# RULES "convert/Double2CDouble" convert = convertDouble2CDouble #-}
./gmndl-0.1/gmndl.hs:44:{-# RULES "convert/CDouble2Double" convert = convertCDouble2Double #-}
./gmndl-0.1/gmndl.hs:45:{-# RULES "convert/Double2DoubleDouble" convert = convertDouble2DoubleDouble #-}
./gmndl-0.1/gmndl.hs:46:{-# RULES "convert/CDouble2DoubleDouble" convert = convertCDouble2DoubleDouble #-}
./gmndl-0.1/gmndl.hs:47:{-# RULES "convert/DoubleDouble2Double" convert = convertDoubleDouble2Double #-}
./gmndl-0.1/gmndl.hs:48:{-# RULES "convert/DoubleDouble2CDouble" convert = convertDoubleDouble2CDouble #-}
./gmndl-0.2/gmndl.hs:70:{-# RULES "convert/Double2CDouble" convert = convertDouble2CDouble #-}
./gmndl-0.2/gmndl.hs:71:{-# RULES "convert/CDouble2Double" convert = convertCDouble2Double #-}
./gmndl-0.2/gmndl.hs:72:{-# RULES "convert/Double2DoubleDouble" convert = convertDouble2DoubleDouble #-}
./gmndl-0.2/gmndl.hs:73:{-# RULES "convert/CDouble2DoubleDouble" convert = convertCDouble2DoubleDouble #-}
./gmndl-0.2/gmndl.hs:74:{-# RULES "convert/DoubleDouble2Double" convert = convertDoubleDouble2Double #-}
./gmndl-0.2/gmndl.hs:75:{-# RULES "convert/DoubleDouble2CDouble" convert = convertDoubleDouble2CDouble #-}
./gmndl-0.3/gmndl.hs:95:{-# RULES "convert/Double2CDouble" convert = convertDouble2CDouble #-}
./gmndl-0.3/gmndl.hs:96:{-# RULES "convert/CDouble2Double" convert = convertCDouble2Double #-}
./gmndl-0.3/gmndl.hs:97:{-# RULES "convert/Double2DoubleDouble" convert = convertDouble2DoubleDouble #-}
./gmndl-0.3/gmndl.hs:98:{-# RULES "convert/CDouble2DoubleDouble" convert = convertCDouble2DoubleDouble #-}
./gmndl-0.3/gmndl.hs:99:{-# RULES "convert/DoubleDouble2Double" convert = convertDoubleDouble2Double #-}
./gmndl-0.3/gmndl.hs:100:{-# RULES "convert/DoubleDouble2CDouble" convert = convertDoubleDouble2CDouble #-}
./gmndl-0.4.0.2/Complex.hs:59:{-# RULES "convert/Double2CDouble" convert = convertDouble2CDouble #-}
./gmndl-0.4.0.2/Complex.hs:60:{-# RULES "convert/CDouble2Double" convert = convertCDouble2Double #-}
./gmndl-0.4.0.2/Complex.hs:61:{-# RULES "convert/Double2DoubleDouble" convert = convertDouble2DoubleDouble #-}
./gmndl-0.4.0.2/Complex.hs:62:{-# RULES "convert/CDouble2DoubleDouble" convert = convertCDouble2DoubleDouble #-}
./gmndl-0.4.0.2/Complex.hs:63:{-# RULES "convert/DoubleDouble2Double" convert = convertDoubleDouble2Double #-}
./gmndl-0.4.0.2/Complex.hs:64:{-# RULES "convert/DoubleDouble2CDouble" convert = convertDoubleDouble2CDouble #-}
./gogol-compute-0.0.1/gen/Network/Google/Compute/Types/Sum.hs:1649:      -- ^ @FORWARDING_RULES@
./gogol-compute-0.0.1/gen/Network/Google/Compute/Types/Sum.hs:1698:        "FORWARDING_RULES" -> Just ForwardingRules
./gogol-compute-0.0.1/gen/Network/Google/Compute/Types/Sum.hs:1726:        ForwardingRules -> "FORWARDING_RULES"
./gore-and-ash-network-1.1.0.0/bitset/Data/BitSet/Generic.hs:228:{-# RULES
./gore-and-ash-network-1.1.0.1/bitset/Data/BitSet/Generic.hs:228:{-# RULES
./GPipe-1.0.0/src/Shader.hs:425:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.0.0/src/Shader.hs:426:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.0.0/src/Shader.hs:427:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.0.0/src/Shader.hs:434:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.0.0/src/Shader.hs:435:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.0.0/src/Shader.hs:436:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.0.0/src/Shader.hs:444:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.0.0/src/Shader.hs:445:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.0.0/src/Shader.hs:446:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.0.0/src/Shader.hs:453:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.0.0/src/Shader.hs:454:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.0.0/src/Shader.hs:455:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.0.0/src/Shader.hs:463:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.0.0/src/Shader.hs:464:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.0.0/src/Shader.hs:465:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.0.0/src/Shader.hs:472:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.0.0/src/Shader.hs:473:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.0.0/src/Shader.hs:474:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.0.0/src/Shader.hs:482:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.0.0/src/Shader.hs:485:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.0.1/src/Shader.hs:425:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.0.1/src/Shader.hs:426:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.0.1/src/Shader.hs:427:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.0.1/src/Shader.hs:434:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.0.1/src/Shader.hs:435:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.0.1/src/Shader.hs:436:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.0.1/src/Shader.hs:444:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.0.1/src/Shader.hs:445:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.0.1/src/Shader.hs:446:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.0.1/src/Shader.hs:453:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.0.1/src/Shader.hs:454:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.0.1/src/Shader.hs:455:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.0.1/src/Shader.hs:463:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.0.1/src/Shader.hs:464:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.0.1/src/Shader.hs:465:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.0.1/src/Shader.hs:472:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.0.1/src/Shader.hs:473:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.0.1/src/Shader.hs:474:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.0.1/src/Shader.hs:482:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.0.1/src/Shader.hs:485:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.0.2/src/Shader.hs:425:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.0.2/src/Shader.hs:426:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.0.2/src/Shader.hs:427:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.0.2/src/Shader.hs:434:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.0.2/src/Shader.hs:435:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.0.2/src/Shader.hs:436:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.0.2/src/Shader.hs:444:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.0.2/src/Shader.hs:445:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.0.2/src/Shader.hs:446:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.0.2/src/Shader.hs:453:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.0.2/src/Shader.hs:454:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.0.2/src/Shader.hs:455:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.0.2/src/Shader.hs:463:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.0.2/src/Shader.hs:464:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.0.2/src/Shader.hs:465:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.0.2/src/Shader.hs:472:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.0.2/src/Shader.hs:473:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.0.2/src/Shader.hs:474:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.0.2/src/Shader.hs:482:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.0.2/src/Shader.hs:485:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.0.3/src/Shader.hs:429:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.0.3/src/Shader.hs:430:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.0.3/src/Shader.hs:431:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.0.3/src/Shader.hs:438:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.0.3/src/Shader.hs:439:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.0.3/src/Shader.hs:440:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.0.3/src/Shader.hs:448:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.0.3/src/Shader.hs:449:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.0.3/src/Shader.hs:450:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.0.3/src/Shader.hs:457:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.0.3/src/Shader.hs:458:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.0.3/src/Shader.hs:459:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.0.3/src/Shader.hs:467:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.0.3/src/Shader.hs:468:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.0.3/src/Shader.hs:469:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.0.3/src/Shader.hs:476:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.0.3/src/Shader.hs:477:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.0.3/src/Shader.hs:478:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.0.3/src/Shader.hs:486:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.0.3/src/Shader.hs:489:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.0.4/src/Shader.hs:429:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.0.4/src/Shader.hs:430:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.0.4/src/Shader.hs:431:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.0.4/src/Shader.hs:438:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.0.4/src/Shader.hs:439:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.0.4/src/Shader.hs:440:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.0.4/src/Shader.hs:448:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.0.4/src/Shader.hs:449:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.0.4/src/Shader.hs:450:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.0.4/src/Shader.hs:457:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.0.4/src/Shader.hs:458:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.0.4/src/Shader.hs:459:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.0.4/src/Shader.hs:467:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.0.4/src/Shader.hs:468:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.0.4/src/Shader.hs:469:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.0.4/src/Shader.hs:476:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.0.4/src/Shader.hs:477:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.0.4/src/Shader.hs:478:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.0.4/src/Shader.hs:486:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.0.4/src/Shader.hs:489:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.1.0/src/Shader.hs:411:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.1.0/src/Shader.hs:412:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.1.0/src/Shader.hs:413:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.1.0/src/Shader.hs:420:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.1.0/src/Shader.hs:421:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.1.0/src/Shader.hs:422:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.1.0/src/Shader.hs:430:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.1.0/src/Shader.hs:431:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.1.0/src/Shader.hs:432:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.1.0/src/Shader.hs:439:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.1.0/src/Shader.hs:440:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.1.0/src/Shader.hs:441:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.1.0/src/Shader.hs:449:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.1.0/src/Shader.hs:450:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.1.0/src/Shader.hs:451:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.1.0/src/Shader.hs:458:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.1.0/src/Shader.hs:459:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.1.0/src/Shader.hs:460:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.1.0/src/Shader.hs:468:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.1.0/src/Shader.hs:471:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.1.1/src/Shader.hs:411:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.1.1/src/Shader.hs:412:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.1.1/src/Shader.hs:413:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.1.1/src/Shader.hs:420:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.1.1/src/Shader.hs:421:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.1.1/src/Shader.hs:422:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.1.1/src/Shader.hs:430:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.1.1/src/Shader.hs:431:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.1.1/src/Shader.hs:432:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.1.1/src/Shader.hs:439:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.1.1/src/Shader.hs:440:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.1.1/src/Shader.hs:441:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.1.1/src/Shader.hs:449:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.1.1/src/Shader.hs:450:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.1.1/src/Shader.hs:451:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.1.1/src/Shader.hs:458:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.1.1/src/Shader.hs:459:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.1.1/src/Shader.hs:460:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.1.1/src/Shader.hs:468:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.1.1/src/Shader.hs:471:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.1.2/src/Shader.hs:411:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.1.2/src/Shader.hs:412:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.1.2/src/Shader.hs:413:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.1.2/src/Shader.hs:420:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.1.2/src/Shader.hs:421:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.1.2/src/Shader.hs:422:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.1.2/src/Shader.hs:430:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.1.2/src/Shader.hs:431:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.1.2/src/Shader.hs:432:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.1.2/src/Shader.hs:439:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.1.2/src/Shader.hs:440:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.1.2/src/Shader.hs:441:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.1.2/src/Shader.hs:449:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.1.2/src/Shader.hs:450:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.1.2/src/Shader.hs:451:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.1.2/src/Shader.hs:458:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.1.2/src/Shader.hs:459:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.1.2/src/Shader.hs:460:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.1.2/src/Shader.hs:468:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.1.2/src/Shader.hs:471:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.1.3/src/Shader.hs:411:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.1.3/src/Shader.hs:412:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.1.3/src/Shader.hs:413:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.1.3/src/Shader.hs:420:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.1.3/src/Shader.hs:421:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.1.3/src/Shader.hs:422:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.1.3/src/Shader.hs:430:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.1.3/src/Shader.hs:431:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.1.3/src/Shader.hs:432:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.1.3/src/Shader.hs:439:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.1.3/src/Shader.hs:440:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.1.3/src/Shader.hs:441:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.1.3/src/Shader.hs:449:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.1.3/src/Shader.hs:450:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.1.3/src/Shader.hs:451:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.1.3/src/Shader.hs:458:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.1.3/src/Shader.hs:459:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.1.3/src/Shader.hs:460:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.1.3/src/Shader.hs:468:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.1.3/src/Shader.hs:471:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.1.4/src/Shader.hs:411:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.1.4/src/Shader.hs:412:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.1.4/src/Shader.hs:413:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.1.4/src/Shader.hs:420:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.1.4/src/Shader.hs:421:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.1.4/src/Shader.hs:422:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.1.4/src/Shader.hs:430:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.1.4/src/Shader.hs:431:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.1.4/src/Shader.hs:432:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.1.4/src/Shader.hs:439:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.1.4/src/Shader.hs:440:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.1.4/src/Shader.hs:441:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.1.4/src/Shader.hs:449:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.1.4/src/Shader.hs:450:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.1.4/src/Shader.hs:451:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.1.4/src/Shader.hs:458:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.1.4/src/Shader.hs:459:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.1.4/src/Shader.hs:460:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.1.4/src/Shader.hs:468:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.1.4/src/Shader.hs:471:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.1.5/src/Shader.hs:411:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.1.5/src/Shader.hs:412:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.1.5/src/Shader.hs:413:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.1.5/src/Shader.hs:420:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.1.5/src/Shader.hs:421:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.1.5/src/Shader.hs:422:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.1.5/src/Shader.hs:430:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.1.5/src/Shader.hs:431:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.1.5/src/Shader.hs:432:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.1.5/src/Shader.hs:439:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.1.5/src/Shader.hs:440:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.1.5/src/Shader.hs:441:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.1.5/src/Shader.hs:449:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.1.5/src/Shader.hs:450:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.1.5/src/Shader.hs:451:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.1.5/src/Shader.hs:458:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.1.5/src/Shader.hs:459:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.1.5/src/Shader.hs:460:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.1.5/src/Shader.hs:468:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.1.5/src/Shader.hs:471:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.1.6/src/Shader.hs:411:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.1.6/src/Shader.hs:412:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.1.6/src/Shader.hs:413:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.1.6/src/Shader.hs:420:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.1.6/src/Shader.hs:421:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.1.6/src/Shader.hs:422:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.1.6/src/Shader.hs:430:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.1.6/src/Shader.hs:431:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.1.6/src/Shader.hs:432:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.1.6/src/Shader.hs:439:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.1.6/src/Shader.hs:440:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.1.6/src/Shader.hs:441:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.1.6/src/Shader.hs:449:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.1.6/src/Shader.hs:450:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.1.6/src/Shader.hs:451:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.1.6/src/Shader.hs:458:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.1.6/src/Shader.hs:459:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.1.6/src/Shader.hs:460:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.1.6/src/Shader.hs:468:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.1.6/src/Shader.hs:471:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.1.7/src/Shader.hs:411:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.1.7/src/Shader.hs:412:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.1.7/src/Shader.hs:413:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.1.7/src/Shader.hs:420:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.1.7/src/Shader.hs:421:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.1.7/src/Shader.hs:422:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.1.7/src/Shader.hs:430:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.1.7/src/Shader.hs:431:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.1.7/src/Shader.hs:432:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.1.7/src/Shader.hs:439:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.1.7/src/Shader.hs:440:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.1.7/src/Shader.hs:441:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.1.7/src/Shader.hs:449:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.1.7/src/Shader.hs:450:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.1.7/src/Shader.hs:451:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.1.7/src/Shader.hs:458:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.1.7/src/Shader.hs:459:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.1.7/src/Shader.hs:460:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.1.7/src/Shader.hs:468:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.1.7/src/Shader.hs:471:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.2.0/src/Shader.hs:409:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.2.0/src/Shader.hs:410:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.2.0/src/Shader.hs:411:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.2.0/src/Shader.hs:418:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.2.0/src/Shader.hs:419:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.2.0/src/Shader.hs:420:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.2.0/src/Shader.hs:428:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.2.0/src/Shader.hs:429:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.2.0/src/Shader.hs:430:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.2.0/src/Shader.hs:437:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.2.0/src/Shader.hs:438:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.2.0/src/Shader.hs:439:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.2.0/src/Shader.hs:447:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.2.0/src/Shader.hs:448:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.2.0/src/Shader.hs:449:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.2.0/src/Shader.hs:456:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.2.0/src/Shader.hs:457:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.2.0/src/Shader.hs:458:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.2.0/src/Shader.hs:466:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.2.0/src/Shader.hs:469:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.2.1/src/Shader.hs:409:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.2.1/src/Shader.hs:410:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.2.1/src/Shader.hs:411:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.2.1/src/Shader.hs:418:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.2.1/src/Shader.hs:419:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.2.1/src/Shader.hs:420:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.2.1/src/Shader.hs:428:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.2.1/src/Shader.hs:429:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.2.1/src/Shader.hs:430:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.2.1/src/Shader.hs:437:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.2.1/src/Shader.hs:438:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.2.1/src/Shader.hs:439:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.2.1/src/Shader.hs:447:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.2.1/src/Shader.hs:448:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.2.1/src/Shader.hs:449:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.2.1/src/Shader.hs:456:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.2.1/src/Shader.hs:457:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.2.1/src/Shader.hs:458:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.2.1/src/Shader.hs:466:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.2.1/src/Shader.hs:469:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.3/src/Shader.hs:409:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.3/src/Shader.hs:410:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.3/src/Shader.hs:411:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.3/src/Shader.hs:418:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.3/src/Shader.hs:419:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.3/src/Shader.hs:420:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.3/src/Shader.hs:428:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.3/src/Shader.hs:429:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.3/src/Shader.hs:430:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.3/src/Shader.hs:437:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.3/src/Shader.hs:438:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.3/src/Shader.hs:439:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.3/src/Shader.hs:447:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.3/src/Shader.hs:448:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.3/src/Shader.hs:449:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.3/src/Shader.hs:456:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.3/src/Shader.hs:457:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.3/src/Shader.hs:458:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.3/src/Shader.hs:466:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.3/src/Shader.hs:469:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.3.1/src/Shader.hs:410:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.3.1/src/Shader.hs:411:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.3.1/src/Shader.hs:412:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.3.1/src/Shader.hs:419:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.3.1/src/Shader.hs:420:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.3.1/src/Shader.hs:421:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.3.1/src/Shader.hs:429:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.3.1/src/Shader.hs:430:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.3.1/src/Shader.hs:431:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.3.1/src/Shader.hs:438:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.3.1/src/Shader.hs:439:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.3.1/src/Shader.hs:440:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.3.1/src/Shader.hs:448:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.3.1/src/Shader.hs:449:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.3.1/src/Shader.hs:450:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.3.1/src/Shader.hs:457:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.3.1/src/Shader.hs:458:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.3.1/src/Shader.hs:459:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.3.1/src/Shader.hs:467:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.3.1/src/Shader.hs:470:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.3.2/src/Shader.hs:410:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.3.2/src/Shader.hs:411:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.3.2/src/Shader.hs:412:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.3.2/src/Shader.hs:419:{-# RULES "norm/V4" norm = normV4 #-}
./GPipe-1.3.2/src/Shader.hs:420:{-# RULES "norm/V3" norm = normV3 #-}
./GPipe-1.3.2/src/Shader.hs:421:{-# RULES "norm/V2" norm = normV2 #-}
./GPipe-1.3.2/src/Shader.hs:429:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.3.2/src/Shader.hs:430:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.3.2/src/Shader.hs:431:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.3.2/src/Shader.hs:438:{-# RULES "normalize/V4" normalize = normalizeV4 #-}
./GPipe-1.3.2/src/Shader.hs:439:{-# RULES "normalize/V3" normalize = normalizeV3 #-}
./GPipe-1.3.2/src/Shader.hs:440:{-# RULES "normalize/V2" normalize = normalizeV2 #-}
./GPipe-1.3.2/src/Shader.hs:448:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.3.2/src/Shader.hs:449:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.3.2/src/Shader.hs:450:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.3.2/src/Shader.hs:457:{-# RULES "dot/V4" dot = dotV4 #-}
./GPipe-1.3.2/src/Shader.hs:458:{-# RULES "dot/V3" dot = dotV3 #-}
./GPipe-1.3.2/src/Shader.hs:459:{-# RULES "dot/V2" dot = dotV2 #-}
./GPipe-1.3.2/src/Shader.hs:467:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.3.2/src/Shader.hs:470:{-# RULES "cross/V3" cross = crossV3 #-}
./GPipe-1.4/src/Shader.hs:302:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.4/src/Shader.hs:303:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.4/src/Shader.hs:304:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.4/src/Shader.hs:312:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.4/src/Shader.hs:313:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.4/src/Shader.hs:314:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.4/src/Shader.hs:322:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.4/src/Shader.hs:323:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.4/src/Shader.hs:324:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.4/src/Shader.hs:332:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.4/src/Shader.hs:337:{-# RULES "minB/F" minB = minS #-}
./GPipe-1.4/src/Shader.hs:338:{-# RULES "maxB/F" maxB = maxS #-}
./GPipe-1.4.1/src/Shader.hs:305:{-# RULES "norm/F4" norm = normF4 #-}
./GPipe-1.4.1/src/Shader.hs:306:{-# RULES "norm/F3" norm = normF3 #-}
./GPipe-1.4.1/src/Shader.hs:307:{-# RULES "norm/F2" norm = normF2 #-}
./GPipe-1.4.1/src/Shader.hs:315:{-# RULES "normalize/F4" normalize = normalizeF4 #-}
./GPipe-1.4.1/src/Shader.hs:316:{-# RULES "normalize/F3" normalize = normalizeF3 #-}
./GPipe-1.4.1/src/Shader.hs:317:{-# RULES "normalize/F2" normalize = normalizeF2 #-}
./GPipe-1.4.1/src/Shader.hs:325:{-# RULES "dot/F4" dot = dotF4 #-}
./GPipe-1.4.1/src/Shader.hs:326:{-# RULES "dot/F3" dot = dotF3 #-}
./GPipe-1.4.1/src/Shader.hs:327:{-# RULES "dot/F2" dot = dotF2 #-}
./GPipe-1.4.1/src/Shader.hs:335:{-# RULES "cross/F3" cross = crossF3 #-}
./GPipe-1.4.1/src/Shader.hs:340:{-# RULES "minB/F" minB = minS #-}
./GPipe-1.4.1/src/Shader.hs:341:{-# RULES "maxB/F" maxB = maxS #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Context.hs:187:{-# RULES
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:775:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:776:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:777:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:785:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:786:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:787:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:795:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:796:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:797:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:798:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:799:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:800:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:809:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:813:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:814:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:829:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:830:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:831:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:839:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:840:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:841:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:849:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:850:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:851:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:859:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:860:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:861:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:870:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:871:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:872:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:873:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:874:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:875:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:876:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:877:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:878:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:897:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:898:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:899:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:900:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:901:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:902:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:903:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:904:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:905:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:926:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:927:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:928:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:929:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:930:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:931:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:932:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:933:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:934:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:954:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:955:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:956:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:957:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:958:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:959:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:960:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:961:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:962:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:982:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:983:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:984:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:985:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:986:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:987:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:988:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:989:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:990:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1010:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1011:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1012:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1013:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1014:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1015:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1016:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1017:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1018:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1039:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1040:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1041:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1042:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1043:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1044:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1045:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1046:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1047:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1068:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1069:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1070:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1071:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1072:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1073:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1074:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1075:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1076:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1097:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1098:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1099:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1100:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1101:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1102:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1103:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1104:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.0/src/Graphics/GPipe/Internal/Expr.hs:1105:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Context.hs:187:{-# RULES
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:775:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:776:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:777:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:785:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:786:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:787:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:795:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:796:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:797:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:798:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:799:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:800:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:809:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:813:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:814:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:829:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:830:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:831:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:839:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:840:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:841:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:849:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:850:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:851:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:859:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:860:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:861:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:870:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:871:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:872:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:873:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:874:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:875:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:876:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:877:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:878:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:897:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:898:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:899:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:900:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:901:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:902:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:903:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:904:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:905:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:926:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:927:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:928:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:929:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:930:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:931:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:932:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:933:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:934:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:954:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:955:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:956:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:957:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:958:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:959:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:960:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:961:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:962:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:982:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:983:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:984:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:985:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:986:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:987:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:988:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:989:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:990:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1010:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1011:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1012:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1013:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1014:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1015:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1016:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1017:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1018:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1039:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1040:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1041:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1042:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1043:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1044:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1045:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1046:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1047:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1068:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1069:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1070:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1071:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1072:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1073:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1074:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1075:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1076:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1097:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1098:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1099:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1100:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1101:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1102:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1103:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1104:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.0.1/src/Graphics/GPipe/Internal/Expr.hs:1105:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Context.hs:193:{-# RULES
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:783:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:784:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:785:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:793:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:794:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:795:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:803:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:804:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:805:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:806:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:807:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:808:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:817:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:821:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:822:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:837:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:838:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:839:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:847:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:848:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:849:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:857:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:858:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:859:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:867:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:868:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:869:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:878:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:879:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:880:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:881:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:882:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:883:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:884:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:885:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:886:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:905:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:906:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:907:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:908:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:909:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:910:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:911:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:912:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:913:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:934:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:935:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:936:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:937:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:938:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:939:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:940:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:941:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:942:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:962:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:963:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:964:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:965:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:966:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:967:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:968:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:969:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:970:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:990:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:991:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:992:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:993:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:994:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:995:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:996:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:997:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:998:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1018:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1019:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1020:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1021:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1022:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1023:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1024:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1025:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1026:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1047:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1048:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1049:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1050:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1051:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1052:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1053:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1054:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1055:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1076:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1077:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1078:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1079:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1080:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1081:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1082:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1083:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1084:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1105:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1106:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1107:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1108:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1109:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1110:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1111:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1112:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.0.2/src/Graphics/GPipe/Internal/Expr.hs:1113:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Context.hs:206:{-# RULES
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:832:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:833:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:834:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:842:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:843:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:844:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:852:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:853:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:854:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:855:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:856:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:857:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:866:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:870:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:871:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:886:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:887:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:888:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:896:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:897:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:898:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:906:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:907:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:908:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:916:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:917:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:918:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:927:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:928:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:929:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:930:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:931:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:932:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:933:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:934:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:935:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:954:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:955:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:956:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:957:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:958:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:959:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:960:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:961:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:962:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:983:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:984:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:985:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:986:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:987:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:988:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:989:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:990:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:991:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1011:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1012:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1013:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1014:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1015:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1016:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1017:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1018:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1019:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1039:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1040:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1041:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1042:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1043:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1044:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1045:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1046:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1047:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1067:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1068:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1069:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1070:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1071:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1072:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1073:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1074:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1075:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1096:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1097:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1098:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1099:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1100:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1101:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1102:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1103:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1104:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1125:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1126:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1127:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1128:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1129:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1130:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1131:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1132:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1133:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1154:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1155:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1156:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1157:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1158:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1159:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1160:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1161:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.1/src/Graphics/GPipe/Internal/Expr.hs:1162:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Context.hs:206:{-# RULES
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:834:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:835:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:836:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:844:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:845:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:846:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:854:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:855:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:856:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:857:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:858:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:859:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:868:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:872:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:873:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:888:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:889:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:890:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:898:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:899:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:900:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:908:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:909:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:910:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:918:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:919:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:920:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:929:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:930:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:931:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:932:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:933:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:934:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:935:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:936:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:937:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:956:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:957:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:958:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:959:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:960:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:961:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:962:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:963:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:964:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:985:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:986:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:987:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:988:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:989:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:990:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:991:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:992:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:993:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1013:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1014:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1015:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1016:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1017:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1018:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1019:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1020:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1021:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1041:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1042:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1043:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1044:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1045:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1046:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1047:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1048:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1049:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1069:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1070:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1071:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1072:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1073:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1074:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1075:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1076:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1077:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1098:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1099:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1100:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1101:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1102:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1103:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1104:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1105:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1106:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1127:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1128:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1129:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1130:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1131:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1132:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1133:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1134:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1135:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1156:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1157:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1158:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1159:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1160:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1161:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1162:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1163:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.1.1/src/Graphics/GPipe/Internal/Expr.hs:1164:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Context.hs:206:{-# RULES
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:842:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:843:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:844:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:852:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:853:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:854:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:862:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:863:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:864:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:865:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:866:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:867:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:876:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:880:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:881:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:896:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:897:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:898:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:906:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:907:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:908:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:916:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:917:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:918:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:926:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:927:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:928:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:937:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:938:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:939:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:940:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:941:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:942:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:943:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:944:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:945:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:964:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:965:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:966:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:967:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:968:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:969:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:970:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:971:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:972:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:993:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:994:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:995:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:996:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:997:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:998:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:999:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1000:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1001:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1021:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1022:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1023:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1024:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1025:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1026:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1027:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1028:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1029:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1049:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1050:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1051:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1052:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1053:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1054:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1055:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1056:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1057:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1077:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1078:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1079:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1080:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1081:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1082:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1083:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1084:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1085:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1106:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1107:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1108:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1109:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1110:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1111:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1112:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1113:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1114:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1135:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1136:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1137:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1138:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1139:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1140:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1141:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1142:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1143:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1164:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1165:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1166:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1167:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1168:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1169:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1170:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1171:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.1.2/src/Graphics/GPipe/Internal/Expr.hs:1172:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Context.hs:206:{-# RULES
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:847:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:848:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:849:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:857:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:858:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:859:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:867:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:868:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:869:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:870:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:871:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:872:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:881:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:885:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:886:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:901:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:902:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:903:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:911:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:912:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:913:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:921:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:922:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:923:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:931:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:932:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:933:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:942:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:943:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:944:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:945:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:946:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:947:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:948:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:949:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:950:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:969:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:970:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:971:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:972:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:973:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:974:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:975:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:976:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:977:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:998:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:999:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1000:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1001:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1002:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1003:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1004:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1005:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1006:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1026:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1027:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1028:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1029:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1030:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1031:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1032:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1033:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1034:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1054:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1055:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1056:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1057:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1058:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1059:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1060:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1061:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1062:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1082:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1083:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1084:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1085:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1086:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1087:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1088:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1089:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1090:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1111:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1112:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1113:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1114:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1115:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1116:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1117:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1118:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1119:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1140:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1141:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1142:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1143:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1144:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1145:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1146:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1147:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1148:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1169:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1170:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1171:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1172:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1173:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1174:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1175:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1176:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.1.3/src/Graphics/GPipe/Internal/Expr.hs:1177:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Context.hs:206:{-# RULES
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:847:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:848:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:849:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:857:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:858:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:859:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:867:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:868:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:869:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:870:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:871:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:872:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:881:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:885:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:886:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:901:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:902:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:903:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:911:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:912:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:913:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:921:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:922:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:923:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:931:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:932:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:933:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:942:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:943:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:944:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:945:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:946:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:947:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:948:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:949:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:950:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:969:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:970:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:971:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:972:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:973:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:974:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:975:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:976:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:977:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:998:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:999:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1000:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1001:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1002:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1003:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1004:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1005:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1006:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1026:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1027:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1028:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1029:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1030:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1031:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1032:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1033:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1034:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1054:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1055:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1056:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1057:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1058:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1059:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1060:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1061:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1062:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1082:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1083:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1084:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1085:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1086:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1087:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1088:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1089:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1090:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1111:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1112:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1113:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1114:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1115:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1116:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1117:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1118:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1119:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1140:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1141:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1142:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1143:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1144:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1145:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1146:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1147:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1148:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1169:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1170:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1171:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1172:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1173:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1174:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1175:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1176:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.1.4/src/Graphics/GPipe/Internal/Expr.hs:1177:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Context.hs:206:{-# RULES
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:859:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:860:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:861:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:869:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:870:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:871:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:879:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:880:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:881:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:882:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:883:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:884:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:893:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:897:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:898:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:913:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:914:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:915:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:923:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:924:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:925:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:933:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:934:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:935:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:943:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:944:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:945:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:954:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:955:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:956:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:957:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:958:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:959:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:960:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:961:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:962:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:981:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:982:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:983:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:984:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:985:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:986:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:987:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:988:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:989:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1010:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1011:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1012:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1013:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1014:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1015:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1016:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1017:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1018:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1038:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1039:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1040:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1041:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1042:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1043:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1044:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1045:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1046:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1066:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1067:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1068:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1069:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1070:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1071:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1072:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1073:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1074:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1094:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1095:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1096:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1097:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1098:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1099:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1100:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1101:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1102:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1123:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1124:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1125:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1126:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1127:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1128:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1129:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1130:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1131:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1152:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1153:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1154:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1155:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1156:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1157:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1158:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1159:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1160:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1181:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1182:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1183:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1184:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1185:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1186:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1187:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1188:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.1.5/src/Graphics/GPipe/Internal/Expr.hs:1189:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Context.hs:206:{-# RULES
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:859:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:860:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:861:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:869:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:870:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:871:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:879:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:880:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:881:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:882:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:883:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:884:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:893:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:897:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:898:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:913:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:914:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:915:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:923:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:924:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:925:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:933:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:934:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:935:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:943:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:944:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:945:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:954:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:955:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:956:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:957:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:958:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:959:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:960:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:961:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:962:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:981:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:982:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:983:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:984:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:985:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:986:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:987:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:988:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:989:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1010:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1011:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1012:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1013:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1014:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1015:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1016:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1017:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1018:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1038:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1039:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1040:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1041:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1042:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1043:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1044:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1045:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1046:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1066:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1067:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1068:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1069:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1070:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1071:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1072:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1073:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1074:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1094:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1095:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1096:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1097:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1098:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1099:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1100:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1101:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1102:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1123:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1124:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1125:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1126:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1127:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1128:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1129:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1130:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1131:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1152:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1153:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1154:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1155:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1156:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1157:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1158:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1159:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1160:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1181:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1182:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1183:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1184:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1185:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1186:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1187:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1188:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.1.6/src/Graphics/GPipe/Internal/Expr.hs:1189:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Context.hs:206:{-# RULES
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:859:{-# RULES "norm/length4" norm = length4 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:860:{-# RULES "norm/length3" norm = length3 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:861:{-# RULES "norm/length2" norm = length2 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:869:{-# RULES "signorm/normalize4" signorm = normalize4 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:870:{-# RULES "signorm/normalize3" signorm = normalize3 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:871:{-# RULES "signorm/normalize2" signorm = normalize2 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:879:{-# RULES "distanceA/dist4" distanceA = dist4 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:880:{-# RULES "distanceA/dist3" distanceA = dist3 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:881:{-# RULES "distanceA/dist2" distanceA = dist2 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:882:{-# RULES "distance/dist4" distance = dist4 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:883:{-# RULES "distance/dist3" distance = dist3 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:884:{-# RULES "distance/dist2" distance = dist2 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:893:{-# RULES "cross/S" cross = crossS #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:897:{-# RULES "minB/S" minB = minS #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:898:{-# RULES "maxB/S" maxB = maxS #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:913:{-# RULES "mul_12_21vv" dot = mul_12_21vv #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:914:{-# RULES "mul_13_31vv" dot = mul_13_31vv #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:915:{-# RULES "mul_14_41vv" dot = mul_14_41vv #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:923:{-# RULES "mul_12_21vm" (*!) = mul_12_21vm #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:924:{-# RULES "mul_13_31vm" (*!) = mul_13_31vm #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:925:{-# RULES "mul_14_41vm" (*!) = mul_14_41vm #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:933:{-# RULES "mul_12_21mv" (!*) = mul_12_21mv #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:934:{-# RULES "mul_13_31mv" (!*) = mul_13_31mv #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:935:{-# RULES "mul_14_41mv" (!*) = mul_14_41mv #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:943:{-# RULES "mul_12_21mm" (!*!) = mul_12_21mm #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:944:{-# RULES "mul_13_31mm" (!*!) = mul_13_31mm #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:945:{-# RULES "mul_14_41mm" (!*!) = mul_14_41mm #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:954:{-# RULES "mul_21_12" outer = mul_21_12 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:955:{-# RULES "mul_21_13" outer = mul_21_13 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:956:{-# RULES "mul_21_14" outer = mul_21_14 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:957:{-# RULES "mul_31_12" outer = mul_31_12 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:958:{-# RULES "mul_31_13" outer = mul_31_13 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:959:{-# RULES "mul_31_14" outer = mul_31_14 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:960:{-# RULES "mul_41_12" outer = mul_41_12 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:961:{-# RULES "mul_41_13" outer = mul_41_13 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:962:{-# RULES "mul_41_14" outer = mul_41_14 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:981:{-# RULES "mul_21_12m" (!*!) = mul_21_12m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:982:{-# RULES "mul_21_13m" (!*!) = mul_21_13m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:983:{-# RULES "mul_21_14m" (!*!) = mul_21_14m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:984:{-# RULES "mul_31_12m" (!*!) = mul_31_12m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:985:{-# RULES "mul_31_13m" (!*!) = mul_31_13m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:986:{-# RULES "mul_31_14m" (!*!) = mul_31_14m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:987:{-# RULES "mul_41_12m" (!*!) = mul_41_12m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:988:{-# RULES "mul_41_13m" (!*!) = mul_41_13m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:989:{-# RULES "mul_41_14m" (!*!) = mul_41_14m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1010:{-# RULES "mul_12_22" (*!) = mul_12_22 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1011:{-# RULES "mul_13_32" (*!) = mul_13_32 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1012:{-# RULES "mul_14_42" (*!) = mul_14_42 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1013:{-# RULES "mul_12_23" (*!) = mul_12_23 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1014:{-# RULES "mul_13_33" (*!) = mul_13_33 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1015:{-# RULES "mul_14_43" (*!) = mul_14_43 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1016:{-# RULES "mul_12_24" (*!) = mul_12_24 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1017:{-# RULES "mul_13_34" (*!) = mul_13_34 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1018:{-# RULES "mul_14_44" (*!) = mul_14_44 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1038:{-# RULES "mul_12_22m" (!*!) = mul_12_22m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1039:{-# RULES "mul_13_32m" (!*!) = mul_13_32m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1040:{-# RULES "mul_14_42m" (!*!) = mul_14_42m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1041:{-# RULES "mul_12_23m" (!*!) = mul_12_23m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1042:{-# RULES "mul_13_33m" (!*!) = mul_13_33m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1043:{-# RULES "mul_14_43m" (!*!) = mul_14_43m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1044:{-# RULES "mul_12_24m" (!*!) = mul_12_24m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1045:{-# RULES "mul_13_34m" (!*!) = mul_13_34m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1046:{-# RULES "mul_14_44m" (!*!) = mul_14_44m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1066:{-# RULES "mul_22_21" (!*) = mul_22_21 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1067:{-# RULES "mul_23_31" (!*) = mul_23_31 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1068:{-# RULES "mul_24_41" (!*) = mul_24_41 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1069:{-# RULES "mul_32_21" (!*) = mul_32_21 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1070:{-# RULES "mul_33_31" (!*) = mul_33_31 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1071:{-# RULES "mul_34_41" (!*) = mul_34_41 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1072:{-# RULES "mul_42_21" (!*) = mul_42_21 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1073:{-# RULES "mul_43_31" (!*) = mul_43_31 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1074:{-# RULES "mul_44_41" (!*) = mul_44_41 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1094:{-# RULES "mul_22_21m" (!*!) = mul_22_21m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1095:{-# RULES "mul_23_31m" (!*!) = mul_23_31m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1096:{-# RULES "mul_24_41m" (!*!) = mul_24_41m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1097:{-# RULES "mul_32_21m" (!*!) = mul_32_21m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1098:{-# RULES "mul_33_31m" (!*!) = mul_33_31m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1099:{-# RULES "mul_34_41m" (!*!) = mul_34_41m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1100:{-# RULES "mul_42_21m" (!*!) = mul_42_21m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1101:{-# RULES "mul_43_31m" (!*!) = mul_43_31m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1102:{-# RULES "mul_44_41m" (!*!) = mul_44_41m #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1123:{-# RULES "mul_22_22" (!*!) = mul_22_22 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1124:{-# RULES "mul_23_32" (!*!) = mul_23_32 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1125:{-# RULES "mul_24_42" (!*!) = mul_24_42 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1126:{-# RULES "mul_22_23" (!*!) = mul_22_23 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1127:{-# RULES "mul_23_33" (!*!) = mul_23_33 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1128:{-# RULES "mul_24_43" (!*!) = mul_24_43 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1129:{-# RULES "mul_22_24" (!*!) = mul_22_24 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1130:{-# RULES "mul_23_34" (!*!) = mul_23_34 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1131:{-# RULES "mul_24_44" (!*!) = mul_24_44 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1152:{-# RULES "mul_32_22" (!*!) = mul_32_22 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1153:{-# RULES "mul_33_32" (!*!) = mul_33_32 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1154:{-# RULES "mul_34_42" (!*!) = mul_34_42 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1155:{-# RULES "mul_32_23" (!*!) = mul_32_23 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1156:{-# RULES "mul_33_33" (!*!) = mul_33_33 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1157:{-# RULES "mul_34_43" (!*!) = mul_34_43 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1158:{-# RULES "mul_32_24" (!*!) = mul_32_24 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1159:{-# RULES "mul_33_34" (!*!) = mul_33_34 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1160:{-# RULES "mul_34_44" (!*!) = mul_34_44 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1181:{-# RULES "mul_42_22" (!*!) = mul_42_22 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1182:{-# RULES "mul_43_32" (!*!) = mul_43_32 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1183:{-# RULES "mul_44_42" (!*!) = mul_44_42 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1184:{-# RULES "mul_42_23" (!*!) = mul_42_23 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1185:{-# RULES "mul_43_33" (!*!) = mul_43_33 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1186:{-# RULES "mul_44_43" (!*!) = mul_44_43 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1187:{-# RULES "mul_42_24" (!*!) = mul_42_24 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1188:{-# RULES "mul_43_34" (!*!) = mul_43_34 #-}
./GPipe-2.1.7/src/Graphics/GPipe/Internal/Expr.hs:1189:{-# RULES "mul_44_44" (!*!) = mul_44_44 #-}
./graph-wrapper-0.1.1/Data/Graph/Wrapper.hs:92:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.1.1/Data/Graph/Wrapper.hs:93:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2/Data/Graph/Wrapper.hs:92:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2/Data/Graph/Wrapper.hs:93:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.1/Data/Graph/Wrapper.hs:92:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.1/Data/Graph/Wrapper.hs:93:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.2/Data/Graph/Wrapper.hs:88:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.2/Data/Graph/Wrapper.hs:89:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.3/Data/Graph/Wrapper/Internal.hs:44:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.3/Data/Graph/Wrapper/Internal.hs:45:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.4/Data/Graph/Wrapper/Internal.hs:53:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.4/Data/Graph/Wrapper/Internal.hs:54:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.4.1/Data/Graph/Wrapper/Internal.hs:53:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.4.1/Data/Graph/Wrapper/Internal.hs:54:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.4.2/Data/Graph/Wrapper/Internal.hs:53:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.4.2/Data/Graph/Wrapper/Internal.hs:54:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.4.3/Data/Graph/Wrapper/Internal.hs:53:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.4.3/Data/Graph/Wrapper/Internal.hs:54:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.4.4/Data/Graph/Wrapper/Internal.hs:53:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.4.4/Data/Graph/Wrapper/Internal.hs:54:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.5/src/Data/Graph/Wrapper/Internal.hs:56:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.5/src/Data/Graph/Wrapper/Internal.hs:57:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./graph-wrapper-0.2.5.1/src/Data/Graph/Wrapper/Internal.hs:56:{-# RULES "indexGVertex/gVertexIndex" forall g i. gVertexIndex g (indexGVertex g i) = i #-}
./graph-wrapper-0.2.5.1/src/Data/Graph/Wrapper/Internal.hs:57:{-# RULES "gVertexIndex/indexGVertex" forall g v. indexGVertex g (gVertexIndex g v) = v #-}
./groundhog-sqlite-0.0.1/Database/Groundhog/Sqlite.hs:103:{- ********************RULES******************** --
./groundhog-sqlite-0.0.1.1/Database/Groundhog/Sqlite.hs:103:{- ********************RULES******************** --
./haddock-0.8/src/Html.hs:476:rules               =   strAttr "RULES"
./haddock-0.8/src/Html.hs:626:      "RULES",
./haddock-0.9/src/Html.hs:476:rules               =   strAttr "RULES"
./haddock-0.9/src/Html.hs:626:      "RULES",
./haddock-2.0.0.0/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.0.0.0/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.1.0/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.1.0/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.2.0/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.2.0/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.2.1/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.2.1/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.2.2/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.2.2/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.4.0/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.4.0/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.4.1/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.4.1/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.4.2/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.4.2/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.5.0/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.5.0/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.6.0/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.6.0/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.6.1/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.6.1/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.7.0/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.7.0/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.7.1/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.7.1/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-2.7.2/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-2.7.2/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-leksah-2.5.0/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-leksah-2.5.0/src/Haddock/Utils/Html.hs:626:      "RULES",
./haddock-leksah-2.6.0/src/Haddock/Utils/Html.hs:476:rules               =   strAttr "RULES"
./haddock-leksah-2.6.0/src/Haddock/Utils/Html.hs:626:      "RULES",
./half-0.1/src/Numeric/Half.hs:45:{-# RULES "toHalf"  realToFrac = toHalf #-}
./half-0.1/src/Numeric/Half.hs:49:{-# RULES "toFloat" realToFrac = toFloat #-}
./half-0.1.1/src/Numeric/Half.hs:45:{-# RULES "toHalf"  realToFrac = toHalf #-}
./half-0.1.1/src/Numeric/Half.hs:49:{-# RULES "toFloat" realToFrac = toFloat #-}
./half-0.2/src/Numeric/Half.hs:46:{-# RULES "toHalf"  realToFrac = toHalf #-}
./half-0.2/src/Numeric/Half.hs:50:{-# RULES "fromHalf" realToFrac = fromHalf #-}
./half-0.2.0.1/src/Numeric/Half.hs:46:-- {-# RULES "toHalf"  realToFrac = toHalf #-}
./half-0.2.0.1/src/Numeric/Half.hs:50:-- {-# RULES "fromHalf" realToFrac = fromHalf #-}
./half-0.2.1/src/Numeric/Half.hs:45:-- {-# RULES "toHalf"  realToFrac = toHalf #-}
./half-0.2.1/src/Numeric/Half.hs:49:-- {-# RULES "fromHalf" realToFrac = fromHalf #-}
./half-0.2.2/src/Numeric/Half.hs:50:-- {-# RULES "toHalf"  realToFrac = toHalf #-}
./half-0.2.2/src/Numeric/Half.hs:54:-- {-# RULES "fromHalf" realToFrac = fromHalf #-}
./half-0.2.2.1/src/Numeric/Half.hs:55:-- {-# RULES "toHalf"  realToFrac = toHalf #-}
./half-0.2.2.1/src/Numeric/Half.hs:59:-- {-# RULES "fromHalf" realToFrac = fromHalf #-}
./half-0.2.2.2/src/Numeric/Half.hs:55:-- {-# RULES "toHalf"  realToFrac = toHalf #-}
./half-0.2.2.2/src/Numeric/Half.hs:59:-- {-# RULES "fromHalf" realToFrac = fromHalf #-}
./half-0.2.2.3/src/Numeric/Half.hs:55:-- {-# RULES "toHalf"  realToFrac = toHalf #-}
./half-0.2.2.3/src/Numeric/Half.hs:59:-- {-# RULES "fromHalf" realToFrac = fromHalf #-}
./hashable-1.2.0.0/Data/Hashable/Class.hs:344:{-# RULES "hashWithSalt/String"
./hashable-1.2.0.0/Data/Hashable/Class.hs:347:{-# RULES "hash/String"
./hashable-1.2.0.1/Data/Hashable/Class.hs:344:{-# RULES "hashWithSalt/String"
./hashable-1.2.0.1/Data/Hashable/Class.hs:347:{-# RULES "hash/String"
./hashable-1.2.0.2/Data/Hashable/Class.hs:344:{-# RULES "hashWithSalt/String"
./hashable-1.2.0.2/Data/Hashable/Class.hs:347:{-# RULES "hash/String"
./hashable-1.2.0.3/Data/Hashable/Class.hs:353:{-# RULES "hashWithSalt/String"
./hashable-1.2.0.3/Data/Hashable/Class.hs:356:{-# RULES "hash/String"
./hashable-1.2.0.4/Data/Hashable/Class.hs:353:{-# RULES "hashWithSalt/String"
./hashable-1.2.0.4/Data/Hashable/Class.hs:356:{-# RULES "hash/String"
./haskell-mpi-0.5.0/src/C2HS.hs:199:{-# RULES 
./haskell-mpi-1.0.0/src/C2HS.hs:199:{-# RULES 
./haskell-mpi-1.1.0/src/C2HS.hs:199:{-# RULES 
./haskell-mpi-1.2.0/src/C2HS.hs:199:{-# RULES 
./haskell-mpi-1.2.1/src/C2HS.hs:199:{-# RULES
./haskell-src-exts-0.4.4/dist/build/Language/Haskell/Exts/Parser.hs:6067:	RULES -> cont 103#;
./haskell-src-exts-0.4.4/Language/Haskell/Exts/Lexer.hs:111:        | RULES
./haskell-src-exts-0.4.4/Language/Haskell/Exts/Lexer.hs:249: ( "rules",             RULES           ),
./haskell-src-exts-0.4.4/Language/Haskell/Exts/Pretty.hs:454:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.4.4.1/dist/build/Language/Haskell/Exts/Parser.hs:6220:	RULES -> cont 103#;
./haskell-src-exts-0.4.4.1/Language/Haskell/Exts/Lexer.hs:111:        | RULES
./haskell-src-exts-0.4.4.1/Language/Haskell/Exts/Lexer.hs:244: ( "rules",             RULES           ),
./haskell-src-exts-0.4.4.1/Language/Haskell/Exts/Pretty.hs:455:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.4.5/dist/build/Language/Haskell/Exts/Parser.hs:6223:	RULES -> cont 103#;
./haskell-src-exts-0.4.5/Language/Haskell/Exts/Lexer.hs:110:        | RULES
./haskell-src-exts-0.4.5/Language/Haskell/Exts/Lexer.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-0.4.5/Language/Haskell/Exts/Pretty.hs:456:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.4.6/dist/build/Language/Haskell/Exts/Parser.hs:6277:	RULES -> cont 109#;
./haskell-src-exts-0.4.6/Language/Haskell/Exts/Lexer.hs:116:        | RULES
./haskell-src-exts-0.4.6/Language/Haskell/Exts/Lexer.hs:249: ( "rules",             RULES           ),
./haskell-src-exts-0.4.6/Language/Haskell/Exts/Pretty.hs:456:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.4.8/dist/build/Language/Haskell/Exts/Parser.hs:6434:	RULES -> cont 109#;
./haskell-src-exts-0.4.8/Language/Haskell/Exts/Lexer.hs:117:        | RULES
./haskell-src-exts-0.4.8/Language/Haskell/Exts/Lexer.hs:250: ( "rules",             RULES           ),
./haskell-src-exts-0.4.8/Language/Haskell/Exts/Pretty.hs:457:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.5.2/dist/build/Language/Haskell/Exts/Parser.hs:7060:	RULES -> cont 121#;
./haskell-src-exts-0.5.2/src/Language/Haskell/Exts/Lexer.hs:126:        | RULES
./haskell-src-exts-0.5.2/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-0.5.2/src/Language/Haskell/Exts/Pretty.hs:459:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.5.3/dist/build/Language/Haskell/Exts/Parser.hs:7060:	RULES -> cont 121#;
./haskell-src-exts-0.5.3/src/Language/Haskell/Exts/Lexer.hs:126:        | RULES
./haskell-src-exts-0.5.3/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-0.5.3/src/Language/Haskell/Exts/Pretty.hs:459:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.5.4/dist/build/Language/Haskell/Exts/Parser.hs:7060:	RULES -> cont 121#;
./haskell-src-exts-0.5.4/src/Language/Haskell/Exts/Lexer.hs:126:        | RULES
./haskell-src-exts-0.5.4/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-0.5.4/src/Language/Haskell/Exts/Pretty.hs:459:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.5.5/dist/build/Language/Haskell/Exts/Parser.hs:7057:	RULES -> cont 121#;
./haskell-src-exts-0.5.5/src/Language/Haskell/Exts/Lexer.hs:126:        | RULES
./haskell-src-exts-0.5.5/src/Language/Haskell/Exts/Lexer.hs:276: ( "rules",             RULES           ),
./haskell-src-exts-0.5.5/src/Language/Haskell/Exts/Pretty.hs:459:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.5.6/dist/build/Language/Haskell/Exts/Parser.hs:7057:	RULES -> cont 121#;
./haskell-src-exts-0.5.6/src/Language/Haskell/Exts/Lexer.hs:127:        | RULES
./haskell-src-exts-0.5.6/src/Language/Haskell/Exts/Lexer.hs:277: ( "rules",             RULES           ),
./haskell-src-exts-0.5.6/src/Language/Haskell/Exts/Pretty.hs:459:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.5.7/dist/build/Language/Haskell/Exts/Parser.hs:7080:	RULES -> cont 121#;
./haskell-src-exts-0.5.7/src/Language/Haskell/Exts/Lexer.hs:128:        | RULES
./haskell-src-exts-0.5.7/src/Language/Haskell/Exts/Lexer.hs:282: ( "rules",             RULES           ),
./haskell-src-exts-0.5.7/src/Language/Haskell/Exts/Pretty.hs:455:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-0.5.7/src/Language/Haskell/Exts/Syntax.hs:329:     -- ^ A RULES pragma
./haskell-src-exts-0.5.7/src/Language/Haskell/Exts/Syntax.hs:740:-- | Activation clause of a RULES pragma.
./haskell-src-exts-0.5.7/src/Language/Haskell/Exts/Syntax.hs:751:-- | The body of a RULES pragma.
./haskell-src-exts-0.5.7/src/Language/Haskell/Exts/Syntax.hs:760:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.0.0/dist/build/Language/Haskell/Exts/Parser.hs:7080:	RULES -> cont 121#;
./haskell-src-exts-1.0.0/src/Language/Haskell/Exts/Lexer.hs:128:        | RULES
./haskell-src-exts-1.0.0/src/Language/Haskell/Exts/Lexer.hs:282: ( "rules",             RULES           ),
./haskell-src-exts-1.0.0/src/Language/Haskell/Exts/Pretty.hs:455:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.0.0/src/Language/Haskell/Exts/Syntax.hs:329:     -- ^ A RULES pragma
./haskell-src-exts-1.0.0/src/Language/Haskell/Exts/Syntax.hs:740:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.0.0/src/Language/Haskell/Exts/Syntax.hs:751:-- | The body of a RULES pragma.
./haskell-src-exts-1.0.0/src/Language/Haskell/Exts/Syntax.hs:760:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.0.1/dist/build/Language/Haskell/Exts/Parser.hs:7080:	RULES -> cont 121#;
./haskell-src-exts-1.0.1/src/Language/Haskell/Exts/Lexer.hs:128:        | RULES
./haskell-src-exts-1.0.1/src/Language/Haskell/Exts/Lexer.hs:282: ( "rules",             RULES           ),
./haskell-src-exts-1.0.1/src/Language/Haskell/Exts/Pretty.hs:455:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.0.1/src/Language/Haskell/Exts/Syntax.hs:329:     -- ^ A RULES pragma
./haskell-src-exts-1.0.1/src/Language/Haskell/Exts/Syntax.hs:740:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.0.1/src/Language/Haskell/Exts/Syntax.hs:751:-- | The body of a RULES pragma.
./haskell-src-exts-1.0.1/src/Language/Haskell/Exts/Syntax.hs:760:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.1.0/dist/build/Language/Haskell/Exts/Parser.hs:7118:	RULES -> cont 121#;
./haskell-src-exts-1.1.0/src/Language/Haskell/Exts/Lexer.hs:129:        | RULES
./haskell-src-exts-1.1.0/src/Language/Haskell/Exts/Lexer.hs:283: ( "rules",             RULES           ),
./haskell-src-exts-1.1.0/src/Language/Haskell/Exts/Pretty.hs:457:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.1.0/src/Language/Haskell/Exts/Syntax.hs:329:     -- ^ A RULES pragma
./haskell-src-exts-1.1.0/src/Language/Haskell/Exts/Syntax.hs:741:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.1.0/src/Language/Haskell/Exts/Syntax.hs:752:-- | The body of a RULES pragma.
./haskell-src-exts-1.1.0/src/Language/Haskell/Exts/Syntax.hs:761:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.1.1/dist/build/Language/Haskell/Exts/Parser.hs:7130:	RULES -> cont 121#;
./haskell-src-exts-1.1.1/src/Language/Haskell/Exts/Lexer.hs:129:        | RULES
./haskell-src-exts-1.1.1/src/Language/Haskell/Exts/Lexer.hs:279: ( "rules",             RULES           ),
./haskell-src-exts-1.1.1/src/Language/Haskell/Exts/Pretty.hs:457:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.1.1/src/Language/Haskell/Exts/Syntax.hs:329:     -- ^ A RULES pragma
./haskell-src-exts-1.1.1/src/Language/Haskell/Exts/Syntax.hs:741:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.1.1/src/Language/Haskell/Exts/Syntax.hs:752:-- | The body of a RULES pragma.
./haskell-src-exts-1.1.1/src/Language/Haskell/Exts/Syntax.hs:761:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.1.3/dist/build/Language/Haskell/Exts/Annotated/Parser.hs:3009:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.1.3/dist/build/Language/Haskell/Exts/Annotated/Parser.hs:7560:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.1.3/dist/build/Language/Haskell/Exts/Parser.hs:7130:	RULES -> cont 121#;
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Annotated/Lexer.hs:130:        | RULES
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Annotated/Lexer.hs:280: ( "rules",             RULES           ),
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Annotated/Pretty.hs:485:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:374:     -- ^ A RULES pragma
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:802:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:812:-- | The body of a RULES pragma.
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:821:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Lexer.hs:129:        | RULES
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Lexer.hs:279: ( "rules",             RULES           ),
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Pretty.hs:457:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Syntax.hs:329:     -- ^ A RULES pragma
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Syntax.hs:741:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Syntax.hs:752:-- | The body of a RULES pragma.
./haskell-src-exts-1.1.3/src/Language/Haskell/Exts/Syntax.hs:761:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.1.3.1/dist/build/Language/Haskell/Exts/Annotated/Parser.hs:3009:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.1.3.1/dist/build/Language/Haskell/Exts/Annotated/Parser.hs:7560:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.1.3.1/dist/build/Language/Haskell/Exts/Parser.hs:7130:	RULES -> cont 121#;
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Annotated/Lexer.hs:130:        | RULES
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Annotated/Lexer.hs:280: ( "rules",             RULES           ),
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Annotated/Pretty.hs:485:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:374:     -- ^ A RULES pragma
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:802:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:812:-- | The body of a RULES pragma.
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:821:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Lexer.hs:129:        | RULES
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Lexer.hs:279: ( "rules",             RULES           ),
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Pretty.hs:457:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Syntax.hs:329:     -- ^ A RULES pragma
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Syntax.hs:741:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Syntax.hs:752:-- | The body of a RULES pragma.
./haskell-src-exts-1.1.3.1/src/Language/Haskell/Exts/Syntax.hs:761:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.1.4/dist/build/Language/Haskell/Exts/Annotated/Parser.hs:3009:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.1.4/dist/build/Language/Haskell/Exts/Annotated/Parser.hs:7562:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.1.4/dist/build/Language/Haskell/Exts/Parser.hs:7130:	RULES -> cont 121#;
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:576:        printString "{-# RULES"
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Annotated/Lexer.hs:130:        | RULES
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Annotated/Lexer.hs:280: ( "rules",             RULES           ),
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Annotated/Pretty.hs:475:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:366:     -- ^ A RULES pragma
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:829:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:839:-- | The body of a RULES pragma.
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:848:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Lexer.hs:129:        | RULES
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Lexer.hs:279: ( "rules",             RULES           ),
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Pretty.hs:457:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Syntax.hs:329:     -- ^ A RULES pragma
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Syntax.hs:741:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Syntax.hs:752:-- | The body of a RULES pragma.
./haskell-src-exts-1.1.4/src/Language/Haskell/Exts/Syntax.hs:761:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.10.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3032:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.10.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7654:	Loc happy_dollar_dollar RULES -> cont 123#;
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Lexer.hs:293: ( "rules",             RULES           ),
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Lexer.hs:1224:  RULES             -> "{-# RULES"
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Syntax.hs:736:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Syntax.hs:747:-- | The body of a RULES pragma.
./haskell-src-exts-1.10.0/src/Language/Haskell/Exts/Syntax.hs:756:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.10.0/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.10.0/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.10.0/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.10.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3032:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.10.1/dist/build/Language/Haskell/Exts/InternalParser.hs:7654:	Loc happy_dollar_dollar RULES -> cont 123#;
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Lexer.hs:294: ( "rules",             RULES           ),
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Lexer.hs:1225:  RULES             -> "{-# RULES"
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Syntax.hs:736:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Syntax.hs:747:-- | The body of a RULES pragma.
./haskell-src-exts-1.10.1/src/Language/Haskell/Exts/Syntax.hs:756:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.10.1/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.10.1/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.10.1/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.10.2/dist/build/Language/Haskell/Exts/InternalParser.hs:3032:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.10.2/dist/build/Language/Haskell/Exts/InternalParser.hs:7654:	Loc happy_dollar_dollar RULES -> cont 123#;
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Lexer.hs:294: ( "rules",             RULES           ),
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Lexer.hs:1225:  RULES             -> "{-# RULES"
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Syntax.hs:736:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Syntax.hs:747:-- | The body of a RULES pragma.
./haskell-src-exts-1.10.2/src/Language/Haskell/Exts/Syntax.hs:756:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.10.2/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.10.2/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.10.2/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.11.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3039:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.11.1/dist/build/Language/Haskell/Exts/InternalParser.hs:7661:	Loc happy_dollar_dollar RULES -> cont 123#;
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Lexer.hs:294: ( "rules",             RULES           ),
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Lexer.hs:1226:  RULES             -> "{-# RULES"
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Syntax.hs:736:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Syntax.hs:747:-- | The body of a RULES pragma.
./haskell-src-exts-1.11.1/src/Language/Haskell/Exts/Syntax.hs:756:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.11.1/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.11.1/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.11.1/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.12.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3039:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.12.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7661:	Loc happy_dollar_dollar RULES -> cont 123#;
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Lexer.hs:294: ( "rules",             RULES           ),
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Lexer.hs:1229:  RULES             -> "{-# RULES"
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Syntax.hs:736:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Syntax.hs:747:-- | The body of a RULES pragma.
./haskell-src-exts-1.12.0/src/Language/Haskell/Exts/Syntax.hs:756:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.12.0/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.12.0/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.12.0/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.13.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3047:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.13.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7685:	Loc happy_dollar_dollar RULES -> cont 123#;
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Lexer.hs:294: ( "rules",             RULES           ),
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Lexer.hs:1229:  RULES             -> "{-# RULES"
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Syntax.hs:736:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Syntax.hs:747:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.0/src/Language/Haskell/Exts/Syntax.hs:756:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.0/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.13.0/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.13.0/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.13.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3048:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.13.1/dist/build/Language/Haskell/Exts/InternalParser.hs:7702:	Loc happy_dollar_dollar RULES -> cont 123#;
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Lexer.hs:294: ( "rules",             RULES           ),
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Lexer.hs:1229:  RULES             -> "{-# RULES"
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Syntax.hs:736:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Syntax.hs:747:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.1/src/Language/Haskell/Exts/Syntax.hs:756:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.1/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.13.1/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.13.1/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.13.2/dist/build/Language/Haskell/Exts/InternalParser.hs:3055:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.13.2/dist/build/Language/Haskell/Exts/InternalParser.hs:7709:	Loc happy_dollar_dollar RULES -> cont 123#;
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Lexer.hs:294: ( "rules",             RULES           ),
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Lexer.hs:1229:  RULES             -> "{-# RULES"
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Syntax.hs:736:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Syntax.hs:747:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.2/src/Language/Haskell/Exts/Syntax.hs:756:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.2/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.13.2/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.13.2/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.13.3/dist/build/Language/Haskell/Exts/InternalParser.hs:3048:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.13.3/dist/build/Language/Haskell/Exts/InternalParser.hs:7702:	Loc happy_dollar_dollar RULES -> cont 123#;
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Lexer.hs:294: ( "rules",             RULES           ),
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Lexer.hs:1232:  RULES             -> "{-# RULES"
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Syntax.hs:736:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Syntax.hs:747:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.3/src/Language/Haskell/Exts/Syntax.hs:756:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.3/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.13.3/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.13.3/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.13.4/dist/build/Language/Haskell/Exts/InternalParser.hs:3079:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.13.4/dist/build/Language/Haskell/Exts/InternalParser.hs:7863:	Loc happy_dollar_dollar RULES -> cont 127#;
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:357:     -- ^ A RULES pragma
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:849:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:859:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:868:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Lexer.hs:302: ( "rules",             RULES           ),
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Lexer.hs:1240:  RULES             -> "{-# RULES"
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Syntax.hs:324:     -- ^ A RULES pragma
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Syntax.hs:742:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Syntax.hs:753:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.4/src/Language/Haskell/Exts/Syntax.hs:762:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.4/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.13.4/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.13.4/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.13.5/dist/build/Language/Haskell/Exts/InternalParser.hs:3079:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.13.5/dist/build/Language/Haskell/Exts/InternalParser.hs:7863:	Loc happy_dollar_dollar RULES -> cont 127#;
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:703:            printString "{-# RULES"
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:357:     -- ^ A RULES pragma
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:849:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:859:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:868:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/InternalLexer.hs:131:        | RULES
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/InternalLexer.hs:302: ( "rules",             RULES           ),
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/InternalLexer.hs:1240:  RULES             -> "{-# RULES"
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Syntax.hs:324:     -- ^ A RULES pragma
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Syntax.hs:742:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Syntax.hs:753:-- | The body of a RULES pragma.
./haskell-src-exts-1.13.5/src/Language/Haskell/Exts/Syntax.hs:762:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.13.5/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.13.5/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.13.5/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.14.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3087:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.14.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7972:	Loc happy_dollar_dollar RULES -> cont 129#;
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:704:            printString "{-# RULES"
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:359:     -- ^ A RULES pragma
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:863:-- | The body of a RULES pragma.
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:872:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/InternalLexer.hs:131:        | RULES
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/InternalLexer.hs:306: ( "rules",             RULES           ),
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/InternalLexer.hs:1252:  RULES             -> "{-# RULES"
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Syntax.hs:324:     -- ^ A RULES pragma
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Syntax.hs:744:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Syntax.hs:755:-- | The body of a RULES pragma.
./haskell-src-exts-1.14.0/src/Language/Haskell/Exts/Syntax.hs:764:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.14.0/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.14.0.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3087:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.14.0.1/dist/build/Language/Haskell/Exts/InternalParser.hs:7972:	Loc happy_dollar_dollar RULES -> cont 129#;
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:704:            printString "{-# RULES"
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:359:     -- ^ A RULES pragma
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:863:-- | The body of a RULES pragma.
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:872:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/InternalLexer.hs:131:        | RULES
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/InternalLexer.hs:306: ( "rules",             RULES           ),
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/InternalLexer.hs:1252:  RULES             -> "{-# RULES"
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Syntax.hs:324:     -- ^ A RULES pragma
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Syntax.hs:744:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Syntax.hs:755:-- | The body of a RULES pragma.
./haskell-src-exts-1.14.0.1/src/Language/Haskell/Exts/Syntax.hs:764:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.14.0.1/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.15.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3185:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.15.0/dist/build/Language/Haskell/Exts/InternalParser.hs:8353:	Loc happy_dollar_dollar RULES -> cont 127#;
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:712:            printString "{-# RULES"
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:289:     -- ^ A RULES pragma
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:662:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:668:-- | The body of a RULES pragma.
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:673:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/InternalLexer.hs:129:        | RULES
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/InternalLexer.hs:302: ( "rules",             RULES           ),
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/InternalLexer.hs:1242:  RULES             -> "{-# RULES"
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Pretty.hs:468:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Syntax.hs:265:     -- ^ A RULES pragma
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Syntax.hs:590:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Syntax.hs:597:-- | The body of a RULES pragma.
./haskell-src-exts-1.15.0/src/Language/Haskell/Exts/Syntax.hs:602:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.15.0/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.15.0.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3185:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.15.0.1/dist/build/Language/Haskell/Exts/InternalParser.hs:8353:	Loc happy_dollar_dollar RULES -> cont 127#;
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:716:            printString "{-# RULES"
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:289:     -- ^ A RULES pragma
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:662:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:668:-- | The body of a RULES pragma.
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:673:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/InternalLexer.hs:129:        | RULES
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/InternalLexer.hs:302: ( "rules",             RULES           ),
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/InternalLexer.hs:1245:  RULES             -> "{-# RULES"
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Pretty.hs:468:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Syntax.hs:265:     -- ^ A RULES pragma
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Syntax.hs:590:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Syntax.hs:597:-- | The body of a RULES pragma.
./haskell-src-exts-1.15.0.1/src/Language/Haskell/Exts/Syntax.hs:602:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.15.0.1/tests/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:757:            printString "{-# RULES"
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:298:     -- ^ A RULES pragma
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:807:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:813:-- | The body of a RULES pragma.
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:818:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/InternalLexer.hs:133:        | RULES
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/InternalLexer.hs:313: ( "rules",             RULES           ),
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/InternalLexer.hs:898:     Just RULES -> do -- Rules enable ScopedTypeVariables locally.
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/InternalLexer.hs:900:            return RULES
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/InternalLexer.hs:1316:  RULES             -> "{-# RULES"
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Pretty.hs:497:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Syntax.hs:273:     -- ^ A RULES pragma
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Syntax.hs:641:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Syntax.hs:648:-- | The body of a RULES pragma.
./haskell-src-exts-1.16.0/src/Language/Haskell/Exts/Syntax.hs:653:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.16.0/tests/examples/RCategory.hs:25:{-# RULES
./haskell-src-exts-1.16.0/tests/examples/Rules.hs:1:{-# RULES "head/build" forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./haskell-src-exts-1.16.0/tests/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.16.0.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3305:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.16.0.1/dist/build/Language/Haskell/Exts/InternalParser.hs:8736:	Loc happy_dollar_dollar RULES -> cont 129#;
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:757:            printString "{-# RULES"
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:298:     -- ^ A RULES pragma
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:807:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:813:-- | The body of a RULES pragma.
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:818:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/InternalLexer.hs:133:        | RULES
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/InternalLexer.hs:313: ( "rules",             RULES           ),
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/InternalLexer.hs:898:     Just RULES -> do -- Rules enable ScopedTypeVariables locally.
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/InternalLexer.hs:900:            return RULES
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/InternalLexer.hs:1316:  RULES             -> "{-# RULES"
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Pretty.hs:497:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Syntax.hs:273:     -- ^ A RULES pragma
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Syntax.hs:641:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Syntax.hs:648:-- | The body of a RULES pragma.
./haskell-src-exts-1.16.0.1/src/Language/Haskell/Exts/Syntax.hs:653:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.16.0.1/tests/examples/RCategory.hs:25:{-# RULES
./haskell-src-exts-1.16.0.1/tests/examples/Rules.hs:1:{-# RULES "head/build" forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./haskell-src-exts-1.16.0.1/tests/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.17.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3450:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.17.0/dist/build/Language/Haskell/Exts/InternalParser.hs:9163:	Loc happy_dollar_dollar RULES -> cont 132#;
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:803:            printString "{-# RULES"
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:302:     -- ^ A RULES pragma
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:831:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:837:-- | The body of a RULES pragma.
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:842:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/InternalLexer.hs:133:        | RULES
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/InternalLexer.hs:319: ( "rules",             RULES           ),
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/InternalLexer.hs:910:     Just RULES -> do -- Rules enable ScopedTypeVariables locally.
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/InternalLexer.hs:912:            return RULES
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/InternalLexer.hs:1328:  RULES             -> "{-# RULES"
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Pretty.hs:559:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Syntax.hs:276:     -- ^ A RULES pragma
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Syntax.hs:665:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Syntax.hs:672:-- | The body of a RULES pragma.
./haskell-src-exts-1.17.0/src/Language/Haskell/Exts/Syntax.hs:677:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.17.0/tests/examples/RCategory.hs:25:{-# RULES
./haskell-src-exts-1.17.0/tests/examples/Rules.hs:1:{-# RULES "head/build" forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./haskell-src-exts-1.17.0/tests/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.17.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3451:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.17.1/dist/build/Language/Haskell/Exts/InternalParser.hs:9164:	Loc happy_dollar_dollar RULES -> cont 132#;
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:803:            printString "{-# RULES"
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:302:     -- ^ A RULES pragma
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:831:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:837:-- | The body of a RULES pragma.
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:842:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/InternalLexer.hs:133:        | RULES
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/InternalLexer.hs:319: ( "rules",             RULES           ),
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/InternalLexer.hs:910:     Just RULES -> do -- Rules enable ScopedTypeVariables locally.
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/InternalLexer.hs:912:            return RULES
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/InternalLexer.hs:1328:  RULES             -> "{-# RULES"
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Pretty.hs:559:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Syntax.hs:276:     -- ^ A RULES pragma
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Syntax.hs:665:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Syntax.hs:672:-- | The body of a RULES pragma.
./haskell-src-exts-1.17.1/src/Language/Haskell/Exts/Syntax.hs:677:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.17.1/tests/examples/RCategory.hs:25:{-# RULES
./haskell-src-exts-1.17.1/tests/examples/Rules.hs:1:{-# RULES "head/build" forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./haskell-src-exts-1.17.1/tests/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.2.0/dist/build/Language/Haskell/Exts/InternalParser.hs:2994:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.2.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7542:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:614:        printString "{-# RULES"
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Lexer.hs:280: ( "rules",             RULES           ),
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.2.0/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3036:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.3.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7584:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:614:        printString "{-# RULES"
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Lexer.hs:280: ( "rules",             RULES           ),
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.0/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3038:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.3.1/dist/build/Language/Haskell/Exts/InternalParser.hs:7586:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:615:        printString "{-# RULES"
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Lexer.hs:1163:  RULES             -> "{-# RULES"
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.1/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.2/dist/build/Language/Haskell/Exts/InternalParser.hs:3038:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.3.2/dist/build/Language/Haskell/Exts/InternalParser.hs:7586:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:615:        printString "{-# RULES"
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Lexer.hs:1163:  RULES             -> "{-# RULES"
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.2/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.3/dist/build/Language/Haskell/Exts/InternalParser.hs:3038:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.3.3/dist/build/Language/Haskell/Exts/InternalParser.hs:7586:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:615:        printString "{-# RULES"
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Lexer.hs:1163:  RULES             -> "{-# RULES"
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.3/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.4/dist/build/Language/Haskell/Exts/InternalParser.hs:3038:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.3.4/dist/build/Language/Haskell/Exts/InternalParser.hs:7586:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:615:        printString "{-# RULES"
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Lexer.hs:1163:  RULES             -> "{-# RULES"
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.4/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.5/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.3.5/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:615:        printString "{-# RULES"
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Lexer.hs:1163:  RULES             -> "{-# RULES"
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.3.5/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.4.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.4.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:615:        printString "{-# RULES"
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Lexer.hs:1163:  RULES             -> "{-# RULES"
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.4.0/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.5.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.5.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:615:        printString "{-# RULES"
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Lexer.hs:1187:  RULES             -> "{-# RULES"
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.5.0/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.5.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.5.1/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:615:        printString "{-# RULES"
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Lexer.hs:1187:  RULES             -> "{-# RULES"
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.5.1/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.5.2/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.5.2/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:615:        printString "{-# RULES"
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Lexer.hs:1187:  RULES             -> "{-# RULES"
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.5.2/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.5.3/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.5.3/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:694:            printString "{-# RULES"
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Lexer.hs:1187:  RULES             -> "{-# RULES"
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.5.3/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.6.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.6.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:694:            printString "{-# RULES"
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Lexer.hs:281: ( "rules",             RULES           ),
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Lexer.hs:1187:  RULES             -> "{-# RULES"
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.6.0/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.6.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.6.1/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:694:            printString "{-# RULES"
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Lexer.hs:290: ( "rules",             RULES           ),
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Lexer.hs:1196:  RULES             -> "{-# RULES"
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.6.1/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.7.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.7.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:694:            printString "{-# RULES"
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:371:     -- ^ A RULES pragma
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:835:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:845:-- | The body of a RULES pragma.
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:854:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Lexer.hs:290: ( "rules",             RULES           ),
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Lexer.hs:1196:  RULES             -> "{-# RULES"
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Syntax.hs:334:     -- ^ A RULES pragma
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Syntax.hs:750:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Syntax.hs:761:-- | The body of a RULES pragma.
./haskell-src-exts-1.7.0/src/Language/Haskell/Exts/Syntax.hs:770:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.7.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.7.1/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:694:            printString "{-# RULES"
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:354:     -- ^ A RULES pragma
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:823:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:833:-- | The body of a RULES pragma.
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:842:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Lexer.hs:293: ( "rules",             RULES           ),
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Lexer.hs:1199:  RULES             -> "{-# RULES"
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Syntax.hs:321:     -- ^ A RULES pragma
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Syntax.hs:718:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Syntax.hs:729:-- | The body of a RULES pragma.
./haskell-src-exts-1.7.1/src/Language/Haskell/Exts/Syntax.hs:738:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.7.2/dist/build/Language/Haskell/Exts/InternalParser.hs:3040:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.7.2/dist/build/Language/Haskell/Exts/InternalParser.hs:7588:	Loc happy_dollar_dollar RULES -> cont 121#;
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:694:            printString "{-# RULES"
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:354:     -- ^ A RULES pragma
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:823:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:833:-- | The body of a RULES pragma.
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:842:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Lexer.hs:131:        | RULES
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Lexer.hs:293: ( "rules",             RULES           ),
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Lexer.hs:1200:  RULES             -> "{-# RULES"
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Syntax.hs:321:     -- ^ A RULES pragma
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Syntax.hs:718:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Syntax.hs:729:-- | The body of a RULES pragma.
./haskell-src-exts-1.7.2/src/Language/Haskell/Exts/Syntax.hs:738:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.8.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3026:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.8.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7622:	Loc happy_dollar_dollar RULES -> cont 122#;
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:697:            printString "{-# RULES"
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Lexer.hs:292: ( "rules",             RULES           ),
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Lexer.hs:1211:  RULES             -> "{-# RULES"
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Syntax.hs:737:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Syntax.hs:748:-- | The body of a RULES pragma.
./haskell-src-exts-1.8.0/src/Language/Haskell/Exts/Syntax.hs:757:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.8.1/dist/build/Language/Haskell/Exts/InternalParser.hs:3026:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.8.1/dist/build/Language/Haskell/Exts/InternalParser.hs:7622:	Loc happy_dollar_dollar RULES -> cont 122#;
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:697:            printString "{-# RULES"
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Lexer.hs:292: ( "rules",             RULES           ),
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Lexer.hs:1212:  RULES             -> "{-# RULES"
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Syntax.hs:737:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Syntax.hs:748:-- | The body of a RULES pragma.
./haskell-src-exts-1.8.1/src/Language/Haskell/Exts/Syntax.hs:757:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.8.2/dist/build/Language/Haskell/Exts/InternalParser.hs:3026:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.8.2/dist/build/Language/Haskell/Exts/InternalParser.hs:7622:	Loc happy_dollar_dollar RULES -> cont 122#;
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:697:            printString "{-# RULES"
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:843:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:853:-- | The body of a RULES pragma.
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Annotated/Syntax.hs:862:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Lexer.hs:292: ( "rules",             RULES           ),
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Lexer.hs:1212:  RULES             -> "{-# RULES"
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Syntax.hs:737:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Syntax.hs:748:-- | The body of a RULES pragma.
./haskell-src-exts-1.8.2/src/Language/Haskell/Exts/Syntax.hs:757:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.0/dist/build/Language/Haskell/Exts/InternalParser.hs:3038:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.9.0/dist/build/Language/Haskell/Exts/InternalParser.hs:7634:	Loc happy_dollar_dollar RULES -> cont 122#;
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:841:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:851:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Annotated/Syntax.hs:860:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Lexer.hs:292: ( "rules",             RULES           ),
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Lexer.hs:1212:  RULES             -> "{-# RULES"
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Syntax.hs:735:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Syntax.hs:746:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.0/src/Language/Haskell/Exts/Syntax.hs:755:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.3/dist/build/Language/Haskell/Exts/InternalParser.hs:3031:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.9.3/dist/build/Language/Haskell/Exts/InternalParser.hs:7638:	Loc happy_dollar_dollar RULES -> cont 122#;
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:841:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:851:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Annotated/Syntax.hs:860:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Lexer.hs:292: ( "rules",             RULES           ),
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Lexer.hs:1212:  RULES             -> "{-# RULES"
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Syntax.hs:735:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Syntax.hs:746:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.3/src/Language/Haskell/Exts/Syntax.hs:755:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.4/dist/build/Language/Haskell/Exts/InternalParser.hs:3031:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.9.4/dist/build/Language/Haskell/Exts/InternalParser.hs:7638:	Loc happy_dollar_dollar RULES -> cont 122#;
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:841:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:851:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Annotated/Syntax.hs:860:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Lexer.hs:292: ( "rules",             RULES           ),
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Lexer.hs:1212:  RULES             -> "{-# RULES"
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Syntax.hs:735:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Syntax.hs:746:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.4/src/Language/Haskell/Exts/Syntax.hs:755:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.5/dist/build/Language/Haskell/Exts/InternalParser.hs:3031:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.9.5/dist/build/Language/Haskell/Exts/InternalParser.hs:7638:	Loc happy_dollar_dollar RULES -> cont 122#;
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:841:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:851:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Annotated/Syntax.hs:860:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Lexer.hs:292: ( "rules",             RULES           ),
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Lexer.hs:1212:  RULES             -> "{-# RULES"
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Syntax.hs:735:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Syntax.hs:746:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.5/src/Language/Haskell/Exts/Syntax.hs:755:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.5/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.9.5/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.9.5/Test/examples/Unicode.hs:105:{-# RULES
./haskell-src-exts-1.9.6/dist/build/Language/Haskell/Exts/InternalParser.hs:3031:	 =  case happyOutTok happy_x_1 of { (Loc happy_var_1 RULES) -> 
./haskell-src-exts-1.9.6/dist/build/Language/Haskell/Exts/InternalParser.hs:7638:	Loc happy_dollar_dollar RULES -> cont 122#;
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Annotated/ExactPrint.hs:698:            printString "{-# RULES"
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Annotated/Syntax.hs:355:     -- ^ A RULES pragma
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Annotated/Syntax.hs:841:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Annotated/Syntax.hs:851:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Annotated/Syntax.hs:860:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Lexer.hs:130:        | RULES
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Lexer.hs:292: ( "rules",             RULES           ),
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Lexer.hs:1213:  RULES             -> "{-# RULES"
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Pretty.hs:462:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Syntax.hs:322:     -- ^ A RULES pragma
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Syntax.hs:735:-- | Activation clause of a RULES pragma.
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Syntax.hs:746:-- | The body of a RULES pragma.
./haskell-src-exts-1.9.6/src/Language/Haskell/Exts/Syntax.hs:755:-- | Variables used in a RULES pragma, optionally annotated with types
./haskell-src-exts-1.9.6/Test/examples/RealHSE.hs:110:        | RULES
./haskell-src-exts-1.9.6/Test/examples/RealHSE.hs:243: ( "rules",             RULES           ),
./haskell-src-exts-1.9.6/Test/examples/Unicode.hs:105:{-# RULES
./haskell-token-utils-0.0.0.1/src-hse/Language/Haskell/TokenUtils/HSE/Layout.hs:249:  RULES             -> "{-# RULES"
./haskell-token-utils-0.0.0.2/src-hse/Language/Haskell/TokenUtils/HSE/Layout.hs:251:  RULES             -> "{-# RULES"
./haskell-token-utils-0.0.0.3/src-hse/Language/Haskell/TokenUtils/HSE/Layout.hs:281:  RULES             -> "{-# RULES"
./haskell-token-utils-0.0.0.4/src-hse/Language/Haskell/TokenUtils/HSE/Layout.hs:295:  RULES             -> "{-# RULES"
./haskell-token-utils-0.0.0.5/src-hse/Language/Haskell/TokenUtils/HSE/Layout.hs:295:  RULES             -> "{-# RULES"
./haskell-token-utils-0.0.0.6/src-hse/Language/Haskell/TokenUtils/HSE/Layout.hs:295:  RULES             -> "{-# RULES"
./hasktags-0.68.3/testcases/testcase9.hs:326:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:399:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:422:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:457:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:482:{-# RULES "eqString" (==) = eqString #-}
./hasktags-0.68.3/testcases/testcase9.hs:694:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:705:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:714:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:723:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:792:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:798:{-# RULES
./hasktags-0.68.3/testcases/testcase9.hs:805:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:326:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:399:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:422:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:457:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:482:{-# RULES "eqString" (==) = eqString #-}
./hasktags-0.68.4/testcases/testcase9.hs:694:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:705:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:714:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:723:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:792:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:798:{-# RULES
./hasktags-0.68.4/testcases/testcase9.hs:805:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:326:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:399:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:422:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:457:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:482:{-# RULES "eqString" (==) = eqString #-}
./hasktags-0.68.5/testcases/testcase9.hs:694:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:705:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:714:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:723:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:792:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:798:{-# RULES
./hasktags-0.68.5/testcases/testcase9.hs:805:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:326:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:399:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:422:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:457:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:482:{-# RULES "eqString" (==) = eqString #-}
./hasktags-0.68.6/testcases/testcase9.hs:694:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:705:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:714:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:723:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:792:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:798:{-# RULES
./hasktags-0.68.6/testcases/testcase9.hs:805:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:326:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:399:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:422:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:457:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:482:{-# RULES "eqString" (==) = eqString #-}
./hasktags-0.68.7/testcases/testcase9.hs:694:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:705:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:714:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:723:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:792:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:798:{-# RULES
./hasktags-0.68.7/testcases/testcase9.hs:805:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:326:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:399:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:422:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:457:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:482:{-# RULES "eqString" (==) = eqString #-}
./hasktags-0.69.0/testcases/testcase9.hs:694:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:705:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:714:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:723:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:792:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:798:{-# RULES
./hasktags-0.69.0/testcases/testcase9.hs:805:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:326:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:399:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:422:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:457:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:482:{-# RULES "eqString" (==) = eqString #-}
./hasktags-0.69.1/testcases/testcase9.hs:694:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:705:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:714:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:723:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:792:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:798:{-# RULES
./hasktags-0.69.1/testcases/testcase9.hs:805:{-# RULES
./haste-compiler-0.2.99/libraries/fursuit/src/FRP/Fursuit.hs:76:{-# RULES
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/App/Monad.hs:94:{-# RULES "throw away liftServerIO"
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/App/Monad.hs:112:{-# RULES "throw away forkServerIO"
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/App/Monad.hs:148:{-# RULES "throw away export's argument"
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/App/Monad.hs:163:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/Foreign.hs:99:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/Foreign.hs:100:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.2.99/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.3/libraries/haste-lib/src/Haste/App/Monad.hs:102:{-# RULES "throw away liftServerIO"
./haste-compiler-0.3/libraries/haste-lib/src/Haste/App/Monad.hs:120:{-# RULES "throw away forkServerIO"
./haste-compiler-0.3/libraries/haste-lib/src/Haste/App/Monad.hs:156:{-# RULES "throw away remote's argument"
./haste-compiler-0.3/libraries/haste-lib/src/Haste/App/Monad.hs:171:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.3/libraries/haste-lib/src/Haste/Foreign.hs:230:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.3/libraries/haste-lib/src/Haste/Foreign.hs:231:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.3/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.3/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.3/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.3/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4/libraries/haste-lib/src/Haste/App/Monad.hs:102:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4/libraries/haste-lib/src/Haste/App/Monad.hs:120:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4/libraries/haste-lib/src/Haste/App/Monad.hs:156:{-# RULES "throw away remote's argument"
./haste-compiler-0.4/libraries/haste-lib/src/Haste/App/Monad.hs:171:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4/libraries/haste-lib/src/Haste/Foreign.hs:230:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4/libraries/haste-lib/src/Haste/Foreign.hs:231:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/App/Monad.hs:102:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/App/Monad.hs:120:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/App/Monad.hs:156:{-# RULES "throw away remote's argument"
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/App/Monad.hs:171:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/Foreign.hs:230:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/Foreign.hs:231:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.1/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/App/Monad.hs:102:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/App/Monad.hs:120:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/App/Monad.hs:156:{-# RULES "throw away remote's argument"
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/App/Monad.hs:171:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/Foreign.hs:232:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/Foreign.hs:233:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.2/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/App/Monad.hs:102:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/App/Monad.hs:120:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/App/Monad.hs:156:{-# RULES "throw away remote's argument"
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/App/Monad.hs:171:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/Foreign.hs:232:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/Foreign.hs:233:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.2.1/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/App/Monad.hs:102:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/App/Monad.hs:120:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/App/Monad.hs:156:{-# RULES "throw away remote's argument"
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/App/Monad.hs:171:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/Foreign.hs:230:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/Foreign.hs:231:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.3/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/App/Monad.hs:107:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/App/Monad.hs:125:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/App/Monad.hs:161:{-# RULES "throw away remote's argument"
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/App/Monad.hs:176:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/Foreign.hs:230:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/Foreign.hs:231:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/App/Monad.hs:107:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/App/Monad.hs:125:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/App/Monad.hs:161:{-# RULES "throw away remote's argument"
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/App/Monad.hs:176:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/Foreign.hs:230:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/Foreign.hs:231:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4.1/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/App/Monad.hs:107:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/App/Monad.hs:125:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/App/Monad.hs:161:{-# RULES "throw away remote's argument"
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/App/Monad.hs:176:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/Foreign.hs:230:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/Foreign.hs:231:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4.2/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/App/Monad.hs:107:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/App/Monad.hs:125:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/App/Monad.hs:161:{-# RULES "throw away remote's argument"
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/App/Monad.hs:176:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/Foreign.hs:230:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/Foreign.hs:231:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4.3/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/App/Monad.hs:107:{-# RULES "throw away liftServerIO"
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/App/Monad.hs:125:{-# RULES "throw away forkServerIO"
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/App/Monad.hs:161:{-# RULES "throw away remote's argument"
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/App/Monad.hs:176:{-# RULES "throw away onSessionEnd argument"
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/Foreign.hs:230:{-# RULES "unpack array/Unpacked" forall x. unpack x = lst2arr (toOpaque x) #-}
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/Foreign.hs:231:{-# RULES "pack array/Unpacked" forall x. pack x = fromOpaque (arr2lst x 0) #-}
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/Prim.hs:60:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/Prim.hs:61:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/Prim.hs:62:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.4.4.4/libraries/haste-lib/src/Haste/Prim.hs:63:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) = toPtr (unsafeCoerce# s) #-}
./haste-compiler-0.5.0/libraries/haste-lib/src/Haste/Foreign.hs:106:{-# RULES
./haste-compiler-0.5.0/libraries/haste-lib/src/Haste/Prim.hs:72:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.5.0/libraries/haste-lib/src/Haste/Prim.hs:73:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.5.0/libraries/haste-lib/src/Haste/Prim.hs:74:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) =
./haste-compiler-0.5.0/libraries/haste-lib/src/Haste/Prim.hs:76:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) =
./haste-compiler-0.5.0.1/libraries/haste-lib/src/Haste/Foreign.hs:106:{-# RULES
./haste-compiler-0.5.0.1/libraries/haste-lib/src/Haste/Prim.hs:72:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.5.0.1/libraries/haste-lib/src/Haste/Prim.hs:73:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.5.0.1/libraries/haste-lib/src/Haste/Prim.hs:74:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) =
./haste-compiler-0.5.0.1/libraries/haste-lib/src/Haste/Prim.hs:76:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) =
./haste-compiler-0.5.1.0/libraries/haste-prim/src/Haste/Prim/Foreign.hs:117:{-# RULES
./haste-compiler-0.5.1.0/libraries/haste-prim/src/Haste/Prim.hs:73:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.5.1.0/libraries/haste-prim/src/Haste/Prim.hs:74:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.5.1.0/libraries/haste-prim/src/Haste/Prim.hs:75:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) =
./haste-compiler-0.5.1.0/libraries/haste-prim/src/Haste/Prim.hs:77:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) =
./haste-compiler-0.5.1.1/libraries/haste-prim/src/Haste/Prim/Foreign.hs:117:{-# RULES
./haste-compiler-0.5.1.1/libraries/haste-prim/src/Haste/Prim.hs:73:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.5.1.1/libraries/haste-prim/src/Haste/Prim.hs:74:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.5.1.1/libraries/haste-prim/src/Haste/Prim.hs:75:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) =
./haste-compiler-0.5.1.1/libraries/haste-prim/src/Haste/Prim.hs:77:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) =
./haste-compiler-0.5.1.2/libraries/haste-prim/src/Haste/Prim/Foreign.hs:117:{-# RULES
./haste-compiler-0.5.1.2/libraries/haste-prim/src/Haste/Prim.hs:73:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.5.1.2/libraries/haste-prim/src/Haste/Prim.hs:74:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.5.1.2/libraries/haste-prim/src/Haste/Prim.hs:75:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) =
./haste-compiler-0.5.1.2/libraries/haste-prim/src/Haste/Prim.hs:77:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) =
./haste-compiler-0.5.1.3/libraries/haste-prim/src/Haste/Prim/Foreign.hs:118:{-# RULES
./haste-compiler-0.5.1.3/libraries/haste-prim/src/Haste/Prim.hs:73:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.5.1.3/libraries/haste-prim/src/Haste/Prim.hs:74:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.5.1.3/libraries/haste-prim/src/Haste/Prim.hs:75:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) =
./haste-compiler-0.5.1.3/libraries/haste-prim/src/Haste/Prim.hs:77:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) =
./haste-compiler-0.5.2/libraries/haste-prim/src/Haste/Prim/Foreign.hs:118:{-# RULES
./haste-compiler-0.5.2/libraries/haste-prim/src/Haste/Prim.hs:73:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.5.2/libraries/haste-prim/src/Haste/Prim.hs:74:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.5.2/libraries/haste-prim/src/Haste/Prim.hs:75:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) =
./haste-compiler-0.5.2/libraries/haste-prim/src/Haste/Prim.hs:77:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) =
./haste-compiler-0.5.3/libraries/haste-prim/src/Haste/Prim/Foreign.hs:118:{-# RULES
./haste-compiler-0.5.3/libraries/haste-prim/src/Haste/Prim.hs:73:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.5.3/libraries/haste-prim/src/Haste/Prim.hs:74:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.5.3/libraries/haste-prim/src/Haste/Prim.hs:75:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) =
./haste-compiler-0.5.3/libraries/haste-prim/src/Haste/Prim.hs:77:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) =
./haste-compiler-0.5.4/libraries/haste-prim/src/Haste/Prim/Foreign.hs:118:{-# RULES
./haste-compiler-0.5.4/libraries/haste-prim/src/Haste/Prim.hs:73:{-# RULES "toJSS/fromJSS" forall s. toJSStr (fromJSStr s) = s #-}
./haste-compiler-0.5.4/libraries/haste-prim/src/Haste/Prim.hs:74:{-# RULES "fromJSS/toJSS" forall s. fromJSStr (toJSStr s) = s #-}
./haste-compiler-0.5.4/libraries/haste-prim/src/Haste/Prim.hs:75:{-# RULES "toJSS/unCSTR" forall s. toJSStr (unpackCString# s) =
./haste-compiler-0.5.4/libraries/haste-prim/src/Haste/Prim.hs:77:{-# RULES "toJSS/unCSTRU8" forall s. toJSStr (unpackCStringUtf8# s) =
./hat-2.8.0.0/trans/TraceTrans.hs:684:  notSupported l "RULES pragma"
./hat-2.9.0.0/trans/TraceTrans.hs:687:  notSupported l "RULES pragma"
./haxl-0.3.0.0/Haxl/Core/Memo.hs:35:{-# RULES "memo/Text"
./haxl-0.3.0.0/Haxl/Core/Memo.hs:51:-- when the key is Text, due to the RULES pragma above.
./haxl-0.3.1.0/Haxl/Core/Memo.hs:35:{-# RULES "memo/Text"
./haxl-0.3.1.0/Haxl/Core/Memo.hs:51:-- when the key is Text, due to the RULES pragma above.
./hCsound-0.2/src/Sound/Csound/C2HS.hs:197:{-# RULES 
./hCsound-0.2.2/src/Sound/Csound/C2HS.hs:197:{-# RULES 
./hCsound-0.2.3/src/Sound/Csound/C2HS.hs:197:{-# RULES 
./heap-0.2.3/Data/Heap.hs:266:{-# RULES
./heap-0.3/Data/Heap.hs:265:{-# RULES
./heap-0.3.1/Data/Heap.hs:239:{-# RULES
./heap-0.4.0/Data/Heap.hs:296:{-# RULES
./heap-1.0.0/Data/Heap/Item.hs:99:{-# RULES "split/merge" forall x. split (merge x) = x #-}
./heap-1.0.0/Data/Heap/Item.hs:187:{-# RULES "splitF/split" forall f x. splitF f (split x) = f x #-}
./heap-1.0.1/Data/Heap/Item.hs:100:{-# RULES "split/merge" forall x. split (merge x) = x #-}
./heap-1.0.1/Data/Heap/Item.hs:188:{-# RULES "splitF/split" forall f x. splitF f (split x) = f x #-}
./heap-1.0.2/Data/Heap/Item.hs:100:{-# RULES "split/merge" forall x. split (merge x) = x #-}
./heap-1.0.2/Data/Heap/Item.hs:188:{-# RULES "splitF/split" forall f x. splitF f (split x) = f x #-}
./hermit-0.1.1.0/examples/concatVanishes/Flatten.hs:16:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.0/examples/concatVanishes/Flatten.hs:17:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.1.0/examples/concatVanishes/HList.hs:18:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.1.0/examples/concatVanishes/HList.hs:19:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.1.1.0/examples/concatVanishes/HList.hs:20:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.1.0/examples/concatVanishes/HList.hs:23:{-# RULES "(:) ++" forall x xs ys .    (x:xs) ++ ys = x : (xs ++ ys)       #-}
./hermit-0.1.1.0/examples/concatVanishes/HList.hs:24:{-# RULES "[] ++"  forall xs .         [] ++ xs     = xs                   #-}
./hermit-0.1.1.0/examples/concatVanishes/HList.hs:25:{-# RULES "++ []"  forall xs .         xs ++ []     = xs                   #-}
./hermit-0.1.1.0/examples/concatVanishes/HList.hs:28:{-# RULES ". id" forall f .          f . id = f                          #-}
./hermit-0.1.1.0/examples/concatVanishes/HList.hs:29:{-# RULES "id ." forall f .          id . f = f                          #-}
./hermit-0.1.1.0/examples/concatVanishes/HList.hs:33:{-# RULES "rep-abs-fusion" forall h .  repH (absH h) = h                   #-}
./hermit-0.1.1.0/examples/concatVanishes/QSort.hs:17:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.0/examples/concatVanishes/QSort.hs:18:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.1.0/examples/concatVanishes/Rev.hs:14:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.0/examples/fib-stream/Fib.hs:20:{-# RULES "ww" forall f.  fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.0/examples/fib-tuple/Fib.hs:16:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.0/examples/fib-tuple/Fib.hs:17:{-# RULES "precondition" forall w . wrap (unwrap w) = w #-}
./hermit-0.1.1.0/examples/hanoi/Hanoi.hs:42:{-# RULES "ww" forall work. fix work = wrap (fix (unwrap . work . wrap)) #-}
./hermit-0.1.1.0/examples/hanoi/Hanoi.hs:43:{-# RULES "pc" forall w. wrap (unwrap w) = w #-}
./hermit-0.1.1.0/examples/hanoi/Hanoi.hs:44:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.1.1.0/examples/hanoi/Hanoi.hs:45:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.1.1.0/examples/map/Map.hs:27:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.0/examples/map/Map.hs:28:{-# RULES "inline-fix" forall f . fix f = let work = f work in work #-}
./hermit-0.1.1.0/examples/map/Map.hs:29:{-# RULES "precondition1" forall xs . abs (rep xs) = xs #-}
./hermit-0.1.1.0/examples/map/Map.hs:30:{-# RULES "precondition2" forall xs . rep (abs xs) = xs #-}
./hermit-0.1.1.0/examples/reverse/HList.hs:18:{-# RULES "repH" forall xs	 . repH xs = (xs ++) #-}
./hermit-0.1.1.0/examples/reverse/HList.hs:19:{-# RULES "absH" forall f 	 . absH f = f []     #-}
./hermit-0.1.1.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.1.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.1.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.1.0/examples/reverse/HList.hs:27:{-# RULES "(:) ++" forall x xs ys . (x:xs) ++ ys = x : (xs ++ ys) #-}
./hermit-0.1.1.0/examples/reverse/HList.hs:28:{-# RULES "[] ++"  forall xs      . [] ++ xs     = xs #-}
./hermit-0.1.1.0/examples/reverse/HList.hs:31:{-# RULES "rep-abs-fusion" forall h . repH (absH h) = h #-}
./hermit-0.1.1.0/examples/reverse/Reverse.hs:15:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.0/examples/reverse/Reverse.hs:16:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.1.0/src/Language/HERMIT/Dictionary.hs:52:-- | Augment a list of 'External's by adding all of HERMIT's primitive 'External's, plus any GHC RULES pragmas in the module.
./hermit-0.1.1.0/src/Language/HERMIT/GHC.hs:81:    , (not (null rules), ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.1.1.0/src/Language/HERMIT/Primitive/GHC.hs:66:                 "This can be useful if you intend to appply GHC RULES."]
./hermit-0.1.1.1/examples/concatVanishes/Flatten.hs:16:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.1/examples/concatVanishes/Flatten.hs:17:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.1.1/examples/concatVanishes/HList.hs:18:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.1.1/examples/concatVanishes/HList.hs:19:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.1.1.1/examples/concatVanishes/HList.hs:20:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.1.1/examples/concatVanishes/HList.hs:23:{-# RULES "(:) ++" forall x xs ys .    (x:xs) ++ ys = x : (xs ++ ys)       #-}
./hermit-0.1.1.1/examples/concatVanishes/HList.hs:24:{-# RULES "[] ++"  forall xs .         [] ++ xs     = xs                   #-}
./hermit-0.1.1.1/examples/concatVanishes/HList.hs:25:{-# RULES "++ []"  forall xs .         xs ++ []     = xs                   #-}
./hermit-0.1.1.1/examples/concatVanishes/HList.hs:28:{-# RULES ". id" forall f .          f . id = f                          #-}
./hermit-0.1.1.1/examples/concatVanishes/HList.hs:29:{-# RULES "id ." forall f .          id . f = f                          #-}
./hermit-0.1.1.1/examples/concatVanishes/HList.hs:33:{-# RULES "rep-abs-fusion" forall h .  repH (absH h) = h                   #-}
./hermit-0.1.1.1/examples/concatVanishes/QSort.hs:17:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.1/examples/concatVanishes/QSort.hs:18:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.1.1/examples/concatVanishes/Rev.hs:14:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.1/examples/fib-stream/Fib.hs:20:{-# RULES "ww" forall f.  fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.1/examples/fib-tuple/Fib.hs:16:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.1/examples/fib-tuple/Fib.hs:17:{-# RULES "precondition" forall w . wrap (unwrap w) = w #-}
./hermit-0.1.1.1/examples/hanoi/Hanoi.hs:42:{-# RULES "ww" forall work. fix work = wrap (fix (unwrap . work . wrap)) #-}
./hermit-0.1.1.1/examples/hanoi/Hanoi.hs:43:{-# RULES "pc" forall w. wrap (unwrap w) = w #-}
./hermit-0.1.1.1/examples/hanoi/Hanoi.hs:44:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.1.1.1/examples/hanoi/Hanoi.hs:45:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.1.1.1/examples/map/Map.hs:27:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.1/examples/map/Map.hs:28:{-# RULES "inline-fix" forall f . fix f = let work = f work in work #-}
./hermit-0.1.1.1/examples/map/Map.hs:29:{-# RULES "precondition1" forall xs . abs (rep xs) = xs #-}
./hermit-0.1.1.1/examples/map/Map.hs:30:{-# RULES "precondition2" forall xs . rep (abs xs) = xs #-}
./hermit-0.1.1.1/examples/reverse/HList.hs:18:{-# RULES "repH" forall xs	 . repH xs = (xs ++) #-}
./hermit-0.1.1.1/examples/reverse/HList.hs:19:{-# RULES "absH" forall f 	 . absH f = f []     #-}
./hermit-0.1.1.1/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.1.1/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.1.1/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.1.1/examples/reverse/HList.hs:27:{-# RULES "(:) ++" forall x xs ys . (x:xs) ++ ys = x : (xs ++ ys) #-}
./hermit-0.1.1.1/examples/reverse/HList.hs:28:{-# RULES "[] ++"  forall xs      . [] ++ xs     = xs #-}
./hermit-0.1.1.1/examples/reverse/HList.hs:31:{-# RULES "rep-abs-fusion" forall h . repH (absH h) = h #-}
./hermit-0.1.1.1/examples/reverse/Reverse.hs:15:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.1.1/examples/reverse/Reverse.hs:16:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.1.1/src/Language/HERMIT/Dictionary.hs:52:-- | Augment a list of 'External's by adding all of HERMIT's primitive 'External's, plus any GHC RULES pragmas in the module.
./hermit-0.1.1.1/src/Language/HERMIT/GHC.hs:81:    , (not (null rules), ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.1.1.1/src/Language/HERMIT/Primitive/GHC.hs:66:                 "This can be useful if you intend to appply GHC RULES."]
./hermit-0.1.2.0/examples/concatVanishes/Flatten.hs:16:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.2.0/examples/concatVanishes/Flatten.hs:17:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.2.0/examples/concatVanishes/HList.hs:18:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.2.0/examples/concatVanishes/HList.hs:19:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.1.2.0/examples/concatVanishes/HList.hs:20:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.2.0/examples/concatVanishes/HList.hs:23:{-# RULES "(:) ++" forall x xs ys .    (x:xs) ++ ys = x : (xs ++ ys)       #-}
./hermit-0.1.2.0/examples/concatVanishes/HList.hs:24:{-# RULES "[] ++"  forall xs .         [] ++ xs     = xs                   #-}
./hermit-0.1.2.0/examples/concatVanishes/HList.hs:25:{-# RULES "++ []"  forall xs .         xs ++ []     = xs                   #-}
./hermit-0.1.2.0/examples/concatVanishes/HList.hs:28:{-# RULES ". id" forall f .          f . id = f                          #-}
./hermit-0.1.2.0/examples/concatVanishes/HList.hs:29:{-# RULES "id ." forall f .          id . f = f                          #-}
./hermit-0.1.2.0/examples/concatVanishes/HList.hs:33:{-# RULES "rep-abs-fusion" forall h .  repH (absH h) = h                   #-}
./hermit-0.1.2.0/examples/concatVanishes/QSort.hs:17:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.2.0/examples/concatVanishes/QSort.hs:18:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.2.0/examples/concatVanishes/Rev.hs:14:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.2.0/examples/fib-stream/Fib.hs:20:{-# RULES "ww" forall f.  fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.2.0/examples/fib-tuple/Fib.hs:11:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.2.0/examples/fib-tuple/Fib.hs:12:{-# RULES "precondition" forall w . wrap (unwrap w) = w #-}
./hermit-0.1.2.0/examples/hanoi/Hanoi.hs:42:{-# RULES "ww" forall work. fix work = wrap (fix (unwrap . work . wrap)) #-}
./hermit-0.1.2.0/examples/hanoi/Hanoi.hs:43:{-# RULES "pc" forall w. wrap (unwrap w) = w #-}
./hermit-0.1.2.0/examples/hanoi/Hanoi.hs:44:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.1.2.0/examples/hanoi/Hanoi.hs:45:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.1.2.0/examples/map/Map.hs:27:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.2.0/examples/map/Map.hs:28:{-# RULES "inline-fix" forall f . fix f = let work = f work in work #-}
./hermit-0.1.2.0/examples/map/Map.hs:29:{-# RULES "precondition1" forall xs . abs (rep xs) = xs #-}
./hermit-0.1.2.0/examples/map/Map.hs:30:{-# RULES "precondition2" forall xs . rep (abs xs) = xs #-}
./hermit-0.1.2.0/examples/reverse/HList.hs:18:{-# RULES "repH" forall xs	 . repH xs = (xs ++) #-}
./hermit-0.1.2.0/examples/reverse/HList.hs:19:{-# RULES "absH" forall f 	 . absH f = f []     #-}
./hermit-0.1.2.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.2.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.2.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.2.0/examples/reverse/HList.hs:27:{-# RULES "(:) ++" forall x xs ys . (x:xs) ++ ys = x : (xs ++ ys) #-}
./hermit-0.1.2.0/examples/reverse/HList.hs:28:{-# RULES "[] ++"  forall xs      . [] ++ xs     = xs #-}
./hermit-0.1.2.0/examples/reverse/HList.hs:31:{-# RULES "rep-abs-fusion" forall h . repH (absH h) = h #-}
./hermit-0.1.2.0/examples/reverse/Reverse.hs:15:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.2.0/examples/reverse/Reverse.hs:16:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.2.0/src/Language/HERMIT/Dictionary.hs:52:-- | Augment a list of 'External's by adding all of HERMIT's primitive 'External's, plus any GHC RULES pragmas in the module.
./hermit-0.1.2.0/src/Language/HERMIT/GHC.hs:87:    , (not (null rules), ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.1.2.0/src/Language/HERMIT/Primitive/GHC.hs:65:                 "This can be useful if you intend to appply GHC RULES."]
./hermit-0.1.4.0/examples/concatVanishes/Flatten.hs:16:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/concatVanishes/Flatten.hs:17:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.4.0/examples/concatVanishes/HList.hs:18:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.4.0/examples/concatVanishes/HList.hs:19:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.1.4.0/examples/concatVanishes/HList.hs:20:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.4.0/examples/concatVanishes/HList.hs:23:{-# RULES "(:) ++" forall x xs ys .    (x:xs) ++ ys = x : (xs ++ ys)       #-}
./hermit-0.1.4.0/examples/concatVanishes/HList.hs:24:{-# RULES "[] ++"  forall xs .         [] ++ xs     = xs                   #-}
./hermit-0.1.4.0/examples/concatVanishes/HList.hs:25:{-# RULES "++ []"  forall xs .         xs ++ []     = xs                   #-}
./hermit-0.1.4.0/examples/concatVanishes/HList.hs:28:{-# RULES ". id" forall f .          f . id = f                          #-}
./hermit-0.1.4.0/examples/concatVanishes/HList.hs:29:{-# RULES "id ." forall f .          id . f = f                          #-}
./hermit-0.1.4.0/examples/concatVanishes/HList.hs:33:{-# RULES "rep-abs-fusion" forall h .  repH (absH h) = h                   #-}
./hermit-0.1.4.0/examples/concatVanishes/QSort.hs:17:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/concatVanishes/QSort.hs:18:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.4.0/examples/concatVanishes/Rev.hs:14:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/evaluation/Eval.hs:29:{-# RULES "ww"     forall f. fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/evaluation/Eval.hs:30:{-# RULES "fusion" forall w. unwrap (wrap w) = w                    #-} -- has precondition
./hermit-0.1.4.0/examples/factorial/Fac.hs:18:{-# RULES "ww"     forall f. fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/fib-stream/Fib.hs:20:{-# RULES "ww" forall f.  fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/fib-tuple/Fib.hs:11:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/fib-tuple/Fib.hs:12:{-# RULES "precondition" forall w . wrap (unwrap w) = w #-}
./hermit-0.1.4.0/examples/flatten/Flatten.hs:16:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/flatten/Flatten.hs:17:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.4.0/examples/flatten/HList.hs:18:{-# RULES "repH" forall xs	 . repH xs = (xs ++) #-}
./hermit-0.1.4.0/examples/flatten/HList.hs:19:{-# RULES "absH" forall f 	 . absH f = f []     #-}
./hermit-0.1.4.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.4.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.4.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.4.0/examples/flatten/HList.hs:27:{-# RULES "(:) ++" forall x xs ys . (x:xs) ++ ys = x : (xs ++ ys) #-}
./hermit-0.1.4.0/examples/flatten/HList.hs:28:{-# RULES "[] ++"  forall xs      . [] ++ xs     = xs #-}
./hermit-0.1.4.0/examples/flatten/HList.hs:31:{-# RULES "(.) id" forall f .    f . id = f #-}
./hermit-0.1.4.0/examples/flatten/HList.hs:34:{-# RULES "rep-abs-fusion" forall h . repH (absH h) = h #-}
./hermit-0.1.4.0/examples/hanoi/Hanoi.hs:42:{-# RULES "ww" forall work. fix work = wrap (fix (unwrap . work . wrap)) #-}
./hermit-0.1.4.0/examples/hanoi/Hanoi.hs:43:{-# RULES "pc" forall w. wrap (unwrap w) = w #-}
./hermit-0.1.4.0/examples/hanoi/Hanoi.hs:44:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.1.4.0/examples/hanoi/Hanoi.hs:45:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.1.4.0/examples/last/Last.hs:13:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/qsort/HList.hs:18:{-# RULES "repH" forall xs	 . repH xs = (xs ++) #-}
./hermit-0.1.4.0/examples/qsort/HList.hs:19:{-# RULES "absH" forall f 	 . absH f = f []     #-}
./hermit-0.1.4.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.4.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.4.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.4.0/examples/qsort/HList.hs:27:{-# RULES "(:) ++" forall x xs ys . (x:xs) ++ ys = x : (xs ++ ys) #-}
./hermit-0.1.4.0/examples/qsort/HList.hs:28:{-# RULES "[] ++"  forall xs      . [] ++ xs     = xs #-}
./hermit-0.1.4.0/examples/qsort/HList.hs:31:{-# RULES "(.) id" forall f .    f . id = f #-}
./hermit-0.1.4.0/examples/qsort/HList.hs:34:{-# RULES "rep-abs-fusion" forall h . repH (absH h) = h #-}
./hermit-0.1.4.0/examples/qsort/QSort.hs:17:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/qsort/QSort.hs:18:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.4.0/examples/reverse/HList.hs:18:{-# RULES "repH" forall xs	 . repH xs = (xs ++) #-}
./hermit-0.1.4.0/examples/reverse/HList.hs:19:{-# RULES "absH" forall f 	 . absH f = f []     #-}
./hermit-0.1.4.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.4.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.4.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.4.0/examples/reverse/HList.hs:27:{-# RULES "(:) ++" forall x xs ys . (x:xs) ++ ys = x : (xs ++ ys) #-}
./hermit-0.1.4.0/examples/reverse/HList.hs:28:{-# RULES "[] ++"  forall xs      . [] ++ xs     = xs #-}
./hermit-0.1.4.0/examples/reverse/HList.hs:31:{-# RULES "rep-abs-fusion" forall h . repH (absH h) = h #-}
./hermit-0.1.4.0/examples/reverse/Reverse.hs:15:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.4.0/examples/reverse/Reverse.hs:16:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.4.0/src/Language/HERMIT/Dictionary.hs:59:-- | Augment a list of 'External's by adding all of HERMIT's primitive 'External's, plus any GHC RULES pragmas in the module.
./hermit-0.1.4.0/src/Language/HERMIT/GHC.hs:96:    , (not (null rules), ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.1.4.0/src/Language/HERMIT/Primitive/Local.hs:65:                 "This can be useful if you intend to appply GHC RULES."]
./hermit-0.1.4.0/src/Language/HERMIT/Primitive/Local.hs:68:                 "This can be useful if you intend to appply GHC RULES."]
./hermit-0.1.6.0/examples/concatVanishes/Flatten.hs:16:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/concatVanishes/Flatten.hs:17:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.6.0/examples/concatVanishes/HList.hs:18:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.6.0/examples/concatVanishes/HList.hs:19:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.1.6.0/examples/concatVanishes/HList.hs:20:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.6.0/examples/concatVanishes/HList.hs:23:{-# RULES "(:) ++" forall x xs ys .    (x:xs) ++ ys = x : (xs ++ ys)       #-}
./hermit-0.1.6.0/examples/concatVanishes/HList.hs:24:{-# RULES "[] ++"  forall xs .         [] ++ xs     = xs                   #-}
./hermit-0.1.6.0/examples/concatVanishes/HList.hs:25:{-# RULES "++ []"  forall xs .         xs ++ []     = xs                   #-}
./hermit-0.1.6.0/examples/concatVanishes/HList.hs:28:{-# RULES ". id" forall f .          f . id = f                          #-}
./hermit-0.1.6.0/examples/concatVanishes/HList.hs:29:{-# RULES "id ." forall f .          id . f = f                          #-}
./hermit-0.1.6.0/examples/concatVanishes/HList.hs:33:{-# RULES "rep-abs-fusion" forall h .  repH (absH h) = h                   #-}
./hermit-0.1.6.0/examples/concatVanishes/QSort.hs:17:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/concatVanishes/QSort.hs:18:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.6.0/examples/concatVanishes/Rev.hs:14:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/evaluation/Eval.hs:29:{-# RULES "ww"     forall f. fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/evaluation/Eval.hs:30:{-# RULES "fusion" forall w. unwrap (wrap w) = w                    #-} -- has precondition
./hermit-0.1.6.0/examples/factorial/Fac.hs:18:{-# RULES "ww"     forall f. fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/fib-stream/Fib.hs:20:{-# RULES "ww" forall f.  fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/fib-tuple/Fib.hs:11:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/fib-tuple/Fib.hs:12:{-# RULES "precondition" forall w . wrap (unwrap w) = w #-}
./hermit-0.1.6.0/examples/flatten/Flatten.hs:16:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/flatten/Flatten.hs:17:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.6.0/examples/flatten/HList.hs:18:{-# RULES "repH" forall xs	 . repH xs = (xs ++) #-}
./hermit-0.1.6.0/examples/flatten/HList.hs:19:{-# RULES "absH" forall f 	 . absH f = f []     #-}
./hermit-0.1.6.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.6.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.6.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.6.0/examples/flatten/HList.hs:27:{-# RULES "(:) ++" forall x xs ys . (x:xs) ++ ys = x : (xs ++ ys) #-}
./hermit-0.1.6.0/examples/flatten/HList.hs:28:{-# RULES "[] ++"  forall xs      . [] ++ xs     = xs #-}
./hermit-0.1.6.0/examples/flatten/HList.hs:31:{-# RULES "(.) id" forall f .    f . id = f #-}
./hermit-0.1.6.0/examples/flatten/HList.hs:34:{-# RULES "rep-abs-fusion" forall h . repH (absH h) = h #-}
./hermit-0.1.6.0/examples/hanoi/Hanoi.hs:42:{-# RULES "ww" forall work. fix work = wrap (fix (unwrap . work . wrap)) #-}
./hermit-0.1.6.0/examples/hanoi/Hanoi.hs:43:{-# RULES "pc" forall w. wrap (unwrap w) = w #-}
./hermit-0.1.6.0/examples/hanoi/Hanoi.hs:44:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.1.6.0/examples/hanoi/Hanoi.hs:45:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.1.6.0/examples/last/Last.hs:13:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/qsort/HList.hs:18:{-# RULES "repH" forall xs	 . repH xs = (xs ++) #-}
./hermit-0.1.6.0/examples/qsort/HList.hs:19:{-# RULES "absH" forall f 	 . absH f = f []     #-}
./hermit-0.1.6.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.6.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.6.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.6.0/examples/qsort/HList.hs:27:{-# RULES "(:) ++" forall x xs ys . (x:xs) ++ ys = x : (xs ++ ys) #-}
./hermit-0.1.6.0/examples/qsort/HList.hs:28:{-# RULES "[] ++"  forall xs      . [] ++ xs     = xs #-}
./hermit-0.1.6.0/examples/qsort/HList.hs:31:{-# RULES "(.) id" forall f .    f . id = f #-}
./hermit-0.1.6.0/examples/qsort/HList.hs:34:{-# RULES "rep-abs-fusion" forall h . repH (absH h) = h #-}
./hermit-0.1.6.0/examples/qsort/QSort.hs:17:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/qsort/QSort.hs:18:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.6.0/examples/reverse/HList.hs:18:{-# RULES "repH" forall xs	 . repH xs = (xs ++) #-}
./hermit-0.1.6.0/examples/reverse/HList.hs:19:{-# RULES "absH" forall f 	 . absH f = f []     #-}
./hermit-0.1.6.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.6.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.6.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.6.0/examples/reverse/HList.hs:27:{-# RULES "(:) ++" forall x xs ys . (x:xs) ++ ys = x : (xs ++ ys) #-}
./hermit-0.1.6.0/examples/reverse/HList.hs:28:{-# RULES "[] ++"  forall xs      . [] ++ xs     = xs #-}
./hermit-0.1.6.0/examples/reverse/HList.hs:31:{-# RULES "rep-abs-fusion" forall h . repH (absH h) = h #-}
./hermit-0.1.6.0/examples/reverse/Reverse.hs:15:{-# RULES "ww" forall f . fix f = wrap (fix (unwrap . f . wrap)) #-}
./hermit-0.1.6.0/examples/reverse/Reverse.hs:16:{-# RULES "inline-fix" forall f . fix f = let w = f w in w #-}
./hermit-0.1.6.0/src/Language/HERMIT/Dictionary.hs:59:-- | Augment a list of 'External's by adding all of HERMIT's primitive 'External's, plus any GHC RULES pragmas in the module.
./hermit-0.1.6.0/src/Language/HERMIT/GHC.hs:96:    , (not (null rules), ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.1.6.0/src/Language/HERMIT/Primitive/Local.hs:65:                 "This can be useful if you intend to appply GHC RULES."]
./hermit-0.1.6.0/src/Language/HERMIT/Primitive/Local.hs:68:                 "This can be useful if you intend to appply GHC RULES."]
./hermit-0.1.8.0/examples/concatVanishes/HList.hs:18:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.8.0/examples/concatVanishes/HList.hs:19:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.1.8.0/examples/concatVanishes/HList.hs:20:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.8.0/examples/concatVanishes/HList.hs:23:{-# RULES "(:) ++" forall x xs ys .    (x:xs) ++ ys = x : (xs ++ ys)       #-}
./hermit-0.1.8.0/examples/concatVanishes/HList.hs:24:{-# RULES "[] ++"  forall xs .         [] ++ xs     = xs                   #-}
./hermit-0.1.8.0/examples/concatVanishes/HList.hs:25:{-# RULES "++ []"  forall xs .         xs ++ []     = xs                   #-}
./hermit-0.1.8.0/examples/concatVanishes/HList.hs:28:{-# RULES ". id" forall f .          f . id = f                          #-}
./hermit-0.1.8.0/examples/concatVanishes/HList.hs:29:{-# RULES "id ." forall f .          id . f = f                          #-}
./hermit-0.1.8.0/examples/concatVanishes/HList.hs:33:{-# RULES "rep-abs-fusion" forall h .  repH (absH h) = h                   #-}
./hermit-0.1.8.0/examples/flatten/HList.hs:18:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.8.0/examples/flatten/HList.hs:19:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.8.0/examples/flatten/HList.hs:20:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.8.0/examples/hanoi/Hanoi.hs:41:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.1.8.0/examples/hanoi/Hanoi.hs:42:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.1.8.0/examples/qsort/HList.hs:18:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.8.0/examples/qsort/HList.hs:19:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.8.0/examples/qsort/HList.hs:20:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.8.0/examples/reverse/HList.hs:18:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.1.8.0/examples/reverse/HList.hs:19:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.1.8.0/examples/reverse/HList.hs:20:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.1.8.0/src/Language/HERMIT/Dictionary.hs:59:-- | Augment a list of 'External's by adding all of HERMIT's primitive 'External's, plus any GHC RULES pragmas in the module.
./hermit-0.1.8.0/src/Language/HERMIT/GHC.hs:99:    , (not (null rules), ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.1.8.0/src/Language/HERMIT/Primitive/Local.hs:69:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.1.8.0/src/Language/HERMIT/Primitive/Local.hs:72:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.2.0.0/examples/concatVanishes/HList.hs:18:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.2.0.0/examples/concatVanishes/HList.hs:19:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.2.0.0/examples/concatVanishes/HList.hs:20:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.2.0.0/examples/concatVanishes/HList.hs:23:{-# RULES "(:) ++" forall x xs ys .    (x:xs) ++ ys = x : (xs ++ ys)       #-}
./hermit-0.2.0.0/examples/concatVanishes/HList.hs:24:{-# RULES "[] ++"  forall xs .         [] ++ xs     = xs                   #-}
./hermit-0.2.0.0/examples/concatVanishes/HList.hs:25:{-# RULES "++ []"  forall xs .         xs ++ []     = xs                   #-}
./hermit-0.2.0.0/examples/concatVanishes/HList.hs:28:{-# RULES "rep-abs-fusion" forall h .  repH (absH h) = h                   #-}
./hermit-0.2.0.0/examples/flatten/HList.hs:18:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.2.0.0/examples/flatten/HList.hs:19:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.2.0.0/examples/flatten/HList.hs:20:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.2.0.0/examples/hanoi/Hanoi.hs:41:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.2.0.0/examples/hanoi/Hanoi.hs:42:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.2.0.0/examples/qsort/HList.hs:18:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.2.0.0/examples/qsort/HList.hs:19:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.2.0.0/examples/qsort/HList.hs:20:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.2.0.0/examples/reverse/HList.hs:18:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.2.0.0/examples/reverse/HList.hs:19:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.2.0.0/examples/reverse/HList.hs:20:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.2.0.0/src/Language/HERMIT/Context.hs:166:        , hermitC_coreRules      :: [CoreRule]              -- ^ GHC rewrite RULES.
./hermit-0.2.0.0/src/Language/HERMIT/GHC.hs:133:    , (not (null rules), ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.2.0.0/src/Language/HERMIT/Primitive/Local.hs:74:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.2.0.0/src/Language/HERMIT/Primitive/Local.hs:77:        , "This can be useful if you intend to apply GHC RULES." ]
./hermit-0.3.0.0/examples/concatVanishes/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.0.0/examples/concatVanishes/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.0.0/examples/concatVanishes/HList.hs:22:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.0.0/examples/concatVanishes/HList.hs:23:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.3.0.0/examples/concatVanishes/HList.hs:24:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.0.0/examples/flatten/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.0.0/examples/flatten/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.0.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.0.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.3.0.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.0.0/examples/hanoi/Hanoi.hs:41:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.3.0.0/examples/hanoi/Hanoi.hs:42:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.3.0.0/examples/qsort/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.0.0/examples/qsort/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.0.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.0.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.3.0.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.0.0/examples/reverse/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.0.0/examples/reverse/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.0.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.0.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.3.0.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.0.0/src/HERMIT/Context.hs:222:        , hermitC_coreRules      :: [CoreRule]              -- ^ GHC rewrite RULES.
./hermit-0.3.0.0/src/HERMIT/Dictionary/Local.hs:71:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.3.0.0/src/HERMIT/Dictionary/Local.hs:74:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-0.3.0.0/src/HERMIT/GHC.hs:165:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.3.1.0/examples/concatVanishes/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.1.0/examples/concatVanishes/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.1.0/examples/concatVanishes/HList.hs:22:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.1.0/examples/concatVanishes/HList.hs:23:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.3.1.0/examples/concatVanishes/HList.hs:24:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.1.0/examples/flatten/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.1.0/examples/flatten/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.1.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.1.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.3.1.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.1.0/examples/hanoi/Hanoi.hs:41:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.3.1.0/examples/hanoi/Hanoi.hs:42:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.3.1.0/examples/qsort/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.1.0/examples/qsort/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.1.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.1.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.3.1.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.1.0/examples/reverse/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.1.0/examples/reverse/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.1.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.1.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.3.1.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.1.0/src/HERMIT/Context.hs:222:        , hermitC_coreRules      :: [CoreRule]              -- ^ GHC rewrite RULES.
./hermit-0.3.1.0/src/HERMIT/Dictionary/Local.hs:71:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.3.1.0/src/HERMIT/Dictionary/Local.hs:74:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-0.3.1.0/src/HERMIT/GHC.hs:165:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.3.2.0/examples/concatVanishes/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.2.0/examples/concatVanishes/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.2.0/examples/concatVanishes/HList.hs:22:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.2.0/examples/concatVanishes/HList.hs:23:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.3.2.0/examples/concatVanishes/HList.hs:24:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.2.0/examples/flatten/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.2.0/examples/flatten/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.2.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.2.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.3.2.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.2.0/examples/hanoi/Hanoi.hs:41:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.3.2.0/examples/hanoi/Hanoi.hs:42:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.3.2.0/examples/qsort/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.2.0/examples/qsort/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.2.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.2.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.3.2.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.2.0/examples/reverse/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.3.2.0/examples/reverse/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.3.2.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.3.2.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.3.2.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.3.2.0/src/HERMIT/Context.hs:241:        , hermitC_coreRules      :: [CoreRule]              -- ^ GHC rewrite RULES.
./hermit-0.3.2.0/src/HERMIT/Dictionary/Local.hs:72:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.3.2.0/src/HERMIT/Dictionary/Local.hs:75:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-0.3.2.0/src/HERMIT/GHC.hs:204:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.4.0.0/examples/concatVanishes/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.4.0.0/examples/concatVanishes/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.4.0.0/examples/concatVanishes/HList.hs:22:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.4.0.0/examples/concatVanishes/HList.hs:23:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.4.0.0/examples/concatVanishes/HList.hs:24:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.4.0.0/examples/flatten/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.4.0.0/examples/flatten/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.4.0.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.4.0.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.4.0.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.4.0.0/examples/hanoi/Hanoi.hs:41:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.4.0.0/examples/hanoi/Hanoi.hs:42:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.4.0.0/examples/qsort/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.4.0.0/examples/qsort/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.4.0.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.4.0.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.4.0.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.4.0.0/examples/reverse/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.4.0.0/examples/reverse/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.4.0.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.4.0.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.4.0.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.4.0.0/src/HERMIT/Context.hs:239:        , hermitC_coreRules      :: [CoreRule]              -- ^ GHC rewrite RULES.
./hermit-0.4.0.0/src/HERMIT/Dictionary/Local.hs:70:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.4.0.0/src/HERMIT/Dictionary/Local.hs:73:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-0.4.0.0/src/HERMIT/GHC.hs:190:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.5.0.0/examples/concatVanishes/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.5.0.0/examples/concatVanishes/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.5.0.0/examples/concatVanishes/HList.hs:22:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.5.0.0/examples/concatVanishes/HList.hs:23:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.5.0.0/examples/concatVanishes/HList.hs:24:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.5.0.0/examples/flatten/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.5.0.0/examples/flatten/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.5.0.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.5.0.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.5.0.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.5.0.0/examples/hanoi/Hanoi.hs:44:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.5.0.0/examples/hanoi/Hanoi.hs:45:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.5.0.0/examples/qsort/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.5.0.0/examples/qsort/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.5.0.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.5.0.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.5.0.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.5.0.0/examples/reverse/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.5.0.0/examples/reverse/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.5.0.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.5.0.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.5.0.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.5.0.0/src/HERMIT/Context.hs:236:    , hermitC_specRules :: [CoreRule]            -- ^ In-scope GHC RULES found in IdInfos.
./hermit-0.5.0.0/src/HERMIT/Dictionary/Local.hs:70:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.5.0.0/src/HERMIT/Dictionary/Local.hs:73:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-0.5.0.0/src/HERMIT/Dictionary/Rules.hs:132:-- | Return all the RULES (including specialization RULES on binders) currently in scope.
./hermit-0.5.0.0/src/HERMIT/GHC.hs:211:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.6.0.0/examples/concatVanishes/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.6.0.0/examples/concatVanishes/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.6.0.0/examples/concatVanishes/HList.hs:22:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.6.0.0/examples/concatVanishes/HList.hs:23:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.6.0.0/examples/concatVanishes/HList.hs:24:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.6.0.0/examples/flatten/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.6.0.0/examples/flatten/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.6.0.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.6.0.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.6.0.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.6.0.0/examples/hanoi/Hanoi.hs:40:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.6.0.0/examples/hanoi/Hanoi.hs:41:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.6.0.0/examples/qsort/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.6.0.0/examples/qsort/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.6.0.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.6.0.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.6.0.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.6.0.0/examples/reverse/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.6.0.0/examples/reverse/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.6.0.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.6.0.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.6.0.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.6.0.0/src/HERMIT/Context.hs:236:    , hermitC_specRules :: [CoreRule]            -- ^ In-scope GHC RULES found in IdInfos.
./hermit-0.6.0.0/src/HERMIT/Dictionary/Local.hs:67:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.6.0.0/src/HERMIT/Dictionary/Local.hs:70:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-0.6.0.0/src/HERMIT/Dictionary/Rules.hs:100:-- | Return all in-scope CoreRules (including specialization RULES on binders), with their names.
./hermit-0.6.0.0/src/HERMIT/GHC.hs:163:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.6.0.0/src/HERMIT/GHC.hs:290:-- instead of ImportByPlugin, so the EPS gets populated with RULES and instances from
./hermit-0.6.0.0/src/HERMIT/GHC.hs:294:-- is successfully found... as written we will load RULES/instances if the module loads
./hermit-0.7.0.0/examples/concatVanishes/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.7.0.0/examples/concatVanishes/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.7.0.0/examples/concatVanishes/HList.hs:22:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.0.0/examples/concatVanishes/HList.hs:23:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.7.0.0/examples/concatVanishes/HList.hs:24:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.7.0.0/examples/flatten/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.7.0.0/examples/flatten/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.7.0.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.0.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.7.0.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.7.0.0/examples/hanoi/Hanoi.hs:40:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.7.0.0/examples/hanoi/Hanoi.hs:41:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.7.0.0/examples/new_reverse/HList.hs:22:{-# RULES "appendFix" [~] (++) = myAppend #-}
./hermit-0.7.0.0/examples/new_reverse/HList.hs:25:{-# RULES "repH []"  [~]               repH [] = id #-}
./hermit-0.7.0.0/examples/new_reverse/HList.hs:26:{-# RULES "repH (:)" [~] forall x xs.  repH (x:xs) = (x:) . repH xs #-}
./hermit-0.7.0.0/examples/new_reverse/HList.hs:27:{-# RULES "repH ++"  [~] forall xs ys. repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.0.0/examples/new_reverse/HList.hs:30:{-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-0.7.0.0/examples/new_reverse/Reverse.hs:22:{-# RULES "++ []" [~] forall xs. xs ++ [] = xs #-}
./hermit-0.7.0.0/examples/nub/Nub.hs:26:{-# RULES "filter-fusion" [~] forall p q ys. filter p (filter q ys) = filter (\y -> p y && q y) ys #-}
./hermit-0.7.0.0/examples/nub/Nub.hs:27:{-# RULES "member-fusion" [~] forall y x s. (y /= x) && (y `Set.notMember` s) = y `Set.notMember` (Set.insert x s) #-}
./hermit-0.7.0.0/examples/qsort/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.7.0.0/examples/qsort/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.7.0.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.0.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.7.0.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.7.0.0/examples/qsort/HList.hs:27:{-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-0.7.0.0/examples/reverse/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.7.0.0/examples/reverse/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.7.0.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.0.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.7.0.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.7.0.0/src/HERMIT/Context.hs:241:    , hermitC_specRules :: [CoreRule]            -- ^ In-scope GHC RULES found in IdInfos.
./hermit-0.7.0.0/src/HERMIT/Dictionary/Local.hs:66:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.7.0.0/src/HERMIT/Dictionary/Local.hs:69:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-0.7.0.0/src/HERMIT/Dictionary/Rules.hs:140:-- | Return all in-scope CoreRules (including specialization RULES on binders), with their names.
./hermit-0.7.0.0/src/HERMIT/GHC.hs:166:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.7.0.0/src/HERMIT/GHC.hs:293:-- instead of ImportByPlugin, so the EPS gets populated with RULES and instances from
./hermit-0.7.0.0/src/HERMIT/GHC.hs:297:-- is successfully found... as written we will load RULES/instances if the module loads
./hermit-0.7.1.0/examples/concatVanishes/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.7.1.0/examples/concatVanishes/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.7.1.0/examples/concatVanishes/HList.hs:22:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.1.0/examples/concatVanishes/HList.hs:23:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-0.7.1.0/examples/concatVanishes/HList.hs:24:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.7.1.0/examples/flatten/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.7.1.0/examples/flatten/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.7.1.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.1.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.7.1.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.7.1.0/examples/hanoi/Hanoi.hs:40:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-0.7.1.0/examples/hanoi/Hanoi.hs:41:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-0.7.1.0/examples/new_reverse/HList.hs:22:{-# RULES "appendFix" [~] (++) = myAppend #-}
./hermit-0.7.1.0/examples/new_reverse/HList.hs:25:{-# RULES "repH []"  [~]               repH [] = id #-}
./hermit-0.7.1.0/examples/new_reverse/HList.hs:26:{-# RULES "repH (:)" [~] forall x xs.  repH (x:xs) = (x:) . repH xs #-}
./hermit-0.7.1.0/examples/new_reverse/HList.hs:27:{-# RULES "repH ++"  [~] forall xs ys. repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.1.0/examples/new_reverse/HList.hs:30:{-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-0.7.1.0/examples/new_reverse/Reverse.hs:22:{-# RULES "++ []" [~] forall xs. xs ++ [] = xs #-}
./hermit-0.7.1.0/examples/nub/Nub.hs:26:{-# RULES "filter-fusion" [~] forall p q ys. filter p (filter q ys) = filter (\y -> p y && q y) ys #-}
./hermit-0.7.1.0/examples/nub/Nub.hs:27:{-# RULES "member-fusion" [~] forall y x s. (y /= x) && (y `Set.notMember` s) = y `Set.notMember` (Set.insert x s) #-}
./hermit-0.7.1.0/examples/qsort/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.7.1.0/examples/qsort/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.7.1.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.1.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.7.1.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.7.1.0/examples/qsort/HList.hs:27:{-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-0.7.1.0/examples/reverse/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-0.7.1.0/examples/reverse/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-0.7.1.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-0.7.1.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-0.7.1.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-0.7.1.0/src/HERMIT/Context.hs:241:    , hermitC_specRules :: [CoreRule]            -- ^ In-scope GHC RULES found in IdInfos.
./hermit-0.7.1.0/src/HERMIT/Dictionary/Local.hs:66:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-0.7.1.0/src/HERMIT/Dictionary/Local.hs:69:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-0.7.1.0/src/HERMIT/Dictionary/Rules.hs:140:-- | Return all in-scope CoreRules (including specialization RULES on binders), with their names.
./hermit-0.7.1.0/src/HERMIT/GHC.hs:166:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-0.7.1.0/src/HERMIT/GHC.hs:293:-- instead of ImportByPlugin, so the EPS gets populated with RULES and instances from
./hermit-0.7.1.0/src/HERMIT/GHC.hs:297:-- is successfully found... as written we will load RULES/instances if the module loads
./hermit-1.0.0.0/examples/concatVanishes/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.0.0/examples/concatVanishes/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.0.0/examples/concatVanishes/HList.hs:22:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.0.0/examples/concatVanishes/HList.hs:23:{-# RULES "repH []" 	               repH [] = id                        #-}
./hermit-1.0.0.0/examples/concatVanishes/HList.hs:24:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.0.0/examples/flatten/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.0.0/examples/flatten/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.0.0/examples/flatten/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.0.0/examples/flatten/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-1.0.0.0/examples/flatten/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.0.0/examples/hanoi/Hanoi.hs:40:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-1.0.0.0/examples/hanoi/Hanoi.hs:41:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-1.0.0.0/examples/new_reverse/HList.hs:22:{-# RULES "appendFix" [~] (++) = myAppend #-}
./hermit-1.0.0.0/examples/new_reverse/HList.hs:25:{-# RULES "repH []"  [~]               repH [] = id #-}
./hermit-1.0.0.0/examples/new_reverse/HList.hs:26:{-# RULES "repH (:)" [~] forall x xs.  repH (x:xs) = (x:) . repH xs #-}
./hermit-1.0.0.0/examples/new_reverse/HList.hs:27:{-# RULES "repH ++"  [~] forall xs ys. repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.0.0/examples/new_reverse/HList.hs:30:{-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-1.0.0.0/examples/new_reverse/Reverse.hs:22:{-# RULES "++ []" [~] forall xs. xs ++ [] = xs #-}
./hermit-1.0.0.0/examples/new_reverse/Reverse.hs:23:{-# RULES "myAppend-assoc" [~] forall xs ys zs. myAppend (myAppend xs ys) zs = myAppend xs (myAppend ys zs) #-}
./hermit-1.0.0.0/examples/nub/Nub.hs:26:{-# RULES "filter-fusion" [~] forall p q ys. filter p (filter q ys) = filter (\y -> p y && q y) ys #-}
./hermit-1.0.0.0/examples/nub/Nub.hs:27:{-# RULES "member-fusion" [~] forall y x s. (y /= x) && (y `Set.notMember` s) = y `Set.notMember` (Set.insert x s) #-}
./hermit-1.0.0.0/examples/qsort/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.0.0/examples/qsort/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.0.0/examples/qsort/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.0.0/examples/qsort/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-1.0.0.0/examples/qsort/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.0.0/examples/qsort/HList.hs:27:{-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-1.0.0.0/examples/reverse/HList.hs:18:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.0.0/examples/reverse/HList.hs:19:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.0.0/examples/reverse/HList.hs:22:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.0.0/examples/reverse/HList.hs:23:{-# RULES "repH []" 	             repH [] = id  	       	         #-}
./hermit-1.0.0.0/examples/reverse/HList.hs:24:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.0.0/src/HERMIT/Context.hs:261:    , hermitC_specRules :: [CoreRule]            -- ^ In-scope GHC RULES found in IdInfos.
./hermit-1.0.0.0/src/HERMIT/Dictionary/Local.hs:66:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-1.0.0.0/src/HERMIT/Dictionary/Local.hs:69:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-1.0.0.0/src/HERMIT/Dictionary/Rules.hs:148:-- | Return all in-scope CoreRules (including specialization RULES on binders), with their names.
./hermit-1.0.0.0/src/HERMIT/GHC.hs:182:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-1.0.0.0/src/HERMIT/GHC.hs:309:-- instead of ImportByPlugin, so the EPS gets populated with RULES and instances from
./hermit-1.0.0.0/src/HERMIT/GHC.hs:313:-- is successfully found... as written we will load RULES/instances if the module loads
./hermit-1.0.1/examples/concatVanishes/Flatten.hs:17:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/concatVanishes/Flatten.hs:18:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/concatVanishes/Flatten.hs:21:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/concatVanishes/Flatten.hs:22:{-# RULES "repH []"                    repH [] = id                        #-}
./hermit-1.0.1/examples/concatVanishes/Flatten.hs:23:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/examples/concatVanishes/HList.hs:18:-- {-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/concatVanishes/HList.hs:19:-- {-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/concatVanishes/HList.hs:22:-- {-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/concatVanishes/HList.hs:23:-- {-# RULES "repH []"                    repH [] = id                        #-}
./hermit-1.0.1/examples/concatVanishes/HList.hs:24:-- {-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/examples/concatVanishes/QSort.hs:19:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/concatVanishes/QSort.hs:20:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/concatVanishes/QSort.hs:23:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/concatVanishes/QSort.hs:24:{-# RULES "repH []"                    repH [] = id                        #-}
./hermit-1.0.1/examples/concatVanishes/QSort.hs:25:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/examples/concatVanishes/Rev.hs:15:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/concatVanishes/Rev.hs:16:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/concatVanishes/Rev.hs:19:{-# RULES "repH ++" forall xs ys .     repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/concatVanishes/Rev.hs:20:{-# RULES "repH []"                    repH [] = id                        #-}
./hermit-1.0.1/examples/concatVanishes/Rev.hs:21:{-# RULES "repH (:)" forall x xs .     repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/examples/flatten/Flatten.hs:17:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/flatten/Flatten.hs:18:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/flatten/Flatten.hs:21:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/flatten/Flatten.hs:22:{-# RULES "repH []"                  repH [] = id                        #-}
./hermit-1.0.1/examples/flatten/Flatten.hs:23:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/examples/flatten/HList.hs:18:-- {-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/flatten/HList.hs:19:-- {-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/flatten/HList.hs:22:-- {-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/flatten/HList.hs:23:-- {-# RULES "repH []"                  repH [] = id                        #-}
./hermit-1.0.1/examples/flatten/HList.hs:24:-- {-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/examples/hanoi/Hanoi.hs:40:{-# RULES "++ []" forall l. l ++ [] = l #-}
./hermit-1.0.1/examples/hanoi/Hanoi.hs:41:{-# RULES "[] ++" forall l. [] ++ l = l #-}
./hermit-1.0.1/examples/new_reverse/HList.hs:22:-- {-# RULES "appendFix" [~] (++) = myAppend #-}
./hermit-1.0.1/examples/new_reverse/HList.hs:25:-- {-# RULES "repH []"  [~]               repH [] = id #-}
./hermit-1.0.1/examples/new_reverse/HList.hs:26:-- {-# RULES "repH (:)" [~] forall x xs.  repH (x:xs) = (x:) . repH xs #-}
./hermit-1.0.1/examples/new_reverse/HList.hs:27:-- {-# RULES "repH ++"  [~] forall xs ys. repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/new_reverse/HList.hs:30:-- {-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-1.0.1/examples/new_reverse/Reverse.hs:22:{-# RULES "++ []" [~] forall xs. xs ++ [] = xs #-}
./hermit-1.0.1/examples/new_reverse/Reverse.hs:23:{-# RULES "myAppend-assoc" [~] forall xs ys zs. myAppend (myAppend xs ys) zs = myAppend xs (myAppend ys zs) #-}
./hermit-1.0.1/examples/new_reverse/Reverse.hs:26:{-# RULES "appendFix" [~] (++) = myAppend #-}
./hermit-1.0.1/examples/new_reverse/Reverse.hs:29:{-# RULES "repH []"  [~]               repH [] = id #-}
./hermit-1.0.1/examples/new_reverse/Reverse.hs:30:{-# RULES "repH (:)" [~] forall x xs.  repH (x:xs) = (x:) . repH xs #-}
./hermit-1.0.1/examples/new_reverse/Reverse.hs:31:{-# RULES "repH ++"  [~] forall xs ys. repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/new_reverse/Reverse.hs:34:{-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-1.0.1/examples/nub/Nub.hs:26:{-# RULES "filter-fusion" [~] forall p q ys. filter p (filter q ys) = filter (\y -> p y && q y) ys #-}
./hermit-1.0.1/examples/nub/Nub.hs:27:{-# RULES "member-fusion" [~] forall y x s. (y /= x) && (y `Set.notMember` s) = y `Set.notMember` (Set.insert x s) #-}
./hermit-1.0.1/examples/qsort/HList.hs:18:-- {-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/qsort/HList.hs:19:-- {-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/qsort/HList.hs:22:-- {-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/qsort/HList.hs:23:-- {-# RULES "repH []"                  repH [] = id                        #-}
./hermit-1.0.1/examples/qsort/HList.hs:24:-- {-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/examples/qsort/HList.hs:27:-- {-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-1.0.1/examples/qsort/QSort.hs:28:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/qsort/QSort.hs:29:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/qsort/QSort.hs:32:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/qsort/QSort.hs:33:{-# RULES "repH []"                  repH [] = id                        #-}
./hermit-1.0.1/examples/qsort/QSort.hs:34:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/examples/qsort/QSort.hs:37:{-# RULES "repH-absH-fusion" [~] forall h. repH (absH h) = h #-}
./hermit-1.0.1/examples/reverse/HList.hs:18:-- {-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/reverse/HList.hs:19:-- {-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/reverse/HList.hs:22:-- {-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/reverse/HList.hs:23:-- {-# RULES "repH []"                  repH [] = id                        #-}
./hermit-1.0.1/examples/reverse/HList.hs:24:-- {-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/examples/reverse/Reverse.hs:16:{-# RULES "++ []"  forall xs .  xs ++ [] = xs #-}
./hermit-1.0.1/examples/reverse/Reverse.hs:17:{-# RULES "++ strict"           (++) undefined = undefined #-}
./hermit-1.0.1/examples/reverse/Reverse.hs:20:{-# RULES "repH ++" forall xs ys   . repH (xs ++ ys) = repH xs . repH ys #-}
./hermit-1.0.1/examples/reverse/Reverse.hs:21:{-# RULES "repH []"                  repH [] = id                        #-}
./hermit-1.0.1/examples/reverse/Reverse.hs:22:{-# RULES "repH (:)" forall x xs   . repH (x:xs) = ((:) x) . repH xs     #-}
./hermit-1.0.1/src/HERMIT/Context.hs:260:    , hermitC_specRules :: [CoreRule]            -- ^ In-scope GHC RULES found in IdInfos.
./hermit-1.0.1/src/HERMIT/Dictionary/Local.hs:70:        , "This can be useful if you intend to appply GHC RULES." ]
./hermit-1.0.1/src/HERMIT/Dictionary/Local.hs:73:        , "recursive binding group.  This can be useful if you intend to apply GHC RULES." ]
./hermit-1.0.1/src/HERMIT/Dictionary/Rules.hs:151:-- | Return all in-scope CoreRules (including specialization RULES on binders), with their names.
./hermit-1.0.1/src/HERMIT/GHC.hs:198:    , (notNull rules,  ptext (sLit "RULES:") <+> vcat (map ppr rules))
./hermit-1.0.1/src/HERMIT/GHC.hs:343:-- instead of ImportByPlugin, so the EPS gets populated with RULES and instances from
./hermit-1.0.1/src/HERMIT/GHC.hs:347:-- is successfully found... as written we will load RULES/instances if the module loads
./hermit-syb-0.1.0.0/HERMIT/Optimization/SYB/Prelude.hs:22:{-# RULES "[]++"   [~] forall x. [] ++ x = x      #-}
./hermit-syb-0.1.0.0/HERMIT/Optimization/SYB/Prelude.hs:23:{-# RULES "append" [~]           (++)    = append #-}
./hermit-syb-0.1.0.0/HERMIT/Optimization/SYB/Prelude.hs:25:{-# RULES "[]++"   forall x. [] ++ x = x #-}
./hermit-syb-0.1.0.0/HERMIT/Optimization/SYB/Prelude.hs:26:{-# RULES "append"           (++)    = append #-}
./hexpat-0.1/C2HS.hs:197:{-# RULES 
./hexpat-0.2/C2HS.hs:197:{-# RULES 
./hexpat-0.3/C2HS.hs:197:{-# RULES 
./hflags-0.4/examples/package/Tup.hs:17:{-# RULES "make_this_orphan" id = id :: MakeThisOrphan -> MakeThisOrphan #-}
./highlighting-kate-0.5.10/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.10/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.10/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.11/Text/Highlighting/Kate/Syntax/Cmake.hs:82:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.11/Text/Highlighting/Kate/Syntax/Cmake.hs:108:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.11/Text/Highlighting/Kate/Syntax/Cmake.hs:206:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.11.1/Text/Highlighting/Kate/Syntax/Cmake.hs:82:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.11.1/Text/Highlighting/Kate/Syntax/Cmake.hs:108:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.11.1/Text/Highlighting/Kate/Syntax/Cmake.hs:206:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.12/Text/Highlighting/Kate/Syntax/Cmake.hs:82:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.12/Text/Highlighting/Kate/Syntax/Cmake.hs:108:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.12/Text/Highlighting/Kate/Syntax/Cmake.hs:206:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.13/Text/Highlighting/Kate/Syntax/Cmake.hs:82:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.13/Text/Highlighting/Kate/Syntax/Cmake.hs:108:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.13/Text/Highlighting/Kate/Syntax/Cmake.hs:206:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.14/Text/Highlighting/Kate/Syntax/Cmake.hs:82:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.14/Text/Highlighting/Kate/Syntax/Cmake.hs:108:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.14/Text/Highlighting/Kate/Syntax/Cmake.hs:206:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.15/Text/Highlighting/Kate/Syntax/Cmake.hs:82:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.15/Text/Highlighting/Kate/Syntax/Cmake.hs:108:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.15/Text/Highlighting/Kate/Syntax/Cmake.hs:206:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.5.1/Text/Highlighting/Kate/Syntax/Cmake.hs:77:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINOR_VERSION CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.5.1/Text/Highlighting/Kate/Syntax/Cmake.hs:98:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.5.1/Text/Highlighting/Kate/Syntax/Cmake.hs:183:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.6/Text/Highlighting/Kate/Syntax/Cmake.hs:79:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINOR_VERSION CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.6/Text/Highlighting/Kate/Syntax/Cmake.hs:101:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.6/Text/Highlighting/Kate/Syntax/Cmake.hs:187:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.6.1/Text/Highlighting/Kate/Syntax/Cmake.hs:79:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINOR_VERSION CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.6.1/Text/Highlighting/Kate/Syntax/Cmake.hs:101:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.6.1/Text/Highlighting/Kate/Syntax/Cmake.hs:187:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.7/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.7/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.7/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.7.1/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.7.1/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.7.1/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.8/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.8/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.8/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.8.1/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.8.1/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.8.1/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.8.2/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.8.2/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.8.2/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.8.3/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.8.3/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.8.3/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.8.4/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.8.4/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.8.4/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.8.5/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.8.5/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.8.5/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.5.9/Text/Highlighting/Kate/Syntax/Cmake.hs:80:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.5.9/Text/Highlighting/Kate/Syntax/Cmake.hs:106:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.5.9/Text/Highlighting/Kate/Syntax/Cmake.hs:204:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.6/Text/Highlighting/Kate/Syntax/Cmake.hs:82:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.6/Text/Highlighting/Kate/Syntax/Cmake.hs:108:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.6/Text/Highlighting/Kate/Syntax/Cmake.hs:206:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./highlighting-kate-0.6.1/Text/Highlighting/Kate/Syntax/Cmake.hs:82:list_cmake'5fvars = Set.fromList $ words $ "APPLE BORLAND BUILD_SHARED_LIBS CMAKE_ABSOLUTE_DESTINATION_FILES CMAKE_AR CMAKE_ARCHIVE_OUTPUT_DIRECTORY CMAKE_ARGC CMAKE_ARGV0 CMAKE_AUTOMOC CMAKE_AUTOMOC_MOC_OPTIONS CMAKE_AUTOMOC_RELAXED_MODE CMAKE_BACKWARDS_COMPATIBILITY CMAKE_BINARY_DIR CMAKE_BUILD_TOOL CMAKE_BUILD_TYPE CMAKE_BUILD_WITH_INSTALL_RPATH CMAKE_CACHEFILE_DIR CMAKE_CACHE_MAJOR_VERSION CMAKE_CACHE_MINOR_VERSION CMAKE_CACHE_PATCH_VERSION CMAKE_CFG_INTDIR CMAKE_CL_64 CMAKE_COLOR_MAKEFILE CMAKE_COMMAND CMAKE_COMPILER_2005 CMAKE_CONFIGURATION_TYPES CMAKE_CROSSCOMPILING CMAKE_CTEST_COMMAND CMAKE_CURRENT_BINARY_DIR CMAKE_CURRENT_LIST_DIR CMAKE_CURRENT_LIST_FILE CMAKE_CURRENT_LIST_LINE CMAKE_CURRENT_SOURCE_DIR CMAKE_DEBUG_POSTFIX CMAKE_DEBUG_TARGET_PROPERTIES CMAKE_DL_LIBS CMAKE_EDIT_COMMAND CMAKE_ERROR_DEPRECATED CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_EXECUTABLE_SUFFIX CMAKE_EXE_LINKER_FLAGS CMAKE_EXTRA_GENERATOR CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES CMAKE_FIND_LIBRARY_PREFIXES CMAKE_FIND_LIBRARY_SUFFIXES CMAKE_FIND_PACKAGE_WARN_NO_MODULE CMAKE_Fortran_FORMAT CMAKE_Fortran_MODDIR_DEFAULT CMAKE_Fortran_MODDIR_FLAG CMAKE_Fortran_MODOUT_FLAG CMAKE_Fortran_MODULE_DIRECTORY CMAKE_GENERATOR CMAKE_GENERATOR_TOOLSET CMAKE_GNUtoMS CMAKE_HOME_DIRECTORY CMAKE_HOST_APPLE CMAKE_HOST_SYSTEM CMAKE_HOST_SYSTEM_NAME CMAKE_HOST_SYSTEM_PROCESSOR CMAKE_HOST_SYSTEM_VERSION CMAKE_HOST_UNIX CMAKE_HOST_WIN32 CMAKE_IGNORE_PATH CMAKE_IMPORT_LIBRARY_PREFIX CMAKE_IMPORT_LIBRARY_SUFFIX CMAKE_INCLUDE_CURRENT_DIR CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE CMAKE_INCLUDE_PATH CMAKE_INSTALL_DEFAULT_COMPONENT_NAME CMAKE_INSTALL_NAME_DIR CMAKE_INSTALL_PREFIX CMAKE_INSTALL_RPATH CMAKE_INSTALL_RPATH_USE_LINK_PATH CMAKE_INTERNAL_PLATFORM_ABI CMAKE_LIBRARY_ARCHITECTURE CMAKE_LIBRARY_ARCHITECTURE_REGEX CMAKE_LIBRARY_OUTPUT_DIRECTORY CMAKE_LIBRARY_PATH CMAKE_LIBRARY_PATH_FLAG CMAKE_LINK_DEF_FILE_FLAG CMAKE_LINK_DEPENDS_NO_SHARED CMAKE_LINK_INTERFACE_LIBRARIES CMAKE_LINK_LIBRARY_FILE_FLAG CMAKE_LINK_LIBRARY_FLAG CMAKE_LINK_LIBRARY_SUFFIX CMAKE_MACOSX_BUNDLE CMAKE_MAJOR_VERSION CMAKE_MAKE_PROGRAM CMAKE_MFC_FLAG CMAKE_MINIMUM_REQUIRED_VERSION CMAKE_MINOR_VERSION CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_PATH CMAKE_NOT_USING_CONFIG_FLAGS CMAKE_NO_BUILTIN_CHRPATH CMAKE_OBJECT_PATH_MAX CMAKE_PARENT_LIST_FILE CMAKE_PATCH_VERSION CMAKE_PDB_OUTPUT_DIRECTORY CMAKE_POSITION_INDEPENDENT_CODE CMAKE_PREFIX_PATH CMAKE_PROGRAM_PATH CMAKE_PROJECT_NAME CMAKE_RANLIB CMAKE_ROOT CMAKE_RUNTIME_OUTPUT_DIRECTORY CMAKE_SCRIPT_MODE_FILE CMAKE_SHARED_LIBRARY_PREFIX CMAKE_SHARED_LIBRARY_SUFFIX CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_MODULE_PREFIX CMAKE_SHARED_MODULE_SUFFIX CMAKE_SIZEOF_VOID_P CMAKE_SKIP_BUILD_RPATH CMAKE_SKIP_INSTALL_ALL_DEPENDENCY CMAKE_SKIP_INSTALL_RPATH CMAKE_SKIP_RPATH CMAKE_SOURCE_DIR CMAKE_STANDARD_LIBRARIES CMAKE_STATIC_LIBRARY_PREFIX CMAKE_STATIC_LIBRARY_SUFFIX CMAKE_STATIC_LINKER_FLAGS CMAKE_SYSTEM CMAKE_SYSTEM_IGNORE_PATH CMAKE_SYSTEM_INCLUDE_PATH CMAKE_SYSTEM_LIBRARY_PATH CMAKE_SYSTEM_NAME CMAKE_SYSTEM_PREFIX_PATH CMAKE_SYSTEM_PROCESSOR CMAKE_SYSTEM_PROGRAM_PATH CMAKE_SYSTEM_VERSION CMAKE_TRY_COMPILE_CONFIGURATION CMAKE_TWEAK_VERSION CMAKE_USER_MAKE_RULES_OVERRIDE CMAKE_USE_RELATIVE_PATHS CMAKE_VERBOSE_MAKEFILE CMAKE_VERSION CMAKE_VISIBILITY_INLINES_HIDDEN CMAKE_VS_PLATFORM_TOOLSET CMAKE_WARN_DEPRECATED CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION CMAKE_WIN32_EXECUTABLE CMAKE_XCODE_PLATFORM_TOOLSET CYGWIN ENV EXECUTABLE_OUTPUT_PATH LIBRARY_OUTPUT_PATH MSVC MSVC10 MSVC11 MSVC12 MSVC60 MSVC70 MSVC71 MSVC80 MSVC90 MSVC_IDE MSVC_VERSION PROJECT_BINARY_DIR PROJECT_NAME PROJECT_SOURCE_DIR UNIX WIN32 XCODE_VERSION"
./highlighting-kate-0.6.1/Text/Highlighting/Kate/Syntax/Cmake.hs:108:regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb = compileRegex True "\\bCMAKE_USER_MAKE_RULES_OVERRIDE_[A-Za-z_][A-Za-z_0-9]*\\b"
./highlighting-kate-0.6.1/Text/Highlighting/Kate/Syntax/Cmake.hs:206:   ((pRegExpr regex_'5cbCMAKE'5fUSER'5fMAKE'5fRULES'5fOVERRIDE'5f'5bA'2dZa'2dz'5f'5d'5bA'2dZa'2dz'5f0'2d9'5d'2a'5cb >>= withAttribute DecValTok))
./hledger-0.18/Hledger/Cli/Options.hs:127: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.18.1/Hledger/Cli/Options.hs:127: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.18.2/Hledger/Cli/Options.hs:127: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.19/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.19.1/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.19.2/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.19.3/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.20/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.20.0.1/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.21/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.21.1/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.21.2/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.21.3/Hledger/Cli/Options.hs:128: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.22/Hledger/Cli/Options.hs:131: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.22.1/Hledger/Cli/Options.hs:131: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.22.2/Hledger/Cli/Options.hs:131: ,flagReq ["rules-file"]  (\s opts -> Right $ setopt "rules-file" s opts) "RULESFILE" "conversion rules for CSV (default: FILE.rules)"
./hledger-0.5/Options.hs:30:  "       hledger convert CSVFILE ACCOUNTNAME RULESFILE\n" ++
./hledger-0.5.1/ConvertCommand.hs:6:Usage: hledger convert CSVFILE ACCOUNTNAME RULESFILE
./hledger-0.5.1/ConvertCommand.hs:8:ACCOUNTNAME is the base account to use for transactions.  RULESFILE
./hledger-0.5.1/Options.hs:30:  "       hledger convert CSVFILE ACCOUNTNAME RULESFILE\n" ++
./hledger-0.6/Commands/Convert.hs:6:Usage: hledger convert CSVFILE ACCOUNTNAME RULESFILE
./hledger-0.6/Commands/Convert.hs:8:ACCOUNTNAME is the base account to use for transactions.  RULESFILE
./hledger-0.6/Options.hs:23:  "       hledger convert CSVFILE ACCOUNTNAME RULESFILE\n" ++
./hledger-0.6.1/Commands/Convert.hs:6:Usage: hledger convert CSVFILE ACCOUNTNAME RULESFILE
./hledger-0.6.1/Commands/Convert.hs:8:ACCOUNTNAME is the base account to use for transactions.  RULESFILE
./hledger-0.6.1/Options.hs:23:  "       hledger convert CSVFILE ACCOUNTNAME RULESFILE\n" ++
./hledger-lib-0.20/Hledger/Read/CsvReader.hs:206:RULES: RULE*
./hledger-lib-0.20.0.1/Hledger/Read/CsvReader.hs:206:RULES: RULE*
./hledger-lib-0.21/Hledger/Read/CsvReader.hs:206:RULES: RULE*
./hledger-lib-0.21.1/Hledger/Read/CsvReader.hs:206:RULES: RULE*
./hledger-lib-0.21.2/Hledger/Read/CsvReader.hs:205:RULES: RULE*
./hledger-lib-0.21.3/Hledger/Read/CsvReader.hs:205:RULES: RULE*
./hledger-lib-0.22/Hledger/Read/CsvReader.hs:205:RULES: RULE*
./hledger-lib-0.22.1/Hledger/Read/CsvReader.hs:205:RULES: RULE*
./hledger-lib-0.22.2/Hledger/Read/CsvReader.hs:205:RULES: RULE*
./hledger-lib-0.23/Hledger/Read/CsvReader.hs:205:RULES: RULE*
./hledger-lib-0.23.1/Hledger/Read/CsvReader.hs:204:RULES: RULE*
./hledger-lib-0.23.2/Hledger/Read/CsvReader.hs:204:RULES: RULE*
./hledger-lib-0.23.3/Hledger/Read/CsvReader.hs:204:RULES: RULE*
./hledger-lib-0.24/Hledger/Read/CsvReader.hs:223:RULES: RULE*
./hledger-lib-0.24.1/Hledger/Read/CsvReader.hs:223:RULES: RULE*
./hledger-lib-0.25/Hledger/Read/CsvReader.hs:230:RULES: RULE*
./hledger-lib-0.25.1/Hledger/Read/CsvReader.hs:228:RULES: RULE*
./hledger-lib-0.26/Hledger/Read/CsvReader.hs:228:RULES: RULE*
./hledger-lib-0.27/Hledger/Read/CsvReader.hs:228:RULES: RULE*
./hoogle-4.0/src/Main.hs:65:{ - RULES
./hoogle-4.0.0.1/src/Main.hs:65:{ - RULES
./hourglass-0.1.0/Data/Hourglass/Time.hs:144:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.1.0/Data/Hourglass/Time.hs:145:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.1.0/Data/Hourglass/Time.hs:146:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.1.0/Data/Hourglass/Time.hs:154:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.1.0/Data/Hourglass/Time.hs:155:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.1.0/Data/Hourglass/Time.hs:163:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.1.0/Data/Hourglass/Time.hs:164:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.1.0/Data/Hourglass/Time.hs:172:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.1.0/Data/Hourglass/Time.hs:173:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.1.1/Data/Hourglass/Time.hs:144:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.1.1/Data/Hourglass/Time.hs:145:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.1.1/Data/Hourglass/Time.hs:146:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.1.1/Data/Hourglass/Time.hs:154:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.1.1/Data/Hourglass/Time.hs:155:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.1.1/Data/Hourglass/Time.hs:163:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.1.1/Data/Hourglass/Time.hs:164:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.1.1/Data/Hourglass/Time.hs:172:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.1.1/Data/Hourglass/Time.hs:173:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.1.2/Data/Hourglass/Time.hs:144:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.1.2/Data/Hourglass/Time.hs:145:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.1.2/Data/Hourglass/Time.hs:146:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.1.2/Data/Hourglass/Time.hs:154:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.1.2/Data/Hourglass/Time.hs:155:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.1.2/Data/Hourglass/Time.hs:163:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.1.2/Data/Hourglass/Time.hs:164:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.1.2/Data/Hourglass/Time.hs:172:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.1.2/Data/Hourglass/Time.hs:173:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.0/Data/Hourglass/Time.hs:139:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.0/Data/Hourglass/Time.hs:140:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.0/Data/Hourglass/Time.hs:141:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.0/Data/Hourglass/Time.hs:149:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.0/Data/Hourglass/Time.hs:150:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.0/Data/Hourglass/Time.hs:158:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.0/Data/Hourglass/Time.hs:159:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.0/Data/Hourglass/Time.hs:167:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.0/Data/Hourglass/Time.hs:168:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.1/Data/Hourglass/Time.hs:139:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.1/Data/Hourglass/Time.hs:140:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.1/Data/Hourglass/Time.hs:141:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.1/Data/Hourglass/Time.hs:149:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.1/Data/Hourglass/Time.hs:150:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.1/Data/Hourglass/Time.hs:158:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.1/Data/Hourglass/Time.hs:159:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.1/Data/Hourglass/Time.hs:167:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.1/Data/Hourglass/Time.hs:168:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.2/Data/Hourglass/Time.hs:139:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.2/Data/Hourglass/Time.hs:140:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.2/Data/Hourglass/Time.hs:141:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.2/Data/Hourglass/Time.hs:149:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.2/Data/Hourglass/Time.hs:150:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.2/Data/Hourglass/Time.hs:158:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.2/Data/Hourglass/Time.hs:159:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.2/Data/Hourglass/Time.hs:167:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.2/Data/Hourglass/Time.hs:168:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.3/Data/Hourglass/Time.hs:139:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.3/Data/Hourglass/Time.hs:140:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.3/Data/Hourglass/Time.hs:141:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.3/Data/Hourglass/Time.hs:149:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.3/Data/Hourglass/Time.hs:150:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.3/Data/Hourglass/Time.hs:158:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.3/Data/Hourglass/Time.hs:159:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.3/Data/Hourglass/Time.hs:167:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.3/Data/Hourglass/Time.hs:168:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.4/Data/Hourglass/Time.hs:139:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.4/Data/Hourglass/Time.hs:140:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.4/Data/Hourglass/Time.hs:141:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.4/Data/Hourglass/Time.hs:149:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.4/Data/Hourglass/Time.hs:150:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.4/Data/Hourglass/Time.hs:158:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.4/Data/Hourglass/Time.hs:159:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.4/Data/Hourglass/Time.hs:167:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.4/Data/Hourglass/Time.hs:168:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.5/Data/Hourglass/Time.hs:139:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.5/Data/Hourglass/Time.hs:140:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.5/Data/Hourglass/Time.hs:141:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.5/Data/Hourglass/Time.hs:149:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.5/Data/Hourglass/Time.hs:150:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.5/Data/Hourglass/Time.hs:158:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.5/Data/Hourglass/Time.hs:159:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.5/Data/Hourglass/Time.hs:167:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.5/Data/Hourglass/Time.hs:168:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.6/Data/Hourglass/Time.hs:139:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.6/Data/Hourglass/Time.hs:140:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.6/Data/Hourglass/Time.hs:141:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.6/Data/Hourglass/Time.hs:149:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.6/Data/Hourglass/Time.hs:150:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.6/Data/Hourglass/Time.hs:158:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.6/Data/Hourglass/Time.hs:159:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.6/Data/Hourglass/Time.hs:167:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.6/Data/Hourglass/Time.hs:168:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.7/Data/Hourglass/Time.hs:139:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.7/Data/Hourglass/Time.hs:140:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.7/Data/Hourglass/Time.hs:141:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.7/Data/Hourglass/Time.hs:149:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.7/Data/Hourglass/Time.hs:150:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.7/Data/Hourglass/Time.hs:158:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.7/Data/Hourglass/Time.hs:159:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.7/Data/Hourglass/Time.hs:167:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.7/Data/Hourglass/Time.hs:168:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.8/Data/Hourglass/Time.hs:139:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.8/Data/Hourglass/Time.hs:140:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.8/Data/Hourglass/Time.hs:141:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.8/Data/Hourglass/Time.hs:149:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.8/Data/Hourglass/Time.hs:150:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.8/Data/Hourglass/Time.hs:158:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.8/Data/Hourglass/Time.hs:159:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.8/Data/Hourglass/Time.hs:167:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.8/Data/Hourglass/Time.hs:168:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.9/Data/Hourglass/Time.hs:143:{-# RULES "timeConvert/ID" timeConvert = id #-}
./hourglass-0.2.9/Data/Hourglass/Time.hs:144:{-# RULES "timeConvert/ElapsedP" timeConvert = timeGetElapsedP #-}
./hourglass-0.2.9/Data/Hourglass/Time.hs:145:{-# RULES "timeConvert/Elapsed" timeConvert = timeGetElapsed #-}
./hourglass-0.2.9/Data/Hourglass/Time.hs:153:{-# RULES "timeGetDate/ID" timeGetDate = id #-}
./hourglass-0.2.9/Data/Hourglass/Time.hs:154:{-# RULES "timeGetDate/DateTime" timeGetDate = dtDate #-}
./hourglass-0.2.9/Data/Hourglass/Time.hs:162:{-# RULES "timeGetTimeOfDay/Date" timeGetTimeOfDay = const (TimeOfDay 0 0 0 0) #-}
./hourglass-0.2.9/Data/Hourglass/Time.hs:163:{-# RULES "timeGetTimeOfDay/DateTime" timeGetTimeOfDay = dtTime #-}
./hourglass-0.2.9/Data/Hourglass/Time.hs:171:{-# RULES "timeGetDateTimeOfDay/ID" timeGetDateTimeOfDay = id #-}
./hourglass-0.2.9/Data/Hourglass/Time.hs:172:{-# RULES "timeGetDateTimeOfDay/Date" timeGetDateTimeOfDay = flip DateTime (TimeOfDay 0 0 0 0) #-}
./hpp-0.3.0.0/src/Hpp/Streamer.hs:162:{-# RULES "hpp: mapStream/mapStream"
./hpp-0.3.0.0/src/Hpp/Streamer.hs:209:{-# RULES "hpp: onDone/onDone"
./hpp-0.3.0.0/src/Hpp/Streamer.hs:219:{-# RULES "hpp: mapping/mapping"
./hpp-0.3.0.0/src/Hpp/Streamer.hs:245:{-# RULES "hpp: mapping ~> filtering"
./hpp-0.3.0.0/src/Hpp/Streamer.hs:324:{-# RULES "hpp: chunkMap/chunkMap"
./hpp-0.3.0.0/src/Hpp/Streamer.hs:332:{-# RULES "hpp: chunkConmap/chunkConmap"
./hpp-0.3.0.0/src/Hpp/Streamer.hs:351:{-# RULES
./hsndfile-0.1.1/C2HS.hs:197:{-# RULES 
./hsndfile-0.2.0/C2HS.hs:197:{-# RULES 
./hsndfile-0.3.2/C2HS.hs:197:{-# RULES 
./hsndfile-0.3.3/C2HS.hs:197:{-# RULES 
./hsndfile-0.4.0/C2HS.hs:197:{-# RULES 
./hsndfile-0.5.0/C2HS.hs:197:{-# RULES 
./html-1.0/Text/Html.hs:459:rules               =   strAttr "RULES"
./html-1.0/Text/Html.hs:608:      "RULES",
./html-1.0.1.1/Text/Html.hs:459:rules               =   strAttr "RULES"
./html-1.0.1.1/Text/Html.hs:608:      "RULES",
./html-1.0.1.2/Text/Html.hs:459:rules               =   strAttr "RULES"
./html-1.0.1.2/Text/Html.hs:608:      "RULES",
./hwsl2-0.3.1.0/src/Data/Hash/SL2.hs:83:{-# RULES "hash/concat" forall h s . concat h (hash s) = append h s #-}
./hwsl2-0.3.1.0/src/Data/Hash/SL2.hs:89:{-# RULES "concat/hash" forall s h . concat (hash s) h = prepend s h #-}
./hwsl2-0.3.1.0/src/Data/Hash/SL2.hs:95:{-# RULES "foldl/append" forall h ss . foldl append h ss = foldAppend h ss #-}
./hwsl2-0.3.1.0/src/Data/Hash/SL2.hs:96:{-# RULES "foldl'/append" forall h ss . foldl' append h ss = foldAppend h ss #-}
./hwsl2-0.3.1.0/src/Data/Hash/SL2.hs:102:{-# RULES "foldr/prepend" forall ss h . foldr prepend h ss = foldPrepend ss h #-}
./hwsl2-0.3.1.0/src/Data/Hash/SL2.hs:103:{-# RULES "foldr'/prepend" forall ss h . foldr' prepend h ss = foldPrepend ss h #-}
./hwsl2-0.3.1.1/src/Data/Hash/SL2.hs:83:{-# RULES "hash/concat" forall h s . concat h (hash s) = append h s #-}
./hwsl2-0.3.1.1/src/Data/Hash/SL2.hs:89:{-# RULES "concat/hash" forall s h . concat (hash s) h = prepend s h #-}
./hwsl2-0.3.1.1/src/Data/Hash/SL2.hs:95:{-# RULES "foldl/append" forall h ss . foldl append h ss = foldAppend h ss #-}
./hwsl2-0.3.1.1/src/Data/Hash/SL2.hs:96:{-# RULES "foldl'/append" forall h ss . foldl' append h ss = foldAppend h ss #-}
./hwsl2-0.3.1.1/src/Data/Hash/SL2.hs:102:{-# RULES "foldr/prepend" forall ss h . foldr prepend h ss = foldPrepend ss h #-}
./hwsl2-0.3.1.1/src/Data/Hash/SL2.hs:103:{-# RULES "foldr'/prepend" forall ss h . foldr' prepend h ss = foldPrepend ss h #-}
./hwsl2-0.3.2.0/src/Data/Hash/SL2.hs:83:{-# RULES "hash/concat" forall h s . concat h (hash s) = append h s #-}
./hwsl2-0.3.2.0/src/Data/Hash/SL2.hs:89:{-# RULES "concat/hash" forall s h . concat (hash s) h = prepend s h #-}
./hwsl2-0.3.2.0/src/Data/Hash/SL2.hs:95:{-# RULES "foldl/append" forall h ss . foldl append h ss = foldAppend h ss #-}
./hwsl2-0.3.2.0/src/Data/Hash/SL2.hs:96:{-# RULES "foldl'/append" forall h ss . foldl' append h ss = foldAppend h ss #-}
./hwsl2-0.3.2.0/src/Data/Hash/SL2.hs:102:{-# RULES "foldr/prepend" forall ss h . foldr prepend h ss = foldPrepend ss h #-}
./hwsl2-0.3.2.0/src/Data/Hash/SL2.hs:103:{-# RULES "foldr'/prepend" forall ss h . foldr' prepend h ss = foldPrepend ss h #-}
./hwsl2-0.4.0.0/src/Data/Hash/SL2.hs:81:{-# RULES "hash/concat" forall h s . concat h (hash s) = append h s #-}
./hwsl2-0.4.0.0/src/Data/Hash/SL2.hs:87:{-# RULES "concat/hash" forall s h . concat (hash s) h = prepend s h #-}
./hwsl2-0.4.0.0/src/Data/Hash/SL2.hs:93:{-# RULES "foldl/append" forall h ss . foldl append h ss = foldAppend h ss #-}
./hwsl2-0.4.0.0/src/Data/Hash/SL2.hs:94:{-# RULES "foldl'/append" forall h ss . foldl' append h ss = foldAppend h ss #-}
./hwsl2-0.4.0.0/src/Data/Hash/SL2.hs:100:{-# RULES "foldr/prepend" forall ss h . foldr prepend h ss = foldPrepend ss h #-}
./hwsl2-0.4.0.0/src/Data/Hash/SL2.hs:101:{-# RULES "foldr'/prepend" forall ss h . foldr' prepend h ss = foldPrepend ss h #-}
./hybrid-vectors-0.1/src/Data/Vector/Mixed/Internal.hs:79:{-# RULES
./hybrid-vectors-0.1/src/Data/Vector/Mixed/Internal.hs:154:{-# RULES
./hybrid-vectors-0.1.2/src/Data/Vector/Mixed/Internal.hs:85:{-# RULES
./hybrid-vectors-0.1.2/src/Data/Vector/Mixed/Internal.hs:160:{-# RULES
./hybrid-vectors-0.1.2.1/src/Data/Vector/Mixed/Internal.hs:85:{-# RULES
./hybrid-vectors-0.1.2.1/src/Data/Vector/Mixed/Internal.hs:160:{-# RULES
./hyena-0.1/Hyena/Http.hs:252:-- level to have RULES fire correctly.
./hyena-0.1.0.1/Hyena/Http.hs:275:-- level to have RULES fire correctly.
./IfElse-0.85/Control/Monad/IfElse.hs:159:{-# RULES "maybeMP/id" maybeMP = id #-}
./INblobs-0.1.1/src/Functional/UI.hs:179:			    , style :~ (wxLC_EDIT_LABELS .+. wxLC_VRULES .+.)
./INblobs-0.1.1/src/INChecks.hs:176:data ErrorLoc = PALETTE | NET | RULES | RULE RuleName (Maybe Side) deriving (Eq, Ord)
./INblobs-0.1.1/src/INChecks.hs:181:	show RULES = "RULES"
./INblobs-0.1.1/src/INChecks.hs:470:	(\lErrors -> insertIf RULES lErrors Map.empty)
./indexed-0.1/Data/Functor/Indexed.hs:31:{-# RULES
./interpolate-0.0.1/src/Data/String/Interpolate/Util.hs:11:{-# RULES "toString/String" toString = id #-}
./interpolate-0.0.1/src/Data/String/Interpolate/Util.hs:12:{-# RULES "toString/Int" toString = show :: Int -> String #-}
./interpolate-0.0.1/src/Data/String/Interpolate/Util.hs:13:{-# RULES "toString/Integer" toString = show :: Integer -> String #-}
./interpolate-0.0.1/src/Data/String/Interpolate/Util.hs:14:{-# RULES "toString/Float" toString = show :: Float -> String #-}
./interpolate-0.0.1/src/Data/String/Interpolate/Util.hs:15:{-# RULES "toString/Double" toString = show :: Double -> String #-}
./interpolate-0.0.2/src/Data/String/Interpolate/Util.hs:11:{-# RULES "toString/String" toString = id #-}
./interpolate-0.0.2/src/Data/String/Interpolate/Util.hs:12:{-# RULES "toString/Int" toString = show :: Int -> String #-}
./interpolate-0.0.2/src/Data/String/Interpolate/Util.hs:13:{-# RULES "toString/Integer" toString = show :: Integer -> String #-}
./interpolate-0.0.2/src/Data/String/Interpolate/Util.hs:14:{-# RULES "toString/Float" toString = show :: Float -> String #-}
./interpolate-0.0.2/src/Data/String/Interpolate/Util.hs:15:{-# RULES "toString/Double" toString = show :: Double -> String #-}
./interpolate-0.0.3/src/Data/String/Interpolate/Util.hs:11:{-# RULES "toString/String" toString = id #-}
./interpolate-0.0.3/src/Data/String/Interpolate/Util.hs:12:{-# RULES "toString/Int" toString = show :: Int -> String #-}
./interpolate-0.0.3/src/Data/String/Interpolate/Util.hs:13:{-# RULES "toString/Integer" toString = show :: Integer -> String #-}
./interpolate-0.0.3/src/Data/String/Interpolate/Util.hs:14:{-# RULES "toString/Float" toString = show :: Float -> String #-}
./interpolate-0.0.3/src/Data/String/Interpolate/Util.hs:15:{-# RULES "toString/Double" toString = show :: Double -> String #-}
./interpolate-0.0.4/src/Data/String/Interpolate/Util.hs:12:{-# RULES "toString/String" toString = id #-}
./interpolate-0.0.4/src/Data/String/Interpolate/Util.hs:13:{-# RULES "toString/Int" toString = show :: Int -> String #-}
./interpolate-0.0.4/src/Data/String/Interpolate/Util.hs:14:{-# RULES "toString/Integer" toString = show :: Integer -> String #-}
./interpolate-0.0.4/src/Data/String/Interpolate/Util.hs:15:{-# RULES "toString/Float" toString = show :: Float -> String #-}
./interpolate-0.0.4/src/Data/String/Interpolate/Util.hs:16:{-# RULES "toString/Double" toString = show :: Double -> String #-}
./interpolate-0.1.0/src/Data/String/Interpolate/Internal/Util.hs:12:{-# RULES "toString/String" toString = id #-}
./interpolate-0.1.0/src/Data/String/Interpolate/Internal/Util.hs:13:{-# RULES "toString/Int" toString = show :: Int -> String #-}
./interpolate-0.1.0/src/Data/String/Interpolate/Internal/Util.hs:14:{-# RULES "toString/Integer" toString = show :: Integer -> String #-}
./interpolate-0.1.0/src/Data/String/Interpolate/Internal/Util.hs:15:{-# RULES "toString/Float" toString = show :: Float -> String #-}
./interpolate-0.1.0/src/Data/String/Interpolate/Internal/Util.hs:16:{-# RULES "toString/Double" toString = show :: Double -> String #-}
./interpolatedstring-perl6-0.9.0/src/Text/InterpolatedString/Perl6.hs:191:-- todo: this should really be rewritten into RULES pragmas, but so far
./interpolatedstring-perl6-1.0.0/src/Text/InterpolatedString/Perl6.hs:191:-- todo: this should really be rewritten into RULES pragmas, but so far
./intset-0.1.0.0/src/Data/IntervalSet/Internal.hs:1127:{-# RULES
./intset-0.1.0.0/src/Data/IntervalSet/Internal.hs:1138:{-# RULES
./intset-0.1.0.0/src/Data/IntervalSet/Internal.hs:1188:{-# RULES
./intset-0.1.0.1/src/Data/IntervalSet/Internal.hs:1127:{-# RULES
./intset-0.1.0.1/src/Data/IntervalSet/Internal.hs:1138:{-# RULES
./intset-0.1.0.1/src/Data/IntervalSet/Internal.hs:1188:{-# RULES
./intset-0.1.0.2/src/Data/IntervalSet/Internal.hs:1127:{-# RULES
./intset-0.1.0.2/src/Data/IntervalSet/Internal.hs:1138:{-# RULES
./intset-0.1.0.2/src/Data/IntervalSet/Internal.hs:1188:{-# RULES
./intset-0.1.0.3/src/Data/IntervalSet/Internal.hs:1127:{-# RULES
./intset-0.1.0.3/src/Data/IntervalSet/Internal.hs:1138:{-# RULES
./intset-0.1.0.3/src/Data/IntervalSet/Internal.hs:1188:{-# RULES
./intset-0.1.1.0/src/Data/IntervalSet/Internal.hs:1125:{-# RULES
./intset-0.1.1.0/src/Data/IntervalSet/Internal.hs:1136:{-# RULES
./intset-0.1.1.0/src/Data/IntervalSet/Internal.hs:1186:{-# RULES
./iteratee-0.1.0/src/Data/Iteratee/Base/StreamChunk.hs:71:{-# RULES "listmap/map" listmap = map #-}
./iteratee-0.1.0/src/Data/Iteratee/WrappedByteString.hs:61:{-# RULES "bwmap/map" forall s (f :: Word8 -> Word8). bwmap f s = bwmap' f s #-}
./iteratee-0.1.0/src/Data/Iteratee/WrappedByteString.hs:96:{-# RULES "bcmap/map" forall s (f :: Char -> Char). bcmap f s = bcmap' f s #-}
./iteratee-0.2/src/Data/Iteratee/Base/StreamChunk.hs:76:{-# RULES "listmap/map" listmap = map #-}
./iteratee-0.2/src/Data/Iteratee/WrappedByteString.hs:73:{-# RULES "bwmap/map" forall s (f :: Word8 -> Word8). bwmap f s = bwmap' f s #-}
./iteratee-0.2/src/Data/Iteratee/WrappedByteString.hs:116:{-# RULES "bcmap/map" forall s (f :: Char -> Char). bcmap f s = bcmap' f s #-}
./iteratee-0.2.1/src/Data/Iteratee/Base/StreamChunk.hs:76:{-# RULES "listmap/map" listmap = map #-}
./iteratee-0.2.1/src/Data/Iteratee/WrappedByteString.hs:73:{-# RULES "bwmap/map" forall s (f :: Word8 -> Word8). bwmap f s = bwmap' f s #-}
./iteratee-0.2.1/src/Data/Iteratee/WrappedByteString.hs:116:{-# RULES "bcmap/map" forall s (f :: Char -> Char). bcmap f s = bcmap' f s #-}
./iteratee-0.2.3/src/Data/Iteratee/Base/StreamChunk.hs:76:{-# RULES "listmap/map" listmap = map #-}
./iteratee-0.2.3/src/Data/Iteratee/WrappedByteString.hs:73:{-# RULES "bwmap/map" forall s (f :: Word8 -> Word8). bwmap f s = bwmap' f s #-}
./iteratee-0.2.3/src/Data/Iteratee/WrappedByteString.hs:116:{-# RULES "bcmap/map" forall s (f :: Char -> Char). bcmap f s = bcmap' f s #-}
./iteratee-0.2.4/src/Data/Iteratee/Base/StreamChunk.hs:76:{-# RULES "listmap/map" listmap = map #-}
./iteratee-0.2.4/src/Data/Iteratee/WrappedByteString.hs:74:{-# RULES "bwmap/map" forall s (f :: Word8 -> Word8). bwmap f s = bwmap' f s #-}
./iteratee-0.2.4/src/Data/Iteratee/WrappedByteString.hs:117:{-# RULES "bcmap/map" forall s (f :: Char -> Char). bcmap f s = bcmap' f s #-}
./iteratee-0.8.8.0/src/Data/Iteratee/Binary.hs:166:{-# RULES "iteratee: binary bytestring spec." endianRead4 = endianRead4BS #-}
./iteratee-0.8.8.0/src/Data/Iteratee/Binary.hs:167:{-# RULES "iteratee: binary bytestring spec." endianRead8 = endianRead8BS #-}
./jack-bindings-0.1/src/C2HS.hs:202:{-# RULES 
./jack-bindings-0.1.1/src/C2HS.hs:202:{-# RULES
./jalla-0.1.0/Numeric/Jalla/Matrix.hs:426:{-# RULES "gmatrixAssocs/matrixAssocs" forall (m :: (BlasOps e, CMatrix mat e) => mat e). gmatrixAssocs m = matrixAssocs RowMajor m #-}
./jalla-0.1.0/Numeric/Jalla/Matrix.hs:635:{-# RULES "row/rowRef" row = rowRef #-}
./jalla-0.1.0/Numeric/Jalla/Matrix.hs:636:{-# RULES "colum/columnRef" column = columnRef #-}
./jalla-0.1.0/Numeric/Jalla/Matrix.hs:650:{-# RULES "rows/rowsRef" rows = rowsRef #-}
./jalla-0.1.0/Numeric/Jalla/Matrix.hs:651:{-# RULES "colums/columnsRef" columns = columnsRef #-}
./jalla-0.1.0.1/Numeric/Jalla/Matrix.hs:426:{-# RULES "gmatrixAssocs/matrixAssocs" forall (m :: (BlasOps e, CMatrix mat e) => mat e). gmatrixAssocs m = matrixAssocs RowMajor m #-}
./jalla-0.1.0.1/Numeric/Jalla/Matrix.hs:635:{-# RULES "row/rowRef" row = rowRef #-}
./jalla-0.1.0.1/Numeric/Jalla/Matrix.hs:636:{-# RULES "colum/columnRef" column = columnRef #-}
./jalla-0.1.0.1/Numeric/Jalla/Matrix.hs:650:{-# RULES "rows/rowsRef" rows = rowsRef #-}
./jalla-0.1.0.1/Numeric/Jalla/Matrix.hs:651:{-# RULES "colums/columnsRef" columns = columnsRef #-}
./jalla-0.2/Numeric/Jalla/Matrix.hs:428:{-# RULES "gmatrixAssocs/matrixAssocs" forall (m :: (BlasOps e, CMatrix mat e) => mat e). gmatrixAssocs m = matrixAssocs RowMajor m #-}
./jalla-0.2/Numeric/Jalla/Matrix.hs:638:{-# RULES "row/rowRef" row = rowRef #-}
./jalla-0.2/Numeric/Jalla/Matrix.hs:639:{-# RULES "colum/columnRef" column = columnRef #-}
./jalla-0.2/Numeric/Jalla/Matrix.hs:653:{-# RULES "rows/rowsRef" rows = rowsRef #-}
./jalla-0.2/Numeric/Jalla/Matrix.hs:654:{-# RULES "colums/columnsRef" columns = columnsRef #-}
./jalla-0.2.0.1/Numeric/Jalla/Matrix.hs:428:{-# RULES "gmatrixAssocs/matrixAssocs" forall (m :: (BlasOps e, CMatrix mat e) => mat e). gmatrixAssocs m = matrixAssocs RowMajor m #-}
./jalla-0.2.0.1/Numeric/Jalla/Matrix.hs:638:{-# RULES "row/rowRef" row = rowRef #-}
./jalla-0.2.0.1/Numeric/Jalla/Matrix.hs:639:{-# RULES "colum/columnRef" column = columnRef #-}
./jalla-0.2.0.1/Numeric/Jalla/Matrix.hs:653:{-# RULES "rows/rowsRef" rows = rowsRef #-}
./jalla-0.2.0.1/Numeric/Jalla/Matrix.hs:654:{-# RULES "colums/columnsRef" columns = columnsRef #-}
./JuicyPixels-3.0/Codec/Picture/Types.hs:510:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1/Codec/Picture/Types.hs:673:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.1/Codec/Picture/Types.hs:715:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.1.1/Codec/Picture/Types.hs:715:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.2/Codec/Picture/Types.hs:719:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.3/src/Codec/Picture/Types.hs:754:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.3.1/src/Codec/Picture/Types.hs:754:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.3.2/src/Codec/Picture/Types.hs:754:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.3.3/src/Codec/Picture/Types.hs:754:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.4/src/Codec/Picture/Types.hs:764:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.4.1/src/Codec/Picture/Types.hs:764:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.5/src/Codec/Picture/Types.hs:795:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.5.1/src/Codec/Picture/Types.hs:799:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./JuicyPixels-3.1.5.2/src/Codec/Picture/Types.hs:799:{-# RULES "pixelMap fusion" forall g f. pixelMap g . pixelMap f = pixelMap (g . f) #-}
./kan-extensions-0.1/Data/Functor/Yoneda.hs:74:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./kan-extensions-0.1/Data/Functor/Yoneda.hs:75:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./kan-extensions-0.1/Data/Functor/Yoneda.hs:153:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-0.1/Data/Functor/Yoneda.hs:158:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-0.1/Data/Functor/Yoneda.hs:163:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-0.1/Data/Functor/Yoneda.hs:168:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-0.1.1/Data/Functor/Yoneda.hs:74:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./kan-extensions-0.1.1/Data/Functor/Yoneda.hs:75:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./kan-extensions-0.1.1/Data/Functor/Yoneda.hs:153:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-0.1.1/Data/Functor/Yoneda.hs:158:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-0.1.1/Data/Functor/Yoneda.hs:163:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-0.1.1/Data/Functor/Yoneda.hs:168:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-0.1.2/Data/Functor/Yoneda.hs:74:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./kan-extensions-0.1.2/Data/Functor/Yoneda.hs:75:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./kan-extensions-0.1.2/Data/Functor/Yoneda.hs:153:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-0.1.2/Data/Functor/Yoneda.hs:158:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-0.1.2/Data/Functor/Yoneda.hs:163:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-0.1.2/Data/Functor/Yoneda.hs:168:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-0.2/Data/Functor/Yoneda.hs:74:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./kan-extensions-0.2/Data/Functor/Yoneda.hs:75:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./kan-extensions-0.2/Data/Functor/Yoneda.hs:153:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-0.2/Data/Functor/Yoneda.hs:158:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-0.2/Data/Functor/Yoneda.hs:163:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-0.2/Data/Functor/Yoneda.hs:168:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-0.2.1/Data/Functor/Yoneda.hs:74:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./kan-extensions-0.2.1/Data/Functor/Yoneda.hs:75:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./kan-extensions-0.2.1/Data/Functor/Yoneda.hs:153:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-0.2.1/Data/Functor/Yoneda.hs:158:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-0.2.1/Data/Functor/Yoneda.hs:163:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-0.2.1/Data/Functor/Yoneda.hs:168:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-0.2.2/Data/Functor/Yoneda.hs:74:{-# RULES "lower/lift=id" liftYonedaT . lowerYonedaT = id #-}
./kan-extensions-0.2.2/Data/Functor/Yoneda.hs:75:{-# RULES "lift/lower=id" lowerYonedaT . liftYonedaT = id #-}
./kan-extensions-0.2.2/Data/Functor/Yoneda.hs:153:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-0.2.2/Data/Functor/Yoneda.hs:158:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-0.2.2/Data/Functor/Yoneda.hs:163:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-0.2.2/Data/Functor/Yoneda.hs:168:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-0.5.0/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-0.5.0/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-0.5.0/Data/Functor/Yoneda.hs:130:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-0.5.0/Data/Functor/Yoneda.hs:135:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-0.5.0/Data/Functor/Yoneda.hs:140:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-0.5.0/Data/Functor/Yoneda.hs:145:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-0.5.1/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-0.5.1/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-0.5.1/Data/Functor/Yoneda.hs:130:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-0.5.1/Data/Functor/Yoneda.hs:135:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-0.5.1/Data/Functor/Yoneda.hs:140:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-0.5.1/Data/Functor/Yoneda.hs:145:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-1.8.0/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-1.8.0/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-1.8.0/Data/Functor/Yoneda.hs:130:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-1.8.0/Data/Functor/Yoneda.hs:135:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-1.8.0/Data/Functor/Yoneda.hs:140:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-1.8.0/Data/Functor/Yoneda.hs:145:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-1.9.0/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-1.9.0/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-1.9.0/Data/Functor/Yoneda.hs:130:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-1.9.0/Data/Functor/Yoneda.hs:135:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-1.9.0/Data/Functor/Yoneda.hs:140:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-1.9.0/Data/Functor/Yoneda.hs:145:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.0.0/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.0.0/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.0.0/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.0.0/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.0.0/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.0.0/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.0.0.1/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.0.0.1/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.0.0.1/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.0.0.1/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.0.0.1/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.0.0.1/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.0.0.2/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.0.0.2/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.0.0.2/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.0.0.2/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.0.0.2/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.0.0.2/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.0.0.3/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.0.0.3/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.0.0.3/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.0.0.3/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.0.0.3/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.0.0.3/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.0.1/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.0.1/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.0.1/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.0.1/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.0.1/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.0.1/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.0.2/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.0.2/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.0.2/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.0.2/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.0.2/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.0.2/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.1/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.1/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.1/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.1/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.1/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.1/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.1.2/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.1.2/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.1.2/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.1.2/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.1.2/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.1.2/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.2/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.2/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.2/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.2/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.2/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.2/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.3/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.3/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.3/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.3/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.3/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.3/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.4/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.4/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.4/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.4/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.4/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.4/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.4.0.1/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.4.0.1/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.4.0.1/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.4.0.1/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.4.0.1/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.4.0.1/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.5/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.5/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.5/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.5/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.5/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.5/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.6/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.6/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.6/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.6/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.6/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.6/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-2.7/Data/Functor/Yoneda.hs:50:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-2.7/Data/Functor/Yoneda.hs:51:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-2.7/Data/Functor/Yoneda.hs:135:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-2.7/Data/Functor/Yoneda.hs:140:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-2.7/Data/Functor/Yoneda.hs:145:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-2.7/Data/Functor/Yoneda.hs:150:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.0/src/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.0/src/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.0/src/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.0/src/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.0/src/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.0/src/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.1/src/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.1/src/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.1/src/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.1/src/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.1/src/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.1/src/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.1.0.1/src/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.1.0.1/src/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.1.0.1/src/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.1.0.1/src/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.1.0.1/src/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.1.0.1/src/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.1.0.2/src/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.1.0.2/src/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.1.0.2/src/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.1.0.2/src/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.1.0.2/src/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.1.0.2/src/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.1.1/src/Data/Functor/Yoneda.hs:51:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.1.1/src/Data/Functor/Yoneda.hs:52:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.1.1/src/Data/Functor/Yoneda.hs:136:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.1.1/src/Data/Functor/Yoneda.hs:141:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.1.1/src/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.1.1/src/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.1.2/src/Data/Functor/Yoneda.hs:54:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.1.2/src/Data/Functor/Yoneda.hs:55:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.1.2/src/Data/Functor/Yoneda.hs:139:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.1.2/src/Data/Functor/Yoneda.hs:144:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.1.2/src/Data/Functor/Yoneda.hs:149:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.1.2/src/Data/Functor/Yoneda.hs:154:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.4/src/Data/Functor/Yoneda.hs:54:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.4/src/Data/Functor/Yoneda.hs:55:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.4/src/Data/Functor/Yoneda.hs:139:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.4/src/Data/Functor/Yoneda.hs:144:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.4/src/Data/Functor/Yoneda.hs:149:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.4/src/Data/Functor/Yoneda.hs:154:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.5/src/Data/Functor/Yoneda.hs:61:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.5/src/Data/Functor/Yoneda.hs:62:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.5/src/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.5/src/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.5/src/Data/Functor/Yoneda.hs:156:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.5/src/Data/Functor/Yoneda.hs:161:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.5.1/src/Data/Functor/Yoneda.hs:61:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.5.1/src/Data/Functor/Yoneda.hs:62:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.5.1/src/Data/Functor/Yoneda.hs:146:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.5.1/src/Data/Functor/Yoneda.hs:151:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.5.1/src/Data/Functor/Yoneda.hs:156:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.5.1/src/Data/Functor/Yoneda.hs:161:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.6/src/Data/Functor/Yoneda.hs:81:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.6/src/Data/Functor/Yoneda.hs:82:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.6/src/Data/Functor/Yoneda.hs:166:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.6/src/Data/Functor/Yoneda.hs:171:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.6/src/Data/Functor/Yoneda.hs:176:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.6/src/Data/Functor/Yoneda.hs:181:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda/Reduction.hs:76:{-# RULES "yonedaToLan/lanToYoneda=id" yonedaToLan . lanToYoneda = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda/Reduction.hs:77:{-# RULES "lanToYoneda/yonedaToLan=id" lanToYoneda . yonedaToLan = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda/Reduction.hs:91:{-# RULES "yonedaToLift/liftToYoneda=id" yonedaToLift . liftToYoneda = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda/Reduction.hs:92:{-# RULES "liftToYoneda/yonedaToLift=id" liftToYoneda . yonedaToLift = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:87:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:88:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:102:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:103:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:119:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:120:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:204:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:209:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:214:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.6.2/src/Data/Functor/Yoneda.hs:219:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-3.7/src/Data/Functor/Coyoneda.hs:74:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-3.7/src/Data/Functor/Coyoneda.hs:75:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-3.7/src/Data/Functor/Coyoneda.hs:89:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-3.7/src/Data/Functor/Coyoneda.hs:90:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:106:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:107:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:121:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:122:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:138:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:139:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:223:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:228:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:233:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-3.7/src/Data/Functor/Yoneda.hs:238:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.0/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.0/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.0/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.0/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:105:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:106:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:120:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:121:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:137:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:138:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:195:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:200:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:205:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.0/src/Data/Functor/Yoneda.hs:210:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.0.1/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:105:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:106:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:120:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:121:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:137:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:138:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:195:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:200:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:205:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.0.1/src/Data/Functor/Yoneda.hs:210:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.0.2/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:105:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:106:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:120:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:121:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:137:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:138:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:195:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:200:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:205:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.0.2/src/Data/Functor/Yoneda.hs:210:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.0.3/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:105:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:106:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:120:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:121:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:137:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:138:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:195:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:200:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:205:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.0.3/src/Data/Functor/Yoneda.hs:210:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.1/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.1/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.1/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.1/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:92:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:93:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:107:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:108:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:124:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:125:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:182:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:187:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:192:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.1/src/Data/Functor/Yoneda.hs:197:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:92:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:93:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:107:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:108:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:124:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:125:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:182:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:187:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:192:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.1.0.1/src/Data/Functor/Yoneda.hs:197:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.1.1/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:92:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:93:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:107:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:108:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:124:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:125:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:182:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:187:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:192:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.1.1/src/Data/Functor/Yoneda.hs:197:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.2/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.2/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.2/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.2/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:92:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:93:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:107:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:108:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:124:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:125:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:182:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:187:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:192:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.2/src/Data/Functor/Yoneda.hs:197:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.2.1/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:92:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:93:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:107:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:108:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:124:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:125:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:182:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:187:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:192:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.2.1/src/Data/Functor/Yoneda.hs:197:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.2.2/src/Data/Functor/Coyoneda.hs:73:{-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Coyoneda.hs:74:{-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Coyoneda.hs:88:{-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Coyoneda.hs:89:{-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:92:{-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:93:{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:107:{-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:108:{-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:124:{-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:125:{-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:182:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:187:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:192:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.2.2/src/Data/Functor/Yoneda.hs:197:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-4.2.3/src/Data/Functor/Coyoneda.hs:73:-- {-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Coyoneda.hs:74:-- {-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Coyoneda.hs:88:-- {-# RULES "coyonedaToLift/liftToCoyoneda=id" coyonedaToLift . liftToCoyoneda = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Coyoneda.hs:89:-- {-# RULES "liftToCoyoneda/coyonedaToLift=id" liftToCoyoneda . coyonedaToLift = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:92:-- {-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:93:--{-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:107:-- {-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:108:-- {-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:124:-- {-# RULES "yonedaToRift/riftToYoneda=id" yonedaToRift . riftToYoneda = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:125:-- {-# RULES "riftToYoneda/yonedaToRift=id" riftToYoneda . yonedaToRift = id #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:182:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:187:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:192:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-4.2.3/src/Data/Functor/Yoneda.hs:197:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-5/src/Data/Functor/Coyoneda.hs:79:-- {-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-5/src/Data/Functor/Coyoneda.hs:80:-- {-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-5/src/Data/Functor/Yoneda.hs:89:-- {-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-5/src/Data/Functor/Yoneda.hs:90:-- {-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-5/src/Data/Functor/Yoneda.hs:104:-- {-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-5/src/Data/Functor/Yoneda.hs:105:-- {-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-5/src/Data/Functor/Yoneda.hs:162:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-5/src/Data/Functor/Yoneda.hs:167:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-5/src/Data/Functor/Yoneda.hs:172:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-5/src/Data/Functor/Yoneda.hs:177:-- {-# RULES "min/minM" min = minM #-}
./kan-extensions-5.0.1/src/Data/Functor/Coyoneda.hs:79:-- {-# RULES "coyonedaToLan/lanToCoyoneda=id" coyonedaToLan . lanToCoyoneda = id #-}
./kan-extensions-5.0.1/src/Data/Functor/Coyoneda.hs:80:-- {-# RULES "lanToCoyoneda/coyonedaToLan=id" lanToCoyoneda . coyonedaToLan = id #-}
./kan-extensions-5.0.1/src/Data/Functor/Yoneda.hs:89:-- {-# RULES "lower/lift=id" liftYoneda . lowerYoneda = id #-}
./kan-extensions-5.0.1/src/Data/Functor/Yoneda.hs:90:-- {-# RULES "lift/lower=id" lowerYoneda . liftYoneda = id #-}
./kan-extensions-5.0.1/src/Data/Functor/Yoneda.hs:104:-- {-# RULES "yonedaToRan/ranToYoneda=id" yonedaToRan . ranToYoneda = id #-}
./kan-extensions-5.0.1/src/Data/Functor/Yoneda.hs:105:-- {-# RULES "ranToYoneda/yonedaToRan=id" ranToYoneda . yonedaToRan = id #-}
./kan-extensions-5.0.1/src/Data/Functor/Yoneda.hs:162:-- {-# RULES "max/maxF" max = maxF #-}
./kan-extensions-5.0.1/src/Data/Functor/Yoneda.hs:167:-- {-# RULES "min/minF" min = minF #-}
./kan-extensions-5.0.1/src/Data/Functor/Yoneda.hs:172:-- {-# RULES "max/maxM" max = maxM #-}
./kan-extensions-5.0.1/src/Data/Functor/Yoneda.hs:177:-- {-# RULES "min/minM" min = minM #-}
./lens-4.11.1/src/Control/Lens/Indexed.hs:666:{-# RULES
./lens-4.11.1/src/Control/Lens/Indexed.hs:683:{-# RULES
./lens-4.11.1/src/Control/Lens/Indexed.hs:696:{-# RULES
./lens-4.11.1/src/Control/Lens/Internal/ByteString.hs:93:{-# RULES
./lens-4.11.1/src/Control/Lens/Internal/ByteString.hs:126:{-# RULES
./lens-4.11.1/src/Control/Lens/Internal/ByteString.hs:158:{-# RULES
./lens-4.11.1/src/Control/Lens/Internal/ByteString.hs:194:{-# RULES
./lens-4.11.1/src/Control/Lens/Traversal.hs:1025:{-# RULES
./lens-4.11.1/src/Data/Text/Lazy/Lens.hs:115:{-# RULES
./lens-4.11.1/src/Data/Text/Strict/Lens.hs:111:{-# RULES
./lens-4.11.1/src/Data/Vector/Generic/Lens.hs:139:{-# RULES
./lens-4.12/src/Control/Lens/Indexed.hs:670:{-# RULES
./lens-4.12/src/Control/Lens/Indexed.hs:687:{-# RULES
./lens-4.12/src/Control/Lens/Indexed.hs:700:{-# RULES
./lens-4.12/src/Control/Lens/Internal/ByteString.hs:93:{-# RULES
./lens-4.12/src/Control/Lens/Internal/ByteString.hs:126:{-# RULES
./lens-4.12/src/Control/Lens/Internal/ByteString.hs:158:{-# RULES
./lens-4.12/src/Control/Lens/Internal/ByteString.hs:194:{-# RULES
./lens-4.12/src/Control/Lens/Traversal.hs:1025:{-# RULES
./lens-4.12/src/Data/Text/Lazy/Lens.hs:115:{-# RULES
./lens-4.12/src/Data/Text/Strict/Lens.hs:111:{-# RULES
./lens-4.12/src/Data/Vector/Generic/Lens.hs:139:{-# RULES
./lens-4.12.1/src/Control/Lens/Indexed.hs:670:{-# RULES
./lens-4.12.1/src/Control/Lens/Indexed.hs:687:{-# RULES
./lens-4.12.1/src/Control/Lens/Indexed.hs:700:{-# RULES
./lens-4.12.1/src/Control/Lens/Internal/ByteString.hs:93:{-# RULES
./lens-4.12.1/src/Control/Lens/Internal/ByteString.hs:126:{-# RULES
./lens-4.12.1/src/Control/Lens/Internal/ByteString.hs:158:{-# RULES
./lens-4.12.1/src/Control/Lens/Internal/ByteString.hs:194:{-# RULES
./lens-4.12.1/src/Control/Lens/Traversal.hs:1026:{-# RULES
./lens-4.12.1/src/Data/Text/Lazy/Lens.hs:115:{-# RULES
./lens-4.12.1/src/Data/Text/Strict/Lens.hs:111:{-# RULES
./lens-4.12.1/src/Data/Vector/Generic/Lens.hs:159:{-# RULES
./lens-4.12.2/src/Control/Lens/Indexed.hs:670:{-# RULES
./lens-4.12.2/src/Control/Lens/Indexed.hs:687:{-# RULES
./lens-4.12.2/src/Control/Lens/Indexed.hs:700:{-# RULES
./lens-4.12.2/src/Control/Lens/Internal/ByteString.hs:93:{-# RULES
./lens-4.12.2/src/Control/Lens/Internal/ByteString.hs:126:{-# RULES
./lens-4.12.2/src/Control/Lens/Internal/ByteString.hs:158:{-# RULES
./lens-4.12.2/src/Control/Lens/Internal/ByteString.hs:194:{-# RULES
./lens-4.12.2/src/Control/Lens/Traversal.hs:1026:{-# RULES
./lens-4.12.2/src/Data/Text/Lazy/Lens.hs:115:{-# RULES
./lens-4.12.2/src/Data/Text/Strict/Lens.hs:111:{-# RULES
./lens-4.12.2/src/Data/Vector/Generic/Lens.hs:159:{-# RULES
./lens-4.12.3/src/Control/Lens/Indexed.hs:670:{-# RULES
./lens-4.12.3/src/Control/Lens/Indexed.hs:687:{-# RULES
./lens-4.12.3/src/Control/Lens/Indexed.hs:700:{-# RULES
./lens-4.12.3/src/Control/Lens/Internal/ByteString.hs:93:{-# RULES
./lens-4.12.3/src/Control/Lens/Internal/ByteString.hs:126:{-# RULES
./lens-4.12.3/src/Control/Lens/Internal/ByteString.hs:158:{-# RULES
./lens-4.12.3/src/Control/Lens/Internal/ByteString.hs:194:{-# RULES
./lens-4.12.3/src/Control/Lens/Traversal.hs:1026:{-# RULES
./lens-4.12.3/src/Data/Text/Lazy/Lens.hs:115:{-# RULES
./lens-4.12.3/src/Data/Text/Strict/Lens.hs:111:{-# RULES
./lens-4.12.3/src/Data/Vector/Generic/Lens.hs:159:{-# RULES
./lens-4.13/src/Control/Lens/Indexed.hs:675:{-# RULES
./lens-4.13/src/Control/Lens/Indexed.hs:692:{-# RULES
./lens-4.13/src/Control/Lens/Indexed.hs:705:{-# RULES
./lens-4.13/src/Control/Lens/Internal/ByteString.hs:93:{-# RULES
./lens-4.13/src/Control/Lens/Internal/ByteString.hs:126:{-# RULES
./lens-4.13/src/Control/Lens/Internal/ByteString.hs:158:{-# RULES
./lens-4.13/src/Control/Lens/Internal/ByteString.hs:194:{-# RULES
./lens-4.13/src/Control/Lens/Traversal.hs:1034:{-# RULES
./lens-4.13/src/Data/Text/Lazy/Lens.hs:125:{-# RULES
./lens-4.13/src/Data/Text/Strict/Lens.hs:121:{-# RULES
./lens-4.13/src/Data/Vector/Generic/Lens.hs:159:{-# RULES
./lens-4.13.1/src/Control/Lens/Indexed.hs:675:{-# RULES
./lens-4.13.1/src/Control/Lens/Indexed.hs:692:{-# RULES
./lens-4.13.1/src/Control/Lens/Indexed.hs:705:{-# RULES
./lens-4.13.1/src/Control/Lens/Internal/ByteString.hs:93:{-# RULES
./lens-4.13.1/src/Control/Lens/Internal/ByteString.hs:126:{-# RULES
./lens-4.13.1/src/Control/Lens/Internal/ByteString.hs:158:{-# RULES
./lens-4.13.1/src/Control/Lens/Internal/ByteString.hs:194:{-# RULES
./lens-4.13.1/src/Control/Lens/Traversal.hs:1034:{-# RULES
./lens-4.13.1/src/Data/Text/Lazy/Lens.hs:125:{-# RULES
./lens-4.13.1/src/Data/Text/Strict/Lens.hs:121:{-# RULES
./lens-4.13.1/src/Data/Vector/Generic/Lens.hs:159:{-# RULES
./lens-4.13.2/src/Control/Lens/Indexed.hs:688:{-# RULES
./lens-4.13.2/src/Control/Lens/Indexed.hs:705:{-# RULES
./lens-4.13.2/src/Control/Lens/Indexed.hs:718:{-# RULES
./lens-4.13.2/src/Control/Lens/Internal/ByteString.hs:93:{-# RULES
./lens-4.13.2/src/Control/Lens/Internal/ByteString.hs:126:{-# RULES
./lens-4.13.2/src/Control/Lens/Internal/ByteString.hs:158:{-# RULES
./lens-4.13.2/src/Control/Lens/Internal/ByteString.hs:194:{-# RULES
./lens-4.13.2/src/Control/Lens/Traversal.hs:1034:{-# RULES
./lens-4.13.2/src/Data/Text/Lazy/Lens.hs:125:{-# RULES
./lens-4.13.2/src/Data/Text/Strict/Lens.hs:121:{-# RULES
./lens-4.13.2/src/Data/Vector/Generic/Lens.hs:159:{-# RULES
./leveldb-haskell-0.4.0/src/Data/Stream/Monadic.hs:178:{-# RULES
./leveldb-haskell-0.4.0/src/Data/Stream/Monadic.hs:338:{-# RULES
./leveldb-haskell-0.4.0/src/Data/Stream/Monadic.hs:354:{-# RULES
./leveldb-haskell-0.4.0/src/Data/Stream/Monadic.hs:507:{-# RULES
./leveldb-haskell-0.4.0/src/Data/Stream/Monadic.hs:518:{-# RULES
./leveldb-haskell-0.4.1/src/Data/Stream/Monadic.hs:178:{-# RULES
./leveldb-haskell-0.4.1/src/Data/Stream/Monadic.hs:338:{-# RULES
./leveldb-haskell-0.4.1/src/Data/Stream/Monadic.hs:354:{-# RULES
./leveldb-haskell-0.4.1/src/Data/Stream/Monadic.hs:507:{-# RULES
./leveldb-haskell-0.4.1/src/Data/Stream/Monadic.hs:518:{-# RULES
./leveldb-haskell-0.4.1.1/src/Data/Stream/Monadic.hs:178:{-# RULES
./leveldb-haskell-0.4.1.1/src/Data/Stream/Monadic.hs:338:{-# RULES
./leveldb-haskell-0.4.1.1/src/Data/Stream/Monadic.hs:354:{-# RULES
./leveldb-haskell-0.4.1.1/src/Data/Stream/Monadic.hs:507:{-# RULES
./leveldb-haskell-0.4.1.1/src/Data/Stream/Monadic.hs:518:{-# RULES
./leveldb-haskell-0.4.2/src/Data/Stream/Monadic.hs:178:{-# RULES
./leveldb-haskell-0.4.2/src/Data/Stream/Monadic.hs:338:{-# RULES
./leveldb-haskell-0.4.2/src/Data/Stream/Monadic.hs:354:{-# RULES
./leveldb-haskell-0.4.2/src/Data/Stream/Monadic.hs:507:{-# RULES
./leveldb-haskell-0.4.2/src/Data/Stream/Monadic.hs:518:{-# RULES
./leveldb-haskell-0.5/src/Data/Stream/Monadic.hs:178:{-# RULES
./leveldb-haskell-0.5/src/Data/Stream/Monadic.hs:338:{-# RULES
./leveldb-haskell-0.5/src/Data/Stream/Monadic.hs:354:{-# RULES
./leveldb-haskell-0.5/src/Data/Stream/Monadic.hs:507:{-# RULES
./leveldb-haskell-0.5/src/Data/Stream/Monadic.hs:518:{-# RULES
./leveldb-haskell-0.5.1/src/Data/Stream/Monadic.hs:178:{-# RULES
./leveldb-haskell-0.5.1/src/Data/Stream/Monadic.hs:338:{-# RULES
./leveldb-haskell-0.5.1/src/Data/Stream/Monadic.hs:354:{-# RULES
./leveldb-haskell-0.5.1/src/Data/Stream/Monadic.hs:507:{-# RULES
./leveldb-haskell-0.5.1/src/Data/Stream/Monadic.hs:518:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:240:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:431:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:447:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:463:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:480:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:534:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:552:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:570:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:588:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:606:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:640:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:727:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:739:{-# RULES
./leveldb-haskell-0.6/src/Data/Stream/Monadic.hs:1160:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:240:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:431:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:447:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:463:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:480:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:534:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:552:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:570:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:588:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:606:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:640:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:727:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:739:{-# RULES
./leveldb-haskell-0.6.1/src/Data/Stream/Monadic.hs:1160:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:240:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:431:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:447:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:463:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:480:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:534:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:552:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:570:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:588:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:606:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:640:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:727:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:739:{-# RULES
./leveldb-haskell-0.6.2/src/Data/Stream/Monadic.hs:1160:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:240:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:431:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:447:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:463:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:480:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:534:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:552:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:570:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:588:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:606:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:640:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:727:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:739:{-# RULES
./leveldb-haskell-0.6.3/src/Data/Stream/Monadic.hs:1160:{-# RULES
./lhc-0.10/lib/base/src/Control/Arrow.hs:95:{-# RULES
./lhc-0.10/lib/base/src/Control/Arrow.hs:207:{-# RULES
./lhc-0.10/lib/base/src/Control/Category.hs:29:{-# RULES
./lhc-0.10/lib/base/src/Data/List.hs:514:{-# RULES
./lhc-0.10/lib/base/src/Data/List.hs:534:{-# RULES
./lhc-0.10/lib/base/src/Data/List.hs:574:{-# RULES
./lhc-0.10/lib/base/src/Foreign/C/Types.hs:21:{-# RULES
./lhc-0.10/lib/base/src/GHC/Int.hs:148:{-# RULES
./lhc-0.10/lib/base/src/GHC/Int.hs:261:{-# RULES
./lhc-0.10/lib/base/src/GHC/Int.hs:394:{-# RULES
./lhc-0.10/lib/base/src/GHC/Int.hs:503:{-# RULES
./lhc-0.10/lib/base/src/GHC/Int.hs:665:{-# RULES
./lhc-0.10/lib/base/src/GHC/Int.hs:763:{-# RULES
./lhc-0.10/lib/base/src/GHC/Word.hs:182:{-# RULES
./lhc-0.10/lib/base/src/GHC/Word.hs:282:{-# RULES
./lhc-0.10/lib/base/src/GHC/Word.hs:383:{-# RULES
./lhc-0.10/lib/base/src/GHC/Word.hs:482:{-# RULES
./lhc-0.10/lib/base/src/GHC/Word.hs:589:{-# RULES
./lhc-0.10/lib/base/src/GHC/Word.hs:728:{-# RULES
./lhc-0.10/lib/base/src/GHC/Word.hs:819:{-# RULES
./lhc-0.10/lib/base/src/System/Posix/Types.hs:125:{-# RULES
./lhc-0.6.20081127/src/E/Program.hs:43:    progSeasoning      :: IdSet,       -- ^ these ids are depended on by external names via RULES
./lhc-0.6.20081127/src/FrontEnd/HsPretty.hs:246:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081127/src/FrontEnd/HsPretty.hs:247:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081127/src/FrontEnd/HsPretty.hs:248:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./lhc-0.6.20081127/src/FrontEnd/Lexer.hs:667:    (["RULES","RULE","RULES_LHC","RULE_LHC"],PragmaRules False),
./lhc-0.6.20081127/src/FrontEnd/Tc/Main.hs:632:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./lhc-0.6.20081127/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./lhc-0.6.20081127/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./lhc-0.6.20081127/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./lhc-0.6.20081127/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./lhc-0.6.20081127/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./lhc-0.6.20081127/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./lhc-0.6.20081127/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./lhc-0.6.20081127/src/GenUtil.hs:350:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./lhc-0.6.20081127/src/GenUtil.hs:351:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./lhc-0.6.20081210/src/E/Program.hs:43:    progSeasoning      :: IdSet,       -- ^ these ids are depended on by external names via RULES
./lhc-0.6.20081210/src/FrontEnd/HsPretty.hs:246:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081210/src/FrontEnd/HsPretty.hs:247:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081210/src/FrontEnd/HsPretty.hs:248:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./lhc-0.6.20081210/src/FrontEnd/Lexer.hs:667:    (["RULES","RULE","RULES_LHC","RULE_LHC"],PragmaRules False),
./lhc-0.6.20081210/src/FrontEnd/Tc/Main.hs:632:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./lhc-0.6.20081210/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./lhc-0.6.20081210/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./lhc-0.6.20081210/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./lhc-0.6.20081210/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./lhc-0.6.20081210/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./lhc-0.6.20081210/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./lhc-0.6.20081210/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./lhc-0.6.20081210/src/GenUtil.hs:350:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./lhc-0.6.20081210/src/GenUtil.hs:351:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./lhc-0.6.20081210.1/lib/base/src/Data/List.hs:319:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./lhc-0.6.20081210.1/lib/base/src/Data/List.hs:320:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:21:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:22:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:23:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:24:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:25:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:28:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:29:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:30:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:31:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:34:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:36:{-# RULES "foldr/unpackString"  forall k z (addr::Addr__) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:59:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:60:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:61:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:62:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:64:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:65:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:66:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:67:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:83:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:86:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:128:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:129:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:141:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:142:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:191:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:192:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:193:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:194:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:195:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:210:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:233:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:235:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:245:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/List.hs:274:{-# RULES
./lhc-0.6.20081210.1/lib/base/src/Lhc/Monad.hs:33:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/Monad.hs:34:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/Monad.hs:35:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/Monad.hs:36:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/Monad.hs:37:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/Monad.hs:38:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./lhc-0.6.20081210.1/lib/base/src/Lhc/Num.hs:81:{-# RULES
./lhc-0.6.20081210.1/lib/base/src/Lhc/Num.hs:88:{-# RULES
./lhc-0.6.20081210.1/lib/base/src/Prelude/IO.hs:41:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:372:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:373:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:374:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:375:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:376:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:377:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:378:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:379:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:380:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:381:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:382:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:383:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:384:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:385:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:386:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:387:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:388:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:389:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:390:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:391:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:392:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:393:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:394:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:395:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:396:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:397:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:398:{-# RULES "concat/[]"     concat [] = [] #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:399:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:400:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:401:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:402:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:404:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:405:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:406:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:407:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:408:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:409:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:411:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:412:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:413:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./lhc-0.6.20081210.1/lib/base/src/Prelude.hs:414:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./lhc-0.6.20081210.1/src/E/Program.hs:43:    progSeasoning      :: IdSet,       -- ^ these ids are depended on by external names via RULES
./lhc-0.6.20081210.1/src/FrontEnd/HsPretty.hs:246:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081210.1/src/FrontEnd/HsPretty.hs:247:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081210.1/src/FrontEnd/HsPretty.hs:248:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./lhc-0.6.20081210.1/src/FrontEnd/Lexer.hs:667:    (["RULES","RULE","RULES_LHC","RULE_LHC"],PragmaRules False),
./lhc-0.6.20081210.1/src/FrontEnd/Tc/Main.hs:632:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./lhc-0.6.20081210.1/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./lhc-0.6.20081210.1/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./lhc-0.6.20081210.1/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./lhc-0.6.20081210.1/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./lhc-0.6.20081210.1/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./lhc-0.6.20081210.1/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./lhc-0.6.20081210.1/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./lhc-0.6.20081210.1/src/GenUtil.hs:350:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./lhc-0.6.20081210.1/src/GenUtil.hs:351:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./lhc-0.6.20081211/lib/base/src/Data/List.hs:319:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./lhc-0.6.20081211/lib/base/src/Data/List.hs:320:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:21:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:22:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:23:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:24:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:25:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:28:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:29:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:30:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:31:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:34:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:36:{-# RULES "foldr/unpackString"  forall k z (addr::Addr__) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:59:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:60:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:61:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:62:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:64:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:65:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:66:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:67:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:83:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:86:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:128:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:129:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:141:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:142:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:191:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:192:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:193:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:194:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:195:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:210:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:233:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:235:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:245:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./lhc-0.6.20081211/lib/base/src/Lhc/List.hs:274:{-# RULES
./lhc-0.6.20081211/lib/base/src/Lhc/Monad.hs:33:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./lhc-0.6.20081211/lib/base/src/Lhc/Monad.hs:34:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./lhc-0.6.20081211/lib/base/src/Lhc/Monad.hs:35:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./lhc-0.6.20081211/lib/base/src/Lhc/Monad.hs:36:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./lhc-0.6.20081211/lib/base/src/Lhc/Monad.hs:37:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./lhc-0.6.20081211/lib/base/src/Lhc/Monad.hs:38:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./lhc-0.6.20081211/lib/base/src/Lhc/Num.hs:81:{-# RULES
./lhc-0.6.20081211/lib/base/src/Lhc/Num.hs:88:{-# RULES
./lhc-0.6.20081211/lib/base/src/Prelude/IO.hs:41:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:372:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:373:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:374:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:375:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:376:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:377:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:378:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:379:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:380:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:381:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:382:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:383:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:384:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:385:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:386:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:387:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:388:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:389:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:390:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:391:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:392:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:393:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:394:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:395:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:396:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:397:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:398:{-# RULES "concat/[]"     concat [] = [] #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:399:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:400:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:401:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:402:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:404:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:405:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:406:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:407:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:408:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:409:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:411:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:412:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:413:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./lhc-0.6.20081211/lib/base/src/Prelude.hs:414:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./lhc-0.6.20081211/src/E/Program.hs:43:    progSeasoning      :: IdSet,       -- ^ these ids are depended on by external names via RULES
./lhc-0.6.20081211/src/FrontEnd/HsPretty.hs:246:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081211/src/FrontEnd/HsPretty.hs:247:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081211/src/FrontEnd/HsPretty.hs:248:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./lhc-0.6.20081211/src/FrontEnd/Lexer.hs:667:    (["RULES","RULE","RULES_LHC","RULE_LHC"],PragmaRules False),
./lhc-0.6.20081211/src/FrontEnd/Tc/Main.hs:632:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./lhc-0.6.20081211/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./lhc-0.6.20081211/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./lhc-0.6.20081211/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./lhc-0.6.20081211/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./lhc-0.6.20081211/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./lhc-0.6.20081211/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./lhc-0.6.20081211/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./lhc-0.6.20081211/src/GenUtil.hs:350:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./lhc-0.6.20081211/src/GenUtil.hs:351:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./lhc-0.6.20081211.1/lib/base/src/Data/List.hs:319:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./lhc-0.6.20081211.1/lib/base/src/Data/List.hs:320:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:21:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:22:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:23:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:24:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:25:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:28:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:29:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:30:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:31:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:34:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:36:{-# RULES "foldr/unpackString"  forall k z (addr::Addr__) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:59:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:60:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:61:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:62:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:64:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:65:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:66:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:67:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:83:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:86:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:128:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:129:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:141:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:142:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:191:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:192:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:193:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:194:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:195:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:210:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:233:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:235:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:245:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/List.hs:274:{-# RULES
./lhc-0.6.20081211.1/lib/base/src/Lhc/Monad.hs:33:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/Monad.hs:34:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/Monad.hs:35:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/Monad.hs:36:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/Monad.hs:37:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/Monad.hs:38:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./lhc-0.6.20081211.1/lib/base/src/Lhc/Num.hs:81:{-# RULES
./lhc-0.6.20081211.1/lib/base/src/Lhc/Num.hs:88:{-# RULES
./lhc-0.6.20081211.1/lib/base/src/Prelude/IO.hs:41:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:372:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:373:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:374:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:375:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:376:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:377:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:378:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:379:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:380:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:381:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:382:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:383:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:384:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:385:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:386:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:387:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:388:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:389:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:390:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:391:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:392:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:393:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:394:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:395:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:396:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:397:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:398:{-# RULES "concat/[]"     concat [] = [] #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:399:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:400:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:401:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:402:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:404:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:405:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:406:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:407:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:408:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:409:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:411:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:412:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:413:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./lhc-0.6.20081211.1/lib/base/src/Prelude.hs:414:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./lhc-0.6.20081211.1/src/E/Program.hs:43:    progSeasoning      :: IdSet,       -- ^ these ids are depended on by external names via RULES
./lhc-0.6.20081211.1/src/FrontEnd/HsPretty.hs:246:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081211.1/src/FrontEnd/HsPretty.hs:247:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081211.1/src/FrontEnd/HsPretty.hs:248:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./lhc-0.6.20081211.1/src/FrontEnd/Lexer.hs:667:    (["RULES","RULE","RULES_LHC","RULE_LHC"],PragmaRules False),
./lhc-0.6.20081211.1/src/FrontEnd/Tc/Main.hs:632:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./lhc-0.6.20081211.1/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./lhc-0.6.20081211.1/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./lhc-0.6.20081211.1/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./lhc-0.6.20081211.1/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./lhc-0.6.20081211.1/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./lhc-0.6.20081211.1/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./lhc-0.6.20081211.1/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./lhc-0.6.20081211.1/src/GenUtil.hs:350:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./lhc-0.6.20081211.1/src/GenUtil.hs:351:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./lhc-0.6.20081211.2/lib/base/src/Data/List.hs:319:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./lhc-0.6.20081211.2/lib/base/src/Data/List.hs:320:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:21:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:22:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:23:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:24:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:25:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:28:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:29:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:30:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:31:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:34:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:36:{-# RULES "foldr/unpackString"  forall k z (addr::Addr__) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:59:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:60:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:61:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:62:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:64:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:65:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:66:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:67:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:83:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:86:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:128:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:129:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:141:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:142:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:191:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:192:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:193:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:194:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:195:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:210:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:233:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:235:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:245:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/List.hs:274:{-# RULES
./lhc-0.6.20081211.2/lib/base/src/Lhc/Monad.hs:33:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/Monad.hs:34:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/Monad.hs:35:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/Monad.hs:36:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/Monad.hs:37:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/Monad.hs:38:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./lhc-0.6.20081211.2/lib/base/src/Lhc/Num.hs:81:{-# RULES
./lhc-0.6.20081211.2/lib/base/src/Lhc/Num.hs:88:{-# RULES
./lhc-0.6.20081211.2/lib/base/src/Prelude/IO.hs:41:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:372:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:373:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:374:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:375:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:376:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:377:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:378:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:379:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:380:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:381:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:382:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:383:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:384:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:385:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:386:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:387:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:388:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:389:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:390:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:391:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:392:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:393:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:394:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:395:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:396:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:397:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:398:{-# RULES "concat/[]"     concat [] = [] #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:399:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:400:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:401:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:402:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:404:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:405:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:406:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:407:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:408:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:409:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:411:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:412:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:413:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./lhc-0.6.20081211.2/lib/base/src/Prelude.hs:414:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./lhc-0.6.20081211.2/src/E/Program.hs:43:    progSeasoning      :: IdSet,       -- ^ these ids are depended on by external names via RULES
./lhc-0.6.20081211.2/src/FrontEnd/HsPretty.hs:246:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081211.2/src/FrontEnd/HsPretty.hs:247:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081211.2/src/FrontEnd/HsPretty.hs:248:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./lhc-0.6.20081211.2/src/FrontEnd/Lexer.hs:667:    (["RULES","RULE","RULES_LHC","RULE_LHC"],PragmaRules False),
./lhc-0.6.20081211.2/src/FrontEnd/Tc/Main.hs:632:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./lhc-0.6.20081211.2/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./lhc-0.6.20081211.2/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./lhc-0.6.20081211.2/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./lhc-0.6.20081211.2/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./lhc-0.6.20081211.2/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./lhc-0.6.20081211.2/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./lhc-0.6.20081211.2/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./lhc-0.6.20081211.2/src/GenUtil.hs:350:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./lhc-0.6.20081211.2/src/GenUtil.hs:351:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./lhc-0.6.20081216/lib/base/src/Data/List.hs:319:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./lhc-0.6.20081216/lib/base/src/Data/List.hs:320:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:21:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:22:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:23:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:24:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:25:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:28:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:29:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:30:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:31:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:34:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:36:{-# RULES "foldr/unpackString"  forall k z (addr::Addr__) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:59:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:60:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:61:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:62:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:64:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:65:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:66:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:67:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:83:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:86:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:128:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:129:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:141:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:142:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:191:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:192:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:193:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:194:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:195:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:210:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:233:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:235:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:245:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./lhc-0.6.20081216/lib/base/src/Lhc/List.hs:274:{-# RULES
./lhc-0.6.20081216/lib/base/src/Lhc/Monad.hs:33:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./lhc-0.6.20081216/lib/base/src/Lhc/Monad.hs:34:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./lhc-0.6.20081216/lib/base/src/Lhc/Monad.hs:35:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./lhc-0.6.20081216/lib/base/src/Lhc/Monad.hs:36:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./lhc-0.6.20081216/lib/base/src/Lhc/Monad.hs:37:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./lhc-0.6.20081216/lib/base/src/Lhc/Monad.hs:38:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./lhc-0.6.20081216/lib/base/src/Lhc/Num.hs:81:{-# RULES
./lhc-0.6.20081216/lib/base/src/Lhc/Num.hs:88:{-# RULES
./lhc-0.6.20081216/lib/base/src/Prelude/IO.hs:41:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:372:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:373:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:374:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:375:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:376:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:377:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:378:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:379:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:380:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:381:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:382:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:383:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:384:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:385:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:386:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:387:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:388:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:389:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:390:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:391:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:392:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:393:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:394:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:395:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:396:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:397:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:398:{-# RULES "concat/[]"     concat [] = [] #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:399:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:400:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:401:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:402:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:404:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:405:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:406:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:407:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:408:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:409:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:411:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:412:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:413:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./lhc-0.6.20081216/lib/base/src/Prelude.hs:414:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./lhc-0.6.20081216/src/E/Program.hs:43:    progSeasoning      :: IdSet,       -- ^ these ids are depended on by external names via RULES
./lhc-0.6.20081216/src/FrontEnd/HsPretty.hs:246:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081216/src/FrontEnd/HsPretty.hs:247:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20081216/src/FrontEnd/HsPretty.hs:248:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./lhc-0.6.20081216/src/FrontEnd/Lexer.hs:667:    (["RULES","RULE","RULES_LHC","RULE_LHC"],PragmaRules False),
./lhc-0.6.20081216/src/FrontEnd/Tc/Main.hs:632:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./lhc-0.6.20081216/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./lhc-0.6.20081216/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./lhc-0.6.20081216/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./lhc-0.6.20081216/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./lhc-0.6.20081216/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./lhc-0.6.20081216/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./lhc-0.6.20081216/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./lhc-0.6.20081216/src/GenUtil.hs:350:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./lhc-0.6.20081216/src/GenUtil.hs:351:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./lhc-0.6.20090126/lib/base/src/Control/Arrow.hs:98:{-# RULES "identity"      arr id = id
./lhc-0.6.20090126/lib/base/src/Control/Arrow.hs:210:{-# RULES
./lhc-0.6.20090126/lib/base/src/Control/Category.hs:31:{-# RULES
./lhc-0.6.20090126/lib/base/src/Data/List.hs:319:{-# RULES "sort/sort"  forall  xs . sort (sort xs) = sort xs #-}
./lhc-0.6.20090126/lib/base/src/Data/List.hs:320:{-# RULES "nub/nub"  forall  xs . nub (nub xs) = nub xs #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:21:{-# RULES "foldr/nil" forall k z.   foldr k z []  = z  #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:22:{-# RULES "foldr/single"  forall k z x . foldr k z [x] = k x z #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:23:{-# RULES "foldr/double"  forall k z x y . foldr k z [x,y] = k x (k y z) #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:24:{-# RULES "foldr/triple"  forall k z a b c . foldr k z [a,b,c] = k a (k b (k c z)) #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:25:{-# RULES "foldr/id"      foldr (:) [] = \x -> x  #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:28:{-# RULES "foldr/build" forall k z (g :: forall b . (a -> b -> b) -> b -> b) . foldr k z (build g) = g k z #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:29:{-# RULES "foldr/augment" forall k z xs (g::forall b. (a->b->b) -> b -> b) .  foldr k z (augment g xs) = g k (foldr k z xs) #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:30:{-# RULES "foldr/single" forall k z x. foldr k z [x] = k x z #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:31:{-# RULES "augment/build" forall (g::forall b. (a->b->b) -> b -> b)
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:34:{-# RULES "augment/nil"   forall (g::forall b. (a->b->b) -> b -> b) .  augment g [] = build g #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:36:{-# RULES "foldr/unpackString"  forall k z (addr::Addr__) . foldr k z (unpackString addr) = unpackStringFoldr addr k z  #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:59:{-# RULES "tail/map"      forall f xs . tail (map f xs) = map f (tail xs) #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:60:{-# RULES "head/map"      forall f xs . head (map f xs) = f (head xs) #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:61:{-# RULES "head/:"        forall x xs . head (x:xs) = x #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:62:{-# RULES "tail/:"        forall x xs . tail (x:xs) = xs #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:64:{-# RULES "filter/iterate" forall p f x . filter p (iterate f x) = filterIterate p f x  #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:65:{-# RULES "map/iterate" forall f g x . map f (iterate g x) = mapIterate f g x  #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:66:{-# RULES "map/filter" forall f p xs . map f (filter p xs) = mapFilter f p xs  #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:67:{-# RULES "filter/map" forall f p xs . filter p (map f xs) = filterMap p f xs  #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:83:{-# RULES "any/build"     forall p (g::forall b.(a->b->b)->b->b) .  any p (build g) = g ((||) . p) False #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:86:{-# RULES "all/build"     forall p (g::forall b.(a->b->b)->b->b) .  all p (build g) = g ((&&) . p) True #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:128:{-# RULES "elem/[]" forall c . elem c [] = False #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:129:{-# RULES "elem/[_]" forall c v . elem c [v] = c == v #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:141:{-# RULES "notElem/[]" forall c . notElem c [] = True #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:142:{-# RULES "notElem/[_]" forall c v . notElem c [v] = c /= v #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:191:{-# RULES "head/iterate"  forall f x . head (iterate f x) = x #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:192:{-# RULES "head/repeat"   forall x . head (repeat x) = x #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:193:{-# RULES "tail/repeat"   forall x . tail (repeat x) = repeat x #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:194:{-# RULES "tail/iterate"  forall f x . tail (iterate f x) = iterate f (f x) #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:195:{-# RULES "iterate/id" forall . iterate id = repeat #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:210:{- RULES "filterFB" forall c p q. filterFB (filterFB c p) q = filterFB c (\x -> q x && p x) #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:233:{-# RULES "head/build"   forall (g::forall b.(a->b->b)->b->b) . head (build g) = g (\x _ -> x) badHead #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:235:{-# RULES "head/augment"   forall xs (g::forall b. (a->b->b) -> b -> b) .  head (augment g xs) = g (\x _ -> x) (head xs) #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:245:{-# RULES forall xs n (g :: forall b . (a -> b -> b) -> b -> b) . build g !! n  = bangBang g n  #-}
./lhc-0.6.20090126/lib/base/src/Lhc/List.hs:274:{-# RULES
./lhc-0.6.20090126/lib/base/src/Lhc/Monad.hs:33:{-# RULES "sequence/[]"   sequence [] = return [] #-}
./lhc-0.6.20090126/lib/base/src/Lhc/Monad.hs:34:{-# RULES "sequence_/[]"  sequence_ [] = return () #-}
./lhc-0.6.20090126/lib/base/src/Lhc/Monad.hs:35:{-# RULES "mapM/[]"       forall f . mapM f [] = return [] #-}
./lhc-0.6.20090126/lib/base/src/Lhc/Monad.hs:36:{-# RULES "mapM_/[]"      forall f . mapM_ f [] = return () #-}
./lhc-0.6.20090126/lib/base/src/Lhc/Monad.hs:37:{-# RULES "sequence_/++"  forall xs ys . sequence_ (xs ++ ys) = sequence_ xs >> sequence_ ys #-}
./lhc-0.6.20090126/lib/base/src/Lhc/Monad.hs:38:{-# RULES "mapM_/++"      forall xs ys f . mapM_ f (xs ++ ys) = mapM_ f xs >> mapM_ f ys #-}
./lhc-0.6.20090126/lib/base/src/Lhc/Num.hs:83:{-# RULES
./lhc-0.6.20090126/lib/base/src/Lhc/Num.hs:90:{-# RULES
./lhc-0.6.20090126/lib/base/src/Prelude/IO.hs:41:{-# RULES "putStr/++"      forall xs ys . putStr (xs ++ ys) = putStr xs >> putStr ys #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:372:{-# RULES "drop/0"        forall . drop 0 = \xs -> xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:373:{-# RULES "drop/1"        forall x xs . drop 1 (x:xs) = xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:374:{-# RULES "drop/2"        forall x y xs . drop 2 (x:y:xs) = xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:375:{-# RULES "drop/3"        forall x y z xs . drop 3 (x:y:z:xs) = xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:376:{-# RULES "take/0"        forall xs . take 0 xs = [] #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:377:{-# RULES "take/1"        forall x xs . take 1 (x:xs) = [x] #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:378:{-# RULES "take/2"        forall x y xs . take 2 (x:y:xs) = [x,y] #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:379:{-# RULES "take/3"        forall x y z xs . take 3 (x:y:z:xs) = [x,y,z] #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:380:{-# RULES "!!/0"          forall x xs . (x:xs) !! 0 = x #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:381:{-# RULES "!!/1"          forall x y xs . (x:y:xs) !! 1 = y #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:382:{-# RULES "!!/2"          forall x y z xs . (x:y:z:xs) !! 2 = z #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:383:{-# RULES "concat/Map"    forall f xs . concat (map f xs) = concatMap f xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:384:{-# RULES "sequence/map"  forall f xs . sequence (map f xs) = mapM f xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:385:{-# RULES "sequence_/map" forall f xs . sequence_ (map f xs) = mapM_ f xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:386:{-# RULES "++/emptyr"     forall xs . xs ++ [] = xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:387:{-# RULES "++/refix"      forall xs ys zs . (xs ++ ys) ++ zs = xs ++ (ys ++ zs) #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:388:--{-# RULES "++/tick4"      forall x y z x' xs ys . (x:y:z:x':xs) ++ ys = x:y:z:x':(xs ++ ys) #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:389:--{-# RULES "++/tick2"      forall x y xs ys . (x:y:xs) ++ ys = x:y:(xs ++ ys) #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:390:--{-# RULES "++/tick1"      forall x xs ys . (x:xs) ++ ys = x:(xs ++ ys) #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:391:{-# RULES "++/tick0"      forall xs . [] ++ xs = xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:392:{-# RULES "++/tick1"      forall x xs . [x] ++ xs = x:xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:393:{-# RULES "++/tick2"      forall x y xs . [x,y] ++ xs = x:y:xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:394:{-# RULES "++/tick3"      forall x y z xs . [x,y,z] ++ xs = x:y:z:xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:395:{-# RULES "map/map"       forall f g xs . map f (map g xs) = map (\x -> f (g x)) xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:396:{-# RULES "concatMap/map" forall f g xs . concatMap f (map g xs) = concatMap (\x -> f (g x)) xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:397:{---# RULES "concat/tick"   forall x xs . concat (x:xs) = x ++ concat xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:398:{-# RULES "concat/[]"     concat [] = [] #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:399:{-# RULES "map/[]"        forall f . map f [] = [] #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:400:{-# RULES "concatMap/[]"  forall f . concatMap f [] = [] #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:401:{-# RULES "concatMap/++"  forall xs ys f . concatMap f (xs ++ ys) = concatMap f xs ++ concatMap f ys #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:402:{-# RULES "map/++"        forall xs ys f . map f (xs ++ ys) = map f xs ++ map f ys #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:404:{-# RULES "foldr/map" forall k z f xs . foldr k z (map f xs) = foldr (\x y -> k (f x) y) z xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:405:{-# RULES "foldr/concatMap" forall k z f xs . foldr k z (concatMap f xs) = foldr (\x y -> foldr k (f x) y) z xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:406:{-# RULES "foldr/filter" forall k z f xs . foldr k z (filter f xs) = foldr (\x y -> if f x then k x y else y) z xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:407:{-# RULES "foldr/++" forall k z xs ys . foldr k z (xs ++ ys) = foldr k (foldr k z ys) xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:408:{-# RULES "foldr/concat" forall k z xs . foldr k z (concat xs) = foldr (\x y -> foldr k y x) z xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:409:{-# RULES "foldr/repeat" forall k _z x . foldr k _z (repeat x) = let r = k x r in r #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:411:-- {-# RULES "foldr/x:xs" forall k z x xs . foldr k z (x:xs) = k x (foldr k z xs) #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:412:{-# RULES "foldr/zip" forall k z xs ys . foldr k z (zip xs ys) = let zip' (a:as) (b:bs) = k (a,b) (zip' as bs); zip' _ _ = z in zip' xs ys #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:413:-- {-# RULES "foldr/sequence" forall k z xs . foldr k z (sequence xs) = foldr (\x y -> do rx <- x; ry <- y; return (k rx ry)) (return z) xs #-}
./lhc-0.6.20090126/lib/base/src/Prelude.hs:414:-- {-# RULES "foldr/mapM" forall k z f xs . foldr k z (mapM f xs) = foldr (\x y -> do rx <- f x; ry <- y; return (k rx ry)) (return z) xs   #-}
./lhc-0.6.20090126/src/E/Program.hs:44:    progSeasoning      :: IdSet,       -- ^ these ids are depended on by external names via RULES
./lhc-0.6.20090126/src/FrontEnd/HsPretty.hs:246:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = False }:_)) = text "{-# RULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20090126/src/FrontEnd/HsPretty.hs:247:ppHsDecl (HsPragmaRules rs@(HsRule { hsRuleIsMeta = True }:_)) = text "{-# METARULES" $$ nest 4 (myVcat (map ppHsRule rs)) $$ text "#-}"
./lhc-0.6.20090126/src/FrontEnd/HsPretty.hs:248:--ppHsDecl prules@HsPragmaRules {} = text ("{-# RULES " ++ show (hsDeclString prules)) <+> text "forall" <+> vars <+> text "." $$ nest 4 rest $$ text "#-}" where
./lhc-0.6.20090126/src/FrontEnd/Lexer.hs:667:    (["RULES","RULE","RULES_LHC","RULE_LHC"],PragmaRules False),
./lhc-0.6.20090126/src/FrontEnd/Tc/Main.hs:638:    withContext (locMsg sloc "in the RULES pragma" $ hsRuleString prule) ans where
./lhc-0.6.20090126/src/GenUtil.hs:138:{-# RULES "snub/snub" forall x . snub (snub x) = snub x #-}
./lhc-0.6.20090126/src/GenUtil.hs:139:{-# RULES "snub/nub" forall x . snub (nub x) = snub x #-}
./lhc-0.6.20090126/src/GenUtil.hs:140:{-# RULES "nub/snub" forall x . nub (snub x) = snub x #-}
./lhc-0.6.20090126/src/GenUtil.hs:141:{-# RULES "snub/sort" forall x . snub (sort x) = snub x #-}
./lhc-0.6.20090126/src/GenUtil.hs:142:{-# RULES "sort/snub" forall x . sort (snub x) = snub x #-}
./lhc-0.6.20090126/src/GenUtil.hs:143:{-# RULES "snub/[]" snub [] = [] #-}
./lhc-0.6.20090126/src/GenUtil.hs:144:{-# RULES "snub/[x]" forall x . snub [x] = [x] #-}
./lhc-0.6.20090126/src/GenUtil.hs:350:{-# RULES "replicateM/0" replicateM 0 = const (return []) #-}
./lhc-0.6.20090126/src/GenUtil.hs:351:{-# RULES "replicateM_/0" replicateM_ 0 = const (return ()) #-}
./lhc-0.8/lib/base/src/Data/List.hs:511:{-# RULES
./lhc-0.8/lib/base/src/Data/List.hs:531:{-# RULES
./lhc-0.8/lib/base/src/GHC/Int.hs:154:{-# RULES
./lhc-0.8/lib/base/src/GHC/Int.hs:270:{-# RULES
./lhc-0.8/lib/base/src/GHC/Int.hs:406:{-# RULES
./lhc-0.8/lib/base/src/GHC/Int.hs:519:{-# RULES
./lhc-0.8/lib/base/src/GHC/Int.hs:684:{-# RULES
./lhc-0.8/lib/base/src/GHC/Int.hs:786:{-# RULES
./lhc-0.8/lib/base/src/GHC/Word.hs:188:{-# RULES
./lhc-0.8/lib/base/src/GHC/Word.hs:291:{-# RULES
./lhc-0.8/lib/base/src/GHC/Word.hs:395:{-# RULES
./lhc-0.8/lib/base/src/GHC/Word.hs:498:{-# RULES
./lhc-0.8/lib/base/src/GHC/Word.hs:608:{-# RULES
./lhc-0.8/lib/base/src/GHC/Word.hs:751:{-# RULES
./lhc-0.8/lib/base/src/GHC/Word.hs:845:{-# RULES
./LibZip-0.0.1/C2HS.hs:197:{-# RULES 
./LibZip-0.0.2/C2HS.hs:197:{-# RULES 
./linear-0.2/src/Linear/Quaternion.hs:102:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.2/src/Linear/Quaternion.hs:103:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.2.0.2/src/Linear/Quaternion.hs:102:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.2.0.2/src/Linear/Quaternion.hs:103:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.4.1/src/Linear/Quaternion.hs:102:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.4.1/src/Linear/Quaternion.hs:103:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.4.2.1/src/Linear/Quaternion.hs:102:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.4.2.1/src/Linear/Quaternion.hs:103:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.4.2.2/src/Linear/Quaternion.hs:102:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.4.2.2/src/Linear/Quaternion.hs:103:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.5/src/Linear/Quaternion.hs:149:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.5/src/Linear/Quaternion.hs:150:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.6/src/Linear/Quaternion.hs:157:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.6/src/Linear/Quaternion.hs:158:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.6.1/src/Linear/Quaternion.hs:157:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.6.1/src/Linear/Quaternion.hs:158:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.7/src/Linear/Quaternion.hs:174:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.7/src/Linear/Quaternion.hs:175:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.8/src/Linear/Quaternion.hs:174:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.8/src/Linear/Quaternion.hs:175:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.9/src/Linear/Quaternion.hs:174:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.9/src/Linear/Quaternion.hs:175:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.9.1/src/Linear/Quaternion.hs:174:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.9.1/src/Linear/Quaternion.hs:175:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-0.9.2/src/Linear/Quaternion.hs:174:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-0.9.2/src/Linear/Quaternion.hs:175:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.0.1/src/Linear/Quaternion.hs:174:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.0.1/src/Linear/Quaternion.hs:175:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.1.1/src/Linear/Quaternion.hs:180:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.1.1/src/Linear/Quaternion.hs:181:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.1.2/src/Linear/Quaternion.hs:180:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.1.2/src/Linear/Quaternion.hs:181:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.1.4/src/Linear/Quaternion.hs:183:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.1.4/src/Linear/Quaternion.hs:184:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.10/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.10/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.10.1/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.10.1/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.10.1.1/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.10.1.1/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.10.1.2/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.10.1.2/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.11/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.11/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.11.1/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.11.1/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.11.2/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.11.2/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.11.3/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.11.3/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.12.1/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.12.1/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.13/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.13/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.14/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.14/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.14.0.1/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.14.0.1/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.15/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.15/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.15.0.1/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.15.0.1/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.15.1/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.15.1/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.15.2/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.15.2/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.15.3/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.15.3/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.15.4/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.15.4/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.15.5/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.15.5/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.16/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.16/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.16.1/src/Linear/Quaternion.hs:240:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.16.1/src/Linear/Quaternion.hs:241:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.16.2/src/Linear/Quaternion.hs:241:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.16.2/src/Linear/Quaternion.hs:242:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.16.4/src/Linear/Quaternion.hs:241:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.16.4/src/Linear/Quaternion.hs:242:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.17/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.17/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.17.1/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.17.1/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.18/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.18/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.18.0.1/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.18.0.1/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.18.1/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.18.1/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.18.1.1/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.18.1.1/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.18.3/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.18.3/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.19/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.19/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.19.1/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.19.1/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.19.1.1/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.19.1.1/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.19.1.2/src/Linear/Quaternion.hs:245:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.19.1.2/src/Linear/Quaternion.hs:246:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.19.1.3/src/Linear/Quaternion.hs:249:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.19.1.3/src/Linear/Quaternion.hs:250:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.2/src/Linear/Quaternion.hs:183:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.2/src/Linear/Quaternion.hs:184:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.20/src/Linear/Quaternion.hs:249:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.20/src/Linear/Quaternion.hs:250:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.20.1/src/Linear/Quaternion.hs:249:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.20.1/src/Linear/Quaternion.hs:250:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.20.2/src/Linear/Quaternion.hs:249:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.20.2/src/Linear/Quaternion.hs:250:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.20.3/src/Linear/Quaternion.hs:249:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.20.3/src/Linear/Quaternion.hs:250:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.20.4/src/Linear/Quaternion.hs:249:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.20.4/src/Linear/Quaternion.hs:250:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.3/src/Linear/Quaternion.hs:183:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.3/src/Linear/Quaternion.hs:184:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.3.1/src/Linear/Quaternion.hs:183:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.3.1/src/Linear/Quaternion.hs:184:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.3.1.1/src/Linear/Quaternion.hs:197:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.3.1.1/src/Linear/Quaternion.hs:198:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.4/src/Linear/Quaternion.hs:197:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.4/src/Linear/Quaternion.hs:198:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.6/src/Linear/Quaternion.hs:229:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.6/src/Linear/Quaternion.hs:230:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.7/src/Linear/Quaternion.hs:229:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.7/src/Linear/Quaternion.hs:230:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.8/src/Linear/Quaternion.hs:233:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.8/src/Linear/Quaternion.hs:234:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.8.1/src/Linear/Quaternion.hs:233:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.8.1/src/Linear/Quaternion.hs:234:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.9/src/Linear/Quaternion.hs:235:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.9/src/Linear/Quaternion.hs:236:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.9.0.1/src/Linear/Quaternion.hs:235:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.9.0.1/src/Linear/Quaternion.hs:236:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-1.9.1/src/Linear/Quaternion.hs:235:-- {-# RULES "abs/norm" abs x = Quaternion (norm x) 0 #-}
./linear-1.9.1/src/Linear/Quaternion.hs:236:-- {-# RULES "signum/signorm" signum = signorm #-}
./linear-maps-0.5/Data/Subtyping.hs:50:{-# RULES
./linear-maps-0.6/Data/Subtyping.hs:50:{-# RULES
./linear-maps-0.6.1/Data/Subtyping.hs:50:{-# RULES
./linear-vect-0.1.0.0/Linear/Class.hs:55:{- RULES
./linear-vect-0.1.0.0/Linear/Class.hs:74:{-# RULES
./linear-vect-0.1.0.0/Linear/Class.hs:96:{-# RULES
./linear-vect-0.1.0.0/Linear/Class.hs:118:{-# RULES
./linear-vect-0.1.0.0/Linear/Class.hs:182:{-# RULES
./linear-vect-0.1.1.0/Linear/Class.hs:55:{- RULES
./linear-vect-0.1.1.0/Linear/Class.hs:74:{-# RULES
./linear-vect-0.1.1.0/Linear/Class.hs:96:{-# RULES
./linear-vect-0.1.1.0/Linear/Class.hs:118:{-# RULES
./linear-vect-0.1.1.0/Linear/Class.hs:176:{-# RULES
./liquidhaskell-0.5.0.0/src/Language/Haskell/Liquid/Desugar710/Desugar.hs:437:  {-# RULES "fromRational/id" fromRational = id :: Rational -> Rational #-}
./liquidhaskell-0.5.0.0/src/Language/Haskell/Liquid/Desugar710/DsBinds.hs:289:trivial).  That would be ok unless it has RULES, which would
./liquidhaskell-0.5.0.0/src/Language/Haskell/Liquid/Desugar710/DsBinds.hs:295:Now all is cool. The RULES are attached to M.f (by SimplCore),
./liquidhaskell-0.5.0.0/src/Language/Haskell/Liquid/Desugar710/DsBinds.hs:1186:    {-# RULES "normalise" normalise = normalise_Double #-}
./liquidhaskell-0.5.0.0/src/Language/Haskell/Liquid/Desugar710/DsExpr.hs:751:Furthermore generating builds messes up the LHS of RULES.
./liquidhaskell-0.5.0.1/src/Language/Haskell/Liquid/Desugar710/Desugar.hs:437:  {-# RULES "fromRational/id" fromRational = id :: Rational -> Rational #-}
./liquidhaskell-0.5.0.1/src/Language/Haskell/Liquid/Desugar710/DsBinds.hs:289:trivial).  That would be ok unless it has RULES, which would
./liquidhaskell-0.5.0.1/src/Language/Haskell/Liquid/Desugar710/DsBinds.hs:295:Now all is cool. The RULES are attached to M.f (by SimplCore),
./liquidhaskell-0.5.0.1/src/Language/Haskell/Liquid/Desugar710/DsBinds.hs:1186:    {-# RULES "normalise" normalise = normalise_Double #-}
./liquidhaskell-0.5.0.1/src/Language/Haskell/Liquid/Desugar710/DsExpr.hs:751:Furthermore generating builds messes up the LHS of RULES.
./list-extras-0.1.0/Data/List/Extras/LazyLength.hs:79:{-# RULES
./list-extras-0.1.0/Data/List/Extras/LazyLength.hs:119:{-# RULES
./list-extras-0.1.1/Data/List/Extras/LazyLength.hs:79:{-# RULES
./list-extras-0.1.1/Data/List/Extras/LazyLength.hs:119:{-# RULES
./list-extras-0.2.0/Data/List/Extras/LazyLength.hs:70:{-# RULES
./list-extras-0.2.0/Data/List/Extras/LazyLength.hs:110:{-# RULES
./list-extras-0.2.1/Data/List/Extras/LazyLength.hs:72:{-# RULES
./list-extras-0.2.1/Data/List/Extras/LazyLength.hs:112:{-# RULES
./list-extras-0.2.2/Data/List/Extras/LazyLength.hs:72:{-# RULES
./list-extras-0.2.2/Data/List/Extras/LazyLength.hs:112:{-# RULES
./list-extras-0.2.2.1/Data/List/Extras/LazyLength.hs:3:-- longer suppresses the warnings for orphaned RULES. Hence -Werror
./list-extras-0.2.2.1/Data/List/Extras/LazyLength.hs:79:{-# RULES
./list-extras-0.2.2.1/Data/List/Extras/LazyLength.hs:119:{-# RULES
./list-extras-0.3.0/Data/List/Extras/LazyLength.hs:3:-- longer suppresses the warnings for orphaned RULES. Hence -Werror
./list-extras-0.3.0/Data/List/Extras/LazyLength.hs:76:{- bad RULES
./list-extras-0.3.0/Data/List/Extras/LazyLength.hs:115:{- bad RULES
./list-extras-0.4.0/Data/List/Extras/LazyLength.hs:3:-- longer suppresses the warnings for orphaned RULES. Hence -Werror
./list-extras-0.4.0/Data/List/Extras/LazyLength.hs:76:{- bad RULES
./list-extras-0.4.0/Data/List/Extras/LazyLength.hs:115:{- bad RULES
./list-extras-0.4.0.1/Data/List/Extras/LazyLength.hs:3:-- longer suppresses the warnings for orphaned RULES. Hence -Werror
./list-extras-0.4.0.1/Data/List/Extras/LazyLength.hs:76:{- bad RULES
./list-extras-0.4.0.1/Data/List/Extras/LazyLength.hs:115:{- bad RULES
./list-extras-0.4.1.1/Data/List/Extras/LazyLength.hs:3:-- longer suppresses the warnings for orphaned RULES. Hence -Werror
./list-extras-0.4.1.1/Data/List/Extras/LazyLength.hs:10:-- parse RULES (see -ddump-rules); the -frewrite-rules flag only
./list-extras-0.4.1.1/Data/List/Extras/LazyLength.hs:82:{- bad RULES
./list-extras-0.4.1.1/Data/List/Extras/LazyLength.hs:123:{- bad RULES
./list-extras-0.4.1.3/Data/List/Extras/LazyLength.hs:3:-- longer suppresses the warnings for orphaned RULES. Hence -Werror
./list-extras-0.4.1.3/Data/List/Extras/LazyLength.hs:10:-- parse RULES (see -ddump-rules); the -frewrite-rules flag only
./list-extras-0.4.1.3/Data/List/Extras/LazyLength.hs:82:{- bad RULES
./list-extras-0.4.1.3/Data/List/Extras/LazyLength.hs:123:{- bad RULES
./list-extras-0.4.1.4/Data/List/Extras/LazyLength.hs:3:-- longer suppresses the warnings for orphaned RULES. Hence -Werror
./list-extras-0.4.1.4/Data/List/Extras/LazyLength.hs:10:-- parse RULES (see -ddump-rules); the -frewrite-rules flag only
./list-extras-0.4.1.4/Data/List/Extras/LazyLength.hs:82:{- bad RULES
./list-extras-0.4.1.4/Data/List/Extras/LazyLength.hs:123:{- bad RULES
./list-fusion-probe-0.1/Data/List/Fusion/Probe.hs:32:{-# RULES
./list-fusion-probe-0.1/Data/List/Fusion/Probe.hs:42:{-# RULES
./list-fusion-probe-0.1.0.1/Data/List/Fusion/Probe.hs:32:{-# RULES
./list-fusion-probe-0.1.0.1/Data/List/Fusion/Probe.hs:42:{-# RULES
./list-fusion-probe-0.1.0.2/Data/List/Fusion/Probe.hs:32:{-# RULES
./list-fusion-probe-0.1.0.2/Data/List/Fusion/Probe.hs:42:{-# RULES
./list-fusion-probe-0.1.0.3/Data/List/Fusion/Probe.hs:38:{-# RULES
./list-fusion-probe-0.1.0.3/Data/List/Fusion/Probe.hs:48:{-# RULES
./list-fusion-probe-0.1.0.4/Data/List/Fusion/Probe.hs:38:{-# RULES
./list-fusion-probe-0.1.0.4/Data/List/Fusion/Probe.hs:48:{-# RULES
./list-fusion-probe-0.1.0.5/Data/List/Fusion/Probe.hs:40:{-# RULES
./list-fusion-probe-0.1.0.5/Data/List/Fusion/Probe.hs:50:{-# RULES
./log-domain-0.1/src/Numeric/Log.hs:218:{-# RULES
./log-domain-0.1.0.1/src/Numeric/Log.hs:218:{-# RULES
./log-domain-0.10/src/Numeric/Log.hs:382:{-# RULES
./log-domain-0.10.0.1/src/Numeric/Log.hs:383:{-# RULES
./log-domain-0.10.1/src/Numeric/Log.hs:483:{-# RULES
./log-domain-0.10.1.1/src/Numeric/Log.hs:489:{-# RULES
./log-domain-0.10.2/src/Numeric/Log.hs:493:{-# RULES
./log-domain-0.10.2.1/src/Numeric/Log.hs:499:{-# RULES
./log-domain-0.10.3/src/Numeric/Log.hs:515:{-# RULES
./log-domain-0.10.3.1/src/Numeric/Log.hs:515:{-# RULES
./log-domain-0.2/src/Numeric/Log.hs:290:{-# RULES
./log-domain-0.3/src/Numeric/Log.hs:297:{-# RULES
./log-domain-0.3.0.1/src/Numeric/Log.hs:297:{-# RULES
./log-domain-0.4/src/Numeric/Log.hs:300:{-# RULES
./log-domain-0.5/src/Numeric/Log.hs:300:{-# RULES
./log-domain-0.5.0.1/src/Numeric/Log.hs:300:{-# RULES
./log-domain-0.6/src/Numeric/Log.hs:300:{-# RULES
./log-domain-0.7.1/src/Numeric/Log.hs:365:{-# RULES
./log-domain-0.7.2/src/Numeric/Log.hs:365:{-# RULES
./log-domain-0.8/src/Numeric/Log.hs:365:{-# RULES
./log-domain-0.8.1/src/Numeric/Log.hs:365:{-# RULES
./log-domain-0.9/src/Numeric/Log.hs:365:{-# RULES
./log-domain-0.9.1/src/Numeric/Log.hs:365:{-# RULES
./log-domain-0.9.2/src/Numeric/Log.hs:380:{-# RULES
./log-domain-0.9.2.1/src/Numeric/Log.hs:380:{-# RULES
./log-domain-0.9.3/src/Numeric/Log.hs:380:{-# RULES
./logfloat-0.10.0/Data/Number/LogFloat.hs:21:-- (v0.8.6) Removed buggy RULES
./logfloat-0.10.0/Data/Number/LogFloat.hs:88:{-# RULES
./logfloat-0.10.0/Data/Number/LogFloat.hs:115:{-# RULES
./logfloat-0.10.0/Data/Number/LogFloat.hs:228:{-# RULES
./logfloat-0.11.0/Data/Number/LogFloat.hs:21:-- (v0.8.6) Removed buggy RULES
./logfloat-0.11.0/Data/Number/LogFloat.hs:90:{-# RULES
./logfloat-0.11.0/Data/Number/LogFloat.hs:117:{-# RULES
./logfloat-0.11.0/Data/Number/LogFloat.hs:230:{-# RULES
./logfloat-0.11.0.1/Data/Number/LogFloat.hs:22:-- (v0.8.6) Removed buggy RULES
./logfloat-0.11.0.1/Data/Number/LogFloat.hs:91:{-# RULES
./logfloat-0.11.0.1/Data/Number/LogFloat.hs:118:{-# RULES
./logfloat-0.11.0.1/Data/Number/LogFloat.hs:231:{-# RULES
./logfloat-0.11.1/src/Data/Number/LogFloat.hs:25:-- (v0.8.6) Removed buggy RULES
./logfloat-0.11.1/src/Data/Number/LogFloat.hs:108:{-# RULES
./logfloat-0.11.1/src/Data/Number/LogFloat.hs:135:{-# RULES
./logfloat-0.11.1/src/Data/Number/LogFloat.hs:332:{-# RULES
./logfloat-0.12/src/Data/Number/LogFloat.hs:281:{-# RULES
./logfloat-0.12/src/Data/Number/Transfinite.hs:204:{-# RULES
./logfloat-0.12.0.1/src/Data/Number/LogFloat.hs:289:{-# RULES
./logfloat-0.12.0.1/src/Data/Number/Transfinite.hs:204:{-# RULES
./logfloat-0.12.1/src/Data/Number/LogFloat.hs:284:{-# RULES
./logfloat-0.12.1/src/Data/Number/Transfinite.hs:204:{-# RULES
./logfloat-0.13.0.1/src/Data/Number/LogFloat.hs:291:{-# RULES
./logfloat-0.13.0.1/src/Data/Number/LogFloat.hs:377:{-# RULES
./logfloat-0.13.0.1/src/Data/Number/Transfinite.hs:199:{-# RULES
./logfloat-0.13.1/src/Data/Number/LogFloat.hs:291:{-# RULES
./logfloat-0.13.1/src/Data/Number/LogFloat.hs:377:{-# RULES
./logfloat-0.13.1/src/Data/Number/Transfinite.hs:199:{-# RULES
./logfloat-0.13.2/src/Data/Number/LogFloat.hs:309:{-# RULES
./logfloat-0.13.2/src/Data/Number/LogFloat.hs:395:{-# RULES
./logfloat-0.13.2/src/Data/Number/Transfinite.hs:201:{-# RULES
./logfloat-0.13.3/src/Data/Number/LogFloat.hs:348:{-# RULES
./logfloat-0.13.3/src/Data/Number/LogFloat.hs:435:{-# RULES
./logfloat-0.13.3/src/Data/Number/Transfinite.hs:197:{-# RULES
./logfloat-0.13.3.1/src/Data/Number/LogFloat.hs:348:{-# RULES
./logfloat-0.13.3.1/src/Data/Number/LogFloat.hs:435:{-# RULES
./logfloat-0.13.3.1/src/Data/Number/Transfinite.hs:197:{-# RULES
./logfloat-0.13.3.2/src/Data/Number/LogFloat.hs:348:{-# RULES
./logfloat-0.13.3.2/src/Data/Number/LogFloat.hs:438:{-# RULES
./logfloat-0.13.3.2/src/Data/Number/Transfinite.hs:197:{-# RULES
./logfloat-0.13.3.3/src/Data/Number/LogFloat.hs:348:{-# RULES
./logfloat-0.13.3.3/src/Data/Number/LogFloat.hs:438:{-# RULES
./logfloat-0.13.3.3/src/Data/Number/Transfinite.hs:197:{-# RULES
./logfloat-0.8.3/Data/Number/LogFloat.hs:103:{-# RULES
./logfloat-0.8.3/Data/Number/LogFloat.hs:115:{-# RULES
./logfloat-0.8.3/Data/Number/LogFloat.hs:161:{-# RULES "toFractional/id" toFractional = id #-}
./logfloat-0.8.3/Data/Number/LogFloat.hs:165:{-# RULES
./logfloat-0.8.3/Data/Number/LogFloat.hs:266:{-# RULES
./logfloat-0.8.4/Data/Number/LogFloat.hs:95:{-# RULES
./logfloat-0.8.4/Data/Number/LogFloat.hs:107:{-# RULES
./logfloat-0.8.4/Data/Number/LogFloat.hs:146:{-# RULES "toFractional/id" toFractional = id #-}
./logfloat-0.8.4/Data/Number/LogFloat.hs:150:{-# RULES
./logfloat-0.8.4/Data/Number/LogFloat.hs:251:{-# RULES
./logfloat-0.8.5/Data/Number/LogFloat.hs:88:{-# RULES
./logfloat-0.8.5/Data/Number/LogFloat.hs:100:{-# RULES
./logfloat-0.8.5/Data/Number/LogFloat.hs:149:{-# RULES "toFractional/id" toFractional = id #-}
./logfloat-0.8.5/Data/Number/LogFloat.hs:153:{-# RULES
./logfloat-0.8.5/Data/Number/LogFloat.hs:259:{-# RULES
./logfloat-0.8.6/Data/Number/LogFloat.hs:25:-- (v0.8.6) Removed buggy RULES
./logfloat-0.8.6/Data/Number/LogFloat.hs:95:{-# RULES
./logfloat-0.8.6/Data/Number/LogFloat.hs:166:{-# RULES "toFractional/id" toFractional = id #-}
./logfloat-0.8.6/Data/Number/LogFloat.hs:172:{-# RULES
./logfloat-0.8.6/Data/Number/LogFloat.hs:181:{-# RULES
./logfloat-0.8.6/Data/Number/LogFloat.hs:194:{-# RULES "toFractional::Int->Double" toFractional = i2d #-}
./logfloat-0.8.6/Data/Number/LogFloat.hs:196:{-# RULES "toFractional::Int->Float"  toFractional = i2f #-}
./logfloat-0.8.6/Data/Number/LogFloat.hs:308:{-# RULES
./logfloat-0.9.0/Data/Number/LogFloat.hs:29:-- (v0.8.6) Removed buggy RULES
./logfloat-0.9.0/Data/Number/LogFloat.hs:96:{-# RULES
./logfloat-0.9.0/Data/Number/LogFloat.hs:123:{-# RULES
./logfloat-0.9.0/Data/Number/LogFloat.hs:238:{-# RULES
./logfloat-0.9.1/Data/Number/LogFloat.hs:29:-- (v0.8.6) Removed buggy RULES
./logfloat-0.9.1/Data/Number/LogFloat.hs:97:{-# RULES
./logfloat-0.9.1/Data/Number/LogFloat.hs:124:{-# RULES
./logfloat-0.9.1/Data/Number/LogFloat.hs:244:{-# RULES
./logfloat-0.9.1.1/Data/Number/LogFloat.hs:30:-- (v0.8.6) Removed buggy RULES
./logfloat-0.9.1.1/Data/Number/LogFloat.hs:98:{-# RULES
./logfloat-0.9.1.1/Data/Number/LogFloat.hs:125:{-# RULES
./logfloat-0.9.1.1/Data/Number/LogFloat.hs:245:{-# RULES
./logfloat-0.9.1.2/Data/Number/LogFloat.hs:30:-- (v0.8.6) Removed buggy RULES
./logfloat-0.9.1.2/Data/Number/LogFloat.hs:98:{-# RULES
./logfloat-0.9.1.2/Data/Number/LogFloat.hs:125:{-# RULES
./logfloat-0.9.1.2/Data/Number/LogFloat.hs:245:{-# RULES
./logfloat-0.9.1.3/Data/Number/LogFloat.hs:30:-- (v0.8.6) Removed buggy RULES
./logfloat-0.9.1.3/Data/Number/LogFloat.hs:98:{-# RULES
./logfloat-0.9.1.3/Data/Number/LogFloat.hs:125:{-# RULES
./logfloat-0.9.1.3/Data/Number/LogFloat.hs:242:{-# RULES
./machinecell-1.0.0/src/Control/Arrow/Machine/Types.hs:134:{-# RULES
./machinecell-1.0.1/src/Control/Arrow/Machine/Types.hs:134:{-# RULES
./machinecell-1.1.0/src/Control/Arrow/Machine/Types.hs:140:{-# RULES
./machinecell-1.1.1/src/Control/Arrow/Machine/Types.hs:140:{-# RULES
./machinecell-1.2.0/src/Control/Arrow/Machine/Types.hs:146:{-# RULES
./machinecell-1.3.0/src/Control/Arrow/Machine/Types.hs:146:{-# RULES
./machinecell-1.3.1/src/Control/Arrow/Machine/Types.hs:146:{-# RULES
./machinecell-2.0.0/src/Control/Arrow/Machine/Types.hs:268:{-# RULES
./machinecell-2.0.1/src/Control/Arrow/Machine/Types.hs:268:{-# RULES
./machinecell-2.1.0/src/Control/Arrow/Machine/Types.hs:268:{-# RULES
./machinecell-3.0.0/src/Control/Arrow/Machine/Types.hs:334:{-# RULES
./machinecell-3.0.1/src/Control/Arrow/Machine/Types.hs:335:{-# RULES
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:199:{-# RULES "put/String"   put = putString #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:200:{-# RULES "get/String"   get = getString #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:201:{-# RULES "put/[Int]"    put = putIntList #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:202:{-# RULES "get/[Int]"    get = getIntList #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:203:{-# RULES "put/[Int16]"  put = putInt16List #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:204:{-# RULES "get/[Int16]"  get = getInt16List #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:205:{-# RULES "put/[Int32]"  put = putInt32List #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:206:{-# RULES "get/[Int32]"  get = getInt32List #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:207:{-# RULES "put/[Float]"  put = putReal32List #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:208:{-# RULES "get/[Float]"  get = getReal32List #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:209:{-# RULES "put/[Double]" put = putReal64List #-}
./mathlink-0.1.0.0/src/Foreign/MathLink/Expressible.hs:210:{-# RULES "get/[Double]" get = getReal64List #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:199:{-# RULES "put/String"   put = putString #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:200:{-# RULES "get/String"   get = getString #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:201:{-# RULES "put/[Int]"    put = putIntList #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:202:{-# RULES "get/[Int]"    get = getIntList #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:203:{-# RULES "put/[Int16]"  put = putInt16List #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:204:{-# RULES "get/[Int16]"  get = getInt16List #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:205:{-# RULES "put/[Int32]"  put = putInt32List #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:206:{-# RULES "get/[Int32]"  get = getInt32List #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:207:{-# RULES "put/[Float]"  put = putReal32List #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:208:{-# RULES "get/[Float]"  get = getReal32List #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:209:{-# RULES "put/[Double]" put = putReal64List #-}
./mathlink-0.1.0.1/src/Foreign/MathLink/Expressible.hs:210:{-# RULES "get/[Double]" get = getReal64List #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:199:{-# RULES "put/String"   put = putString #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:200:{-# RULES "get/String"   get = getString #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:201:{-# RULES "put/[Int]"    put = putIntList #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:202:{-# RULES "get/[Int]"    get = getIntList #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:203:{-# RULES "put/[Int16]"  put = putInt16List #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:204:{-# RULES "get/[Int16]"  get = getInt16List #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:205:{-# RULES "put/[Int32]"  put = putInt32List #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:206:{-# RULES "get/[Int32]"  get = getInt32List #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:207:{-# RULES "put/[Float]"  put = putReal32List #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:208:{-# RULES "get/[Float]"  get = getReal32List #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:209:{-# RULES "put/[Double]" put = putReal64List #-}
./mathlink-0.1.0.2/src/Foreign/MathLink/Expressible.hs:210:{-# RULES "get/[Double]" get = getReal64List #-}
./matrix-0.1/Data/Matrix.hs:61:{-# RULES
./matrix-0.1.1/Data/Matrix.hs:62:{-# RULES
./matrix-0.2/Data/Matrix.hs:103:{-# RULES
./matrix-0.2.2/Data/Matrix.hs:423:{-# RULES
./matrix-0.2.2/Data/Matrix.hs:744:{-# RULES
./matrix-0.2.2/Data/Matrix.hs:772:{-# RULES
./matrix-0.2.3.0/Data/Matrix.hs:424:{-# RULES
./matrix-0.2.3.0/Data/Matrix.hs:761:{-# RULES
./matrix-0.2.3.0/Data/Matrix.hs:789:{-# RULES
./matrix-0.2.4.0/Data/Matrix.hs:427:{-# RULES
./matrix-0.2.4.0/Data/Matrix.hs:866:{-# RULES
./matrix-0.2.4.0/Data/Matrix.hs:894:{-# RULES
./matrix-0.3.0.0/Data/Matrix.hs:449:{-# RULES
./matrix-0.3.0.0/Data/Matrix.hs:912:{-# RULES
./matrix-0.3.0.0/Data/Matrix.hs:940:{-# RULES
./matrix-0.3.1.0/Data/Matrix.hs:473:{-# RULES
./matrix-0.3.1.0/Data/Matrix.hs:936:{-# RULES
./matrix-0.3.1.0/Data/Matrix.hs:964:{-# RULES
./matrix-0.3.1.1/Data/Matrix.hs:495:{-# RULES
./matrix-0.3.1.1/Data/Matrix.hs:958:{-# RULES
./matrix-0.3.1.1/Data/Matrix.hs:986:{-# RULES
./matrix-0.3.2.0/Data/Matrix.hs:538:{-# RULES
./matrix-0.3.2.0/Data/Matrix.hs:1056:{-# RULES
./matrix-0.3.2.0/Data/Matrix.hs:1084:{-# RULES
./matrix-0.3.3.0/Data/Matrix.hs:552:{-# RULES
./matrix-0.3.3.0/Data/Matrix.hs:1138:{-# RULES
./matrix-0.3.3.0/Data/Matrix.hs:1166:{-# RULES
./matrix-0.3.4.0/Data/Matrix.hs:587:{-# RULES
./matrix-0.3.4.0/Data/Matrix.hs:1178:{-# RULES
./matrix-0.3.4.0/Data/Matrix.hs:1206:{-# RULES
./matrix-0.3.4.1/Data/Matrix.hs:589:{-# RULES
./matrix-0.3.4.1/Data/Matrix.hs:1180:{-# RULES
./matrix-0.3.4.1/Data/Matrix.hs:1208:{-# RULES
./matrix-0.3.4.2/Data/Matrix.hs:593:{-# RULES
./matrix-0.3.4.2/Data/Matrix.hs:1184:{-# RULES
./matrix-0.3.4.2/Data/Matrix.hs:1212:{-# RULES
./matrix-0.3.4.3/Data/Matrix.hs:593:{-# RULES
./matrix-0.3.4.3/Data/Matrix.hs:1184:{-# RULES
./matrix-0.3.4.3/Data/Matrix.hs:1212:{-# RULES
./matrix-0.3.4.4/Data/Matrix.hs:593:{-# RULES
./matrix-0.3.4.4/Data/Matrix.hs:1184:{-# RULES
./matrix-0.3.4.4/Data/Matrix.hs:1212:{-# RULES
./memory-0.1/Data/ByteArray/Pack.hs:92:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.10/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.11/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.2/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.3/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.4/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.5/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.6/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.7/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.8/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./memory-0.9/Data/ByteArray/Pack.hs:98:{-# RULES "fillUpWithWord8" forall s . fillUpWith s = fillUpWithWord8' s #-}
./MemoTrie-0.0/src/Data/MemoTrie.hs:35:{-# RULES
./MemoTrie-0.1/src/Data/MemoTrie.hs:39:{-# RULES
./MemoTrie-0.2/src/Data/MemoTrie.hs:39:{-# RULES
./MemoTrie-0.4/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4/src/Data/MemoTrie.hs:44:{-# RULES
./MemoTrie-0.4.1/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.1/src/Data/MemoTrie.hs:43:{-# RULES
./MemoTrie-0.4.10/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.10/src/Data/MemoTrie.hs:91:{-# RULES
./MemoTrie-0.4.11/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.11/src/Data/MemoTrie.hs:91:{-# RULES
./MemoTrie-0.4.12/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.12/src/Data/MemoTrie.hs:93:{-# RULES
./MemoTrie-0.4.13/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.13/src/Data/MemoTrie.hs:100:{-# RULES
./MemoTrie-0.4.2/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.2/src/Data/MemoTrie.hs:44:{-# RULES
./MemoTrie-0.4.3/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.3/src/Data/MemoTrie.hs:44:{-# RULES
./MemoTrie-0.4.5/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.5/src/Data/MemoTrie.hs:62:{-# RULES
./MemoTrie-0.4.7/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.7/src/Data/MemoTrie.hs:62:{-# RULES
./MemoTrie-0.4.8/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.8/src/Data/MemoTrie.hs:91:{-# RULES
./MemoTrie-0.4.9/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.4.9/src/Data/MemoTrie.hs:91:{-# RULES
./MemoTrie-0.5/src/Data/MemoTrie.hs:4:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.5/src/Data/MemoTrie.hs:100:{-# RULES
./MemoTrie-0.6.1/src/Data/MemoTrie.hs:5:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.6.1/src/Data/MemoTrie.hs:101:{-# RULES
./MemoTrie-0.6.2/src/Data/MemoTrie.hs:5:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.6.2/src/Data/MemoTrie.hs:101:{-# RULES "trie/untrie"   forall t. trie (untrie t) = t #-}
./MemoTrie-0.6.3/src/Data/MemoTrie.hs:6:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.6.3/src/Data/MemoTrie.hs:123:{-# RULES "trie/untrie"   forall t. trie (untrie t) = t #-}
./MemoTrie-0.6.4/src/Data/MemoTrie.hs:7:-- supposed to be recognized in a RULES pragma.
./MemoTrie-0.6.4/src/Data/MemoTrie.hs:131:{-# RULES "trie/untrie"   forall t. trie (untrie t) = t #-}
./microlens-0.1.5.0/src/Lens/Micro/Internal.hs:56:{-# RULES
./microlens-0.2.0.0/src/Lens/Micro/Internal.hs:56:{-# RULES
./microlens-0.3.0.0/src/Lens/Micro/Internal.hs:80:{-# RULES
./microlens-0.3.1.0/src/Lens/Micro/Internal.hs:80:{-# RULES
./microlens-0.3.2.0/src/Lens/Micro/Internal.hs:81:{-# RULES
./microlens-0.3.3.0/src/Lens/Micro/Internal.hs:82:{-# RULES
./microlens-0.3.4.0/src/Lens/Micro/Internal.hs:82:{-# RULES
./microlens-0.3.4.1/src/Lens/Micro/Internal.hs:82:{-# RULES
./microlens-0.3.5.0/src/Lens/Micro/Internal.hs:82:{-# RULES
./microlens-0.3.5.1/src/Lens/Micro/Internal.hs:82:{-# RULES
./microlens-0.4.0.0/src/Lens/Micro/Internal.hs:85:{-# RULES
./microlens-0.4.0.1/src/Lens/Micro/Internal.hs:85:{-# RULES
./microlens-0.4.1.0/src/Lens/Micro/Internal.hs:86:{-# RULES
./microlens-0.4.2.0/src/Lens/Micro/Internal.hs:86:{-# RULES
./microlens-ghc-0.1.0.0/src/Lens/Micro/GHC.hs:218:{-# RULES
./microlens-ghc-0.1.0.0/src/Lens/Micro/GHC.hs:249:{-# RULES
./microlens-ghc-0.1.0.1/src/Lens/Micro/GHC.hs:218:{-# RULES
./microlens-ghc-0.1.0.1/src/Lens/Micro/GHC.hs:249:{-# RULES
./microlens-ghc-0.2.0.0/src/Lens/Micro/GHC.hs:258:{-# RULES
./microlens-ghc-0.2.0.0/src/Lens/Micro/GHC.hs:289:{-# RULES
./microlens-ghc-0.2.1.0/src/Lens/Micro/GHC.hs:259:{-# RULES
./microlens-ghc-0.2.1.0/src/Lens/Micro/GHC.hs:290:{-# RULES
./microlens-ghc-0.3.0.0/src/Lens/Micro/GHC.hs:260:{-# RULES
./microlens-ghc-0.3.0.0/src/Lens/Micro/GHC.hs:291:{-# RULES
./microlens-ghc-0.3.1.0/src/Lens/Micro/GHC.hs:260:{-# RULES
./microlens-ghc-0.3.1.0/src/Lens/Micro/GHC.hs:291:{-# RULES
./microlens-ghc-0.4.0.0/src/Lens/Micro/GHC.hs:260:{-# RULES
./microlens-ghc-0.4.0.0/src/Lens/Micro/GHC.hs:291:{-# RULES
./microlens-ghc-0.4.1.0/src/Lens/Micro/GHC/Internal.hs:192:{-# RULES
./microlens-ghc-0.4.1.0/src/Lens/Micro/GHC/Internal.hs:215:{-# RULES
./microlens-ghc-0.4.1.0/src/Lens/Micro/GHC/Internal.hs:233:{-# RULES
./microlens-ghc-0.4.1.0/src/Lens/Micro/GHC/Internal.hs:251:{-# RULES
./microlens-ghc-0.4.2.0/src/Lens/Micro/GHC/Internal.hs:192:{-# RULES
./microlens-ghc-0.4.2.0/src/Lens/Micro/GHC/Internal.hs:215:{-# RULES
./microlens-ghc-0.4.2.0/src/Lens/Micro/GHC/Internal.hs:233:{-# RULES
./microlens-ghc-0.4.2.0/src/Lens/Micro/GHC/Internal.hs:251:{-# RULES
./microlens-platform-0.1.0.0/src/Lens/Micro/Platform.hs:243:{-# RULES
./microlens-platform-0.1.0.0/src/Lens/Micro/Platform.hs:256:{-# RULES
./microlens-platform-0.1.0.0/src/Lens/Micro/Platform.hs:265:{-# RULES
./microlens-platform-0.1.1.0/src/Lens/Micro/Platform.hs:243:{-# RULES
./microlens-platform-0.1.1.0/src/Lens/Micro/Platform.hs:256:{-# RULES
./microlens-platform-0.1.1.0/src/Lens/Micro/Platform.hs:265:{-# RULES
./microlens-platform-0.1.2.0/src/Lens/Micro/Platform.hs:243:{-# RULES
./microlens-platform-0.1.2.0/src/Lens/Micro/Platform.hs:256:{-# RULES
./microlens-platform-0.1.2.0/src/Lens/Micro/Platform.hs:265:{-# RULES
./microlens-platform-0.1.3.0/src/Lens/Micro/Platform.hs:244:{-# RULES
./microlens-platform-0.1.3.0/src/Lens/Micro/Platform.hs:257:{-# RULES
./microlens-platform-0.1.3.0/src/Lens/Micro/Platform.hs:266:{-# RULES
./microlens-platform-0.1.4.0/src/Lens/Micro/Platform.hs:240:{-# RULES
./microlens-platform-0.1.4.0/src/Lens/Micro/Platform.hs:253:{-# RULES
./microlens-platform-0.1.4.0/src/Lens/Micro/Platform.hs:262:{-# RULES
./microlens-platform-0.1.5.0/src/Lens/Micro/Platform.hs:240:{-# RULES
./microlens-platform-0.1.5.0/src/Lens/Micro/Platform.hs:253:{-# RULES
./microlens-platform-0.1.5.0/src/Lens/Micro/Platform.hs:262:{-# RULES
./microlens-platform-0.1.6.0/src/Lens/Micro/Platform.hs:247:{-# RULES
./microlens-platform-0.1.6.0/src/Lens/Micro/Platform.hs:260:{-# RULES
./microlens-platform-0.1.6.0/src/Lens/Micro/Platform.hs:269:{-# RULES
./microlens-platform-0.1.7.0/src/Lens/Micro/Platform.hs:247:{-# RULES
./microlens-platform-0.1.7.0/src/Lens/Micro/Platform.hs:260:{-# RULES
./microlens-platform-0.1.7.0/src/Lens/Micro/Platform.hs:269:{-# RULES
./microlens-platform-0.2.0.0/src/Lens/Micro/Platform.hs:247:{-# RULES
./microlens-platform-0.2.0.0/src/Lens/Micro/Platform.hs:260:{-# RULES
./microlens-platform-0.2.0.0/src/Lens/Micro/Platform.hs:269:{-# RULES
./microlens-platform-0.2.1.0/src/Lens/Micro/Platform.hs:251:{-# RULES
./microlens-platform-0.2.1.0/src/Lens/Micro/Platform.hs:264:{-# RULES
./microlens-platform-0.2.1.0/src/Lens/Micro/Platform.hs:273:{-# RULES
./microlens-platform-0.2.2.0/src/Lens/Micro/Platform.hs:251:{-# RULES
./microlens-platform-0.2.2.0/src/Lens/Micro/Platform.hs:264:{-# RULES
./microlens-platform-0.2.2.0/src/Lens/Micro/Platform.hs:273:{-# RULES
./microlens-platform-0.2.3.0/src/Lens/Micro/Platform.hs:251:{-# RULES
./microlens-platform-0.2.3.0/src/Lens/Micro/Platform.hs:264:{-# RULES
./microlens-platform-0.2.3.0/src/Lens/Micro/Platform.hs:273:{-# RULES
./MonadCompose-0.8.3.0/Control/Linear.hs:136:{-# RULES
./MonadCompose-0.8.3.0/Control/Monad/IOT.hs:110:{-# RULES
./MonadCompose-0.8.3.1/Control/Monad/IOT.hs:110:{-# RULES
./MonadCompose-0.8.4.0/Control/Monad/IOT.hs:110:{-# RULES
./MonadCompose-0.8.4.1/Control/Monad/IOT.hs:110:{-# RULES
./MonadCompose-0.8.4.2/Control/Monad/IOT.hs:110:{-# RULES
./monadiccp-0.7.2/Control/Search/Generator.hs:677:{-# RULES
./monadiccp-0.7.2/Control/Search/Generator.hs:680:{-# RULES
./monadiccp-0.7.2/Control/Search/Generator.hs:683:{-# RULES
./monadiccp-0.7.2/Control/Search/Generator.hs:686:{-# RULES
./monadiccp-0.7.2/Control/Search/Generator.hs:689:{-# RULES
./monadiccp-0.7.3/Control/Search/Generator.hs:677:{-# RULES
./monadiccp-0.7.3/Control/Search/Generator.hs:680:{-# RULES
./monadiccp-0.7.3/Control/Search/Generator.hs:683:{-# RULES
./monadiccp-0.7.3/Control/Search/Generator.hs:686:{-# RULES
./monadiccp-0.7.3/Control/Search/Generator.hs:689:{-# RULES
./monadiccp-0.7.4/Control/Search/Generator.hs:677:{-# RULES
./monadiccp-0.7.4/Control/Search/Generator.hs:680:{-# RULES
./monadiccp-0.7.4/Control/Search/Generator.hs:683:{-# RULES
./monadiccp-0.7.4/Control/Search/Generator.hs:686:{-# RULES
./monadiccp-0.7.4/Control/Search/Generator.hs:689:{-# RULES
./monadiccp-0.7.5/Control/Search/Generator.hs:677:{-# RULES
./monadiccp-0.7.5/Control/Search/Generator.hs:680:{-# RULES
./monadiccp-0.7.5/Control/Search/Generator.hs:683:{-# RULES
./monadiccp-0.7.5/Control/Search/Generator.hs:686:{-# RULES
./monadiccp-0.7.5/Control/Search/Generator.hs:689:{-# RULES
./monadiccp-0.7.6/Control/Search/Generator.hs:677:{-# RULES
./monadiccp-0.7.6/Control/Search/Generator.hs:680:{-# RULES
./monadiccp-0.7.6/Control/Search/Generator.hs:683:{-# RULES
./monadiccp-0.7.6/Control/Search/Generator.hs:686:{-# RULES
./monadiccp-0.7.6/Control/Search/Generator.hs:689:{-# RULES
./monoids-0.1.10/Data/Monoid/Applicative.hs:46:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.10/Data/Monoid/Applicative.hs:47:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.10/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.10/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.13/Data/Monoid/Applicative.hs:46:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.13/Data/Monoid/Applicative.hs:47:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.13/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.13/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.17/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.17/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.17/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.17/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.19/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.19/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.19/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.19/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.2/Data/Monoid/Applicative.hs:26:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.2/Data/Monoid/Applicative.hs:27:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.2/Data/Monoid/Monad.hs:24:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.2/Data/Monoid/Monad.hs:25:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.20/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.20/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.20/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.20/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.21/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.21/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.21/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.21/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.25/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.25/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.25/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.25/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.28/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.28/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.28/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.28/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.30/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.30/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.30/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.30/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.31/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.31/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.31/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.31/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.32/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.32/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.32/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.32/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.33/Data/Monoid/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.33/Data/Monoid/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.33/Data/Monoid/Monad.hs:49:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.33/Data/Monoid/Monad.hs:50:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.36/Data/Monoid/Applicative.hs:49:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.36/Data/Monoid/Applicative.hs:50:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.36/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.36/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.5/Data/Monoid/Applicative.hs:43:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.5/Data/Monoid/Applicative.hs:44:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.5/Data/Monoid/Monad.hs:45:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.5/Data/Monoid/Monad.hs:46:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.8/Data/Monoid/Applicative.hs:46:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.8/Data/Monoid/Applicative.hs:47:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.8/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.8/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.1.9/Data/Monoid/Applicative.hs:46:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.1.9/Data/Monoid/Applicative.hs:47:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.1.9/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.1.9/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.2.0/Data/Monoid/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.2.0/Data/Monoid/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.2.0/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.2.0/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.2.0.1/Data/Monoid/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.2.0.1/Data/Monoid/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.2.0.1/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.2.0.1/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.2.0.2/Data/Monoid/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.2.0.2/Data/Monoid/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.2.0.2/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.2.0.2/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.2.0.3/Data/Monoid/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.2.0.3/Data/Monoid/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.2.0.3/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.2.0.3/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.2.0.4/Data/Monoid/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.2.0.4/Data/Monoid/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.2.0.4/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.2.0.4/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monoids-0.3.2/Data/Monoid/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./monoids-0.3.2/Data/Monoid/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./monoids-0.3.2/Data/Monoid/Monad.hs:48:{-# RULES "unitAction" unit = Action #-}
./monoids-0.3.2/Data/Monoid/Monad.hs:49:{-# RULES "snocAction" snoc = snocAction #-} 
./monte-carlo-0.2/lib/Control/Monad/MC/Sample.hs:72:{-# RULES "sampleHelp/Double" forall n xs f.
./monte-carlo-0.2/lib/Control/Monad/MC/Sample.hs:74:{-# RULES "sampleHelp/Int" forall n xs f.
./monte-carlo-0.2/lib/Control/Monad/MC/Sample.hs:87:{-# RULES "sampleListHelp/Double" forall n xs f.
./monte-carlo-0.2/lib/Control/Monad/MC/Sample.hs:89:{-# RULES "sampleListHelp/Int" forall n xs f.
./monte-carlo-0.2/lib/Control/Monad/MC/Sample.hs:172:{-# RULES "shuffle/Double" forall n xs.
./monte-carlo-0.2/lib/Control/Monad/MC/Sample.hs:174:{-# RULES "shuffle/Int" forall n xs.
./monte-carlo-0.3/lib/Control/Monad/MC/Sample.hs:86:{-# RULES "sampleHelp/Double" forall n xs f.
./monte-carlo-0.3/lib/Control/Monad/MC/Sample.hs:88:{-# RULES "sampleHelp/Int" forall n xs f.
./monte-carlo-0.3/lib/Control/Monad/MC/Sample.hs:102:{-# RULES "sampleListHelp/Double" forall n xs f.
./monte-carlo-0.3/lib/Control/Monad/MC/Sample.hs:104:{-# RULES "sampleListHelp/Int" forall n xs f.
./monte-carlo-0.3/lib/Control/Monad/MC/Sample.hs:196:{-# RULES "shuffle/Double" forall xs.
./monte-carlo-0.3/lib/Control/Monad/MC/Sample.hs:198:{-# RULES "shuffle/Int" forall xs.
./monte-carlo-0.3.1/lib/Control/Monad/MC/Sample.hs:86:{-# RULES "sampleHelp/Double" forall n xs f.
./monte-carlo-0.3.1/lib/Control/Monad/MC/Sample.hs:88:{-# RULES "sampleHelp/Int" forall n xs f.
./monte-carlo-0.3.1/lib/Control/Monad/MC/Sample.hs:102:{-# RULES "sampleListHelp/Double" forall n xs f.
./monte-carlo-0.3.1/lib/Control/Monad/MC/Sample.hs:104:{-# RULES "sampleListHelp/Int" forall n xs f.
./monte-carlo-0.3.1/lib/Control/Monad/MC/Sample.hs:196:{-# RULES "shuffle/Double" forall xs.
./monte-carlo-0.3.1/lib/Control/Monad/MC/Sample.hs:198:{-# RULES "shuffle/Int" forall xs.
./monte-carlo-0.4/lib/Control/Monad/MC/Sample.hs:108:{-# RULES "sampleHelp/Double" forall n xs f.
./monte-carlo-0.4/lib/Control/Monad/MC/Sample.hs:110:{-# RULES "sampleHelp/Int" forall n xs f.
./monte-carlo-0.4/lib/Control/Monad/MC/Sample.hs:124:{-# RULES "sampleListHelp/Double" forall n xs f.
./monte-carlo-0.4/lib/Control/Monad/MC/Sample.hs:126:{-# RULES "sampleListHelp/Int" forall n xs f.
./monte-carlo-0.4/lib/Control/Monad/MC/Sample.hs:270:{-# RULES "shuffle/Double" forall xs.
./monte-carlo-0.4/lib/Control/Monad/MC/Sample.hs:272:{-# RULES "shuffle/Int" forall xs.
./monte-carlo-0.4.1/lib/Control/Monad/MC/Sample.hs:108:{-# RULES "sampleHelp/Double" forall n xs f.
./monte-carlo-0.4.1/lib/Control/Monad/MC/Sample.hs:110:{-# RULES "sampleHelp/Int" forall n xs f.
./monte-carlo-0.4.1/lib/Control/Monad/MC/Sample.hs:124:{-# RULES "sampleListHelp/Double" forall n xs f.
./monte-carlo-0.4.1/lib/Control/Monad/MC/Sample.hs:126:{-# RULES "sampleListHelp/Int" forall n xs f.
./monte-carlo-0.4.1/lib/Control/Monad/MC/Sample.hs:272:{-# RULES "shuffle/Double" forall xs.
./monte-carlo-0.4.1/lib/Control/Monad/MC/Sample.hs:274:{-# RULES "shuffle/Int" forall xs.
./monte-carlo-0.4.2/lib/Control/Monad/MC/Sample.hs:109:{-# RULES "sampleHelp/Double" forall n xs f.
./monte-carlo-0.4.2/lib/Control/Monad/MC/Sample.hs:111:{-# RULES "sampleHelp/Int" forall n xs f.
./monte-carlo-0.4.2/lib/Control/Monad/MC/Sample.hs:125:{-# RULES "sampleListHelp/Double" forall n xs f.
./monte-carlo-0.4.2/lib/Control/Monad/MC/Sample.hs:127:{-# RULES "sampleListHelp/Int" forall n xs f.
./monte-carlo-0.4.2/lib/Control/Monad/MC/Sample.hs:278:{-# RULES "shuffle/Double" forall xs.
./monte-carlo-0.4.2/lib/Control/Monad/MC/Sample.hs:280:{-# RULES "shuffle/Int" forall xs.
./monte-carlo-0.5/lib/Control/Monad/MC/Sample.hs:109:{-# RULES "sampleHelp/Double" forall n xs f.
./monte-carlo-0.5/lib/Control/Monad/MC/Sample.hs:111:{-# RULES "sampleHelp/Int" forall n xs f.
./monte-carlo-0.5/lib/Control/Monad/MC/Sample.hs:125:{-# RULES "sampleListHelp/Double" forall n xs f.
./monte-carlo-0.5/lib/Control/Monad/MC/Sample.hs:127:{-# RULES "sampleListHelp/Int" forall n xs f.
./monte-carlo-0.5/lib/Control/Monad/MC/Sample.hs:278:{-# RULES "shuffle/Double" forall xs.
./monte-carlo-0.5/lib/Control/Monad/MC/Sample.hs:280:{-# RULES "shuffle/Int" forall xs.
./natural-numbers-0.1.1.1/src/Data/Natural.hs:21:    {-# RULES
./natural-numbers-0.1.2.0/src/Data/Natural.hs:25:    {-# RULES
./natural-transformation-0.2/src/Control/Transformation.hs:36:-- {-# RULES "natural free theorem" [~] 
./natural-transformation-0.3/src/Control/Natural/RULES.hs:8:Module:      Control.Transformation.RULES
./natural-transformation-0.3/src/Control/Natural/RULES.hs:18:  RULES "natural free theorem" [~]
./natural-transformation-0.3/src/Control/Natural/RULES.hs:24:module Control.Natural.RULES () where
./natural-transformation-0.3/src/Control/Natural/RULES.hs:28:{-# RULES "natural free theorem" [~]
./natural-transformation-0.3.1/src/Control/Natural/RULES.hs:8:Module:      Control.Transformation.RULES
./natural-transformation-0.3.1/src/Control/Natural/RULES.hs:18:  RULES "natural free theorem" [~]
./natural-transformation-0.3.1/src/Control/Natural/RULES.hs:24:module Control.Natural.RULES () where
./natural-transformation-0.3.1/src/Control/Natural/RULES.hs:28:{-# RULES "natural free theorem" [~]
./nehe-tuts-0.2.0/lesson11.hs:139:  -- This line is extremely slow, because a RULES is missing
./network-dns-1.0/src/Network/DNS.hs:110:{-# RULES "toAscii/HostName" toAscii = hostName #-}
./network-dns-1.0/src/Network/DNS.hs:111:{-# RULES "toUtf8/HostName"  toUtf8  = hostName #-}
./network-dns-1.0.0.1/src/Network/DNS.hs:110:{-# RULES "toAscii/HostName" toAscii = hostName #-}
./network-dns-1.0.0.1/src/Network/DNS.hs:111:{-# RULES "toUtf8/HostName"  toUtf8  = hostName #-}
./NewBinary-0.1/NewBinary/Binary.hs:678:{- RULES get = getMaybeInt -}
./NewBinary-0.1.1/NewBinary/Binary.hs:678:{- RULES get = getMaybeInt -}
./NewBinary-0.2.1/NewBinary/Binary.hs:679:{- RULES get = getMaybeInt -}
./NonEmptyList-0.0.4/Data/List/NonEmpty.hs:86:{-# RULES "toList/fromNonEmpty" toList = fromNonEmpty #-}
./numeric-prelude-0.0.4/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.0.4/src/Algebra/RealField.hs:2:-- -fglasgow-exts for RULES
./numeric-prelude-0.0.4/src/Algebra/RealField.hs:222:{-# RULES
./numeric-prelude-0.0.4/src/Algebra/RealField.hs:237:{-# RULES
./numeric-prelude-0.0.4/src/Algebra/ToInteger.hs:2:-- -fglasgow-exts for RULES
./numeric-prelude-0.0.4/src/Algebra/ToInteger.hs:52:{-# RULES
./numeric-prelude-0.0.4/src/Number/Complex.hs:202:{-# RULES
./numeric-prelude-0.0.4/src/Number/Complex.hs:393:{-# RULES
./numeric-prelude-0.0.5/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.0.5/src/Algebra/RealField.hs:2:-- -fglasgow-exts for RULES
./numeric-prelude-0.0.5/src/Algebra/RealField.hs:222:{-# RULES
./numeric-prelude-0.0.5/src/Algebra/RealField.hs:237:{-# RULES
./numeric-prelude-0.0.5/src/Algebra/ToInteger.hs:2:-- -fglasgow-exts for RULES
./numeric-prelude-0.0.5/src/Algebra/ToInteger.hs:52:{-# RULES
./numeric-prelude-0.0.5/src/Number/Complex.hs:210:{-# RULES
./numeric-prelude-0.0.5/src/Number/Complex.hs:401:{-# RULES
./numeric-prelude-0.1/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.1/src/Algebra/RealField.hs:3:-- -fglasgow-exts for RULES
./numeric-prelude-0.1/src/Algebra/RealField.hs:223:{-# RULES
./numeric-prelude-0.1/src/Algebra/RealField.hs:238:{-# RULES
./numeric-prelude-0.1/src/Algebra/ToInteger.hs:3:-fglasgow-exts for RULES
./numeric-prelude-0.1/src/Algebra/ToInteger.hs:59:{-# RULES
./numeric-prelude-0.1/src/Number/Complex.hs:214:{-# RULES
./numeric-prelude-0.1/src/Number/Complex.hs:405:{-# RULES
./numeric-prelude-0.1.1/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.1.1/src/Algebra/RealField.hs:3:-- -fglasgow-exts for RULES
./numeric-prelude-0.1.1/src/Algebra/RealField.hs:223:{-# RULES
./numeric-prelude-0.1.1/src/Algebra/RealField.hs:238:{-# RULES
./numeric-prelude-0.1.1/src/Algebra/ToInteger.hs:3:-fglasgow-exts for RULES
./numeric-prelude-0.1.1/src/Algebra/ToInteger.hs:59:{-# RULES
./numeric-prelude-0.1.1/src/Number/Complex.hs:238:{-# RULES
./numeric-prelude-0.1.1/src/Number/Complex.hs:430:{-# RULES
./numeric-prelude-0.1.2/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.1.2/src/Algebra/RealField.hs:3:-- -fglasgow-exts for RULES
./numeric-prelude-0.1.2/src/Algebra/RealField.hs:223:{-# RULES
./numeric-prelude-0.1.2/src/Algebra/RealField.hs:238:{-# RULES
./numeric-prelude-0.1.2/src/Algebra/ToInteger.hs:3:-fglasgow-exts for RULES
./numeric-prelude-0.1.2/src/Algebra/ToInteger.hs:59:{-# RULES
./numeric-prelude-0.1.2/src/Number/Complex.hs:238:{-# RULES
./numeric-prelude-0.1.2/src/Number/Complex.hs:430:{-# RULES
./numeric-prelude-0.1.3/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.1.3/src/Algebra/RealField.hs:3:-- -fglasgow-exts for RULES
./numeric-prelude-0.1.3/src/Algebra/RealField.hs:229:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.1.3/src/Algebra/RealField.hs:241:{-# RULES
./numeric-prelude-0.1.3/src/Algebra/RealField.hs:256:{-# RULES
./numeric-prelude-0.1.3/src/Algebra/ToInteger.hs:3:-fglasgow-exts for RULES
./numeric-prelude-0.1.3/src/Algebra/ToInteger.hs:59:{-# RULES
./numeric-prelude-0.1.3/src/Number/Complex.hs:238:{-# RULES
./numeric-prelude-0.1.3/src/Number/Complex.hs:430:{-# RULES
./numeric-prelude-0.1.3.1/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.1.3.1/src/Algebra/RealField.hs:3:-- -fglasgow-exts for RULES
./numeric-prelude-0.1.3.1/src/Algebra/RealField.hs:229:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.1.3.1/src/Algebra/RealField.hs:241:{-# RULES
./numeric-prelude-0.1.3.1/src/Algebra/RealField.hs:256:{-# RULES
./numeric-prelude-0.1.3.1/src/Algebra/ToInteger.hs:3:-fglasgow-exts for RULES
./numeric-prelude-0.1.3.1/src/Algebra/ToInteger.hs:59:{-# RULES
./numeric-prelude-0.1.3.1/src/Number/Complex.hs:236:{-# RULES
./numeric-prelude-0.1.3.1/src/Number/Complex.hs:428:{-# RULES
./numeric-prelude-0.1.3.2/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.1.3.2/src/Algebra/RealField.hs:3:-- -fglasgow-exts for RULES
./numeric-prelude-0.1.3.2/src/Algebra/RealField.hs:229:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.1.3.2/src/Algebra/RealField.hs:241:{-# RULES
./numeric-prelude-0.1.3.2/src/Algebra/RealField.hs:256:{-# RULES
./numeric-prelude-0.1.3.2/src/Algebra/ToInteger.hs:3:-fglasgow-exts for RULES
./numeric-prelude-0.1.3.2/src/Algebra/ToInteger.hs:59:{-# RULES
./numeric-prelude-0.1.3.2/src/Number/Complex.hs:236:{-# RULES
./numeric-prelude-0.1.3.2/src/Number/Complex.hs:428:{-# RULES
./numeric-prelude-0.1.3.3/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.1.3.3/src/Algebra/RealField.hs:3:-- -fglasgow-exts for RULES
./numeric-prelude-0.1.3.3/src/Algebra/RealField.hs:229:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.1.3.3/src/Algebra/RealField.hs:241:{-# RULES
./numeric-prelude-0.1.3.3/src/Algebra/RealField.hs:256:{-# RULES
./numeric-prelude-0.1.3.3/src/Algebra/ToInteger.hs:3:-fglasgow-exts for RULES
./numeric-prelude-0.1.3.3/src/Algebra/ToInteger.hs:59:{-# RULES
./numeric-prelude-0.1.3.3/src/Number/Complex.hs:236:{-# RULES
./numeric-prelude-0.1.3.3/src/Number/Complex.hs:428:{-# RULES
./numeric-prelude-0.1.3.4/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.1.3.4/src/Algebra/RealField.hs:3:-- -fglasgow-exts for RULES
./numeric-prelude-0.1.3.4/src/Algebra/RealField.hs:229:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.1.3.4/src/Algebra/RealField.hs:241:{-# RULES
./numeric-prelude-0.1.3.4/src/Algebra/RealField.hs:256:{-# RULES
./numeric-prelude-0.1.3.4/src/Algebra/ToInteger.hs:3:-fglasgow-exts for RULES
./numeric-prelude-0.1.3.4/src/Algebra/ToInteger.hs:59:{-# RULES
./numeric-prelude-0.1.3.4/src/Number/Complex.hs:236:{-# RULES
./numeric-prelude-0.1.3.4/src/Number/Complex.hs:428:{-# RULES
./numeric-prelude-0.2/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.2/src/Algebra/RealRing.hs:3:-- -fglasgow-exts for RULES
./numeric-prelude-0.2/src/Algebra/RealRing.hs:311:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.2/src/Algebra/RealRing.hs:323:{-# RULES
./numeric-prelude-0.2/src/Algebra/RealRing.hs:340:{-# RULES
./numeric-prelude-0.2/src/Algebra/ToInteger.hs:3:-fglasgow-exts for RULES
./numeric-prelude-0.2/src/Algebra/ToInteger.hs:59:{-# RULES
./numeric-prelude-0.2/src/Algebra/ToRational.hs:73:{-# RULES
./numeric-prelude-0.2/src/Number/Complex.hs:247:{-# RULES
./numeric-prelude-0.2/src/Number/Complex.hs:447:{-# RULES
./numeric-prelude-0.2.1/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.2.1/src/Algebra/RealRing.hs:309:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.2.1/src/Algebra/RealRing.hs:321:{-# RULES
./numeric-prelude-0.2.1/src/Algebra/RealRing.hs:338:{-# RULES
./numeric-prelude-0.2.1/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.2.1/src/Algebra/ToRational.hs:73:{-# RULES
./numeric-prelude-0.2.1/src/Number/Complex.hs:251:{-# RULES
./numeric-prelude-0.2.1/src/Number/Complex.hs:449:{-# RULES
./numeric-prelude-0.2.1/src-ghc-6.12/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.2.1/src-ghc-6.12/Algebra/RealRing.hs:309:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.2.1/src-ghc-6.12/Algebra/RealRing.hs:321:{-# RULES
./numeric-prelude-0.2.1/src-ghc-6.12/Algebra/RealRing.hs:338:{-# RULES
./numeric-prelude-0.2.1/src-ghc-6.12/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.2.1/src-ghc-6.12/Algebra/ToRational.hs:73:{-# RULES
./numeric-prelude-0.2.1/src-ghc-6.12/Number/Complex.hs:251:{-# RULES
./numeric-prelude-0.2.1/src-ghc-6.12/Number/Complex.hs:449:{-# RULES
./numeric-prelude-0.2.2/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.2.2/src/Algebra/RealRing.hs:309:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.2.2/src/Algebra/RealRing.hs:321:{-# RULES
./numeric-prelude-0.2.2/src/Algebra/RealRing.hs:338:{-# RULES
./numeric-prelude-0.2.2/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.2.2/src/Algebra/ToRational.hs:73:{-# RULES
./numeric-prelude-0.2.2/src/Number/Complex.hs:251:{-# RULES
./numeric-prelude-0.2.2/src/Number/Complex.hs:449:{-# RULES
./numeric-prelude-0.2.2/src-ghc-6.12/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.2.2/src-ghc-6.12/Algebra/RealRing.hs:309:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.2.2/src-ghc-6.12/Algebra/RealRing.hs:321:{-# RULES
./numeric-prelude-0.2.2/src-ghc-6.12/Algebra/RealRing.hs:338:{-# RULES
./numeric-prelude-0.2.2/src-ghc-6.12/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.2.2/src-ghc-6.12/Algebra/ToRational.hs:73:{-# RULES
./numeric-prelude-0.2.2/src-ghc-6.12/Number/Complex.hs:251:{-# RULES
./numeric-prelude-0.2.2/src-ghc-6.12/Number/Complex.hs:449:{-# RULES
./numeric-prelude-0.2.2.1/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.2.2.1/src/Algebra/RealRing.hs:309:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.2.2.1/src/Algebra/RealRing.hs:321:{-# RULES
./numeric-prelude-0.2.2.1/src/Algebra/RealRing.hs:338:{-# RULES
./numeric-prelude-0.2.2.1/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.2.2.1/src/Algebra/ToRational.hs:73:{-# RULES
./numeric-prelude-0.2.2.1/src/Number/Complex.hs:251:{-# RULES
./numeric-prelude-0.2.2.1/src/Number/Complex.hs:449:{-# RULES
./numeric-prelude-0.2.2.1/src-ghc-6.12/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.2.2.1/src-ghc-6.12/Algebra/RealRing.hs:309:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.2.2.1/src-ghc-6.12/Algebra/RealRing.hs:321:{-# RULES
./numeric-prelude-0.2.2.1/src-ghc-6.12/Algebra/RealRing.hs:338:{-# RULES
./numeric-prelude-0.2.2.1/src-ghc-6.12/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.2.2.1/src-ghc-6.12/Algebra/ToRational.hs:73:{-# RULES
./numeric-prelude-0.2.2.1/src-ghc-6.12/Number/Complex.hs:251:{-# RULES
./numeric-prelude-0.2.2.1/src-ghc-6.12/Number/Complex.hs:449:{-# RULES
./numeric-prelude-0.3/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.3/src/Algebra/RealRing.hs:296:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.3/src/Algebra/RealRing.hs:308:{-# RULES
./numeric-prelude-0.3/src/Algebra/RealRing.hs:325:{-# RULES
./numeric-prelude-0.3/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.3/src/Algebra/ToRational.hs:74:{-# RULES
./numeric-prelude-0.3/src/Number/Complex.hs:249:{-# RULES
./numeric-prelude-0.3/src/Number/Complex.hs:447:{-# RULES
./numeric-prelude-0.3.0.1/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.3.0.1/src/Algebra/RealRing.hs:296:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.3.0.1/src/Algebra/RealRing.hs:308:{-# RULES
./numeric-prelude-0.3.0.1/src/Algebra/RealRing.hs:325:{-# RULES
./numeric-prelude-0.3.0.1/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.3.0.1/src/Algebra/ToRational.hs:74:{-# RULES
./numeric-prelude-0.3.0.1/src/Number/Complex.hs:249:{-# RULES
./numeric-prelude-0.3.0.1/src/Number/Complex.hs:447:{-# RULES
./numeric-prelude-0.3.0.2/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.3.0.2/src/Algebra/RealRing.hs:296:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.3.0.2/src/Algebra/RealRing.hs:308:{-# RULES
./numeric-prelude-0.3.0.2/src/Algebra/RealRing.hs:325:{-# RULES
./numeric-prelude-0.3.0.2/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.3.0.2/src/Algebra/ToRational.hs:74:{-# RULES
./numeric-prelude-0.3.0.2/src/Number/Complex.hs:249:{-# RULES
./numeric-prelude-0.3.0.2/src/Number/Complex.hs:447:{-# RULES
./numeric-prelude-0.4/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.4/src/Algebra/RealRing.hs:296:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.4/src/Algebra/RealRing.hs:308:{-# RULES
./numeric-prelude-0.4/src/Algebra/RealRing.hs:325:{-# RULES
./numeric-prelude-0.4/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.4/src/Algebra/ToRational.hs:74:{-# RULES
./numeric-prelude-0.4/src/Number/Complex.hs:252:{-# RULES
./numeric-prelude-0.4/src/Number/Complex.hs:457:{-# RULES
./numeric-prelude-0.4.0.1/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.4.0.1/src/Algebra/RealRing.hs:296:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.4.0.1/src/Algebra/RealRing.hs:308:{-# RULES
./numeric-prelude-0.4.0.1/src/Algebra/RealRing.hs:325:{-# RULES
./numeric-prelude-0.4.0.1/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.4.0.1/src/Algebra/ToRational.hs:74:{-# RULES
./numeric-prelude-0.4.0.1/src/Number/Complex.hs:252:{-# RULES
./numeric-prelude-0.4.0.1/src/Number/Complex.hs:457:{-# RULES
./numeric-prelude-0.4.0.2/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.4.0.2/src/Algebra/RealRing.hs:296:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.4.0.2/src/Algebra/RealRing.hs:308:{-# RULES
./numeric-prelude-0.4.0.2/src/Algebra/RealRing.hs:325:{-# RULES
./numeric-prelude-0.4.0.2/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.4.0.2/src/Algebra/ToRational.hs:74:{-# RULES
./numeric-prelude-0.4.0.2/src/Number/Complex.hs:252:{-# RULES
./numeric-prelude-0.4.0.2/src/Number/Complex.hs:457:{-# RULES
./numeric-prelude-0.4.0.3/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.4.0.3/src/Algebra/RealRing.hs:296:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.4.0.3/src/Algebra/RealRing.hs:308:{-# RULES
./numeric-prelude-0.4.0.3/src/Algebra/RealRing.hs:325:{-# RULES
./numeric-prelude-0.4.0.3/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.4.0.3/src/Algebra/ToRational.hs:74:{-# RULES
./numeric-prelude-0.4.0.3/src/Number/Complex.hs:252:{-# RULES
./numeric-prelude-0.4.0.3/src/Number/Complex.hs:457:{-# RULES
./numeric-prelude-0.4.1/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.4.1/src/Algebra/RealRing.hs:297:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.4.1/src/Algebra/RealRing.hs:309:{-# RULES
./numeric-prelude-0.4.1/src/Algebra/RealRing.hs:326:{-# RULES
./numeric-prelude-0.4.1/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.4.1/src/Algebra/ToRational.hs:74:{-# RULES
./numeric-prelude-0.4.1/src/Number/Complex.hs:252:{-# RULES
./numeric-prelude-0.4.1/src/Number/Complex.hs:457:{-# RULES
./numeric-prelude-0.4.2/src/Algebra/GenerateRules.hs:3:Generate RULES for handling of primitive number types.
./numeric-prelude-0.4.2/src/Algebra/RealRing.hs:297:{- RULES maybe used, when Prelude implementations become more efficient
./numeric-prelude-0.4.2/src/Algebra/RealRing.hs:309:{-# RULES
./numeric-prelude-0.4.2/src/Algebra/RealRing.hs:326:{-# RULES
./numeric-prelude-0.4.2/src/Algebra/ToInteger.hs:57:{-# RULES
./numeric-prelude-0.4.2/src/Algebra/ToRational.hs:74:{-# RULES
./numeric-prelude-0.4.2/src/Number/Complex.hs:252:{-# RULES
./numeric-prelude-0.4.2/src/Number/Complex.hs:457:{-# RULES
./Omega-0.1.1/Data/Presburger/Omega/Expr.hs:131:{-# RULES
./Omega-0.1.2/Data/Presburger/Omega/Expr.hs:131:{-# RULES
./Omega-0.1.3/Data/Presburger/Omega/Expr.hs:131:{-# RULES
./Omega-0.2.0/Data/Presburger/Omega/Expr.hs:135:{-# RULES
./Omega-0.2.1/Data/Presburger/Omega/Expr.hs:135:{-# RULES
./Omega-0.2.2/Data/Presburger/Omega/Expr.hs:135:{-# RULES
./Omega-1.0/Data/Presburger/Omega/Expr.hs:135:{-# RULES
./Omega-1.0.1/Data/Presburger/Omega/Expr.hs:135:{-# RULES
./Omega-1.0.2/Data/Presburger/Omega/Expr.hs:135:{-# RULES
./Omega-1.0.3/Data/Presburger/Omega/Expr.hs:135:{-# RULES
./opengles-0.4.0/Graphics/EGL.hs:421:{-# RULES
./opengles-0.5.0/Graphics/EGL.hs:421:{-# RULES
./opengles-0.6.0/Graphics/EGL.hs:419:{-# RULES
./opengles-0.7.0/Graphics/EGL/Base.hs:107:{-# RULES
./packer-0.1.0/Data/Packer/Internal.hs:82:{-# RULES
./parallel-2.0.0.0/Control/Parallel/Strategies.hs:296:-- than their more general counterparts.  We use RULES to do the
./parallel-2.0.0.0/Control/Parallel/Strategies.hs:299:{-# RULES 
./parallel-2.1.0.0/Control/Parallel/Strategies.hs:287:-- than their more general counterparts.  We use RULES to do the
./parallel-2.1.0.0/Control/Parallel/Strategies.hs:290:{-# RULES 
./parallel-2.2.0.0/Control/Parallel/Strategies.hs:309:-- than their more general counterparts.  We use RULES to do the
./parallel-2.2.0.0/Control/Parallel/Strategies.hs:312:{- RULES 
./parallel-2.2.0.1/Control/Parallel/Strategies.hs:309:-- than their more general counterparts.  We use RULES to do the
./parallel-2.2.0.1/Control/Parallel/Strategies.hs:312:{-# RULES 
./parallel-3.0.0.0/Control/Parallel/Strategies.hs:444:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.0.0.0/Control/Parallel/Strategies.hs:446:{-# RULES 
./parallel-3.0.0.0/Control/Parallel/Strategies.hs:507:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.0.0.0/Control/Parallel/Strategies.hs:513:{-# RULES 
./parallel-3.1.0.0/Control/Parallel/Strategies.hs:444:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.1.0.0/Control/Parallel/Strategies.hs:446:{-# RULES 
./parallel-3.1.0.0/Control/Parallel/Strategies.hs:507:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.1.0.0/Control/Parallel/Strategies.hs:513:{-# RULES 
./parallel-3.1.0.1/Control/Parallel/Strategies.hs:444:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.1.0.1/Control/Parallel/Strategies.hs:446:{-# RULES 
./parallel-3.1.0.1/Control/Parallel/Strategies.hs:507:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.1.0.1/Control/Parallel/Strategies.hs:513:{-# RULES 
./parallel-3.2.0.0/Control/Parallel/Strategies.hs:219:{-# RULES "lazy Done" forall x . lazy (Done x) = Done x #-}
./parallel-3.2.0.0/Control/Parallel/Strategies.hs:507:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.2.0.0/Control/Parallel/Strategies.hs:509:{-# RULES 
./parallel-3.2.0.0/Control/Parallel/Strategies.hs:570:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.2.0.0/Control/Parallel/Strategies.hs:576:{-# RULES 
./parallel-3.2.0.2/Control/Parallel/Strategies.hs:219:{-# RULES "lazy Done" forall x . lazy (Done x) = Done x #-}
./parallel-3.2.0.2/Control/Parallel/Strategies.hs:507:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.2.0.2/Control/Parallel/Strategies.hs:509:{-# RULES 
./parallel-3.2.0.2/Control/Parallel/Strategies.hs:570:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.2.0.2/Control/Parallel/Strategies.hs:576:{-# RULES 
./parallel-3.2.0.3/Control/Parallel/Strategies.hs:219:{-# RULES "lazy Done" forall x . lazy (Done x) = Done x #-}
./parallel-3.2.0.3/Control/Parallel/Strategies.hs:507:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.2.0.3/Control/Parallel/Strategies.hs:509:{-# RULES 
./parallel-3.2.0.3/Control/Parallel/Strategies.hs:570:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.2.0.3/Control/Parallel/Strategies.hs:576:{-# RULES 
./parallel-3.2.0.4/Control/Parallel/Strategies.hs:219:{-# RULES "lazy Done" forall x . lazy (Done x) = Done x #-}
./parallel-3.2.0.4/Control/Parallel/Strategies.hs:507:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.2.0.4/Control/Parallel/Strategies.hs:510:{-# RULES
./parallel-3.2.0.4/Control/Parallel/Strategies.hs:571:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.2.0.4/Control/Parallel/Strategies.hs:579:{-# RULES
./parallel-3.2.0.5/Control/Parallel/Strategies.hs:219:{-# RULES "lazy Done" forall x . lazy (Done x) = Done x #-}
./parallel-3.2.0.5/Control/Parallel/Strategies.hs:507:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.2.0.5/Control/Parallel/Strategies.hs:510:{-# RULES
./parallel-3.2.0.5/Control/Parallel/Strategies.hs:571:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.2.0.5/Control/Parallel/Strategies.hs:579:{-# RULES
./parallel-3.2.0.6/Control/Parallel/Strategies.hs:221:{-# RULES "lazy Done" forall x . lazy (Done x) = Done x #-}
./parallel-3.2.0.6/Control/Parallel/Strategies.hs:509:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.2.0.6/Control/Parallel/Strategies.hs:512:{-# RULES
./parallel-3.2.0.6/Control/Parallel/Strategies.hs:573:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.2.0.6/Control/Parallel/Strategies.hs:581:{-# RULES
./parallel-3.2.1.0/Control/Parallel/Strategies.hs:235:{-# RULES "lazy Done" forall x . lazy (Done x) = Done x #-}
./parallel-3.2.1.0/Control/Parallel/Strategies.hs:515:-- more compositional counterpart; use RULES to do the specialisation.
./parallel-3.2.1.0/Control/Parallel/Strategies.hs:519:{-# RULES
./parallel-3.2.1.0/Control/Parallel/Strategies.hs:580:-- Alternative definition via evalBuffer (may compromise firing of RULES):
./parallel-3.2.1.0/Control/Parallel/Strategies.hs:588:{-# RULES
./phasechange-0.1/Data/PhaseChange/Internal.hs:129:-- absolutely no way to get the RULES to work that way, not even with the thaw/thawImpl trick
./phasechange-0.1/Data/PhaseChange/Internal.hs:134:{-# RULES
./phasechange-0.1/Data/PhaseChange/Internal.hs:148:{- RULES
./pinch-0.2.0.0/Pinch/Internal/Builder.hs:77:{-# RULES
./Pipe-1.0/System/Process/Pipe.hs:331:{-# RULES "pipe->handlePipe" pipe = handlePipe #-}
./pipes-3.0.0/Control/Proxy/Class.hs:401:    embedding it in 'IdentityP'.  This library employs several rewrite @RULES@
./pipes-3.0.0/Control/Proxy/Core/Fast.hs:111:{-# RULES
./pipes-3.0.0/Control/Proxy/Core/Fast.hs:158:{-# RULES
./pipes-3.1.0/Control/Proxy/Class.hs:389:    embedding it in 'IdentityP'.  This library employs several rewrite @RULES@
./pipes-3.1.0/Control/Proxy/Core/Fast.hs:25:{- The rewrite RULES require the 'TrustWorthy' annotation.  I've supplied the
./pipes-3.1.0/Control/Proxy/Core/Fast.hs:104:{-# RULES
./pipes-3.1.0/Control/Proxy/Core/Fast.hs:145:{-# RULES
./pipes-3.2.0/Control/Proxy/Class.hs:323:    embedding it in 'IdentityP'.  This library employs several rewrite @RULES@
./pipes-3.2.0/Control/Proxy/Core/Fast.hs:26:{- The rewrite RULES require the 'TrustWorthy' annotation.  Their proofs are
./pipes-3.2.0/Control/Proxy/Core/Fast.hs:111:{-# RULES
./pipes-3.2.0/Control/Proxy/Core/Fast.hs:178:{-# RULES
./pipes-3.2.0/Control/Proxy/Core/Fast.hs:201:{-# RULES
./pipes-3.3.0/Control/Proxy/Class.hs:656:    embedding it in 'IdentityP'.  This library employs several rewrite @RULES@
./pipes-3.3.0/Control/Proxy/Core/Fast.hs:26:{- The rewrite RULES require the 'TrustWorthy' annotation.  Their proofs are
./pipes-3.3.0/Control/Proxy/Core/Fast.hs:109:{-# RULES
./pipes-3.3.0/Control/Proxy/Core/Fast.hs:192:{-# RULES
./pipes-3.3.0/Control/Proxy/Core/Fast.hs:215:{-# RULES
./pipes-4.0.0/src/Pipes/Core.hs:21:{- The rewrite RULES require the 'TrustWorthy' annotation.  Their proofs are
./pipes-4.0.0/src/Pipes/Core.hs:313:{-# RULES
./pipes-4.0.0/src/Pipes/Core.hs:426:{-# RULES
./pipes-4.0.0/src/Pipes/Internal.hs:100:{-# RULES
./pipes-4.0.0/src/Pipes.hs:12:{- The rewrite RULES require the 'TrustWorthy' annotation. -}
./pipes-4.0.0/src/Pipes.hs:150:{-# RULES
./pipes-4.0.1/src/Pipes/Core.hs:18:-- The rewrite RULES require the 'TrustWorthy' annotation
./pipes-4.0.1/src/Pipes/Core.hs:308:{-# RULES
./pipes-4.0.1/src/Pipes/Core.hs:421:{-# RULES
./pipes-4.0.1/src/Pipes/Core.hs:831:{-# RULES
./pipes-4.0.1/src/Pipes/Internal.hs:29:-- The rewrite RULES require the 'TrustWorthy' annotation
./pipes-4.0.1/src/Pipes/Internal.hs:108:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:21:-- The rewrite RULES require the 'TrustWorthy' annotation
./pipes-4.0.1/src/Pipes/Prelude.hs:228:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:238:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:261:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:276:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:294:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:304:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:318:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:374:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:425:{-# RULES
./pipes-4.0.1/src/Pipes/Prelude.hs:444:{-# RULES
./pipes-4.0.1/src/Pipes.hs:15:-- The rewrite RULES require the 'TrustWorthy' annotation
./pipes-4.0.1/src/Pipes.hs:165:{-# RULES
./pipes-4.0.2/src/Pipes/Core.hs:18:-- The rewrite RULES require the 'TrustWorthy' annotation
./pipes-4.0.2/src/Pipes/Core.hs:312:{-# RULES
./pipes-4.0.2/src/Pipes/Core.hs:425:{-# RULES
./pipes-4.0.2/src/Pipes/Core.hs:835:{-# RULES
./pipes-4.0.2/src/Pipes/Internal.hs:29:-- The rewrite RULES require the 'TrustWorthy' annotation
./pipes-4.0.2/src/Pipes/Internal.hs:108:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:22:-- The rewrite RULES require the 'TrustWorthy' annotation
./pipes-4.0.2/src/Pipes/Prelude.hs:229:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:239:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:262:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:277:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:295:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:305:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:319:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:375:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:426:{-# RULES
./pipes-4.0.2/src/Pipes/Prelude.hs:445:{-# RULES
./pipes-4.0.2/src/Pipes.hs:15:-- The rewrite RULES require the 'TrustWorthy' annotation
./pipes-4.0.2/src/Pipes.hs:165:{-# RULES
./pipes-4.1.0/src/Pipes/Core.hs:306:{-# RULES
./pipes-4.1.0/src/Pipes/Core.hs:419:{-# RULES
./pipes-4.1.0/src/Pipes/Core.hs:829:{-# RULES
./pipes-4.1.0/src/Pipes/Internal.hs:103:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:223:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:233:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:243:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:266:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:281:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:304:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:314:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:328:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:384:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:435:{-# RULES
./pipes-4.1.0/src/Pipes/Prelude.hs:454:{-# RULES
./pipes-4.1.0/src/Pipes.hs:152:{-# RULES
./pipes-4.1.1/src/Pipes/Core.hs:306:{-# RULES
./pipes-4.1.1/src/Pipes/Core.hs:419:{-# RULES
./pipes-4.1.1/src/Pipes/Core.hs:829:{-# RULES
./pipes-4.1.1/src/Pipes/Internal.hs:103:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:188:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:242:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:252:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:262:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:290:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:310:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:333:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:348:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:366:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:444:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:506:{-# RULES
./pipes-4.1.1/src/Pipes/Prelude.hs:525:{-# RULES
./pipes-4.1.1/src/Pipes.hs:153:{-# RULES
./pipes-4.1.2/src/Pipes/Core.hs:306:{-# RULES
./pipes-4.1.2/src/Pipes/Core.hs:419:{-# RULES
./pipes-4.1.2/src/Pipes/Core.hs:829:{-# RULES
./pipes-4.1.2/src/Pipes/Internal.hs:105:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:188:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:238:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:248:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:258:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:286:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:306:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:329:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:344:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:362:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:440:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:502:{-# RULES
./pipes-4.1.2/src/Pipes/Prelude.hs:521:{-# RULES
./pipes-4.1.2/src/Pipes.hs:153:{-# RULES
./pipes-4.1.3/src/Pipes/Core.hs:306:{-# RULES
./pipes-4.1.3/src/Pipes/Core.hs:419:{-# RULES
./pipes-4.1.3/src/Pipes/Core.hs:829:{-# RULES
./pipes-4.1.3/src/Pipes/Internal.hs:105:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:190:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:240:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:250:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:260:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:288:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:308:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:331:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:346:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:364:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:442:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:504:{-# RULES
./pipes-4.1.3/src/Pipes/Prelude.hs:523:{-# RULES
./pipes-4.1.3/src/Pipes.hs:155:{-# RULES
./pipes-4.1.4/src/Pipes/Core.hs:306:{-# RULES
./pipes-4.1.4/src/Pipes/Core.hs:419:{-# RULES
./pipes-4.1.4/src/Pipes/Core.hs:829:{-# RULES
./pipes-4.1.4/src/Pipes/Internal.hs:105:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:190:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:240:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:250:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:260:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:288:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:308:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:331:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:346:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:364:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:442:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:504:{-# RULES
./pipes-4.1.4/src/Pipes/Prelude.hs:523:{-# RULES
./pipes-4.1.4/src/Pipes.hs:155:{-# RULES
./pipes-4.1.5/src/Pipes/Core.hs:306:{-# RULES
./pipes-4.1.5/src/Pipes/Core.hs:419:{-# RULES
./pipes-4.1.5/src/Pipes/Core.hs:829:{-# RULES
./pipes-4.1.5/src/Pipes/Internal.hs:105:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:190:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:240:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:250:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:260:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:288:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:308:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:331:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:346:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:364:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:442:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:504:{-# RULES
./pipes-4.1.5/src/Pipes/Prelude.hs:523:{-# RULES
./pipes-4.1.5/src/Pipes.hs:155:{-# RULES
./pipes-4.1.6/src/Pipes/Core.hs:325:{-# RULES
./pipes-4.1.6/src/Pipes/Core.hs:457:{-# RULES
./pipes-4.1.6/src/Pipes/Core.hs:869:{-# RULES
./pipes-4.1.6/src/Pipes/Internal.hs:105:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:195:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:245:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:255:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:265:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:275:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:303:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:323:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:346:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:361:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:379:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:476:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:538:{-# RULES
./pipes-4.1.6/src/Pipes/Prelude.hs:557:{-# RULES
./pipes-4.1.6/src/Pipes.hs:173:{-# RULES
./pipes-4.1.7/src/Pipes/Core.hs:325:{-# RULES
./pipes-4.1.7/src/Pipes/Core.hs:457:{-# RULES
./pipes-4.1.7/src/Pipes/Core.hs:869:{-# RULES
./pipes-4.1.7/src/Pipes/Internal.hs:105:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:201:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:255:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:265:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:275:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:285:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:295:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:323:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:343:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:366:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:381:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:399:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:502:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:564:{-# RULES
./pipes-4.1.7/src/Pipes/Prelude.hs:583:{-# RULES
./pipes-4.1.7/src/Pipes.hs:173:{-# RULES
./pipes-4.1.8/src/Pipes/Core.hs:325:{-# RULES
./pipes-4.1.8/src/Pipes/Core.hs:457:{-# RULES
./pipes-4.1.8/src/Pipes/Core.hs:869:{-# RULES
./pipes-4.1.8/src/Pipes/Internal.hs:105:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:201:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:255:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:265:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:275:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:285:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:295:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:323:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:343:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:366:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:381:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:399:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:502:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:564:{-# RULES
./pipes-4.1.8/src/Pipes/Prelude.hs:583:{-# RULES
./pipes-4.1.8/src/Pipes.hs:173:{-# RULES
./pipes-aeson-0.3.0/src/Pipes/Aeson/Unchecked.hs:36:{-# RULES "p >-> for cat encode" forall p .
./pipes-aeson-0.3.0/src/Pipes/Aeson.hs:61:{-# RULES "p >-> for cat encode" forall p .
./pipes-aeson-0.4/src/Pipes/Aeson/Unchecked.hs:36:{-# RULES "p >-> for cat encode" forall p .
./pipes-aeson-0.4/src/Pipes/Aeson.hs:66:{-# RULES "p >-> for cat encodeObject" forall p .
./pipes-aeson-0.4/src/Pipes/Aeson.hs:81:{-# RULES "p >-> for cat encodeArray" forall p .
./pipes-aeson-0.4.1/src/Pipes/Aeson/Unchecked.hs:36:{-# RULES "p >-> for cat encode" forall p .
./pipes-aeson-0.4.1/src/Pipes/Aeson.hs:66:{-# RULES "p >-> for cat encodeObject" forall p .
./pipes-aeson-0.4.1/src/Pipes/Aeson.hs:81:{-# RULES "p >-> for cat encodeArray" forall p .
./pipes-aeson-0.4.1.1/src/Pipes/Aeson/Unchecked.hs:36:{-# RULES "p >-> for cat encode" forall p .
./pipes-aeson-0.4.1.1/src/Pipes/Aeson.hs:66:{-# RULES "p >-> for cat encodeObject" forall p .
./pipes-aeson-0.4.1.1/src/Pipes/Aeson.hs:81:{-# RULES "p >-> for cat encodeArray" forall p .
./pipes-aeson-0.4.1.2/src/Pipes/Aeson/Unchecked.hs:36:{-# RULES "p >-> for cat encode" forall p .
./pipes-aeson-0.4.1.2/src/Pipes/Aeson.hs:66:{-# RULES "p >-> for cat encodeObject" forall p .
./pipes-aeson-0.4.1.2/src/Pipes/Aeson.hs:81:{-# RULES "p >-> for cat encodeArray" forall p .
./pipes-aeson-0.4.1.3/src/Pipes/Aeson/Unchecked.hs:36:{-# RULES "p >-> for cat encode" forall p .
./pipes-aeson-0.4.1.3/src/Pipes/Aeson.hs:66:{-# RULES "p >-> for cat encodeObject" forall p .
./pipes-aeson-0.4.1.3/src/Pipes/Aeson.hs:81:{-# RULES "p >-> for cat encodeArray" forall p .
./pipes-aeson-0.4.1.4/src/Pipes/Aeson/Unchecked.hs:36:{-# RULES "p >-> for cat encode" forall p .
./pipes-aeson-0.4.1.4/src/Pipes/Aeson.hs:66:{-# RULES "p >-> for cat encodeObject" forall p .
./pipes-aeson-0.4.1.4/src/Pipes/Aeson.hs:81:{-# RULES "p >-> for cat encodeArray" forall p .
./pipes-aeson-0.4.1.5/src/Pipes/Aeson/Unchecked.hs:36:{-# RULES "p >-> for cat encode" forall p .
./pipes-aeson-0.4.1.5/src/Pipes/Aeson.hs:66:{-# RULES "p >-> for cat encodeObject" forall p .
./pipes-aeson-0.4.1.5/src/Pipes/Aeson.hs:81:{-# RULES "p >-> for cat encodeArray" forall p .
./pipes-binary-0.4.0/src/Pipes/Binary.hs:85:{-# RULES "p >-> for cat encode" forall p .
./pipes-binary-0.4.0/src/Pipes/Binary.hs:93:{-# RULES "p >-> for cat encodePut" forall p.
./pipes-binary-0.4.0.1/src/Pipes/Binary.hs:85:{-# RULES "p >-> for cat encode" forall p .
./pipes-binary-0.4.0.1/src/Pipes/Binary.hs:93:{-# RULES "p >-> for cat encodePut" forall p.
./pipes-binary-0.4.0.2/src/Pipes/Binary.hs:85:{-# RULES "p >-> for cat encode" forall p .
./pipes-binary-0.4.0.2/src/Pipes/Binary.hs:93:{-# RULES "p >-> for cat encodePut" forall p.
./pipes-binary-0.4.0.3/src/Pipes/Binary.hs:85:{-# RULES "p >-> for cat encode" forall p .
./pipes-binary-0.4.0.3/src/Pipes/Binary.hs:93:{-# RULES "p >-> for cat encodePut" forall p.
./pipes-binary-0.4.0.4/src/Pipes/Binary.hs:85:{-# RULES "p >-> for cat encode" forall p .
./pipes-binary-0.4.0.4/src/Pipes/Binary.hs:93:{-# RULES "p >-> for cat encodePut" forall p.
./pipes-binary-0.4.0.5/src/Pipes/Binary.hs:85:{-# RULES "p >-> for cat encode" forall p .
./pipes-binary-0.4.0.5/src/Pipes/Binary.hs:93:{-# RULES "p >-> for cat encodePut" forall p.
./pipes-binary-0.4.1/src/Pipes/Binary.hs:86:{-# RULES "p >-> for cat encode" forall p .
./pipes-binary-0.4.1/src/Pipes/Binary.hs:94:{-# RULES "p >-> for cat encodePut" forall p.
./pipes-bytestring-1.0.2/src/Pipes/ByteString.hs:318:{-# RULES "p >-> toHandle h" forall p h .
./pipes-bytestring-1.0.2/src/Pipes/ByteString.hs:428:{-# RULES
./pipes-bytestring-1.0.3/src/Pipes/ByteString.hs:318:{-# RULES "p >-> toHandle h" forall p h .
./pipes-bytestring-1.0.3/src/Pipes/ByteString.hs:428:{-# RULES
./pipes-bytestring-2.0.0/src/Pipes/ByteString.hs:304:{-# RULES "p >-> toHandle h" forall p h .
./pipes-bytestring-2.0.1/src/Pipes/ByteString.hs:299:{-# RULES "p >-> toHandle h" forall p h .
./pipes-bytestring-2.1.0/src/Pipes/ByteString.hs:315:{-# RULES "p >-> toHandle h" forall p h .
./pipes-bytestring-2.1.1/src/Pipes/ByteString.hs:333:{-# RULES "p >-> toHandle h" forall p h .
./pipes-courier-0.1.0.0/src/Pipes/Courier.hs:43:{-# RULES
./pipes-courier-0.1.0.0/src/Pipes/Courier.hs:56:{-# RULES
./pipes-courier-0.1.0.0/src/Pipes/Courier.hs:71:{-# RULES
./pipes-courier-0.1.0.0/src/Pipes/Courier.hs:85:{-# RULES
./pipes-courier-0.1.0.0/src/Pipes/Courier.hs:98:{-# RULES
./pipes-courier-0.1.0.0/src/Pipes/Courier.hs:113:{-# RULES
./pipes-courier-0.1.0.0/src/Pipes/Courier.hs:140:{-# RULES
./pipes-courier-0.1.0.0/src/Pipes/Courier.hs:155:{-# RULES
./pipes-text-0.0.0.0/Pipes/Text.hs:346:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.0/Pipes/Text.hs:370:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.0/Pipes/Text.hs:380:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.0/Pipes/Text.hs:391:{-# RULES "p >-> encodeUtf8" forall p .
./pipes-text-0.0.0.0/Pipes/Text.hs:400:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.0/Pipes/Text.hs:409:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.0/Pipes/Text.hs:419:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.0/Pipes/Text.hs:429:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.0/Pipes/Text.hs:438:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.0/Pipes/Text.hs:515:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.1/Pipes/Text.hs:309:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.1/Pipes/Text.hs:333:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.1/Pipes/Text.hs:343:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.1/Pipes/Text.hs:354:{-# RULES "p >-> encodeUtf8" forall p .
./pipes-text-0.0.0.1/Pipes/Text.hs:363:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.1/Pipes/Text.hs:372:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.1/Pipes/Text.hs:382:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.1/Pipes/Text.hs:392:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.1/Pipes/Text.hs:401:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.1/Pipes/Text.hs:478:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.10/Pipes/Text/IO.hs:172:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.10/Pipes/Text.hs:439:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.10/Pipes/Text.hs:449:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.10/Pipes/Text.hs:459:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.10/Pipes/Text.hs:468:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.10/Pipes/Text.hs:478:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.10/Pipes/Text.hs:488:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.10/Pipes/Text.hs:497:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.10/Pipes/Text.hs:574:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.11/Pipes/Text/IO.hs:172:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.11/Pipes/Text.hs:436:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.11/Pipes/Text.hs:446:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.11/Pipes/Text.hs:456:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.11/Pipes/Text.hs:465:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.11/Pipes/Text.hs:475:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.11/Pipes/Text.hs:485:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.11/Pipes/Text.hs:494:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.11/Pipes/Text.hs:571:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.12/Pipes/Text/IO.hs:172:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.13/Pipes/Text/IO.hs:172:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.14/Pipes/Text/IO.hs:172:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.15/Pipes/Text/IO.hs:172:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.2/Pipes/Text.hs:309:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.2/Pipes/Text.hs:333:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.2/Pipes/Text.hs:343:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.2/Pipes/Text.hs:354:{-# RULES "p >-> encodeUtf8" forall p .
./pipes-text-0.0.0.2/Pipes/Text.hs:363:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.2/Pipes/Text.hs:372:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.2/Pipes/Text.hs:382:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.2/Pipes/Text.hs:392:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.2/Pipes/Text.hs:401:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.2/Pipes/Text.hs:478:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.3/Pipes/Text.hs:309:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.3/Pipes/Text.hs:333:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.3/Pipes/Text.hs:343:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.3/Pipes/Text.hs:354:{-# RULES "p >-> encodeUtf8" forall p .
./pipes-text-0.0.0.3/Pipes/Text.hs:363:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.3/Pipes/Text.hs:372:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.3/Pipes/Text.hs:382:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.3/Pipes/Text.hs:392:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.3/Pipes/Text.hs:401:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.3/Pipes/Text.hs:478:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.4/Pipes/Text.hs:309:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.4/Pipes/Text.hs:333:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.4/Pipes/Text.hs:343:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.4/Pipes/Text.hs:354:{-# RULES "p >-> encodeUtf8" forall p .
./pipes-text-0.0.0.4/Pipes/Text.hs:363:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.4/Pipes/Text.hs:372:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.4/Pipes/Text.hs:382:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.4/Pipes/Text.hs:392:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.4/Pipes/Text.hs:401:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.4/Pipes/Text.hs:478:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.5/Pipes/Text.hs:313:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.5/Pipes/Text.hs:337:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.5/Pipes/Text.hs:347:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.5/Pipes/Text.hs:358:{-# RULES "p >-> encodeUtf8" forall p .
./pipes-text-0.0.0.5/Pipes/Text.hs:367:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.5/Pipes/Text.hs:376:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.5/Pipes/Text.hs:386:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.5/Pipes/Text.hs:396:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.5/Pipes/Text.hs:405:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.5/Pipes/Text.hs:482:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.6/Pipes/Text.hs:311:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.6/Pipes/Text.hs:335:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.6/Pipes/Text.hs:345:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.6/Pipes/Text.hs:356:{-# RULES "p >-> encodeUtf8" forall p .
./pipes-text-0.0.0.6/Pipes/Text.hs:365:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.6/Pipes/Text.hs:374:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.6/Pipes/Text.hs:384:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.6/Pipes/Text.hs:394:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.6/Pipes/Text.hs:403:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.6/Pipes/Text.hs:480:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.7/Pipes/Text/IO.hs:120:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.7/Pipes/Text.hs:212:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.7/Pipes/Text.hs:222:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.7/Pipes/Text.hs:232:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.7/Pipes/Text.hs:241:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.7/Pipes/Text.hs:251:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.7/Pipes/Text.hs:261:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.7/Pipes/Text.hs:270:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.7/Pipes/Text.hs:347:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.8/Pipes/Text/IO.hs:170:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.8/Pipes/Text.hs:243:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.8/Pipes/Text.hs:253:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.8/Pipes/Text.hs:263:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.8/Pipes/Text.hs:272:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.8/Pipes/Text.hs:282:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.8/Pipes/Text.hs:292:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.8/Pipes/Text.hs:301:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.8/Pipes/Text.hs:378:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.0.9/Pipes/Text/IO.hs:172:{-# RULES "p >-> toHandle h" forall p h .
./pipes-text-0.0.0.9/Pipes/Text.hs:321:{-# RULES "p >-> map f" forall p f .
./pipes-text-0.0.0.9/Pipes/Text.hs:331:{-# RULES "p >-> concatMap f" forall p f .
./pipes-text-0.0.0.9/Pipes/Text.hs:341:{-# RULES "p >-> pack" forall p .
./pipes-text-0.0.0.9/Pipes/Text.hs:350:{-# RULES "p >-> unpack" forall p .
./pipes-text-0.0.0.9/Pipes/Text.hs:360:{-# RULES "p >-> toCaseFold" forall p .
./pipes-text-0.0.0.9/Pipes/Text.hs:370:{-# RULES "p >-> toLower" forall p .
./pipes-text-0.0.0.9/Pipes/Text.hs:379:{-# RULES "p >-> toUpper" forall p .
./pipes-text-0.0.0.9/Pipes/Text.hs:456:{-# RULES "p >-> filter q" forall p q .
./pipes-text-0.0.2.0/Pipes/Prelude/Text.hs:130:{-# RULES
./pipes-text-0.0.2.0/Pipes/Prelude/Text.hs:170:{-# RULES
./pipes-text-0.0.2.1/Pipes/Prelude/Text.hs:130:{-# RULES
./pipes-text-0.0.2.1/Pipes/Prelude/Text.hs:170:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:28:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:32:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:36:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:40:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:44:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:48:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:52:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:56:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:60:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:64:{-# RULES
./pointless-lenses-0.0.7/src/Generics/Pointless/Lenses/Examples/Examples.hs:68:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:32:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:36:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:40:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:44:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:48:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:52:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:56:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:60:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:64:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:68:{-# RULES
./pointless-lenses-0.0.8/src/Generics/Pointless/Lenses/Examples/Examples.hs:72:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:31:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:35:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:39:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:43:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:47:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:51:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:55:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:59:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:63:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:67:{-# RULES
./pointless-lenses-0.0.9/src/Generics/Pointless/Lenses/Examples/Examples.hs:71:{-# RULES
./polynomial-0.5/src/Math/Polynomial.hs:40:{-# RULES
./polynomial-0.6/src/Math/Polynomial.hs:60:{-# RULES
./polynomial-0.6.5/src/Math/Polynomial.hs:59:{-# RULES
./polynomial-0.7.1/src/Math/Polynomial/Type.hs:135:{-# RULES "wrapPoly/unwrapPoly"   forall x. wrapPoly (unwrapPoly x) = x #-}
./polynomial-0.7.1/src/Math/Polynomial/Type.hs:136:{-# RULES "unwrapPoly/wrapPoly"   forall x. unwrapPoly (wrapPoly x) = x #-}
./polynomial-0.7.1/src/Math/Polynomial/Type.hs:137:{-# RULES "wrapPoly.unwrapPoly"   wrapPoly . unwrapPoly = id #-}
./polynomial-0.7.1/src/Math/Polynomial/Type.hs:138:{-# RULES "unwrapPoly.wrapPoly"   unwrapPoly . wrapPoly = id #-}
./polynomial-0.7.1/src/Math/Polynomial/VectorSpace.hs:76:{-# RULES
./polynomial-0.7.1/src/Math/Polynomial.hs:50:{-# RULES
./polynomial-0.7.2/src/Math/Polynomial/Type.hs:135:{-# RULES "wrapPoly/unwrapPoly"   forall x. wrapPoly (unwrapPoly x) = x #-}
./polynomial-0.7.2/src/Math/Polynomial/Type.hs:136:{-# RULES "unwrapPoly/wrapPoly"   forall x. unwrapPoly (wrapPoly x) = x #-}
./polynomial-0.7.2/src/Math/Polynomial/Type.hs:137:{-# RULES "wrapPoly.unwrapPoly"   wrapPoly . unwrapPoly = id #-}
./polynomial-0.7.2/src/Math/Polynomial/Type.hs:138:{-# RULES "unwrapPoly.wrapPoly"   unwrapPoly . wrapPoly = id #-}
./polynomial-0.7.2/src/Math/Polynomial/VectorSpace.hs:76:{-# RULES
./polynomial-0.7.2/src/Math/Polynomial.hs:50:{-# RULES
./portaudio-0.0.1/C2HS.hs:197:{-# RULES 
./pqueue-1.0.0/Data/PQueue/Min.hs:245:{-# RULES
./pqueue-1.0.0/Data/PQueue/Min.hs:266:{-# RULES
./pqueue-1.0.0/Data/PQueue/Min.hs:290:{-# RULES
./pqueue-1.0.0/Data/PQueue/Prio/Min.hs:327:{-# RULES
./pqueue-1.0.0/Data/PQueue/Prio/Min.hs:352:{-# RULES
./pqueue-1.0.1/Data/PQueue/Min.hs:251:{-# RULES
./pqueue-1.0.1/Data/PQueue/Min.hs:280:{-# RULES
./pqueue-1.0.1/Data/PQueue/Min.hs:313:{-# RULES
./pqueue-1.0.1/Data/PQueue/Prio/Min.hs:330:{-# RULES
./pqueue-1.0.1/Data/PQueue/Prio/Min.hs:355:{-# RULES
./pqueue-1.1.0/Data/PQueue/Min.hs:249:{-# RULES
./pqueue-1.1.0/Data/PQueue/Min.hs:270:{-# RULES
./pqueue-1.1.0/Data/PQueue/Min.hs:298:{-# RULES
./pqueue-1.1.0/Data/PQueue/Prio/Min.hs:329:{-# RULES
./pqueue-1.1.0/Data/PQueue/Prio/Min.hs:354:{-# RULES
./pqueue-1.2.0/Data/PQueue/Min.hs:249:{-# RULES
./pqueue-1.2.0/Data/PQueue/Min.hs:270:{-# RULES
./pqueue-1.2.0/Data/PQueue/Min.hs:298:{-# RULES
./pqueue-1.2.0/Data/PQueue/Prio/Min.hs:329:{-# RULES
./pqueue-1.2.0/Data/PQueue/Prio/Min.hs:354:{-# RULES
./pqueue-1.2.1/Data/PQueue/Min.hs:249:{-# RULES
./pqueue-1.2.1/Data/PQueue/Min.hs:270:{-# RULES
./pqueue-1.2.1/Data/PQueue/Min.hs:298:{-# RULES
./pqueue-1.2.1/Data/PQueue/Prio/Min.hs:329:{-# RULES
./pqueue-1.2.1/Data/PQueue/Prio/Min.hs:354:{-# RULES
./pqueue-1.3.0/Data/PQueue/Min.hs:248:{-# RULES
./pqueue-1.3.0/Data/PQueue/Min.hs:269:{-# RULES
./pqueue-1.3.0/Data/PQueue/Min.hs:297:{-# RULES
./pqueue-1.3.0/Data/PQueue/Prio/Min.hs:330:{-# RULES
./pqueue-1.3.0/Data/PQueue/Prio/Min.hs:355:{-# RULES
./pqueue-1.3.1/Data/PQueue/Min.hs:248:{-# RULES
./pqueue-1.3.1/Data/PQueue/Min.hs:269:{-# RULES
./pqueue-1.3.1/Data/PQueue/Min.hs:297:{-# RULES
./pqueue-1.3.1/Data/PQueue/Prio/Min.hs:330:{-# RULES
./pqueue-1.3.1/Data/PQueue/Prio/Min.hs:355:{-# RULES
./pqueue-mtl-1.0/Data/Queue/FibQueue.hs:68:{-# RULES
./pqueue-mtl-1.0/Data/Queue/PQueue.hs:65:{-# RULES
./pqueue-mtl-1.0.1/Data/Queue/FibQueue.hs:72:{-# RULES
./pqueue-mtl-1.0.1/Data/Queue/PQueue.hs:65:{-# RULES
./pqueue-mtl-1.0.2/Data/Queue/FibQueue.hs:72:{-# RULES
./pqueue-mtl-1.0.2/Data/Queue/PQueue.hs:65:{-# RULES
./pqueue-mtl-1.0.3/Data/Queue/FibQueue.hs:72:{-# RULES
./pqueue-mtl-1.0.3/Data/Queue/PQueue.hs:67:{-# RULES
./pqueue-mtl-1.0.6/Data/Queue/QueueHelpers.hs:75:{-# RULES
./pqueue-mtl-1.0.7/Data/Queue/QueueHelpers.hs:75:{-# RULES
./prelude-generalize-0.1/Prelude/Generalize.hs:196:{-# RULES "application$" ($) = id #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:361:{-# RULES "L.tail" tail = L.tail #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:366:{-# RULES "L.!!" (!!) = (L.!!) #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:374:{-# RULES "L.length" length = L.length #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:380:{-# RULES "L.filter" filter = L.filter #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:384:{-# RULES "consA" consA = (:) #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:400:{-# RULES "L.++" (++) = (L.++) #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:413:{-# RULES "L.convList(1)" convList = M.listToMaybe #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:414:{-# RULES "L.convList(2)" convList = M.maybeToList #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:418:{-# RULES "L.head" head = L.head #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:422:{-# RULES "L.drop" drop = L.drop #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:426:{-# RULES "L.take" take = L.take #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:430:{-# RULES "L.find" find = L.find #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:434:{-# RULES "L.takeWhile" takeWhile = L.takeWhile #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:438:{-# RULES "L.dropWhile" dropWhile = L.dropWhile #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:442:{-# RULES "L.tails" tails = L.tails #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:446:{-# RULES "L.findIndex" findIndex = L.findIndex #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:447:{-# RULES "L.findIndices" findIndices = L.findIndices #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:457:{-# RULES "L.repeat" repeat = L.repeat #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:461:{-# RULES "L.replicate" replicate = L.replicate #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:474:{-# RULES "L.groupBy" groupBy = L.groupBy #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:482:{-# RULES "L.null" null = L.null #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:483:{-# RULES "M.null" null = M.isNothing #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:487:{-# RULES "L.concat" concat = L.concat #-};
./prelude-generalize-0.1/Prelude/Generalize.hs:529:{-# RULES "low8bits=id" low8bits = id #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:197:{-# RULES "application$" ($) = id #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:362:{-# RULES "L.tail" tail = L.tail #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:367:{-# RULES "L.!!" (!!) = (L.!!) #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:375:{-# RULES "L.length" length = L.length #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:381:{-# RULES "L.filter" filter = L.filter #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:385:{-# RULES "consA" consA = (:) #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:401:{-# RULES "L.++" (++) = (L.++) #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:414:{-# RULES "L.convList(1)" convList = M.listToMaybe #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:415:{-# RULES "L.convList(2)" convList = M.maybeToList #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:419:{-# RULES "L.head" head = L.head #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:423:{-# RULES "L.drop" drop = L.drop #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:427:{-# RULES "L.take" take = L.take #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:431:{-# RULES "L.find" find = L.find #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:435:{-# RULES "L.takeWhile" takeWhile = L.takeWhile #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:439:{-# RULES "L.dropWhile" dropWhile = L.dropWhile #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:443:{-# RULES "L.tails" tails = L.tails #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:447:{-# RULES "L.findIndex" findIndex = L.findIndex #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:448:{-# RULES "L.findIndices" findIndices = L.findIndices #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:458:{-# RULES "L.repeat" repeat = L.repeat #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:462:{-# RULES "L.replicate" replicate = L.replicate #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:475:{-# RULES "L.groupBy" groupBy = L.groupBy #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:483:{-# RULES "L.null" null = L.null #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:484:{-# RULES "M.null" null = M.isNothing #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:488:{-# RULES "L.unnull" unnull = not . L.null #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:489:{-# RULES "M.unnull" null = M.isJust #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:493:{-# RULES "L.concat" concat = L.concat #-};
./prelude-generalize-0.1.1/Prelude/Generalize.hs:535:{-# RULES "low8bits=id" low8bits = id #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:262:{-# RULES "application$" ($) = id #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:448:{-# RULES "L.tail" tail = L.tail #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:453:{-# RULES "L.!!" (!!) = (L.!!) #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:461:{-# RULES "L.length" length = L.length #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:467:{-# RULES "L.filter" filter = L.filter #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:471:{-# RULES "consA" consA = (:) #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:487:{-# RULES "L.++" (++) = (L.++) #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:500:{-# RULES "L.convList(1)" convList = M.listToMaybe #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:501:{-# RULES "L.convList(2)" convList = M.maybeToList #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:505:{-# RULES "L.head" head = L.head #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:509:{-# RULES "L.drop" drop = L.drop #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:513:{-# RULES "L.take" take = L.take #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:517:{-# RULES "L.find" find = L.find #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:521:{-# RULES "L.takeWhile" takeWhile = L.takeWhile #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:525:{-# RULES "L.dropWhile" dropWhile = L.dropWhile #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:529:{-# RULES "L.tails" tails = L.tails #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:533:{-# RULES "L.findIndex" findIndex = L.findIndex #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:534:{-# RULES "L.findIndices" findIndices = L.findIndices #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:544:{-# RULES "L.repeat" repeat = L.repeat #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:548:{-# RULES "L.replicate" replicate = L.replicate #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:561:{-# RULES "L.groupBy" groupBy = L.groupBy #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:565:{-# RULES "L.group" group = L.group #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:573:{-# RULES "L.null" null = L.null #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:574:{-# RULES "M.null" null = M.isNothing #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:578:{-# RULES "L.unnull" unnull = not . L.null #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:579:{-# RULES "M.unnull" null = M.isJust #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:583:{-# RULES "L.concat" concat = L.concat #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:631:{-# RULES "low8bits=id" low8bits = id #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:683:{-# RULES "L.intersperse" intersperse = L.intersperse #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:690:{-# RULES "L.intercalate" intercalate = L.intercalate #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:698:{-# RULES "L.delete" delete = L.delete #-};
./prelude-generalize-0.2/Prelude/Generalize.hs:703:{-# RULES "L.\\" (\\) = (L.\\) #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:262:{-# RULES "application$" ($) = id #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:448:{-# RULES "L.tail" tail = L.tail #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:453:{-# RULES "L.!!" (!!) = (L.!!) #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:461:{-# RULES "L.length" length = L.length #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:467:{-# RULES "L.filter" filter = L.filter #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:471:{-# RULES "consA" consA = (:) #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:487:{-# RULES "L.++" (++) = (L.++) #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:500:{-# RULES "L.convList(1)" convList = M.listToMaybe #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:501:{-# RULES "L.convList(2)" convList = M.maybeToList #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:505:{-# RULES "L.head" head = L.head #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:509:{-# RULES "L.drop" drop = L.drop #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:513:{-# RULES "L.take" take = L.take #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:517:{-# RULES "L.find" find = L.find #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:521:{-# RULES "L.takeWhile" takeWhile = L.takeWhile #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:525:{-# RULES "L.dropWhile" dropWhile = L.dropWhile #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:529:{-# RULES "L.tails" tails = L.tails #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:533:{-# RULES "L.findIndex" findIndex = L.findIndex #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:534:{-# RULES "L.findIndices" findIndices = L.findIndices #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:544:{-# RULES "L.repeat" repeat = L.repeat #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:548:{-# RULES "L.replicate" replicate = L.replicate #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:561:{-# RULES "L.groupBy" groupBy = L.groupBy #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:565:{-# RULES "L.group" group = L.group #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:573:{-# RULES "L.null" null = L.null #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:574:{-# RULES "M.null" null = M.isNothing #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:578:{-# RULES "L.unnull" unnull = not . L.null #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:579:{-# RULES "M.unnull" unnull = M.isJust #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:583:{-# RULES "L.concat" concat = L.concat #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:631:{-# RULES "low8bits=id" low8bits = id #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:683:{-# RULES "L.intersperse" intersperse = L.intersperse #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:690:{-# RULES "L.intercalate" intercalate = L.intercalate #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:698:{-# RULES "L.delete" delete = L.delete #-};
./prelude-generalize-0.3/Prelude/Generalize.hs:703:{-# RULES "L.\\" (\\) = (L.\\) #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:263:{-# RULES "application$" ($) = id #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:457:{-# RULES "L.tail" tail = L.tail #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:462:{-# RULES "L.!!" (!!) = (L.!!) #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:470:{-# RULES "L.length" length = L.length #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:476:{-# RULES "L.filter" filter = L.filter #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:480:{-# RULES "consA" consA = (:) #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:496:{-# RULES "L.++" (++) = (L.++) #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:509:{-# RULES "L.convList(1)" convList = M.listToMaybe #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:510:{-# RULES "L.convList(2)" convList = M.maybeToList #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:514:{-# RULES "L.head" head = L.head #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:518:{-# RULES "L.drop" drop = L.drop #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:522:{-# RULES "L.take" take = L.take #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:526:{-# RULES "L.find" find = L.find #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:530:{-# RULES "L.takeWhile" takeWhile = L.takeWhile #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:534:{-# RULES "L.dropWhile" dropWhile = L.dropWhile #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:538:{-# RULES "L.tails" tails = L.tails #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:542:{-# RULES "L.findIndex" findIndex = L.findIndex #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:543:{-# RULES "L.findIndices" findIndex = L.findIndices #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:553:{-# RULES "L.repeat" repeat = L.repeat #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:557:{-# RULES "L.replicate" replicate = L.replicate #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:570:{-# RULES "L.groupBy" groupBy = L.groupBy #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:574:{-# RULES "L.group" group = L.group #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:582:{-# RULES "L.null" null = L.null #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:583:{-# RULES "M.null" null = M.isNothing #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:587:{-# RULES "L.unnull" unnull = not . L.null #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:588:{-# RULES "M.unnull" unnull = M.isJust #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:592:{-# RULES "L.concat" concat = L.concat #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:640:{-# RULES "low8bits=id" low8bits = id #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:692:{-# RULES "L.intersperse" intersperse = L.intersperse #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:699:{-# RULES "L.intercalate" intercalate = L.intercalate #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:707:{-# RULES "L.delete" delete = L.delete #-};
./prelude-generalize-0.3.1/Prelude/Generalize.hs:712:{-# RULES "L.\\" (\\) = (L.\\) #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:263:{-# RULES "application$" ($) = id #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:457:{-# RULES "L.tail" tail = L.tail #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:462:{-# RULES "L.!!" (!!) = (L.!!) #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:470:{-# RULES "L.length" length = L.length #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:476:{-# RULES "L.filter" filter = L.filter #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:480:{-# RULES "consA" consA = (:) #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:488:{-# RULES "snocA" snocA = option #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:501:{-# RULES "L.++" (++) = (L.++) #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:514:{-# RULES "L.convList(1)" convList = M.listToMaybe #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:515:{-# RULES "L.convList(2)" convList = M.maybeToList #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:519:{-# RULES "L.head" head = L.head #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:523:{-# RULES "L.drop" drop = L.drop #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:527:{-# RULES "L.take" take = L.take #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:531:{-# RULES "L.find" find = L.find #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:535:{-# RULES "L.takeWhile" takeWhile = L.takeWhile #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:539:{-# RULES "L.dropWhile" dropWhile = L.dropWhile #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:543:{-# RULES "L.tails" tails = L.tails #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:547:{-# RULES "L.findIndex" findIndex = L.findIndex #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:548:{-# RULES "L.findIndices" findIndex = L.findIndices #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:558:{-# RULES "L.repeat" repeat = L.repeat #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:562:{-# RULES "L.replicate" replicate = L.replicate #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:575:{-# RULES "L.groupBy" groupBy = L.groupBy #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:579:{-# RULES "L.group" group = L.group #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:587:{-# RULES "L.null" null = L.null #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:588:{-# RULES "M.null" null = M.isNothing #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:592:{-# RULES "L.unnull" unnull = not . L.null #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:593:{-# RULES "M.unnull" unnull = M.isJust #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:597:{-# RULES "L.concat" concat = L.concat #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:645:{-# RULES "low8bits=id" low8bits = id #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:694:{-# RULES "L.intersperse" intersperse = L.intersperse #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:701:{-# RULES "L.intercalate" intercalate = L.intercalate #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:709:{-# RULES "L.delete" delete = L.delete #-};
./prelude-generalize-0.4/Prelude/Generalize.hs:714:{-# RULES "L.\\" (\\) = (L.\\) #-};
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:85:{-# RULES "unpack/pack Int8X16#" forall x . unpackInt8X16# (packInt8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:86:{-# RULES "pack/unpack Int8X16#" forall x . packInt8X16# (unpackInt8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:87:{-# RULES "unpack/pack Int8X32#" forall x . unpackInt8X32# (packInt8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:88:{-# RULES "pack/unpack Int8X32#" forall x . packInt8X32# (unpackInt8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:89:{-# RULES "unpack/pack Int8X64#" forall x . unpackInt8X64# (packInt8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:90:{-# RULES "pack/unpack Int8X64#" forall x . packInt8X64# (unpackInt8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:91:{-# RULES "unpack/pack Int16X8#" forall x . unpackInt16X8# (packInt16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:92:{-# RULES "pack/unpack Int16X8#" forall x . packInt16X8# (unpackInt16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:93:{-# RULES "unpack/pack Int16X16#" forall x . unpackInt16X16# (packInt16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:94:{-# RULES "pack/unpack Int16X16#" forall x . packInt16X16# (unpackInt16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:95:{-# RULES "unpack/pack Int16X32#" forall x . unpackInt16X32# (packInt16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:96:{-# RULES "pack/unpack Int16X32#" forall x . packInt16X32# (unpackInt16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:97:{-# RULES "unpack/pack Int32X4#" forall x . unpackInt32X4# (packInt32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:98:{-# RULES "pack/unpack Int32X4#" forall x . packInt32X4# (unpackInt32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:99:{-# RULES "unpack/pack Int32X8#" forall x . unpackInt32X8# (packInt32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:100:{-# RULES "pack/unpack Int32X8#" forall x . packInt32X8# (unpackInt32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:101:{-# RULES "unpack/pack Int32X16#" forall x . unpackInt32X16# (packInt32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:102:{-# RULES "pack/unpack Int32X16#" forall x . packInt32X16# (unpackInt32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:103:{-# RULES "unpack/pack Int64X2#" forall x . unpackInt64X2# (packInt64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:104:{-# RULES "pack/unpack Int64X2#" forall x . packInt64X2# (unpackInt64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:105:{-# RULES "unpack/pack Int64X4#" forall x . unpackInt64X4# (packInt64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:106:{-# RULES "pack/unpack Int64X4#" forall x . packInt64X4# (unpackInt64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:107:{-# RULES "unpack/pack Int64X8#" forall x . unpackInt64X8# (packInt64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:108:{-# RULES "pack/unpack Int64X8#" forall x . packInt64X8# (unpackInt64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:109:{-# RULES "unpack/pack Word8X16#" forall x . unpackWord8X16# (packWord8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:110:{-# RULES "pack/unpack Word8X16#" forall x . packWord8X16# (unpackWord8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:111:{-# RULES "unpack/pack Word8X32#" forall x . unpackWord8X32# (packWord8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:112:{-# RULES "pack/unpack Word8X32#" forall x . packWord8X32# (unpackWord8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:113:{-# RULES "unpack/pack Word8X64#" forall x . unpackWord8X64# (packWord8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:114:{-# RULES "pack/unpack Word8X64#" forall x . packWord8X64# (unpackWord8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:115:{-# RULES "unpack/pack Word16X8#" forall x . unpackWord16X8# (packWord16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:116:{-# RULES "pack/unpack Word16X8#" forall x . packWord16X8# (unpackWord16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:117:{-# RULES "unpack/pack Word16X16#" forall x . unpackWord16X16# (packWord16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:118:{-# RULES "pack/unpack Word16X16#" forall x . packWord16X16# (unpackWord16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:119:{-# RULES "unpack/pack Word16X32#" forall x . unpackWord16X32# (packWord16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:120:{-# RULES "pack/unpack Word16X32#" forall x . packWord16X32# (unpackWord16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:121:{-# RULES "unpack/pack Word32X4#" forall x . unpackWord32X4# (packWord32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:122:{-# RULES "pack/unpack Word32X4#" forall x . packWord32X4# (unpackWord32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:123:{-# RULES "unpack/pack Word32X8#" forall x . unpackWord32X8# (packWord32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:124:{-# RULES "pack/unpack Word32X8#" forall x . packWord32X8# (unpackWord32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:125:{-# RULES "unpack/pack Word32X16#" forall x . unpackWord32X16# (packWord32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:126:{-# RULES "pack/unpack Word32X16#" forall x . packWord32X16# (unpackWord32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:127:{-# RULES "unpack/pack Word64X2#" forall x . unpackWord64X2# (packWord64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:128:{-# RULES "pack/unpack Word64X2#" forall x . packWord64X2# (unpackWord64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:129:{-# RULES "unpack/pack Word64X4#" forall x . unpackWord64X4# (packWord64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:130:{-# RULES "pack/unpack Word64X4#" forall x . packWord64X4# (unpackWord64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:131:{-# RULES "unpack/pack Word64X8#" forall x . unpackWord64X8# (packWord64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:132:{-# RULES "pack/unpack Word64X8#" forall x . packWord64X8# (unpackWord64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:133:{-# RULES "unpack/pack FloatX4#" forall x . unpackFloatX4# (packFloatX4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:134:{-# RULES "pack/unpack FloatX4#" forall x . packFloatX4# (unpackFloatX4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:135:{-# RULES "unpack/pack FloatX8#" forall x . unpackFloatX8# (packFloatX8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:136:{-# RULES "pack/unpack FloatX8#" forall x . packFloatX8# (unpackFloatX8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:137:{-# RULES "unpack/pack FloatX16#" forall x . unpackFloatX16# (packFloatX16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:138:{-# RULES "pack/unpack FloatX16#" forall x . packFloatX16# (unpackFloatX16# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:139:{-# RULES "unpack/pack DoubleX2#" forall x . unpackDoubleX2# (packDoubleX2# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:140:{-# RULES "pack/unpack DoubleX2#" forall x . packDoubleX2# (unpackDoubleX2# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:141:{-# RULES "unpack/pack DoubleX4#" forall x . unpackDoubleX4# (packDoubleX4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:142:{-# RULES "pack/unpack DoubleX4#" forall x . packDoubleX4# (unpackDoubleX4# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:143:{-# RULES "unpack/pack DoubleX8#" forall x . unpackDoubleX8# (packDoubleX8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Class.hs:144:{-# RULES "pack/unpack DoubleX8#" forall x . packDoubleX8# (unpackDoubleX8# x) = x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:215:{-# RULES "mapVector abs" mapDoubleX16 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:216:{-# RULES "mapVector signum" mapDoubleX16 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:217:{-# RULES "mapVector negate" mapDoubleX16 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:218:{-# RULES "mapVector const" forall x . mapDoubleX16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:219:{-# RULES "mapVector (x+)" forall x v . mapDoubleX16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:220:{-# RULES "mapVector (+x)" forall x v . mapDoubleX16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:221:{-# RULES "mapVector (x-)" forall x v . mapDoubleX16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:222:{-# RULES "mapVector (-x)" forall x v . mapDoubleX16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:223:{-# RULES "mapVector (x*)" forall x v . mapDoubleX16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:224:{-# RULES "mapVector (*x)" forall x v . mapDoubleX16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:225:{-# RULES "mapVector (x/)" forall x v . mapDoubleX16 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:226:{-# RULES "mapVector (/x)" forall x v . mapDoubleX16 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:241:{-# RULES "zipVector +" forall a b . zipDoubleX16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:242:{-# RULES "zipVector -" forall a b . zipDoubleX16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:243:{-# RULES "zipVector *" forall a b . zipDoubleX16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:244:{-# RULES "zipVector /" forall a b . zipDoubleX16 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX16.hs:253:{-# RULES "foldVector (+)" foldDoubleX16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:199:{-# RULES "mapVector abs" mapDoubleX2 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:200:{-# RULES "mapVector signum" mapDoubleX2 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:201:{-# RULES "mapVector negate" mapDoubleX2 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:202:{-# RULES "mapVector const" forall x . mapDoubleX2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:203:{-# RULES "mapVector (x+)" forall x v . mapDoubleX2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:204:{-# RULES "mapVector (+x)" forall x v . mapDoubleX2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:205:{-# RULES "mapVector (x-)" forall x v . mapDoubleX2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:206:{-# RULES "mapVector (-x)" forall x v . mapDoubleX2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:207:{-# RULES "mapVector (x*)" forall x v . mapDoubleX2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:208:{-# RULES "mapVector (*x)" forall x v . mapDoubleX2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:209:{-# RULES "mapVector (x/)" forall x v . mapDoubleX2 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:210:{-# RULES "mapVector (/x)" forall x v . mapDoubleX2 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:225:{-# RULES "zipVector +" forall a b . zipDoubleX2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:226:{-# RULES "zipVector -" forall a b . zipDoubleX2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:227:{-# RULES "zipVector *" forall a b . zipDoubleX2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX2.hs:228:{-# RULES "zipVector /" forall a b . zipDoubleX2 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:203:{-# RULES "mapVector abs" mapDoubleX4 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:204:{-# RULES "mapVector signum" mapDoubleX4 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:205:{-# RULES "mapVector negate" mapDoubleX4 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:206:{-# RULES "mapVector const" forall x . mapDoubleX4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:207:{-# RULES "mapVector (x+)" forall x v . mapDoubleX4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:208:{-# RULES "mapVector (+x)" forall x v . mapDoubleX4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:209:{-# RULES "mapVector (x-)" forall x v . mapDoubleX4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:210:{-# RULES "mapVector (-x)" forall x v . mapDoubleX4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:211:{-# RULES "mapVector (x*)" forall x v . mapDoubleX4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:212:{-# RULES "mapVector (*x)" forall x v . mapDoubleX4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:213:{-# RULES "mapVector (x/)" forall x v . mapDoubleX4 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:214:{-# RULES "mapVector (/x)" forall x v . mapDoubleX4 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:229:{-# RULES "zipVector +" forall a b . zipDoubleX4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:230:{-# RULES "zipVector -" forall a b . zipDoubleX4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:231:{-# RULES "zipVector *" forall a b . zipDoubleX4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:232:{-# RULES "zipVector /" forall a b . zipDoubleX4 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX4.hs:241:{-# RULES "foldVector (+)" foldDoubleX4 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:207:{-# RULES "mapVector abs" mapDoubleX8 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:208:{-# RULES "mapVector signum" mapDoubleX8 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:209:{-# RULES "mapVector negate" mapDoubleX8 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:210:{-# RULES "mapVector const" forall x . mapDoubleX8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:211:{-# RULES "mapVector (x+)" forall x v . mapDoubleX8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:212:{-# RULES "mapVector (+x)" forall x v . mapDoubleX8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:213:{-# RULES "mapVector (x-)" forall x v . mapDoubleX8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:214:{-# RULES "mapVector (-x)" forall x v . mapDoubleX8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:215:{-# RULES "mapVector (x*)" forall x v . mapDoubleX8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:216:{-# RULES "mapVector (*x)" forall x v . mapDoubleX8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:217:{-# RULES "mapVector (x/)" forall x v . mapDoubleX8 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:218:{-# RULES "mapVector (/x)" forall x v . mapDoubleX8 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:233:{-# RULES "zipVector +" forall a b . zipDoubleX8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:234:{-# RULES "zipVector -" forall a b . zipDoubleX8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:235:{-# RULES "zipVector *" forall a b . zipDoubleX8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:236:{-# RULES "zipVector /" forall a b . zipDoubleX8 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/DoubleX8.hs:245:{-# RULES "foldVector (+)" foldDoubleX8 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:207:{-# RULES "mapVector abs" mapFloatX16 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:208:{-# RULES "mapVector signum" mapFloatX16 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:209:{-# RULES "mapVector negate" mapFloatX16 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:210:{-# RULES "mapVector const" forall x . mapFloatX16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:211:{-# RULES "mapVector (x+)" forall x v . mapFloatX16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:212:{-# RULES "mapVector (+x)" forall x v . mapFloatX16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:213:{-# RULES "mapVector (x-)" forall x v . mapFloatX16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:214:{-# RULES "mapVector (-x)" forall x v . mapFloatX16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:215:{-# RULES "mapVector (x*)" forall x v . mapFloatX16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:216:{-# RULES "mapVector (*x)" forall x v . mapFloatX16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:217:{-# RULES "mapVector (x/)" forall x v . mapFloatX16 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:218:{-# RULES "mapVector (/x)" forall x v . mapFloatX16 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:233:{-# RULES "zipVector +" forall a b . zipFloatX16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:234:{-# RULES "zipVector -" forall a b . zipFloatX16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:235:{-# RULES "zipVector *" forall a b . zipFloatX16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:236:{-# RULES "zipVector /" forall a b . zipFloatX16 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX16.hs:245:{-# RULES "foldVector (+)" foldFloatX16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:199:{-# RULES "mapVector abs" mapFloatX4 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:200:{-# RULES "mapVector signum" mapFloatX4 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:201:{-# RULES "mapVector negate" mapFloatX4 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:202:{-# RULES "mapVector const" forall x . mapFloatX4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:203:{-# RULES "mapVector (x+)" forall x v . mapFloatX4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:204:{-# RULES "mapVector (+x)" forall x v . mapFloatX4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:205:{-# RULES "mapVector (x-)" forall x v . mapFloatX4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:206:{-# RULES "mapVector (-x)" forall x v . mapFloatX4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:207:{-# RULES "mapVector (x*)" forall x v . mapFloatX4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:208:{-# RULES "mapVector (*x)" forall x v . mapFloatX4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:209:{-# RULES "mapVector (x/)" forall x v . mapFloatX4 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:210:{-# RULES "mapVector (/x)" forall x v . mapFloatX4 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:225:{-# RULES "zipVector +" forall a b . zipFloatX4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:226:{-# RULES "zipVector -" forall a b . zipFloatX4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:227:{-# RULES "zipVector *" forall a b . zipFloatX4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX4.hs:228:{-# RULES "zipVector /" forall a b . zipFloatX4 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:203:{-# RULES "mapVector abs" mapFloatX8 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:204:{-# RULES "mapVector signum" mapFloatX8 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:205:{-# RULES "mapVector negate" mapFloatX8 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:206:{-# RULES "mapVector const" forall x . mapFloatX8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:207:{-# RULES "mapVector (x+)" forall x v . mapFloatX8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:208:{-# RULES "mapVector (+x)" forall x v . mapFloatX8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:209:{-# RULES "mapVector (x-)" forall x v . mapFloatX8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:210:{-# RULES "mapVector (-x)" forall x v . mapFloatX8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:211:{-# RULES "mapVector (x*)" forall x v . mapFloatX8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:212:{-# RULES "mapVector (*x)" forall x v . mapFloatX8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:213:{-# RULES "mapVector (x/)" forall x v . mapFloatX8 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:214:{-# RULES "mapVector (/x)" forall x v . mapFloatX8 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:229:{-# RULES "zipVector +" forall a b . zipFloatX8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:230:{-# RULES "zipVector -" forall a b . zipFloatX8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:231:{-# RULES "zipVector *" forall a b . zipFloatX8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:232:{-# RULES "zipVector /" forall a b . zipFloatX8 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/FloatX8.hs:241:{-# RULES "foldVector (+)" foldFloatX8 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:188:{-# RULES "mapVector abs" mapInt16X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:189:{-# RULES "mapVector signum" mapInt16X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:190:{-# RULES "mapVector negate" mapInt16X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:191:{-# RULES "mapVector const" forall x . mapInt16X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:192:{-# RULES "mapVector (x+)" forall x v . mapInt16X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:193:{-# RULES "mapVector (+x)" forall x v . mapInt16X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:194:{-# RULES "mapVector (x-)" forall x v . mapInt16X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:195:{-# RULES "mapVector (-x)" forall x v . mapInt16X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:196:{-# RULES "mapVector (x*)" forall x v . mapInt16X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:197:{-# RULES "mapVector (*x)" forall x v . mapInt16X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:199:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:200:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:215:{-# RULES "zipVector +" forall a b . zipInt16X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:216:{-# RULES "zipVector -" forall a b . zipInt16X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:217:{-# RULES "zipVector *" forall a b . zipInt16X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:218:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:219:{-# RULES "zipVector `remVector`" forall a b . zipInt16X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X16.hs:228:{-# RULES "foldVector (+)" foldInt16X16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:192:{-# RULES "mapVector abs" mapInt16X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:193:{-# RULES "mapVector signum" mapInt16X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:194:{-# RULES "mapVector negate" mapInt16X32 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:195:{-# RULES "mapVector const" forall x . mapInt16X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:196:{-# RULES "mapVector (x+)" forall x v . mapInt16X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:197:{-# RULES "mapVector (+x)" forall x v . mapInt16X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:198:{-# RULES "mapVector (x-)" forall x v . mapInt16X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:199:{-# RULES "mapVector (-x)" forall x v . mapInt16X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:200:{-# RULES "mapVector (x*)" forall x v . mapInt16X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:201:{-# RULES "mapVector (*x)" forall x v . mapInt16X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:203:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:204:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:219:{-# RULES "zipVector +" forall a b . zipInt16X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:220:{-# RULES "zipVector -" forall a b . zipInt16X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:221:{-# RULES "zipVector *" forall a b . zipInt16X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:222:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:223:{-# RULES "zipVector `remVector`" forall a b . zipInt16X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X32.hs:232:{-# RULES "foldVector (+)" foldInt16X32 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:184:{-# RULES "mapVector abs" mapInt16X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:185:{-# RULES "mapVector signum" mapInt16X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:186:{-# RULES "mapVector negate" mapInt16X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:187:{-# RULES "mapVector const" forall x . mapInt16X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt16X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt16X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt16X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt16X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt16X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt16X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:211:{-# RULES "zipVector +" forall a b . zipInt16X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:212:{-# RULES "zipVector -" forall a b . zipInt16X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:213:{-# RULES "zipVector *" forall a b . zipInt16X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int16X8.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt16X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:192:{-# RULES "mapVector abs" mapInt32X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:193:{-# RULES "mapVector signum" mapInt32X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:194:{-# RULES "mapVector negate" mapInt32X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:195:{-# RULES "mapVector const" forall x . mapInt32X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:196:{-# RULES "mapVector (x+)" forall x v . mapInt32X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:197:{-# RULES "mapVector (+x)" forall x v . mapInt32X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:198:{-# RULES "mapVector (x-)" forall x v . mapInt32X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:199:{-# RULES "mapVector (-x)" forall x v . mapInt32X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:200:{-# RULES "mapVector (x*)" forall x v . mapInt32X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:201:{-# RULES "mapVector (*x)" forall x v . mapInt32X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:203:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:204:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:219:{-# RULES "zipVector +" forall a b . zipInt32X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:220:{-# RULES "zipVector -" forall a b . zipInt32X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:221:{-# RULES "zipVector *" forall a b . zipInt32X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:222:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:223:{-# RULES "zipVector `remVector`" forall a b . zipInt32X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X16.hs:232:{-# RULES "foldVector (+)" foldInt32X16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:184:{-# RULES "mapVector abs" mapInt32X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:185:{-# RULES "mapVector signum" mapInt32X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:186:{-# RULES "mapVector negate" mapInt32X4 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:187:{-# RULES "mapVector const" forall x . mapInt32X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt32X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt32X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt32X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt32X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt32X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt32X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:211:{-# RULES "zipVector +" forall a b . zipInt32X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:212:{-# RULES "zipVector -" forall a b . zipInt32X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:213:{-# RULES "zipVector *" forall a b . zipInt32X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X4.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt32X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:188:{-# RULES "mapVector abs" mapInt32X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:189:{-# RULES "mapVector signum" mapInt32X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:190:{-# RULES "mapVector negate" mapInt32X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:191:{-# RULES "mapVector const" forall x . mapInt32X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:192:{-# RULES "mapVector (x+)" forall x v . mapInt32X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:193:{-# RULES "mapVector (+x)" forall x v . mapInt32X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:194:{-# RULES "mapVector (x-)" forall x v . mapInt32X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:195:{-# RULES "mapVector (-x)" forall x v . mapInt32X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:196:{-# RULES "mapVector (x*)" forall x v . mapInt32X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:197:{-# RULES "mapVector (*x)" forall x v . mapInt32X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:199:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:200:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:215:{-# RULES "zipVector +" forall a b . zipInt32X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:216:{-# RULES "zipVector -" forall a b . zipInt32X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:217:{-# RULES "zipVector *" forall a b . zipInt32X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:218:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:219:{-# RULES "zipVector `remVector`" forall a b . zipInt32X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int32X8.hs:228:{-# RULES "foldVector (+)" foldInt32X8 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:194:{-# RULES "mapVector abs" mapInt64X2 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:195:{-# RULES "mapVector signum" mapInt64X2 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:196:{-# RULES "mapVector negate" mapInt64X2 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:197:{-# RULES "mapVector const" forall x . mapInt64X2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:198:{-# RULES "mapVector (x+)" forall x v . mapInt64X2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:199:{-# RULES "mapVector (+x)" forall x v . mapInt64X2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:200:{-# RULES "mapVector (x-)" forall x v . mapInt64X2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:201:{-# RULES "mapVector (-x)" forall x v . mapInt64X2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:202:{-# RULES "mapVector (x*)" forall x v . mapInt64X2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:203:{-# RULES "mapVector (*x)" forall x v . mapInt64X2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:205:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X2 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:206:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X2 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:221:{-# RULES "zipVector +" forall a b . zipInt64X2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:222:{-# RULES "zipVector -" forall a b . zipInt64X2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:223:{-# RULES "zipVector *" forall a b . zipInt64X2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:224:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X2 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X2.hs:225:{-# RULES "zipVector `remVector`" forall a b . zipInt64X2 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:198:{-# RULES "mapVector abs" mapInt64X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:199:{-# RULES "mapVector signum" mapInt64X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:200:{-# RULES "mapVector negate" mapInt64X4 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:201:{-# RULES "mapVector const" forall x . mapInt64X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:202:{-# RULES "mapVector (x+)" forall x v . mapInt64X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:203:{-# RULES "mapVector (+x)" forall x v . mapInt64X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:204:{-# RULES "mapVector (x-)" forall x v . mapInt64X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:205:{-# RULES "mapVector (-x)" forall x v . mapInt64X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:206:{-# RULES "mapVector (x*)" forall x v . mapInt64X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:207:{-# RULES "mapVector (*x)" forall x v . mapInt64X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:209:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:210:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:225:{-# RULES "zipVector +" forall a b . zipInt64X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:226:{-# RULES "zipVector -" forall a b . zipInt64X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:227:{-# RULES "zipVector *" forall a b . zipInt64X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:228:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:229:{-# RULES "zipVector `remVector`" forall a b . zipInt64X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X4.hs:238:{-# RULES "foldVector (+)" foldInt64X4 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:202:{-# RULES "mapVector abs" mapInt64X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:203:{-# RULES "mapVector signum" mapInt64X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:204:{-# RULES "mapVector negate" mapInt64X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:205:{-# RULES "mapVector const" forall x . mapInt64X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:206:{-# RULES "mapVector (x+)" forall x v . mapInt64X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:207:{-# RULES "mapVector (+x)" forall x v . mapInt64X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:208:{-# RULES "mapVector (x-)" forall x v . mapInt64X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:209:{-# RULES "mapVector (-x)" forall x v . mapInt64X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:210:{-# RULES "mapVector (x*)" forall x v . mapInt64X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:211:{-# RULES "mapVector (*x)" forall x v . mapInt64X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:213:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:214:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:229:{-# RULES "zipVector +" forall a b . zipInt64X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:230:{-# RULES "zipVector -" forall a b . zipInt64X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:231:{-# RULES "zipVector *" forall a b . zipInt64X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:232:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:233:{-# RULES "zipVector `remVector`" forall a b . zipInt64X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int64X8.hs:242:{-# RULES "foldVector (+)" foldInt64X8 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:184:{-# RULES "mapVector abs" mapInt8X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:185:{-# RULES "mapVector signum" mapInt8X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:186:{-# RULES "mapVector negate" mapInt8X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:187:{-# RULES "mapVector const" forall x . mapInt8X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt8X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt8X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt8X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt8X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt8X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt8X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:211:{-# RULES "zipVector +" forall a b . zipInt8X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:212:{-# RULES "zipVector -" forall a b . zipInt8X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:213:{-# RULES "zipVector *" forall a b . zipInt8X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X16.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt8X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:188:{-# RULES "mapVector abs" mapInt8X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:189:{-# RULES "mapVector signum" mapInt8X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:190:{-# RULES "mapVector negate" mapInt8X32 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:191:{-# RULES "mapVector const" forall x . mapInt8X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:192:{-# RULES "mapVector (x+)" forall x v . mapInt8X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:193:{-# RULES "mapVector (+x)" forall x v . mapInt8X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:194:{-# RULES "mapVector (x-)" forall x v . mapInt8X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:195:{-# RULES "mapVector (-x)" forall x v . mapInt8X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:196:{-# RULES "mapVector (x*)" forall x v . mapInt8X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:197:{-# RULES "mapVector (*x)" forall x v . mapInt8X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:199:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:200:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:215:{-# RULES "zipVector +" forall a b . zipInt8X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:216:{-# RULES "zipVector -" forall a b . zipInt8X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:217:{-# RULES "zipVector *" forall a b . zipInt8X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:218:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:219:{-# RULES "zipVector `remVector`" forall a b . zipInt8X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X32.hs:228:{-# RULES "foldVector (+)" foldInt8X32 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:192:{-# RULES "mapVector abs" mapInt8X64 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:193:{-# RULES "mapVector signum" mapInt8X64 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:194:{-# RULES "mapVector negate" mapInt8X64 negate = negate #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:195:{-# RULES "mapVector const" forall x . mapInt8X64 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:196:{-# RULES "mapVector (x+)" forall x v . mapInt8X64 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:197:{-# RULES "mapVector (+x)" forall x v . mapInt8X64 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:198:{-# RULES "mapVector (x-)" forall x v . mapInt8X64 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:199:{-# RULES "mapVector (-x)" forall x v . mapInt8X64 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:200:{-# RULES "mapVector (x*)" forall x v . mapInt8X64 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:201:{-# RULES "mapVector (*x)" forall x v . mapInt8X64 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:203:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X64 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:204:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X64 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:219:{-# RULES "zipVector +" forall a b . zipInt8X64 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:220:{-# RULES "zipVector -" forall a b . zipInt8X64 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:221:{-# RULES "zipVector *" forall a b . zipInt8X64 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:222:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X64 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:223:{-# RULES "zipVector `remVector`" forall a b . zipInt8X64 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Int8X64.hs:232:{-# RULES "foldVector (+)" foldInt8X64 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:187:{-# RULES "mapVector abs" mapWord16X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:188:{-# RULES "mapVector signum" mapWord16X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:190:{-# RULES "mapVector const" forall x . mapWord16X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:191:{-# RULES "mapVector (x+)" forall x v . mapWord16X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:192:{-# RULES "mapVector (+x)" forall x v . mapWord16X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:193:{-# RULES "mapVector (x-)" forall x v . mapWord16X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:194:{-# RULES "mapVector (-x)" forall x v . mapWord16X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:195:{-# RULES "mapVector (x*)" forall x v . mapWord16X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:196:{-# RULES "mapVector (*x)" forall x v . mapWord16X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:198:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:199:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:214:{-# RULES "zipVector +" forall a b . zipWord16X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:215:{-# RULES "zipVector -" forall a b . zipWord16X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:216:{-# RULES "zipVector *" forall a b . zipWord16X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:217:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:218:{-# RULES "zipVector `remVector`" forall a b . zipWord16X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X16.hs:227:{-# RULES "foldVector (+)" foldWord16X16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:191:{-# RULES "mapVector abs" mapWord16X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:192:{-# RULES "mapVector signum" mapWord16X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:194:{-# RULES "mapVector const" forall x . mapWord16X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:195:{-# RULES "mapVector (x+)" forall x v . mapWord16X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:196:{-# RULES "mapVector (+x)" forall x v . mapWord16X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:197:{-# RULES "mapVector (x-)" forall x v . mapWord16X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:198:{-# RULES "mapVector (-x)" forall x v . mapWord16X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:199:{-# RULES "mapVector (x*)" forall x v . mapWord16X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:200:{-# RULES "mapVector (*x)" forall x v . mapWord16X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:202:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:203:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:218:{-# RULES "zipVector +" forall a b . zipWord16X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:219:{-# RULES "zipVector -" forall a b . zipWord16X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:220:{-# RULES "zipVector *" forall a b . zipWord16X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:221:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:222:{-# RULES "zipVector `remVector`" forall a b . zipWord16X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X32.hs:231:{-# RULES "foldVector (+)" foldWord16X32 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:183:{-# RULES "mapVector abs" mapWord16X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:184:{-# RULES "mapVector signum" mapWord16X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:186:{-# RULES "mapVector const" forall x . mapWord16X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord16X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord16X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord16X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord16X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord16X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord16X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:210:{-# RULES "zipVector +" forall a b . zipWord16X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:211:{-# RULES "zipVector -" forall a b . zipWord16X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:212:{-# RULES "zipVector *" forall a b . zipWord16X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word16X8.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord16X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:191:{-# RULES "mapVector abs" mapWord32X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:192:{-# RULES "mapVector signum" mapWord32X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:194:{-# RULES "mapVector const" forall x . mapWord32X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:195:{-# RULES "mapVector (x+)" forall x v . mapWord32X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:196:{-# RULES "mapVector (+x)" forall x v . mapWord32X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:197:{-# RULES "mapVector (x-)" forall x v . mapWord32X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:198:{-# RULES "mapVector (-x)" forall x v . mapWord32X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:199:{-# RULES "mapVector (x*)" forall x v . mapWord32X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:200:{-# RULES "mapVector (*x)" forall x v . mapWord32X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:202:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:203:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:218:{-# RULES "zipVector +" forall a b . zipWord32X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:219:{-# RULES "zipVector -" forall a b . zipWord32X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:220:{-# RULES "zipVector *" forall a b . zipWord32X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:221:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:222:{-# RULES "zipVector `remVector`" forall a b . zipWord32X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X16.hs:231:{-# RULES "foldVector (+)" foldWord32X16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:183:{-# RULES "mapVector abs" mapWord32X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:184:{-# RULES "mapVector signum" mapWord32X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:186:{-# RULES "mapVector const" forall x . mapWord32X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord32X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord32X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord32X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord32X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord32X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord32X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:210:{-# RULES "zipVector +" forall a b . zipWord32X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:211:{-# RULES "zipVector -" forall a b . zipWord32X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:212:{-# RULES "zipVector *" forall a b . zipWord32X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X4.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord32X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:187:{-# RULES "mapVector abs" mapWord32X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:188:{-# RULES "mapVector signum" mapWord32X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:190:{-# RULES "mapVector const" forall x . mapWord32X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:191:{-# RULES "mapVector (x+)" forall x v . mapWord32X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:192:{-# RULES "mapVector (+x)" forall x v . mapWord32X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:193:{-# RULES "mapVector (x-)" forall x v . mapWord32X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:194:{-# RULES "mapVector (-x)" forall x v . mapWord32X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:195:{-# RULES "mapVector (x*)" forall x v . mapWord32X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:196:{-# RULES "mapVector (*x)" forall x v . mapWord32X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:198:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:199:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:214:{-# RULES "zipVector +" forall a b . zipWord32X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:215:{-# RULES "zipVector -" forall a b . zipWord32X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:216:{-# RULES "zipVector *" forall a b . zipWord32X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:217:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:218:{-# RULES "zipVector `remVector`" forall a b . zipWord32X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word32X8.hs:227:{-# RULES "foldVector (+)" foldWord32X8 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:193:{-# RULES "mapVector abs" mapWord64X2 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:194:{-# RULES "mapVector signum" mapWord64X2 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:196:{-# RULES "mapVector const" forall x . mapWord64X2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:197:{-# RULES "mapVector (x+)" forall x v . mapWord64X2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:198:{-# RULES "mapVector (+x)" forall x v . mapWord64X2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:199:{-# RULES "mapVector (x-)" forall x v . mapWord64X2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:200:{-# RULES "mapVector (-x)" forall x v . mapWord64X2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:201:{-# RULES "mapVector (x*)" forall x v . mapWord64X2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:202:{-# RULES "mapVector (*x)" forall x v . mapWord64X2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:204:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X2 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:205:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X2 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:220:{-# RULES "zipVector +" forall a b . zipWord64X2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:221:{-# RULES "zipVector -" forall a b . zipWord64X2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:222:{-# RULES "zipVector *" forall a b . zipWord64X2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:223:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X2 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X2.hs:224:{-# RULES "zipVector `remVector`" forall a b . zipWord64X2 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:197:{-# RULES "mapVector abs" mapWord64X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:198:{-# RULES "mapVector signum" mapWord64X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:200:{-# RULES "mapVector const" forall x . mapWord64X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:201:{-# RULES "mapVector (x+)" forall x v . mapWord64X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:202:{-# RULES "mapVector (+x)" forall x v . mapWord64X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:203:{-# RULES "mapVector (x-)" forall x v . mapWord64X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:204:{-# RULES "mapVector (-x)" forall x v . mapWord64X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:205:{-# RULES "mapVector (x*)" forall x v . mapWord64X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:206:{-# RULES "mapVector (*x)" forall x v . mapWord64X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:208:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:209:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:224:{-# RULES "zipVector +" forall a b . zipWord64X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:225:{-# RULES "zipVector -" forall a b . zipWord64X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:226:{-# RULES "zipVector *" forall a b . zipWord64X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:227:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:228:{-# RULES "zipVector `remVector`" forall a b . zipWord64X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X4.hs:237:{-# RULES "foldVector (+)" foldWord64X4 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:201:{-# RULES "mapVector abs" mapWord64X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:202:{-# RULES "mapVector signum" mapWord64X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:204:{-# RULES "mapVector const" forall x . mapWord64X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:205:{-# RULES "mapVector (x+)" forall x v . mapWord64X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:206:{-# RULES "mapVector (+x)" forall x v . mapWord64X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:207:{-# RULES "mapVector (x-)" forall x v . mapWord64X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:208:{-# RULES "mapVector (-x)" forall x v . mapWord64X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:209:{-# RULES "mapVector (x*)" forall x v . mapWord64X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:210:{-# RULES "mapVector (*x)" forall x v . mapWord64X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:212:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:213:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:228:{-# RULES "zipVector +" forall a b . zipWord64X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:229:{-# RULES "zipVector -" forall a b . zipWord64X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:230:{-# RULES "zipVector *" forall a b . zipWord64X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:231:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:232:{-# RULES "zipVector `remVector`" forall a b . zipWord64X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word64X8.hs:241:{-# RULES "foldVector (+)" foldWord64X8 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:183:{-# RULES "mapVector abs" mapWord8X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:184:{-# RULES "mapVector signum" mapWord8X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:186:{-# RULES "mapVector const" forall x . mapWord8X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord8X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord8X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord8X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord8X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord8X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord8X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:210:{-# RULES "zipVector +" forall a b . zipWord8X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:211:{-# RULES "zipVector -" forall a b . zipWord8X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:212:{-# RULES "zipVector *" forall a b . zipWord8X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X16.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord8X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:187:{-# RULES "mapVector abs" mapWord8X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:188:{-# RULES "mapVector signum" mapWord8X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:190:{-# RULES "mapVector const" forall x . mapWord8X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:191:{-# RULES "mapVector (x+)" forall x v . mapWord8X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:192:{-# RULES "mapVector (+x)" forall x v . mapWord8X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:193:{-# RULES "mapVector (x-)" forall x v . mapWord8X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:194:{-# RULES "mapVector (-x)" forall x v . mapWord8X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:195:{-# RULES "mapVector (x*)" forall x v . mapWord8X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:196:{-# RULES "mapVector (*x)" forall x v . mapWord8X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:198:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:199:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:214:{-# RULES "zipVector +" forall a b . zipWord8X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:215:{-# RULES "zipVector -" forall a b . zipWord8X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:216:{-# RULES "zipVector *" forall a b . zipWord8X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:217:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:218:{-# RULES "zipVector `remVector`" forall a b . zipWord8X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X32.hs:227:{-# RULES "foldVector (+)" foldWord8X32 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:191:{-# RULES "mapVector abs" mapWord8X64 abs = abs #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:192:{-# RULES "mapVector signum" mapWord8X64 signum = signum #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:194:{-# RULES "mapVector const" forall x . mapWord8X64 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:195:{-# RULES "mapVector (x+)" forall x v . mapWord8X64 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:196:{-# RULES "mapVector (+x)" forall x v . mapWord8X64 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:197:{-# RULES "mapVector (x-)" forall x v . mapWord8X64 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:198:{-# RULES "mapVector (-x)" forall x v . mapWord8X64 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:199:{-# RULES "mapVector (x*)" forall x v . mapWord8X64 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:200:{-# RULES "mapVector (*x)" forall x v . mapWord8X64 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:202:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X64 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:203:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X64 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:218:{-# RULES "zipVector +" forall a b . zipWord8X64 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:219:{-# RULES "zipVector -" forall a b . zipWord8X64 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:220:{-# RULES "zipVector *" forall a b . zipWord8X64 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:221:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X64 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:222:{-# RULES "zipVector `remVector`" forall a b . zipWord8X64 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-128/Data/Primitive/SIMD/Word8X64.hs:231:{-# RULES "foldVector (+)" foldWord8X64 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:85:{-# RULES "unpack/pack Int8X16#" forall x . unpackInt8X16# (packInt8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:86:{-# RULES "pack/unpack Int8X16#" forall x . packInt8X16# (unpackInt8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:87:{-# RULES "unpack/pack Int8X32#" forall x . unpackInt8X32# (packInt8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:88:{-# RULES "pack/unpack Int8X32#" forall x . packInt8X32# (unpackInt8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:89:{-# RULES "unpack/pack Int8X64#" forall x . unpackInt8X64# (packInt8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:90:{-# RULES "pack/unpack Int8X64#" forall x . packInt8X64# (unpackInt8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:91:{-# RULES "unpack/pack Int16X8#" forall x . unpackInt16X8# (packInt16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:92:{-# RULES "pack/unpack Int16X8#" forall x . packInt16X8# (unpackInt16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:93:{-# RULES "unpack/pack Int16X16#" forall x . unpackInt16X16# (packInt16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:94:{-# RULES "pack/unpack Int16X16#" forall x . packInt16X16# (unpackInt16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:95:{-# RULES "unpack/pack Int16X32#" forall x . unpackInt16X32# (packInt16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:96:{-# RULES "pack/unpack Int16X32#" forall x . packInt16X32# (unpackInt16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:97:{-# RULES "unpack/pack Int32X4#" forall x . unpackInt32X4# (packInt32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:98:{-# RULES "pack/unpack Int32X4#" forall x . packInt32X4# (unpackInt32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:99:{-# RULES "unpack/pack Int32X8#" forall x . unpackInt32X8# (packInt32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:100:{-# RULES "pack/unpack Int32X8#" forall x . packInt32X8# (unpackInt32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:101:{-# RULES "unpack/pack Int32X16#" forall x . unpackInt32X16# (packInt32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:102:{-# RULES "pack/unpack Int32X16#" forall x . packInt32X16# (unpackInt32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:103:{-# RULES "unpack/pack Int64X2#" forall x . unpackInt64X2# (packInt64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:104:{-# RULES "pack/unpack Int64X2#" forall x . packInt64X2# (unpackInt64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:105:{-# RULES "unpack/pack Int64X4#" forall x . unpackInt64X4# (packInt64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:106:{-# RULES "pack/unpack Int64X4#" forall x . packInt64X4# (unpackInt64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:107:{-# RULES "unpack/pack Int64X8#" forall x . unpackInt64X8# (packInt64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:108:{-# RULES "pack/unpack Int64X8#" forall x . packInt64X8# (unpackInt64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:109:{-# RULES "unpack/pack Word8X16#" forall x . unpackWord8X16# (packWord8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:110:{-# RULES "pack/unpack Word8X16#" forall x . packWord8X16# (unpackWord8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:111:{-# RULES "unpack/pack Word8X32#" forall x . unpackWord8X32# (packWord8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:112:{-# RULES "pack/unpack Word8X32#" forall x . packWord8X32# (unpackWord8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:113:{-# RULES "unpack/pack Word8X64#" forall x . unpackWord8X64# (packWord8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:114:{-# RULES "pack/unpack Word8X64#" forall x . packWord8X64# (unpackWord8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:115:{-# RULES "unpack/pack Word16X8#" forall x . unpackWord16X8# (packWord16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:116:{-# RULES "pack/unpack Word16X8#" forall x . packWord16X8# (unpackWord16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:117:{-# RULES "unpack/pack Word16X16#" forall x . unpackWord16X16# (packWord16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:118:{-# RULES "pack/unpack Word16X16#" forall x . packWord16X16# (unpackWord16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:119:{-# RULES "unpack/pack Word16X32#" forall x . unpackWord16X32# (packWord16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:120:{-# RULES "pack/unpack Word16X32#" forall x . packWord16X32# (unpackWord16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:121:{-# RULES "unpack/pack Word32X4#" forall x . unpackWord32X4# (packWord32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:122:{-# RULES "pack/unpack Word32X4#" forall x . packWord32X4# (unpackWord32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:123:{-# RULES "unpack/pack Word32X8#" forall x . unpackWord32X8# (packWord32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:124:{-# RULES "pack/unpack Word32X8#" forall x . packWord32X8# (unpackWord32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:125:{-# RULES "unpack/pack Word32X16#" forall x . unpackWord32X16# (packWord32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:126:{-# RULES "pack/unpack Word32X16#" forall x . packWord32X16# (unpackWord32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:127:{-# RULES "unpack/pack Word64X2#" forall x . unpackWord64X2# (packWord64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:128:{-# RULES "pack/unpack Word64X2#" forall x . packWord64X2# (unpackWord64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:129:{-# RULES "unpack/pack Word64X4#" forall x . unpackWord64X4# (packWord64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:130:{-# RULES "pack/unpack Word64X4#" forall x . packWord64X4# (unpackWord64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:131:{-# RULES "unpack/pack Word64X8#" forall x . unpackWord64X8# (packWord64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:132:{-# RULES "pack/unpack Word64X8#" forall x . packWord64X8# (unpackWord64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:133:{-# RULES "unpack/pack FloatX4#" forall x . unpackFloatX4# (packFloatX4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:134:{-# RULES "pack/unpack FloatX4#" forall x . packFloatX4# (unpackFloatX4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:135:{-# RULES "unpack/pack FloatX8#" forall x . unpackFloatX8# (packFloatX8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:136:{-# RULES "pack/unpack FloatX8#" forall x . packFloatX8# (unpackFloatX8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:137:{-# RULES "unpack/pack FloatX16#" forall x . unpackFloatX16# (packFloatX16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:138:{-# RULES "pack/unpack FloatX16#" forall x . packFloatX16# (unpackFloatX16# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:139:{-# RULES "unpack/pack DoubleX2#" forall x . unpackDoubleX2# (packDoubleX2# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:140:{-# RULES "pack/unpack DoubleX2#" forall x . packDoubleX2# (unpackDoubleX2# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:141:{-# RULES "unpack/pack DoubleX4#" forall x . unpackDoubleX4# (packDoubleX4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:142:{-# RULES "pack/unpack DoubleX4#" forall x . packDoubleX4# (unpackDoubleX4# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:143:{-# RULES "unpack/pack DoubleX8#" forall x . unpackDoubleX8# (packDoubleX8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Class.hs:144:{-# RULES "pack/unpack DoubleX8#" forall x . packDoubleX8# (unpackDoubleX8# x) = x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:207:{-# RULES "mapVector abs" mapDoubleX16 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:208:{-# RULES "mapVector signum" mapDoubleX16 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:209:{-# RULES "mapVector negate" mapDoubleX16 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:210:{-# RULES "mapVector const" forall x . mapDoubleX16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:211:{-# RULES "mapVector (x+)" forall x v . mapDoubleX16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:212:{-# RULES "mapVector (+x)" forall x v . mapDoubleX16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:213:{-# RULES "mapVector (x-)" forall x v . mapDoubleX16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:214:{-# RULES "mapVector (-x)" forall x v . mapDoubleX16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:215:{-# RULES "mapVector (x*)" forall x v . mapDoubleX16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:216:{-# RULES "mapVector (*x)" forall x v . mapDoubleX16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:217:{-# RULES "mapVector (x/)" forall x v . mapDoubleX16 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:218:{-# RULES "mapVector (/x)" forall x v . mapDoubleX16 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:233:{-# RULES "zipVector +" forall a b . zipDoubleX16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:234:{-# RULES "zipVector -" forall a b . zipDoubleX16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:235:{-# RULES "zipVector *" forall a b . zipDoubleX16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:236:{-# RULES "zipVector /" forall a b . zipDoubleX16 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX16.hs:245:{-# RULES "foldVector (+)" foldDoubleX16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:199:{-# RULES "mapVector abs" mapDoubleX2 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:200:{-# RULES "mapVector signum" mapDoubleX2 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:201:{-# RULES "mapVector negate" mapDoubleX2 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:202:{-# RULES "mapVector const" forall x . mapDoubleX2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:203:{-# RULES "mapVector (x+)" forall x v . mapDoubleX2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:204:{-# RULES "mapVector (+x)" forall x v . mapDoubleX2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:205:{-# RULES "mapVector (x-)" forall x v . mapDoubleX2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:206:{-# RULES "mapVector (-x)" forall x v . mapDoubleX2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:207:{-# RULES "mapVector (x*)" forall x v . mapDoubleX2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:208:{-# RULES "mapVector (*x)" forall x v . mapDoubleX2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:209:{-# RULES "mapVector (x/)" forall x v . mapDoubleX2 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:210:{-# RULES "mapVector (/x)" forall x v . mapDoubleX2 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:225:{-# RULES "zipVector +" forall a b . zipDoubleX2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:226:{-# RULES "zipVector -" forall a b . zipDoubleX2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:227:{-# RULES "zipVector *" forall a b . zipDoubleX2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX2.hs:228:{-# RULES "zipVector /" forall a b . zipDoubleX2 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:199:{-# RULES "mapVector abs" mapDoubleX4 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:200:{-# RULES "mapVector signum" mapDoubleX4 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:201:{-# RULES "mapVector negate" mapDoubleX4 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:202:{-# RULES "mapVector const" forall x . mapDoubleX4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:203:{-# RULES "mapVector (x+)" forall x v . mapDoubleX4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:204:{-# RULES "mapVector (+x)" forall x v . mapDoubleX4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:205:{-# RULES "mapVector (x-)" forall x v . mapDoubleX4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:206:{-# RULES "mapVector (-x)" forall x v . mapDoubleX4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:207:{-# RULES "mapVector (x*)" forall x v . mapDoubleX4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:208:{-# RULES "mapVector (*x)" forall x v . mapDoubleX4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:209:{-# RULES "mapVector (x/)" forall x v . mapDoubleX4 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:210:{-# RULES "mapVector (/x)" forall x v . mapDoubleX4 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:225:{-# RULES "zipVector +" forall a b . zipDoubleX4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:226:{-# RULES "zipVector -" forall a b . zipDoubleX4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:227:{-# RULES "zipVector *" forall a b . zipDoubleX4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX4.hs:228:{-# RULES "zipVector /" forall a b . zipDoubleX4 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:203:{-# RULES "mapVector abs" mapDoubleX8 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:204:{-# RULES "mapVector signum" mapDoubleX8 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:205:{-# RULES "mapVector negate" mapDoubleX8 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:206:{-# RULES "mapVector const" forall x . mapDoubleX8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:207:{-# RULES "mapVector (x+)" forall x v . mapDoubleX8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:208:{-# RULES "mapVector (+x)" forall x v . mapDoubleX8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:209:{-# RULES "mapVector (x-)" forall x v . mapDoubleX8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:210:{-# RULES "mapVector (-x)" forall x v . mapDoubleX8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:211:{-# RULES "mapVector (x*)" forall x v . mapDoubleX8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:212:{-# RULES "mapVector (*x)" forall x v . mapDoubleX8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:213:{-# RULES "mapVector (x/)" forall x v . mapDoubleX8 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:214:{-# RULES "mapVector (/x)" forall x v . mapDoubleX8 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:229:{-# RULES "zipVector +" forall a b . zipDoubleX8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:230:{-# RULES "zipVector -" forall a b . zipDoubleX8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:231:{-# RULES "zipVector *" forall a b . zipDoubleX8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:232:{-# RULES "zipVector /" forall a b . zipDoubleX8 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/DoubleX8.hs:241:{-# RULES "foldVector (+)" foldDoubleX8 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:203:{-# RULES "mapVector abs" mapFloatX16 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:204:{-# RULES "mapVector signum" mapFloatX16 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:205:{-# RULES "mapVector negate" mapFloatX16 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:206:{-# RULES "mapVector const" forall x . mapFloatX16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:207:{-# RULES "mapVector (x+)" forall x v . mapFloatX16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:208:{-# RULES "mapVector (+x)" forall x v . mapFloatX16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:209:{-# RULES "mapVector (x-)" forall x v . mapFloatX16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:210:{-# RULES "mapVector (-x)" forall x v . mapFloatX16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:211:{-# RULES "mapVector (x*)" forall x v . mapFloatX16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:212:{-# RULES "mapVector (*x)" forall x v . mapFloatX16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:213:{-# RULES "mapVector (x/)" forall x v . mapFloatX16 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:214:{-# RULES "mapVector (/x)" forall x v . mapFloatX16 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:229:{-# RULES "zipVector +" forall a b . zipFloatX16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:230:{-# RULES "zipVector -" forall a b . zipFloatX16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:231:{-# RULES "zipVector *" forall a b . zipFloatX16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:232:{-# RULES "zipVector /" forall a b . zipFloatX16 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX16.hs:241:{-# RULES "foldVector (+)" foldFloatX16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:199:{-# RULES "mapVector abs" mapFloatX4 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:200:{-# RULES "mapVector signum" mapFloatX4 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:201:{-# RULES "mapVector negate" mapFloatX4 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:202:{-# RULES "mapVector const" forall x . mapFloatX4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:203:{-# RULES "mapVector (x+)" forall x v . mapFloatX4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:204:{-# RULES "mapVector (+x)" forall x v . mapFloatX4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:205:{-# RULES "mapVector (x-)" forall x v . mapFloatX4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:206:{-# RULES "mapVector (-x)" forall x v . mapFloatX4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:207:{-# RULES "mapVector (x*)" forall x v . mapFloatX4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:208:{-# RULES "mapVector (*x)" forall x v . mapFloatX4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:209:{-# RULES "mapVector (x/)" forall x v . mapFloatX4 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:210:{-# RULES "mapVector (/x)" forall x v . mapFloatX4 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:225:{-# RULES "zipVector +" forall a b . zipFloatX4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:226:{-# RULES "zipVector -" forall a b . zipFloatX4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:227:{-# RULES "zipVector *" forall a b . zipFloatX4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX4.hs:228:{-# RULES "zipVector /" forall a b . zipFloatX4 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:199:{-# RULES "mapVector abs" mapFloatX8 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:200:{-# RULES "mapVector signum" mapFloatX8 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:201:{-# RULES "mapVector negate" mapFloatX8 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:202:{-# RULES "mapVector const" forall x . mapFloatX8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:203:{-# RULES "mapVector (x+)" forall x v . mapFloatX8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:204:{-# RULES "mapVector (+x)" forall x v . mapFloatX8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:205:{-# RULES "mapVector (x-)" forall x v . mapFloatX8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:206:{-# RULES "mapVector (-x)" forall x v . mapFloatX8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:207:{-# RULES "mapVector (x*)" forall x v . mapFloatX8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:208:{-# RULES "mapVector (*x)" forall x v . mapFloatX8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:209:{-# RULES "mapVector (x/)" forall x v . mapFloatX8 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:210:{-# RULES "mapVector (/x)" forall x v . mapFloatX8 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:225:{-# RULES "zipVector +" forall a b . zipFloatX8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:226:{-# RULES "zipVector -" forall a b . zipFloatX8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:227:{-# RULES "zipVector *" forall a b . zipFloatX8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/FloatX8.hs:228:{-# RULES "zipVector /" forall a b . zipFloatX8 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:184:{-# RULES "mapVector abs" mapInt16X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:185:{-# RULES "mapVector signum" mapInt16X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:186:{-# RULES "mapVector negate" mapInt16X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:187:{-# RULES "mapVector const" forall x . mapInt16X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt16X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt16X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt16X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt16X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt16X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt16X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:211:{-# RULES "zipVector +" forall a b . zipInt16X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:212:{-# RULES "zipVector -" forall a b . zipInt16X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:213:{-# RULES "zipVector *" forall a b . zipInt16X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X16.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt16X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:188:{-# RULES "mapVector abs" mapInt16X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:189:{-# RULES "mapVector signum" mapInt16X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:190:{-# RULES "mapVector negate" mapInt16X32 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:191:{-# RULES "mapVector const" forall x . mapInt16X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:192:{-# RULES "mapVector (x+)" forall x v . mapInt16X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:193:{-# RULES "mapVector (+x)" forall x v . mapInt16X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:194:{-# RULES "mapVector (x-)" forall x v . mapInt16X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:195:{-# RULES "mapVector (-x)" forall x v . mapInt16X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:196:{-# RULES "mapVector (x*)" forall x v . mapInt16X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:197:{-# RULES "mapVector (*x)" forall x v . mapInt16X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:199:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:200:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:215:{-# RULES "zipVector +" forall a b . zipInt16X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:216:{-# RULES "zipVector -" forall a b . zipInt16X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:217:{-# RULES "zipVector *" forall a b . zipInt16X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:218:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:219:{-# RULES "zipVector `remVector`" forall a b . zipInt16X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X32.hs:228:{-# RULES "foldVector (+)" foldInt16X32 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:184:{-# RULES "mapVector abs" mapInt16X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:185:{-# RULES "mapVector signum" mapInt16X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:186:{-# RULES "mapVector negate" mapInt16X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:187:{-# RULES "mapVector const" forall x . mapInt16X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt16X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt16X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt16X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt16X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt16X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt16X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:211:{-# RULES "zipVector +" forall a b . zipInt16X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:212:{-# RULES "zipVector -" forall a b . zipInt16X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:213:{-# RULES "zipVector *" forall a b . zipInt16X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int16X8.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt16X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:188:{-# RULES "mapVector abs" mapInt32X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:189:{-# RULES "mapVector signum" mapInt32X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:190:{-# RULES "mapVector negate" mapInt32X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:191:{-# RULES "mapVector const" forall x . mapInt32X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:192:{-# RULES "mapVector (x+)" forall x v . mapInt32X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:193:{-# RULES "mapVector (+x)" forall x v . mapInt32X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:194:{-# RULES "mapVector (x-)" forall x v . mapInt32X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:195:{-# RULES "mapVector (-x)" forall x v . mapInt32X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:196:{-# RULES "mapVector (x*)" forall x v . mapInt32X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:197:{-# RULES "mapVector (*x)" forall x v . mapInt32X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:199:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:200:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:215:{-# RULES "zipVector +" forall a b . zipInt32X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:216:{-# RULES "zipVector -" forall a b . zipInt32X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:217:{-# RULES "zipVector *" forall a b . zipInt32X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:218:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:219:{-# RULES "zipVector `remVector`" forall a b . zipInt32X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X16.hs:228:{-# RULES "foldVector (+)" foldInt32X16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:184:{-# RULES "mapVector abs" mapInt32X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:185:{-# RULES "mapVector signum" mapInt32X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:186:{-# RULES "mapVector negate" mapInt32X4 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:187:{-# RULES "mapVector const" forall x . mapInt32X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt32X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt32X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt32X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt32X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt32X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt32X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:211:{-# RULES "zipVector +" forall a b . zipInt32X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:212:{-# RULES "zipVector -" forall a b . zipInt32X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:213:{-# RULES "zipVector *" forall a b . zipInt32X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X4.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt32X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:184:{-# RULES "mapVector abs" mapInt32X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:185:{-# RULES "mapVector signum" mapInt32X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:186:{-# RULES "mapVector negate" mapInt32X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:187:{-# RULES "mapVector const" forall x . mapInt32X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt32X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt32X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt32X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt32X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt32X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt32X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:211:{-# RULES "zipVector +" forall a b . zipInt32X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:212:{-# RULES "zipVector -" forall a b . zipInt32X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:213:{-# RULES "zipVector *" forall a b . zipInt32X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int32X8.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt32X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:194:{-# RULES "mapVector abs" mapInt64X2 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:195:{-# RULES "mapVector signum" mapInt64X2 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:196:{-# RULES "mapVector negate" mapInt64X2 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:197:{-# RULES "mapVector const" forall x . mapInt64X2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:198:{-# RULES "mapVector (x+)" forall x v . mapInt64X2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:199:{-# RULES "mapVector (+x)" forall x v . mapInt64X2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:200:{-# RULES "mapVector (x-)" forall x v . mapInt64X2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:201:{-# RULES "mapVector (-x)" forall x v . mapInt64X2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:202:{-# RULES "mapVector (x*)" forall x v . mapInt64X2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:203:{-# RULES "mapVector (*x)" forall x v . mapInt64X2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:205:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X2 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:206:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X2 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:221:{-# RULES "zipVector +" forall a b . zipInt64X2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:222:{-# RULES "zipVector -" forall a b . zipInt64X2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:223:{-# RULES "zipVector *" forall a b . zipInt64X2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:224:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X2 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X2.hs:225:{-# RULES "zipVector `remVector`" forall a b . zipInt64X2 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:194:{-# RULES "mapVector abs" mapInt64X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:195:{-# RULES "mapVector signum" mapInt64X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:196:{-# RULES "mapVector negate" mapInt64X4 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:197:{-# RULES "mapVector const" forall x . mapInt64X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:198:{-# RULES "mapVector (x+)" forall x v . mapInt64X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:199:{-# RULES "mapVector (+x)" forall x v . mapInt64X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:200:{-# RULES "mapVector (x-)" forall x v . mapInt64X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:201:{-# RULES "mapVector (-x)" forall x v . mapInt64X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:202:{-# RULES "mapVector (x*)" forall x v . mapInt64X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:203:{-# RULES "mapVector (*x)" forall x v . mapInt64X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:205:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:206:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:221:{-# RULES "zipVector +" forall a b . zipInt64X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:222:{-# RULES "zipVector -" forall a b . zipInt64X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:223:{-# RULES "zipVector *" forall a b . zipInt64X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:224:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X4.hs:225:{-# RULES "zipVector `remVector`" forall a b . zipInt64X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:198:{-# RULES "mapVector abs" mapInt64X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:199:{-# RULES "mapVector signum" mapInt64X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:200:{-# RULES "mapVector negate" mapInt64X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:201:{-# RULES "mapVector const" forall x . mapInt64X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:202:{-# RULES "mapVector (x+)" forall x v . mapInt64X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:203:{-# RULES "mapVector (+x)" forall x v . mapInt64X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:204:{-# RULES "mapVector (x-)" forall x v . mapInt64X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:205:{-# RULES "mapVector (-x)" forall x v . mapInt64X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:206:{-# RULES "mapVector (x*)" forall x v . mapInt64X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:207:{-# RULES "mapVector (*x)" forall x v . mapInt64X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:209:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:210:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:225:{-# RULES "zipVector +" forall a b . zipInt64X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:226:{-# RULES "zipVector -" forall a b . zipInt64X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:227:{-# RULES "zipVector *" forall a b . zipInt64X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:228:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:229:{-# RULES "zipVector `remVector`" forall a b . zipInt64X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int64X8.hs:238:{-# RULES "foldVector (+)" foldInt64X8 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:184:{-# RULES "mapVector abs" mapInt8X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:185:{-# RULES "mapVector signum" mapInt8X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:186:{-# RULES "mapVector negate" mapInt8X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:187:{-# RULES "mapVector const" forall x . mapInt8X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt8X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt8X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt8X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt8X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt8X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt8X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:211:{-# RULES "zipVector +" forall a b . zipInt8X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:212:{-# RULES "zipVector -" forall a b . zipInt8X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:213:{-# RULES "zipVector *" forall a b . zipInt8X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X16.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt8X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:184:{-# RULES "mapVector abs" mapInt8X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:185:{-# RULES "mapVector signum" mapInt8X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:186:{-# RULES "mapVector negate" mapInt8X32 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:187:{-# RULES "mapVector const" forall x . mapInt8X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt8X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt8X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt8X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt8X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt8X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt8X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:211:{-# RULES "zipVector +" forall a b . zipInt8X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:212:{-# RULES "zipVector -" forall a b . zipInt8X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:213:{-# RULES "zipVector *" forall a b . zipInt8X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X32.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt8X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:188:{-# RULES "mapVector abs" mapInt8X64 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:189:{-# RULES "mapVector signum" mapInt8X64 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:190:{-# RULES "mapVector negate" mapInt8X64 negate = negate #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:191:{-# RULES "mapVector const" forall x . mapInt8X64 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:192:{-# RULES "mapVector (x+)" forall x v . mapInt8X64 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:193:{-# RULES "mapVector (+x)" forall x v . mapInt8X64 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:194:{-# RULES "mapVector (x-)" forall x v . mapInt8X64 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:195:{-# RULES "mapVector (-x)" forall x v . mapInt8X64 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:196:{-# RULES "mapVector (x*)" forall x v . mapInt8X64 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:197:{-# RULES "mapVector (*x)" forall x v . mapInt8X64 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:199:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X64 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:200:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X64 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:215:{-# RULES "zipVector +" forall a b . zipInt8X64 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:216:{-# RULES "zipVector -" forall a b . zipInt8X64 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:217:{-# RULES "zipVector *" forall a b . zipInt8X64 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:218:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X64 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:219:{-# RULES "zipVector `remVector`" forall a b . zipInt8X64 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Int8X64.hs:228:{-# RULES "foldVector (+)" foldInt8X64 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:183:{-# RULES "mapVector abs" mapWord16X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:184:{-# RULES "mapVector signum" mapWord16X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:186:{-# RULES "mapVector const" forall x . mapWord16X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord16X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord16X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord16X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord16X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord16X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord16X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:210:{-# RULES "zipVector +" forall a b . zipWord16X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:211:{-# RULES "zipVector -" forall a b . zipWord16X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:212:{-# RULES "zipVector *" forall a b . zipWord16X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X16.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord16X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:187:{-# RULES "mapVector abs" mapWord16X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:188:{-# RULES "mapVector signum" mapWord16X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:190:{-# RULES "mapVector const" forall x . mapWord16X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:191:{-# RULES "mapVector (x+)" forall x v . mapWord16X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:192:{-# RULES "mapVector (+x)" forall x v . mapWord16X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:193:{-# RULES "mapVector (x-)" forall x v . mapWord16X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:194:{-# RULES "mapVector (-x)" forall x v . mapWord16X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:195:{-# RULES "mapVector (x*)" forall x v . mapWord16X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:196:{-# RULES "mapVector (*x)" forall x v . mapWord16X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:198:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:199:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:214:{-# RULES "zipVector +" forall a b . zipWord16X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:215:{-# RULES "zipVector -" forall a b . zipWord16X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:216:{-# RULES "zipVector *" forall a b . zipWord16X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:217:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:218:{-# RULES "zipVector `remVector`" forall a b . zipWord16X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X32.hs:227:{-# RULES "foldVector (+)" foldWord16X32 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:183:{-# RULES "mapVector abs" mapWord16X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:184:{-# RULES "mapVector signum" mapWord16X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:186:{-# RULES "mapVector const" forall x . mapWord16X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord16X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord16X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord16X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord16X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord16X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord16X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:210:{-# RULES "zipVector +" forall a b . zipWord16X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:211:{-# RULES "zipVector -" forall a b . zipWord16X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:212:{-# RULES "zipVector *" forall a b . zipWord16X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word16X8.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord16X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:187:{-# RULES "mapVector abs" mapWord32X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:188:{-# RULES "mapVector signum" mapWord32X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:190:{-# RULES "mapVector const" forall x . mapWord32X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:191:{-# RULES "mapVector (x+)" forall x v . mapWord32X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:192:{-# RULES "mapVector (+x)" forall x v . mapWord32X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:193:{-# RULES "mapVector (x-)" forall x v . mapWord32X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:194:{-# RULES "mapVector (-x)" forall x v . mapWord32X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:195:{-# RULES "mapVector (x*)" forall x v . mapWord32X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:196:{-# RULES "mapVector (*x)" forall x v . mapWord32X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:198:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:199:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:214:{-# RULES "zipVector +" forall a b . zipWord32X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:215:{-# RULES "zipVector -" forall a b . zipWord32X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:216:{-# RULES "zipVector *" forall a b . zipWord32X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:217:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:218:{-# RULES "zipVector `remVector`" forall a b . zipWord32X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X16.hs:227:{-# RULES "foldVector (+)" foldWord32X16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:183:{-# RULES "mapVector abs" mapWord32X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:184:{-# RULES "mapVector signum" mapWord32X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:186:{-# RULES "mapVector const" forall x . mapWord32X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord32X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord32X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord32X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord32X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord32X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord32X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:210:{-# RULES "zipVector +" forall a b . zipWord32X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:211:{-# RULES "zipVector -" forall a b . zipWord32X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:212:{-# RULES "zipVector *" forall a b . zipWord32X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X4.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord32X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:183:{-# RULES "mapVector abs" mapWord32X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:184:{-# RULES "mapVector signum" mapWord32X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:186:{-# RULES "mapVector const" forall x . mapWord32X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord32X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord32X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord32X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord32X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord32X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord32X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:210:{-# RULES "zipVector +" forall a b . zipWord32X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:211:{-# RULES "zipVector -" forall a b . zipWord32X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:212:{-# RULES "zipVector *" forall a b . zipWord32X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word32X8.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord32X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:193:{-# RULES "mapVector abs" mapWord64X2 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:194:{-# RULES "mapVector signum" mapWord64X2 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:196:{-# RULES "mapVector const" forall x . mapWord64X2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:197:{-# RULES "mapVector (x+)" forall x v . mapWord64X2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:198:{-# RULES "mapVector (+x)" forall x v . mapWord64X2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:199:{-# RULES "mapVector (x-)" forall x v . mapWord64X2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:200:{-# RULES "mapVector (-x)" forall x v . mapWord64X2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:201:{-# RULES "mapVector (x*)" forall x v . mapWord64X2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:202:{-# RULES "mapVector (*x)" forall x v . mapWord64X2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:204:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X2 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:205:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X2 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:220:{-# RULES "zipVector +" forall a b . zipWord64X2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:221:{-# RULES "zipVector -" forall a b . zipWord64X2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:222:{-# RULES "zipVector *" forall a b . zipWord64X2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:223:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X2 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X2.hs:224:{-# RULES "zipVector `remVector`" forall a b . zipWord64X2 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:193:{-# RULES "mapVector abs" mapWord64X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:194:{-# RULES "mapVector signum" mapWord64X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:196:{-# RULES "mapVector const" forall x . mapWord64X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:197:{-# RULES "mapVector (x+)" forall x v . mapWord64X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:198:{-# RULES "mapVector (+x)" forall x v . mapWord64X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:199:{-# RULES "mapVector (x-)" forall x v . mapWord64X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:200:{-# RULES "mapVector (-x)" forall x v . mapWord64X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:201:{-# RULES "mapVector (x*)" forall x v . mapWord64X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:202:{-# RULES "mapVector (*x)" forall x v . mapWord64X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:204:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:205:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:220:{-# RULES "zipVector +" forall a b . zipWord64X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:221:{-# RULES "zipVector -" forall a b . zipWord64X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:222:{-# RULES "zipVector *" forall a b . zipWord64X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:223:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X4.hs:224:{-# RULES "zipVector `remVector`" forall a b . zipWord64X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:197:{-# RULES "mapVector abs" mapWord64X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:198:{-# RULES "mapVector signum" mapWord64X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:200:{-# RULES "mapVector const" forall x . mapWord64X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:201:{-# RULES "mapVector (x+)" forall x v . mapWord64X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:202:{-# RULES "mapVector (+x)" forall x v . mapWord64X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:203:{-# RULES "mapVector (x-)" forall x v . mapWord64X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:204:{-# RULES "mapVector (-x)" forall x v . mapWord64X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:205:{-# RULES "mapVector (x*)" forall x v . mapWord64X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:206:{-# RULES "mapVector (*x)" forall x v . mapWord64X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:208:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:209:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:224:{-# RULES "zipVector +" forall a b . zipWord64X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:225:{-# RULES "zipVector -" forall a b . zipWord64X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:226:{-# RULES "zipVector *" forall a b . zipWord64X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:227:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:228:{-# RULES "zipVector `remVector`" forall a b . zipWord64X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word64X8.hs:237:{-# RULES "foldVector (+)" foldWord64X8 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:183:{-# RULES "mapVector abs" mapWord8X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:184:{-# RULES "mapVector signum" mapWord8X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:186:{-# RULES "mapVector const" forall x . mapWord8X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord8X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord8X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord8X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord8X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord8X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord8X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:210:{-# RULES "zipVector +" forall a b . zipWord8X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:211:{-# RULES "zipVector -" forall a b . zipWord8X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:212:{-# RULES "zipVector *" forall a b . zipWord8X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X16.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord8X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:183:{-# RULES "mapVector abs" mapWord8X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:184:{-# RULES "mapVector signum" mapWord8X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:186:{-# RULES "mapVector const" forall x . mapWord8X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord8X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord8X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord8X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord8X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord8X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord8X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:210:{-# RULES "zipVector +" forall a b . zipWord8X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:211:{-# RULES "zipVector -" forall a b . zipWord8X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:212:{-# RULES "zipVector *" forall a b . zipWord8X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X32.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord8X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:187:{-# RULES "mapVector abs" mapWord8X64 abs = abs #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:188:{-# RULES "mapVector signum" mapWord8X64 signum = signum #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:190:{-# RULES "mapVector const" forall x . mapWord8X64 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:191:{-# RULES "mapVector (x+)" forall x v . mapWord8X64 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:192:{-# RULES "mapVector (+x)" forall x v . mapWord8X64 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:193:{-# RULES "mapVector (x-)" forall x v . mapWord8X64 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:194:{-# RULES "mapVector (-x)" forall x v . mapWord8X64 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:195:{-# RULES "mapVector (x*)" forall x v . mapWord8X64 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:196:{-# RULES "mapVector (*x)" forall x v . mapWord8X64 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:198:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X64 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:199:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X64 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:214:{-# RULES "zipVector +" forall a b . zipWord8X64 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:215:{-# RULES "zipVector -" forall a b . zipWord8X64 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:216:{-# RULES "zipVector *" forall a b . zipWord8X64 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:217:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X64 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:218:{-# RULES "zipVector `remVector`" forall a b . zipWord8X64 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-256/Data/Primitive/SIMD/Word8X64.hs:227:{-# RULES "foldVector (+)" foldWord8X64 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:85:{-# RULES "unpack/pack Int8X16#" forall x . unpackInt8X16# (packInt8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:86:{-# RULES "pack/unpack Int8X16#" forall x . packInt8X16# (unpackInt8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:87:{-# RULES "unpack/pack Int8X32#" forall x . unpackInt8X32# (packInt8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:88:{-# RULES "pack/unpack Int8X32#" forall x . packInt8X32# (unpackInt8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:89:{-# RULES "unpack/pack Int8X64#" forall x . unpackInt8X64# (packInt8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:90:{-# RULES "pack/unpack Int8X64#" forall x . packInt8X64# (unpackInt8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:91:{-# RULES "unpack/pack Int16X8#" forall x . unpackInt16X8# (packInt16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:92:{-# RULES "pack/unpack Int16X8#" forall x . packInt16X8# (unpackInt16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:93:{-# RULES "unpack/pack Int16X16#" forall x . unpackInt16X16# (packInt16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:94:{-# RULES "pack/unpack Int16X16#" forall x . packInt16X16# (unpackInt16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:95:{-# RULES "unpack/pack Int16X32#" forall x . unpackInt16X32# (packInt16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:96:{-# RULES "pack/unpack Int16X32#" forall x . packInt16X32# (unpackInt16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:97:{-# RULES "unpack/pack Int32X4#" forall x . unpackInt32X4# (packInt32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:98:{-# RULES "pack/unpack Int32X4#" forall x . packInt32X4# (unpackInt32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:99:{-# RULES "unpack/pack Int32X8#" forall x . unpackInt32X8# (packInt32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:100:{-# RULES "pack/unpack Int32X8#" forall x . packInt32X8# (unpackInt32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:101:{-# RULES "unpack/pack Int32X16#" forall x . unpackInt32X16# (packInt32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:102:{-# RULES "pack/unpack Int32X16#" forall x . packInt32X16# (unpackInt32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:103:{-# RULES "unpack/pack Int64X2#" forall x . unpackInt64X2# (packInt64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:104:{-# RULES "pack/unpack Int64X2#" forall x . packInt64X2# (unpackInt64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:105:{-# RULES "unpack/pack Int64X4#" forall x . unpackInt64X4# (packInt64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:106:{-# RULES "pack/unpack Int64X4#" forall x . packInt64X4# (unpackInt64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:107:{-# RULES "unpack/pack Int64X8#" forall x . unpackInt64X8# (packInt64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:108:{-# RULES "pack/unpack Int64X8#" forall x . packInt64X8# (unpackInt64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:109:{-# RULES "unpack/pack Word8X16#" forall x . unpackWord8X16# (packWord8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:110:{-# RULES "pack/unpack Word8X16#" forall x . packWord8X16# (unpackWord8X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:111:{-# RULES "unpack/pack Word8X32#" forall x . unpackWord8X32# (packWord8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:112:{-# RULES "pack/unpack Word8X32#" forall x . packWord8X32# (unpackWord8X32# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:113:{-# RULES "unpack/pack Word8X64#" forall x . unpackWord8X64# (packWord8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:114:{-# RULES "pack/unpack Word8X64#" forall x . packWord8X64# (unpackWord8X64# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:115:{-# RULES "unpack/pack Word16X8#" forall x . unpackWord16X8# (packWord16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:116:{-# RULES "pack/unpack Word16X8#" forall x . packWord16X8# (unpackWord16X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:117:{-# RULES "unpack/pack Word16X16#" forall x . unpackWord16X16# (packWord16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:118:{-# RULES "pack/unpack Word16X16#" forall x . packWord16X16# (unpackWord16X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:119:{-# RULES "unpack/pack Word16X32#" forall x . unpackWord16X32# (packWord16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:120:{-# RULES "pack/unpack Word16X32#" forall x . packWord16X32# (unpackWord16X32# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:121:{-# RULES "unpack/pack Word32X4#" forall x . unpackWord32X4# (packWord32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:122:{-# RULES "pack/unpack Word32X4#" forall x . packWord32X4# (unpackWord32X4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:123:{-# RULES "unpack/pack Word32X8#" forall x . unpackWord32X8# (packWord32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:124:{-# RULES "pack/unpack Word32X8#" forall x . packWord32X8# (unpackWord32X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:125:{-# RULES "unpack/pack Word32X16#" forall x . unpackWord32X16# (packWord32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:126:{-# RULES "pack/unpack Word32X16#" forall x . packWord32X16# (unpackWord32X16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:127:{-# RULES "unpack/pack Word64X2#" forall x . unpackWord64X2# (packWord64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:128:{-# RULES "pack/unpack Word64X2#" forall x . packWord64X2# (unpackWord64X2# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:129:{-# RULES "unpack/pack Word64X4#" forall x . unpackWord64X4# (packWord64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:130:{-# RULES "pack/unpack Word64X4#" forall x . packWord64X4# (unpackWord64X4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:131:{-# RULES "unpack/pack Word64X8#" forall x . unpackWord64X8# (packWord64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:132:{-# RULES "pack/unpack Word64X8#" forall x . packWord64X8# (unpackWord64X8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:133:{-# RULES "unpack/pack FloatX4#" forall x . unpackFloatX4# (packFloatX4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:134:{-# RULES "pack/unpack FloatX4#" forall x . packFloatX4# (unpackFloatX4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:135:{-# RULES "unpack/pack FloatX8#" forall x . unpackFloatX8# (packFloatX8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:136:{-# RULES "pack/unpack FloatX8#" forall x . packFloatX8# (unpackFloatX8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:137:{-# RULES "unpack/pack FloatX16#" forall x . unpackFloatX16# (packFloatX16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:138:{-# RULES "pack/unpack FloatX16#" forall x . packFloatX16# (unpackFloatX16# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:139:{-# RULES "unpack/pack DoubleX2#" forall x . unpackDoubleX2# (packDoubleX2# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:140:{-# RULES "pack/unpack DoubleX2#" forall x . packDoubleX2# (unpackDoubleX2# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:141:{-# RULES "unpack/pack DoubleX4#" forall x . unpackDoubleX4# (packDoubleX4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:142:{-# RULES "pack/unpack DoubleX4#" forall x . packDoubleX4# (unpackDoubleX4# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:143:{-# RULES "unpack/pack DoubleX8#" forall x . unpackDoubleX8# (packDoubleX8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Class.hs:144:{-# RULES "pack/unpack DoubleX8#" forall x . packDoubleX8# (unpackDoubleX8# x) = x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:203:{-# RULES "mapVector abs" mapDoubleX16 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:204:{-# RULES "mapVector signum" mapDoubleX16 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:205:{-# RULES "mapVector negate" mapDoubleX16 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:206:{-# RULES "mapVector const" forall x . mapDoubleX16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:207:{-# RULES "mapVector (x+)" forall x v . mapDoubleX16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:208:{-# RULES "mapVector (+x)" forall x v . mapDoubleX16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:209:{-# RULES "mapVector (x-)" forall x v . mapDoubleX16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:210:{-# RULES "mapVector (-x)" forall x v . mapDoubleX16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:211:{-# RULES "mapVector (x*)" forall x v . mapDoubleX16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:212:{-# RULES "mapVector (*x)" forall x v . mapDoubleX16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:213:{-# RULES "mapVector (x/)" forall x v . mapDoubleX16 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:214:{-# RULES "mapVector (/x)" forall x v . mapDoubleX16 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:229:{-# RULES "zipVector +" forall a b . zipDoubleX16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:230:{-# RULES "zipVector -" forall a b . zipDoubleX16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:231:{-# RULES "zipVector *" forall a b . zipDoubleX16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:232:{-# RULES "zipVector /" forall a b . zipDoubleX16 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX16.hs:241:{-# RULES "foldVector (+)" foldDoubleX16 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:199:{-# RULES "mapVector abs" mapDoubleX2 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:200:{-# RULES "mapVector signum" mapDoubleX2 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:201:{-# RULES "mapVector negate" mapDoubleX2 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:202:{-# RULES "mapVector const" forall x . mapDoubleX2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:203:{-# RULES "mapVector (x+)" forall x v . mapDoubleX2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:204:{-# RULES "mapVector (+x)" forall x v . mapDoubleX2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:205:{-# RULES "mapVector (x-)" forall x v . mapDoubleX2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:206:{-# RULES "mapVector (-x)" forall x v . mapDoubleX2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:207:{-# RULES "mapVector (x*)" forall x v . mapDoubleX2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:208:{-# RULES "mapVector (*x)" forall x v . mapDoubleX2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:209:{-# RULES "mapVector (x/)" forall x v . mapDoubleX2 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:210:{-# RULES "mapVector (/x)" forall x v . mapDoubleX2 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:225:{-# RULES "zipVector +" forall a b . zipDoubleX2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:226:{-# RULES "zipVector -" forall a b . zipDoubleX2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:227:{-# RULES "zipVector *" forall a b . zipDoubleX2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX2.hs:228:{-# RULES "zipVector /" forall a b . zipDoubleX2 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:199:{-# RULES "mapVector abs" mapDoubleX4 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:200:{-# RULES "mapVector signum" mapDoubleX4 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:201:{-# RULES "mapVector negate" mapDoubleX4 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:202:{-# RULES "mapVector const" forall x . mapDoubleX4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:203:{-# RULES "mapVector (x+)" forall x v . mapDoubleX4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:204:{-# RULES "mapVector (+x)" forall x v . mapDoubleX4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:205:{-# RULES "mapVector (x-)" forall x v . mapDoubleX4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:206:{-# RULES "mapVector (-x)" forall x v . mapDoubleX4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:207:{-# RULES "mapVector (x*)" forall x v . mapDoubleX4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:208:{-# RULES "mapVector (*x)" forall x v . mapDoubleX4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:209:{-# RULES "mapVector (x/)" forall x v . mapDoubleX4 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:210:{-# RULES "mapVector (/x)" forall x v . mapDoubleX4 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:225:{-# RULES "zipVector +" forall a b . zipDoubleX4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:226:{-# RULES "zipVector -" forall a b . zipDoubleX4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:227:{-# RULES "zipVector *" forall a b . zipDoubleX4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX4.hs:228:{-# RULES "zipVector /" forall a b . zipDoubleX4 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:199:{-# RULES "mapVector abs" mapDoubleX8 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:200:{-# RULES "mapVector signum" mapDoubleX8 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:201:{-# RULES "mapVector negate" mapDoubleX8 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:202:{-# RULES "mapVector const" forall x . mapDoubleX8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:203:{-# RULES "mapVector (x+)" forall x v . mapDoubleX8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:204:{-# RULES "mapVector (+x)" forall x v . mapDoubleX8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:205:{-# RULES "mapVector (x-)" forall x v . mapDoubleX8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:206:{-# RULES "mapVector (-x)" forall x v . mapDoubleX8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:207:{-# RULES "mapVector (x*)" forall x v . mapDoubleX8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:208:{-# RULES "mapVector (*x)" forall x v . mapDoubleX8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:209:{-# RULES "mapVector (x/)" forall x v . mapDoubleX8 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:210:{-# RULES "mapVector (/x)" forall x v . mapDoubleX8 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:225:{-# RULES "zipVector +" forall a b . zipDoubleX8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:226:{-# RULES "zipVector -" forall a b . zipDoubleX8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:227:{-# RULES "zipVector *" forall a b . zipDoubleX8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/DoubleX8.hs:228:{-# RULES "zipVector /" forall a b . zipDoubleX8 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:199:{-# RULES "mapVector abs" mapFloatX16 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:200:{-# RULES "mapVector signum" mapFloatX16 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:201:{-# RULES "mapVector negate" mapFloatX16 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:202:{-# RULES "mapVector const" forall x . mapFloatX16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:203:{-# RULES "mapVector (x+)" forall x v . mapFloatX16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:204:{-# RULES "mapVector (+x)" forall x v . mapFloatX16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:205:{-# RULES "mapVector (x-)" forall x v . mapFloatX16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:206:{-# RULES "mapVector (-x)" forall x v . mapFloatX16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:207:{-# RULES "mapVector (x*)" forall x v . mapFloatX16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:208:{-# RULES "mapVector (*x)" forall x v . mapFloatX16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:209:{-# RULES "mapVector (x/)" forall x v . mapFloatX16 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:210:{-# RULES "mapVector (/x)" forall x v . mapFloatX16 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:225:{-# RULES "zipVector +" forall a b . zipFloatX16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:226:{-# RULES "zipVector -" forall a b . zipFloatX16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:227:{-# RULES "zipVector *" forall a b . zipFloatX16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX16.hs:228:{-# RULES "zipVector /" forall a b . zipFloatX16 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:199:{-# RULES "mapVector abs" mapFloatX4 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:200:{-# RULES "mapVector signum" mapFloatX4 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:201:{-# RULES "mapVector negate" mapFloatX4 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:202:{-# RULES "mapVector const" forall x . mapFloatX4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:203:{-# RULES "mapVector (x+)" forall x v . mapFloatX4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:204:{-# RULES "mapVector (+x)" forall x v . mapFloatX4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:205:{-# RULES "mapVector (x-)" forall x v . mapFloatX4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:206:{-# RULES "mapVector (-x)" forall x v . mapFloatX4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:207:{-# RULES "mapVector (x*)" forall x v . mapFloatX4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:208:{-# RULES "mapVector (*x)" forall x v . mapFloatX4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:209:{-# RULES "mapVector (x/)" forall x v . mapFloatX4 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:210:{-# RULES "mapVector (/x)" forall x v . mapFloatX4 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:225:{-# RULES "zipVector +" forall a b . zipFloatX4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:226:{-# RULES "zipVector -" forall a b . zipFloatX4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:227:{-# RULES "zipVector *" forall a b . zipFloatX4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX4.hs:228:{-# RULES "zipVector /" forall a b . zipFloatX4 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:199:{-# RULES "mapVector abs" mapFloatX8 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:200:{-# RULES "mapVector signum" mapFloatX8 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:201:{-# RULES "mapVector negate" mapFloatX8 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:202:{-# RULES "mapVector const" forall x . mapFloatX8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:203:{-# RULES "mapVector (x+)" forall x v . mapFloatX8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:204:{-# RULES "mapVector (+x)" forall x v . mapFloatX8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:205:{-# RULES "mapVector (x-)" forall x v . mapFloatX8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:206:{-# RULES "mapVector (-x)" forall x v . mapFloatX8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:207:{-# RULES "mapVector (x*)" forall x v . mapFloatX8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:208:{-# RULES "mapVector (*x)" forall x v . mapFloatX8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:209:{-# RULES "mapVector (x/)" forall x v . mapFloatX8 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:210:{-# RULES "mapVector (/x)" forall x v . mapFloatX8 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:225:{-# RULES "zipVector +" forall a b . zipFloatX8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:226:{-# RULES "zipVector -" forall a b . zipFloatX8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:227:{-# RULES "zipVector *" forall a b . zipFloatX8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/FloatX8.hs:228:{-# RULES "zipVector /" forall a b . zipFloatX8 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:184:{-# RULES "mapVector abs" mapInt16X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:185:{-# RULES "mapVector signum" mapInt16X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:186:{-# RULES "mapVector negate" mapInt16X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:187:{-# RULES "mapVector const" forall x . mapInt16X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt16X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt16X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt16X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt16X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt16X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt16X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:211:{-# RULES "zipVector +" forall a b . zipInt16X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:212:{-# RULES "zipVector -" forall a b . zipInt16X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:213:{-# RULES "zipVector *" forall a b . zipInt16X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X16.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt16X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:184:{-# RULES "mapVector abs" mapInt16X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:185:{-# RULES "mapVector signum" mapInt16X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:186:{-# RULES "mapVector negate" mapInt16X32 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:187:{-# RULES "mapVector const" forall x . mapInt16X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt16X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt16X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt16X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt16X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt16X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt16X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:211:{-# RULES "zipVector +" forall a b . zipInt16X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:212:{-# RULES "zipVector -" forall a b . zipInt16X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:213:{-# RULES "zipVector *" forall a b . zipInt16X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X32.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt16X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:184:{-# RULES "mapVector abs" mapInt16X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:185:{-# RULES "mapVector signum" mapInt16X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:186:{-# RULES "mapVector negate" mapInt16X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:187:{-# RULES "mapVector const" forall x . mapInt16X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt16X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt16X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt16X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt16X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt16X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt16X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:211:{-# RULES "zipVector +" forall a b . zipInt16X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:212:{-# RULES "zipVector -" forall a b . zipInt16X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:213:{-# RULES "zipVector *" forall a b . zipInt16X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int16X8.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt16X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:184:{-# RULES "mapVector abs" mapInt32X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:185:{-# RULES "mapVector signum" mapInt32X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:186:{-# RULES "mapVector negate" mapInt32X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:187:{-# RULES "mapVector const" forall x . mapInt32X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt32X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt32X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt32X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt32X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt32X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt32X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:211:{-# RULES "zipVector +" forall a b . zipInt32X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:212:{-# RULES "zipVector -" forall a b . zipInt32X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:213:{-# RULES "zipVector *" forall a b . zipInt32X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X16.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt32X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:184:{-# RULES "mapVector abs" mapInt32X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:185:{-# RULES "mapVector signum" mapInt32X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:186:{-# RULES "mapVector negate" mapInt32X4 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:187:{-# RULES "mapVector const" forall x . mapInt32X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt32X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt32X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt32X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt32X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt32X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt32X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:211:{-# RULES "zipVector +" forall a b . zipInt32X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:212:{-# RULES "zipVector -" forall a b . zipInt32X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:213:{-# RULES "zipVector *" forall a b . zipInt32X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X4.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt32X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:184:{-# RULES "mapVector abs" mapInt32X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:185:{-# RULES "mapVector signum" mapInt32X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:186:{-# RULES "mapVector negate" mapInt32X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:187:{-# RULES "mapVector const" forall x . mapInt32X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt32X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt32X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt32X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt32X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt32X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt32X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:211:{-# RULES "zipVector +" forall a b . zipInt32X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:212:{-# RULES "zipVector -" forall a b . zipInt32X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:213:{-# RULES "zipVector *" forall a b . zipInt32X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int32X8.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt32X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:194:{-# RULES "mapVector abs" mapInt64X2 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:195:{-# RULES "mapVector signum" mapInt64X2 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:196:{-# RULES "mapVector negate" mapInt64X2 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:197:{-# RULES "mapVector const" forall x . mapInt64X2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:198:{-# RULES "mapVector (x+)" forall x v . mapInt64X2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:199:{-# RULES "mapVector (+x)" forall x v . mapInt64X2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:200:{-# RULES "mapVector (x-)" forall x v . mapInt64X2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:201:{-# RULES "mapVector (-x)" forall x v . mapInt64X2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:202:{-# RULES "mapVector (x*)" forall x v . mapInt64X2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:203:{-# RULES "mapVector (*x)" forall x v . mapInt64X2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:205:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X2 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:206:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X2 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:221:{-# RULES "zipVector +" forall a b . zipInt64X2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:222:{-# RULES "zipVector -" forall a b . zipInt64X2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:223:{-# RULES "zipVector *" forall a b . zipInt64X2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:224:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X2 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X2.hs:225:{-# RULES "zipVector `remVector`" forall a b . zipInt64X2 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:194:{-# RULES "mapVector abs" mapInt64X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:195:{-# RULES "mapVector signum" mapInt64X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:196:{-# RULES "mapVector negate" mapInt64X4 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:197:{-# RULES "mapVector const" forall x . mapInt64X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:198:{-# RULES "mapVector (x+)" forall x v . mapInt64X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:199:{-# RULES "mapVector (+x)" forall x v . mapInt64X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:200:{-# RULES "mapVector (x-)" forall x v . mapInt64X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:201:{-# RULES "mapVector (-x)" forall x v . mapInt64X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:202:{-# RULES "mapVector (x*)" forall x v . mapInt64X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:203:{-# RULES "mapVector (*x)" forall x v . mapInt64X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:205:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:206:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:221:{-# RULES "zipVector +" forall a b . zipInt64X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:222:{-# RULES "zipVector -" forall a b . zipInt64X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:223:{-# RULES "zipVector *" forall a b . zipInt64X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:224:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X4.hs:225:{-# RULES "zipVector `remVector`" forall a b . zipInt64X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:194:{-# RULES "mapVector abs" mapInt64X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:195:{-# RULES "mapVector signum" mapInt64X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:196:{-# RULES "mapVector negate" mapInt64X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:197:{-# RULES "mapVector const" forall x . mapInt64X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:198:{-# RULES "mapVector (x+)" forall x v . mapInt64X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:199:{-# RULES "mapVector (+x)" forall x v . mapInt64X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:200:{-# RULES "mapVector (x-)" forall x v . mapInt64X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:201:{-# RULES "mapVector (-x)" forall x v . mapInt64X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:202:{-# RULES "mapVector (x*)" forall x v . mapInt64X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:203:{-# RULES "mapVector (*x)" forall x v . mapInt64X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:205:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:206:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:221:{-# RULES "zipVector +" forall a b . zipInt64X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:222:{-# RULES "zipVector -" forall a b . zipInt64X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:223:{-# RULES "zipVector *" forall a b . zipInt64X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:224:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int64X8.hs:225:{-# RULES "zipVector `remVector`" forall a b . zipInt64X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:184:{-# RULES "mapVector abs" mapInt8X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:185:{-# RULES "mapVector signum" mapInt8X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:186:{-# RULES "mapVector negate" mapInt8X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:187:{-# RULES "mapVector const" forall x . mapInt8X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt8X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt8X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt8X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt8X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt8X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt8X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:211:{-# RULES "zipVector +" forall a b . zipInt8X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:212:{-# RULES "zipVector -" forall a b . zipInt8X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:213:{-# RULES "zipVector *" forall a b . zipInt8X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X16.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt8X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:184:{-# RULES "mapVector abs" mapInt8X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:185:{-# RULES "mapVector signum" mapInt8X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:186:{-# RULES "mapVector negate" mapInt8X32 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:187:{-# RULES "mapVector const" forall x . mapInt8X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:188:{-# RULES "mapVector (x+)" forall x v . mapInt8X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:189:{-# RULES "mapVector (+x)" forall x v . mapInt8X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:190:{-# RULES "mapVector (x-)" forall x v . mapInt8X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:191:{-# RULES "mapVector (-x)" forall x v . mapInt8X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:192:{-# RULES "mapVector (x*)" forall x v . mapInt8X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:193:{-# RULES "mapVector (*x)" forall x v . mapInt8X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:195:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:196:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:211:{-# RULES "zipVector +" forall a b . zipInt8X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:212:{-# RULES "zipVector -" forall a b . zipInt8X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:213:{-# RULES "zipVector *" forall a b . zipInt8X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:214:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X32.hs:215:{-# RULES "zipVector `remVector`" forall a b . zipInt8X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:188:{-# RULES "mapVector abs" mapInt8X64 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:189:{-# RULES "mapVector signum" mapInt8X64 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:190:{-# RULES "mapVector negate" mapInt8X64 negate = negate #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:191:{-# RULES "mapVector const" forall x . mapInt8X64 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:192:{-# RULES "mapVector (x+)" forall x v . mapInt8X64 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:193:{-# RULES "mapVector (+x)" forall x v . mapInt8X64 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:194:{-# RULES "mapVector (x-)" forall x v . mapInt8X64 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:195:{-# RULES "mapVector (-x)" forall x v . mapInt8X64 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:196:{-# RULES "mapVector (x*)" forall x v . mapInt8X64 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:197:{-# RULES "mapVector (*x)" forall x v . mapInt8X64 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:199:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X64 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:200:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X64 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:215:{-# RULES "zipVector +" forall a b . zipInt8X64 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:216:{-# RULES "zipVector -" forall a b . zipInt8X64 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:217:{-# RULES "zipVector *" forall a b . zipInt8X64 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:218:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X64 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:219:{-# RULES "zipVector `remVector`" forall a b . zipInt8X64 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Int8X64.hs:228:{-# RULES "foldVector (+)" foldInt8X64 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:183:{-# RULES "mapVector abs" mapWord16X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:184:{-# RULES "mapVector signum" mapWord16X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:186:{-# RULES "mapVector const" forall x . mapWord16X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord16X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord16X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord16X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord16X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord16X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord16X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:210:{-# RULES "zipVector +" forall a b . zipWord16X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:211:{-# RULES "zipVector -" forall a b . zipWord16X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:212:{-# RULES "zipVector *" forall a b . zipWord16X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X16.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord16X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:183:{-# RULES "mapVector abs" mapWord16X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:184:{-# RULES "mapVector signum" mapWord16X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:186:{-# RULES "mapVector const" forall x . mapWord16X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord16X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord16X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord16X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord16X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord16X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord16X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:210:{-# RULES "zipVector +" forall a b . zipWord16X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:211:{-# RULES "zipVector -" forall a b . zipWord16X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:212:{-# RULES "zipVector *" forall a b . zipWord16X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X32.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord16X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:183:{-# RULES "mapVector abs" mapWord16X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:184:{-# RULES "mapVector signum" mapWord16X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:186:{-# RULES "mapVector const" forall x . mapWord16X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord16X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord16X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord16X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord16X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord16X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord16X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:210:{-# RULES "zipVector +" forall a b . zipWord16X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:211:{-# RULES "zipVector -" forall a b . zipWord16X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:212:{-# RULES "zipVector *" forall a b . zipWord16X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word16X8.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord16X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:183:{-# RULES "mapVector abs" mapWord32X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:184:{-# RULES "mapVector signum" mapWord32X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:186:{-# RULES "mapVector const" forall x . mapWord32X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord32X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord32X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord32X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord32X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord32X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord32X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:210:{-# RULES "zipVector +" forall a b . zipWord32X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:211:{-# RULES "zipVector -" forall a b . zipWord32X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:212:{-# RULES "zipVector *" forall a b . zipWord32X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X16.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord32X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:183:{-# RULES "mapVector abs" mapWord32X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:184:{-# RULES "mapVector signum" mapWord32X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:186:{-# RULES "mapVector const" forall x . mapWord32X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord32X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord32X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord32X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord32X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord32X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord32X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:210:{-# RULES "zipVector +" forall a b . zipWord32X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:211:{-# RULES "zipVector -" forall a b . zipWord32X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:212:{-# RULES "zipVector *" forall a b . zipWord32X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X4.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord32X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:183:{-# RULES "mapVector abs" mapWord32X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:184:{-# RULES "mapVector signum" mapWord32X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:186:{-# RULES "mapVector const" forall x . mapWord32X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord32X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord32X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord32X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord32X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord32X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord32X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:210:{-# RULES "zipVector +" forall a b . zipWord32X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:211:{-# RULES "zipVector -" forall a b . zipWord32X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:212:{-# RULES "zipVector *" forall a b . zipWord32X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word32X8.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord32X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:193:{-# RULES "mapVector abs" mapWord64X2 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:194:{-# RULES "mapVector signum" mapWord64X2 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:196:{-# RULES "mapVector const" forall x . mapWord64X2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:197:{-# RULES "mapVector (x+)" forall x v . mapWord64X2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:198:{-# RULES "mapVector (+x)" forall x v . mapWord64X2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:199:{-# RULES "mapVector (x-)" forall x v . mapWord64X2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:200:{-# RULES "mapVector (-x)" forall x v . mapWord64X2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:201:{-# RULES "mapVector (x*)" forall x v . mapWord64X2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:202:{-# RULES "mapVector (*x)" forall x v . mapWord64X2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:204:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X2 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:205:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X2 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:220:{-# RULES "zipVector +" forall a b . zipWord64X2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:221:{-# RULES "zipVector -" forall a b . zipWord64X2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:222:{-# RULES "zipVector *" forall a b . zipWord64X2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:223:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X2 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X2.hs:224:{-# RULES "zipVector `remVector`" forall a b . zipWord64X2 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:193:{-# RULES "mapVector abs" mapWord64X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:194:{-# RULES "mapVector signum" mapWord64X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:196:{-# RULES "mapVector const" forall x . mapWord64X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:197:{-# RULES "mapVector (x+)" forall x v . mapWord64X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:198:{-# RULES "mapVector (+x)" forall x v . mapWord64X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:199:{-# RULES "mapVector (x-)" forall x v . mapWord64X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:200:{-# RULES "mapVector (-x)" forall x v . mapWord64X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:201:{-# RULES "mapVector (x*)" forall x v . mapWord64X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:202:{-# RULES "mapVector (*x)" forall x v . mapWord64X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:204:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:205:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:220:{-# RULES "zipVector +" forall a b . zipWord64X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:221:{-# RULES "zipVector -" forall a b . zipWord64X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:222:{-# RULES "zipVector *" forall a b . zipWord64X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:223:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X4.hs:224:{-# RULES "zipVector `remVector`" forall a b . zipWord64X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:193:{-# RULES "mapVector abs" mapWord64X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:194:{-# RULES "mapVector signum" mapWord64X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:196:{-# RULES "mapVector const" forall x . mapWord64X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:197:{-# RULES "mapVector (x+)" forall x v . mapWord64X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:198:{-# RULES "mapVector (+x)" forall x v . mapWord64X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:199:{-# RULES "mapVector (x-)" forall x v . mapWord64X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:200:{-# RULES "mapVector (-x)" forall x v . mapWord64X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:201:{-# RULES "mapVector (x*)" forall x v . mapWord64X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:202:{-# RULES "mapVector (*x)" forall x v . mapWord64X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:204:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:205:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:220:{-# RULES "zipVector +" forall a b . zipWord64X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:221:{-# RULES "zipVector -" forall a b . zipWord64X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:222:{-# RULES "zipVector *" forall a b . zipWord64X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:223:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word64X8.hs:224:{-# RULES "zipVector `remVector`" forall a b . zipWord64X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:183:{-# RULES "mapVector abs" mapWord8X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:184:{-# RULES "mapVector signum" mapWord8X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:186:{-# RULES "mapVector const" forall x . mapWord8X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord8X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord8X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord8X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord8X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord8X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord8X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:210:{-# RULES "zipVector +" forall a b . zipWord8X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:211:{-# RULES "zipVector -" forall a b . zipWord8X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:212:{-# RULES "zipVector *" forall a b . zipWord8X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X16.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord8X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:183:{-# RULES "mapVector abs" mapWord8X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:184:{-# RULES "mapVector signum" mapWord8X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:186:{-# RULES "mapVector const" forall x . mapWord8X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:187:{-# RULES "mapVector (x+)" forall x v . mapWord8X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:188:{-# RULES "mapVector (+x)" forall x v . mapWord8X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:189:{-# RULES "mapVector (x-)" forall x v . mapWord8X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:190:{-# RULES "mapVector (-x)" forall x v . mapWord8X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:191:{-# RULES "mapVector (x*)" forall x v . mapWord8X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:192:{-# RULES "mapVector (*x)" forall x v . mapWord8X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:194:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:195:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:210:{-# RULES "zipVector +" forall a b . zipWord8X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:211:{-# RULES "zipVector -" forall a b . zipWord8X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:212:{-# RULES "zipVector *" forall a b . zipWord8X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:213:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X32.hs:214:{-# RULES "zipVector `remVector`" forall a b . zipWord8X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:187:{-# RULES "mapVector abs" mapWord8X64 abs = abs #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:188:{-# RULES "mapVector signum" mapWord8X64 signum = signum #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:190:{-# RULES "mapVector const" forall x . mapWord8X64 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:191:{-# RULES "mapVector (x+)" forall x v . mapWord8X64 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:192:{-# RULES "mapVector (+x)" forall x v . mapWord8X64 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:193:{-# RULES "mapVector (x-)" forall x v . mapWord8X64 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:194:{-# RULES "mapVector (-x)" forall x v . mapWord8X64 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:195:{-# RULES "mapVector (x*)" forall x v . mapWord8X64 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:196:{-# RULES "mapVector (*x)" forall x v . mapWord8X64 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:198:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X64 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:199:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X64 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:214:{-# RULES "zipVector +" forall a b . zipWord8X64 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:215:{-# RULES "zipVector -" forall a b . zipWord8X64 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:216:{-# RULES "zipVector *" forall a b . zipWord8X64 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:217:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X64 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:218:{-# RULES "zipVector `remVector`" forall a b . zipWord8X64 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-512/Data/Primitive/SIMD/Word8X64.hs:227:{-# RULES "foldVector (+)" foldWord8X64 (+) = sumVector #-}
./primitive-simd-0.1.0.0/src-generate/Generator.hs:472:    ,"{-# RULES \"mapVector abs\" " ++ funcName ++ " abs = abs #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:473:    ,"{-# RULES \"mapVector signum\" " ++ funcName ++ " signum = signum #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:474:    ,if isWord typeDesc then "" else "{-# RULES \"mapVector negate\" " ++ funcName ++ " negate = negate #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:475:    ,"{-# RULES \"mapVector const\" forall x . " ++ funcName ++ " (const x) = const (broadcastVector x) #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:476:    ,"{-# RULES \"mapVector (x+)\" forall x v . " ++ funcName ++ " (\\ y -> x + y) v = broadcastVector x + v #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:477:    ,"{-# RULES \"mapVector (+x)\" forall x v . " ++ funcName ++ " (\\ y -> y + x) v = v + broadcastVector x #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:478:    ,"{-# RULES \"mapVector (x-)\" forall x v . " ++ funcName ++ " (\\ y -> x - y) v = broadcastVector x - v #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:479:    ,"{-# RULES \"mapVector (-x)\" forall x v . " ++ funcName ++ " (\\ y -> y - x) v = v - broadcastVector x #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:480:    ,"{-# RULES \"mapVector (x*)\" forall x v . " ++ funcName ++ " (\\ y -> x * y) v = broadcastVector x * v #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:481:    ,"{-# RULES \"mapVector (*x)\" forall x v . " ++ funcName ++ " (\\ y -> y * x) v = v * broadcastVector x #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:482:    ,if isFloating typeDesc then "{-# RULES \"mapVector (x/)\" forall x v . " ++ funcName ++ " (\\ y -> x / y) v = broadcastVector x / v #-}" else ""
./primitive-simd-0.1.0.0/src-generate/Generator.hs:483:    ,if isFloating typeDesc then "{-# RULES \"mapVector (/x)\" forall x v . " ++ funcName ++ " (\\ y -> y / x) v = v / broadcastVector x #-}" else ""
./primitive-simd-0.1.0.0/src-generate/Generator.hs:484:    ,if not $ isFloating typeDesc then "{-# RULES \"mapVector (`quot` x)\" forall x v . " ++ funcName ++ " (\\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}" else ""
./primitive-simd-0.1.0.0/src-generate/Generator.hs:485:    ,if not $ isFloating typeDesc then "{-# RULES \"mapVector (x `quot`)\" forall x v . " ++ funcName ++ " (\\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}" else ""
./primitive-simd-0.1.0.0/src-generate/Generator.hs:515:        genZipRule op opP = "{-# RULES \"zipVector " ++ op ++ "\" forall a b . " ++ funcName ++ " " ++ opP ++ " a b = a " ++ op ++ " b #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:531:        foldRule = if splitCount == 1 || maxCapability == 0 then "" else "{-# RULES \"foldVector (+)\" " ++ funcName ++ " (+) = sumVector #-}"
./primitive-simd-0.1.0.0/src-generate/Generator.hs:839:            in "{-# RULES \"unpack/pack " ++ p ++ "\" forall x . unpack" ++ p ++ " (pack" ++ p ++ " x) = x #-}\n" ++
./primitive-simd-0.1.0.0/src-generate/Generator.hs:840:               "{-# RULES \"pack/unpack " ++ p ++ "\" forall x . pack" ++ p ++ " (unpack" ++ p ++ " x) = x #-}"
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:254:{-# RULES "mapVector abs" mapDoubleX16 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:255:{-# RULES "mapVector signum" mapDoubleX16 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:256:{-# RULES "mapVector negate" mapDoubleX16 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:257:{-# RULES "mapVector const" forall x . mapDoubleX16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:258:{-# RULES "mapVector (x+)" forall x v . mapDoubleX16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:259:{-# RULES "mapVector (+x)" forall x v . mapDoubleX16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:260:{-# RULES "mapVector (x-)" forall x v . mapDoubleX16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:261:{-# RULES "mapVector (-x)" forall x v . mapDoubleX16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:262:{-# RULES "mapVector (x*)" forall x v . mapDoubleX16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:263:{-# RULES "mapVector (*x)" forall x v . mapDoubleX16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:264:{-# RULES "mapVector (x/)" forall x v . mapDoubleX16 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:265:{-# RULES "mapVector (/x)" forall x v . mapDoubleX16 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:280:{-# RULES "zipVector +" forall a b . zipDoubleX16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:281:{-# RULES "zipVector -" forall a b . zipDoubleX16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:282:{-# RULES "zipVector *" forall a b . zipDoubleX16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX16.hs:283:{-# RULES "zipVector /" forall a b . zipDoubleX16 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:226:{-# RULES "mapVector abs" mapDoubleX2 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:227:{-# RULES "mapVector signum" mapDoubleX2 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:228:{-# RULES "mapVector negate" mapDoubleX2 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:229:{-# RULES "mapVector const" forall x . mapDoubleX2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:230:{-# RULES "mapVector (x+)" forall x v . mapDoubleX2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:231:{-# RULES "mapVector (+x)" forall x v . mapDoubleX2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:232:{-# RULES "mapVector (x-)" forall x v . mapDoubleX2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:233:{-# RULES "mapVector (-x)" forall x v . mapDoubleX2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:234:{-# RULES "mapVector (x*)" forall x v . mapDoubleX2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:235:{-# RULES "mapVector (*x)" forall x v . mapDoubleX2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:236:{-# RULES "mapVector (x/)" forall x v . mapDoubleX2 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:237:{-# RULES "mapVector (/x)" forall x v . mapDoubleX2 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:252:{-# RULES "zipVector +" forall a b . zipDoubleX2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:253:{-# RULES "zipVector -" forall a b . zipDoubleX2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:254:{-# RULES "zipVector *" forall a b . zipDoubleX2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX2.hs:255:{-# RULES "zipVector /" forall a b . zipDoubleX2 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:230:{-# RULES "mapVector abs" mapDoubleX4 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:231:{-# RULES "mapVector signum" mapDoubleX4 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:232:{-# RULES "mapVector negate" mapDoubleX4 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:233:{-# RULES "mapVector const" forall x . mapDoubleX4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:234:{-# RULES "mapVector (x+)" forall x v . mapDoubleX4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:235:{-# RULES "mapVector (+x)" forall x v . mapDoubleX4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:236:{-# RULES "mapVector (x-)" forall x v . mapDoubleX4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:237:{-# RULES "mapVector (-x)" forall x v . mapDoubleX4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:238:{-# RULES "mapVector (x*)" forall x v . mapDoubleX4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:239:{-# RULES "mapVector (*x)" forall x v . mapDoubleX4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:240:{-# RULES "mapVector (x/)" forall x v . mapDoubleX4 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:241:{-# RULES "mapVector (/x)" forall x v . mapDoubleX4 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:256:{-# RULES "zipVector +" forall a b . zipDoubleX4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:257:{-# RULES "zipVector -" forall a b . zipDoubleX4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:258:{-# RULES "zipVector *" forall a b . zipDoubleX4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX4.hs:259:{-# RULES "zipVector /" forall a b . zipDoubleX4 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:238:{-# RULES "mapVector abs" mapDoubleX8 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:239:{-# RULES "mapVector signum" mapDoubleX8 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:240:{-# RULES "mapVector negate" mapDoubleX8 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:241:{-# RULES "mapVector const" forall x . mapDoubleX8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:242:{-# RULES "mapVector (x+)" forall x v . mapDoubleX8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:243:{-# RULES "mapVector (+x)" forall x v . mapDoubleX8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:244:{-# RULES "mapVector (x-)" forall x v . mapDoubleX8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:245:{-# RULES "mapVector (-x)" forall x v . mapDoubleX8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:246:{-# RULES "mapVector (x*)" forall x v . mapDoubleX8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:247:{-# RULES "mapVector (*x)" forall x v . mapDoubleX8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:248:{-# RULES "mapVector (x/)" forall x v . mapDoubleX8 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:249:{-# RULES "mapVector (/x)" forall x v . mapDoubleX8 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:264:{-# RULES "zipVector +" forall a b . zipDoubleX8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:265:{-# RULES "zipVector -" forall a b . zipDoubleX8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:266:{-# RULES "zipVector *" forall a b . zipDoubleX8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/DoubleX8.hs:267:{-# RULES "zipVector /" forall a b . zipDoubleX8 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:242:{-# RULES "mapVector abs" mapFloatX16 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:243:{-# RULES "mapVector signum" mapFloatX16 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:244:{-# RULES "mapVector negate" mapFloatX16 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:245:{-# RULES "mapVector const" forall x . mapFloatX16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:246:{-# RULES "mapVector (x+)" forall x v . mapFloatX16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:247:{-# RULES "mapVector (+x)" forall x v . mapFloatX16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:248:{-# RULES "mapVector (x-)" forall x v . mapFloatX16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:249:{-# RULES "mapVector (-x)" forall x v . mapFloatX16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:250:{-# RULES "mapVector (x*)" forall x v . mapFloatX16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:251:{-# RULES "mapVector (*x)" forall x v . mapFloatX16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:252:{-# RULES "mapVector (x/)" forall x v . mapFloatX16 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:253:{-# RULES "mapVector (/x)" forall x v . mapFloatX16 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:268:{-# RULES "zipVector +" forall a b . zipFloatX16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:269:{-# RULES "zipVector -" forall a b . zipFloatX16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:270:{-# RULES "zipVector *" forall a b . zipFloatX16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX16.hs:271:{-# RULES "zipVector /" forall a b . zipFloatX16 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:218:{-# RULES "mapVector abs" mapFloatX4 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:219:{-# RULES "mapVector signum" mapFloatX4 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:220:{-# RULES "mapVector negate" mapFloatX4 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:221:{-# RULES "mapVector const" forall x . mapFloatX4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:222:{-# RULES "mapVector (x+)" forall x v . mapFloatX4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:223:{-# RULES "mapVector (+x)" forall x v . mapFloatX4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:224:{-# RULES "mapVector (x-)" forall x v . mapFloatX4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:225:{-# RULES "mapVector (-x)" forall x v . mapFloatX4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:226:{-# RULES "mapVector (x*)" forall x v . mapFloatX4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:227:{-# RULES "mapVector (*x)" forall x v . mapFloatX4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:228:{-# RULES "mapVector (x/)" forall x v . mapFloatX4 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:229:{-# RULES "mapVector (/x)" forall x v . mapFloatX4 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:244:{-# RULES "zipVector +" forall a b . zipFloatX4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:245:{-# RULES "zipVector -" forall a b . zipFloatX4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:246:{-# RULES "zipVector *" forall a b . zipFloatX4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX4.hs:247:{-# RULES "zipVector /" forall a b . zipFloatX4 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:226:{-# RULES "mapVector abs" mapFloatX8 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:227:{-# RULES "mapVector signum" mapFloatX8 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:228:{-# RULES "mapVector negate" mapFloatX8 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:229:{-# RULES "mapVector const" forall x . mapFloatX8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:230:{-# RULES "mapVector (x+)" forall x v . mapFloatX8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:231:{-# RULES "mapVector (+x)" forall x v . mapFloatX8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:232:{-# RULES "mapVector (x-)" forall x v . mapFloatX8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:233:{-# RULES "mapVector (-x)" forall x v . mapFloatX8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:234:{-# RULES "mapVector (x*)" forall x v . mapFloatX8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:235:{-# RULES "mapVector (*x)" forall x v . mapFloatX8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:236:{-# RULES "mapVector (x/)" forall x v . mapFloatX8 (\ y -> x / y) v = broadcastVector x / v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:237:{-# RULES "mapVector (/x)" forall x v . mapFloatX8 (\ y -> y / x) v = v / broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:252:{-# RULES "zipVector +" forall a b . zipFloatX8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:253:{-# RULES "zipVector -" forall a b . zipFloatX8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:254:{-# RULES "zipVector *" forall a b . zipFloatX8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/FloatX8.hs:255:{-# RULES "zipVector /" forall a b . zipFloatX8 (/) a b = a / b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:245:{-# RULES "mapVector abs" mapInt16X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:246:{-# RULES "mapVector signum" mapInt16X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:247:{-# RULES "mapVector negate" mapInt16X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:248:{-# RULES "mapVector const" forall x . mapInt16X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:249:{-# RULES "mapVector (x+)" forall x v . mapInt16X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:250:{-# RULES "mapVector (+x)" forall x v . mapInt16X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:251:{-# RULES "mapVector (x-)" forall x v . mapInt16X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:252:{-# RULES "mapVector (-x)" forall x v . mapInt16X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:253:{-# RULES "mapVector (x*)" forall x v . mapInt16X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:254:{-# RULES "mapVector (*x)" forall x v . mapInt16X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:256:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:257:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:272:{-# RULES "zipVector +" forall a b . zipInt16X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:273:{-# RULES "zipVector -" forall a b . zipInt16X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:274:{-# RULES "zipVector *" forall a b . zipInt16X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:275:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X16.hs:276:{-# RULES "zipVector `remVector`" forall a b . zipInt16X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:277:{-# RULES "mapVector abs" mapInt16X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:278:{-# RULES "mapVector signum" mapInt16X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:279:{-# RULES "mapVector negate" mapInt16X32 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:280:{-# RULES "mapVector const" forall x . mapInt16X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:281:{-# RULES "mapVector (x+)" forall x v . mapInt16X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:282:{-# RULES "mapVector (+x)" forall x v . mapInt16X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:283:{-# RULES "mapVector (x-)" forall x v . mapInt16X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:284:{-# RULES "mapVector (-x)" forall x v . mapInt16X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:285:{-# RULES "mapVector (x*)" forall x v . mapInt16X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:286:{-# RULES "mapVector (*x)" forall x v . mapInt16X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:288:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:289:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:304:{-# RULES "zipVector +" forall a b . zipInt16X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:305:{-# RULES "zipVector -" forall a b . zipInt16X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:306:{-# RULES "zipVector *" forall a b . zipInt16X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:307:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X32.hs:308:{-# RULES "zipVector `remVector`" forall a b . zipInt16X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:229:{-# RULES "mapVector abs" mapInt16X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:230:{-# RULES "mapVector signum" mapInt16X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:231:{-# RULES "mapVector negate" mapInt16X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:232:{-# RULES "mapVector const" forall x . mapInt16X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:233:{-# RULES "mapVector (x+)" forall x v . mapInt16X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:234:{-# RULES "mapVector (+x)" forall x v . mapInt16X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:235:{-# RULES "mapVector (x-)" forall x v . mapInt16X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:236:{-# RULES "mapVector (-x)" forall x v . mapInt16X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:237:{-# RULES "mapVector (x*)" forall x v . mapInt16X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:238:{-# RULES "mapVector (*x)" forall x v . mapInt16X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:240:{-# RULES "mapVector (`quot` x)" forall x v . mapInt16X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:241:{-# RULES "mapVector (x `quot`)" forall x v . mapInt16X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:256:{-# RULES "zipVector +" forall a b . zipInt16X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:257:{-# RULES "zipVector -" forall a b . zipInt16X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:258:{-# RULES "zipVector *" forall a b . zipInt16X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:259:{-# RULES "zipVector `quotVector`" forall a b . zipInt16X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int16X8.hs:260:{-# RULES "zipVector `remVector`" forall a b . zipInt16X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:245:{-# RULES "mapVector abs" mapInt32X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:246:{-# RULES "mapVector signum" mapInt32X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:247:{-# RULES "mapVector negate" mapInt32X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:248:{-# RULES "mapVector const" forall x . mapInt32X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:249:{-# RULES "mapVector (x+)" forall x v . mapInt32X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:250:{-# RULES "mapVector (+x)" forall x v . mapInt32X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:251:{-# RULES "mapVector (x-)" forall x v . mapInt32X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:252:{-# RULES "mapVector (-x)" forall x v . mapInt32X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:253:{-# RULES "mapVector (x*)" forall x v . mapInt32X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:254:{-# RULES "mapVector (*x)" forall x v . mapInt32X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:256:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:257:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:272:{-# RULES "zipVector +" forall a b . zipInt32X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:273:{-# RULES "zipVector -" forall a b . zipInt32X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:274:{-# RULES "zipVector *" forall a b . zipInt32X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:275:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X16.hs:276:{-# RULES "zipVector `remVector`" forall a b . zipInt32X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:221:{-# RULES "mapVector abs" mapInt32X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:222:{-# RULES "mapVector signum" mapInt32X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:223:{-# RULES "mapVector negate" mapInt32X4 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:224:{-# RULES "mapVector const" forall x . mapInt32X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:225:{-# RULES "mapVector (x+)" forall x v . mapInt32X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:226:{-# RULES "mapVector (+x)" forall x v . mapInt32X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:227:{-# RULES "mapVector (x-)" forall x v . mapInt32X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:228:{-# RULES "mapVector (-x)" forall x v . mapInt32X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:229:{-# RULES "mapVector (x*)" forall x v . mapInt32X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:230:{-# RULES "mapVector (*x)" forall x v . mapInt32X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:232:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:233:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:248:{-# RULES "zipVector +" forall a b . zipInt32X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:249:{-# RULES "zipVector -" forall a b . zipInt32X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:250:{-# RULES "zipVector *" forall a b . zipInt32X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:251:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X4.hs:252:{-# RULES "zipVector `remVector`" forall a b . zipInt32X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:229:{-# RULES "mapVector abs" mapInt32X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:230:{-# RULES "mapVector signum" mapInt32X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:231:{-# RULES "mapVector negate" mapInt32X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:232:{-# RULES "mapVector const" forall x . mapInt32X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:233:{-# RULES "mapVector (x+)" forall x v . mapInt32X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:234:{-# RULES "mapVector (+x)" forall x v . mapInt32X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:235:{-# RULES "mapVector (x-)" forall x v . mapInt32X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:236:{-# RULES "mapVector (-x)" forall x v . mapInt32X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:237:{-# RULES "mapVector (x*)" forall x v . mapInt32X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:238:{-# RULES "mapVector (*x)" forall x v . mapInt32X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:240:{-# RULES "mapVector (`quot` x)" forall x v . mapInt32X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:241:{-# RULES "mapVector (x `quot`)" forall x v . mapInt32X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:256:{-# RULES "zipVector +" forall a b . zipInt32X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:257:{-# RULES "zipVector -" forall a b . zipInt32X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:258:{-# RULES "zipVector *" forall a b . zipInt32X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:259:{-# RULES "zipVector `quotVector`" forall a b . zipInt32X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int32X8.hs:260:{-# RULES "zipVector `remVector`" forall a b . zipInt32X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:227:{-# RULES "mapVector abs" mapInt64X2 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:228:{-# RULES "mapVector signum" mapInt64X2 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:229:{-# RULES "mapVector negate" mapInt64X2 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:230:{-# RULES "mapVector const" forall x . mapInt64X2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:231:{-# RULES "mapVector (x+)" forall x v . mapInt64X2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:232:{-# RULES "mapVector (+x)" forall x v . mapInt64X2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:233:{-# RULES "mapVector (x-)" forall x v . mapInt64X2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:234:{-# RULES "mapVector (-x)" forall x v . mapInt64X2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:235:{-# RULES "mapVector (x*)" forall x v . mapInt64X2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:236:{-# RULES "mapVector (*x)" forall x v . mapInt64X2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:238:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X2 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:239:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X2 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:254:{-# RULES "zipVector +" forall a b . zipInt64X2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:255:{-# RULES "zipVector -" forall a b . zipInt64X2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:256:{-# RULES "zipVector *" forall a b . zipInt64X2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:257:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X2 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X2.hs:258:{-# RULES "zipVector `remVector`" forall a b . zipInt64X2 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:231:{-# RULES "mapVector abs" mapInt64X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:232:{-# RULES "mapVector signum" mapInt64X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:233:{-# RULES "mapVector negate" mapInt64X4 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:234:{-# RULES "mapVector const" forall x . mapInt64X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:235:{-# RULES "mapVector (x+)" forall x v . mapInt64X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:236:{-# RULES "mapVector (+x)" forall x v . mapInt64X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:237:{-# RULES "mapVector (x-)" forall x v . mapInt64X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:238:{-# RULES "mapVector (-x)" forall x v . mapInt64X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:239:{-# RULES "mapVector (x*)" forall x v . mapInt64X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:240:{-# RULES "mapVector (*x)" forall x v . mapInt64X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:242:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:243:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:258:{-# RULES "zipVector +" forall a b . zipInt64X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:259:{-# RULES "zipVector -" forall a b . zipInt64X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:260:{-# RULES "zipVector *" forall a b . zipInt64X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:261:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X4.hs:262:{-# RULES "zipVector `remVector`" forall a b . zipInt64X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:239:{-# RULES "mapVector abs" mapInt64X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:240:{-# RULES "mapVector signum" mapInt64X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:241:{-# RULES "mapVector negate" mapInt64X8 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:242:{-# RULES "mapVector const" forall x . mapInt64X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:243:{-# RULES "mapVector (x+)" forall x v . mapInt64X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:244:{-# RULES "mapVector (+x)" forall x v . mapInt64X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:245:{-# RULES "mapVector (x-)" forall x v . mapInt64X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:246:{-# RULES "mapVector (-x)" forall x v . mapInt64X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:247:{-# RULES "mapVector (x*)" forall x v . mapInt64X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:248:{-# RULES "mapVector (*x)" forall x v . mapInt64X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:250:{-# RULES "mapVector (`quot` x)" forall x v . mapInt64X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:251:{-# RULES "mapVector (x `quot`)" forall x v . mapInt64X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:266:{-# RULES "zipVector +" forall a b . zipInt64X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:267:{-# RULES "zipVector -" forall a b . zipInt64X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:268:{-# RULES "zipVector *" forall a b . zipInt64X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:269:{-# RULES "zipVector `quotVector`" forall a b . zipInt64X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int64X8.hs:270:{-# RULES "zipVector `remVector`" forall a b . zipInt64X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:245:{-# RULES "mapVector abs" mapInt8X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:246:{-# RULES "mapVector signum" mapInt8X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:247:{-# RULES "mapVector negate" mapInt8X16 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:248:{-# RULES "mapVector const" forall x . mapInt8X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:249:{-# RULES "mapVector (x+)" forall x v . mapInt8X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:250:{-# RULES "mapVector (+x)" forall x v . mapInt8X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:251:{-# RULES "mapVector (x-)" forall x v . mapInt8X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:252:{-# RULES "mapVector (-x)" forall x v . mapInt8X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:253:{-# RULES "mapVector (x*)" forall x v . mapInt8X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:254:{-# RULES "mapVector (*x)" forall x v . mapInt8X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:256:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:257:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:272:{-# RULES "zipVector +" forall a b . zipInt8X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:273:{-# RULES "zipVector -" forall a b . zipInt8X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:274:{-# RULES "zipVector *" forall a b . zipInt8X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:275:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X16.hs:276:{-# RULES "zipVector `remVector`" forall a b . zipInt8X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:277:{-# RULES "mapVector abs" mapInt8X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:278:{-# RULES "mapVector signum" mapInt8X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:279:{-# RULES "mapVector negate" mapInt8X32 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:280:{-# RULES "mapVector const" forall x . mapInt8X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:281:{-# RULES "mapVector (x+)" forall x v . mapInt8X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:282:{-# RULES "mapVector (+x)" forall x v . mapInt8X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:283:{-# RULES "mapVector (x-)" forall x v . mapInt8X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:284:{-# RULES "mapVector (-x)" forall x v . mapInt8X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:285:{-# RULES "mapVector (x*)" forall x v . mapInt8X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:286:{-# RULES "mapVector (*x)" forall x v . mapInt8X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:288:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:289:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:304:{-# RULES "zipVector +" forall a b . zipInt8X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:305:{-# RULES "zipVector -" forall a b . zipInt8X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:306:{-# RULES "zipVector *" forall a b . zipInt8X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:307:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X32.hs:308:{-# RULES "zipVector `remVector`" forall a b . zipInt8X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:341:{-# RULES "mapVector abs" mapInt8X64 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:342:{-# RULES "mapVector signum" mapInt8X64 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:343:{-# RULES "mapVector negate" mapInt8X64 negate = negate #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:344:{-# RULES "mapVector const" forall x . mapInt8X64 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:345:{-# RULES "mapVector (x+)" forall x v . mapInt8X64 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:346:{-# RULES "mapVector (+x)" forall x v . mapInt8X64 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:347:{-# RULES "mapVector (x-)" forall x v . mapInt8X64 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:348:{-# RULES "mapVector (-x)" forall x v . mapInt8X64 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:349:{-# RULES "mapVector (x*)" forall x v . mapInt8X64 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:350:{-# RULES "mapVector (*x)" forall x v . mapInt8X64 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:352:{-# RULES "mapVector (`quot` x)" forall x v . mapInt8X64 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:353:{-# RULES "mapVector (x `quot`)" forall x v . mapInt8X64 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:368:{-# RULES "zipVector +" forall a b . zipInt8X64 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:369:{-# RULES "zipVector -" forall a b . zipInt8X64 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:370:{-# RULES "zipVector *" forall a b . zipInt8X64 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:371:{-# RULES "zipVector `quotVector`" forall a b . zipInt8X64 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Int8X64.hs:372:{-# RULES "zipVector `remVector`" forall a b . zipInt8X64 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:241:{-# RULES "mapVector abs" mapWord16X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:242:{-# RULES "mapVector signum" mapWord16X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:244:{-# RULES "mapVector const" forall x . mapWord16X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:245:{-# RULES "mapVector (x+)" forall x v . mapWord16X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:246:{-# RULES "mapVector (+x)" forall x v . mapWord16X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:247:{-# RULES "mapVector (x-)" forall x v . mapWord16X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:248:{-# RULES "mapVector (-x)" forall x v . mapWord16X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:249:{-# RULES "mapVector (x*)" forall x v . mapWord16X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:250:{-# RULES "mapVector (*x)" forall x v . mapWord16X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:252:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:253:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:268:{-# RULES "zipVector +" forall a b . zipWord16X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:269:{-# RULES "zipVector -" forall a b . zipWord16X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:270:{-# RULES "zipVector *" forall a b . zipWord16X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:271:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X16.hs:272:{-# RULES "zipVector `remVector`" forall a b . zipWord16X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:273:{-# RULES "mapVector abs" mapWord16X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:274:{-# RULES "mapVector signum" mapWord16X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:276:{-# RULES "mapVector const" forall x . mapWord16X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:277:{-# RULES "mapVector (x+)" forall x v . mapWord16X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:278:{-# RULES "mapVector (+x)" forall x v . mapWord16X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:279:{-# RULES "mapVector (x-)" forall x v . mapWord16X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:280:{-# RULES "mapVector (-x)" forall x v . mapWord16X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:281:{-# RULES "mapVector (x*)" forall x v . mapWord16X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:282:{-# RULES "mapVector (*x)" forall x v . mapWord16X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:284:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:285:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:300:{-# RULES "zipVector +" forall a b . zipWord16X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:301:{-# RULES "zipVector -" forall a b . zipWord16X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:302:{-# RULES "zipVector *" forall a b . zipWord16X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:303:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X32.hs:304:{-# RULES "zipVector `remVector`" forall a b . zipWord16X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:225:{-# RULES "mapVector abs" mapWord16X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:226:{-# RULES "mapVector signum" mapWord16X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:228:{-# RULES "mapVector const" forall x . mapWord16X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:229:{-# RULES "mapVector (x+)" forall x v . mapWord16X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:230:{-# RULES "mapVector (+x)" forall x v . mapWord16X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:231:{-# RULES "mapVector (x-)" forall x v . mapWord16X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:232:{-# RULES "mapVector (-x)" forall x v . mapWord16X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:233:{-# RULES "mapVector (x*)" forall x v . mapWord16X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:234:{-# RULES "mapVector (*x)" forall x v . mapWord16X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:236:{-# RULES "mapVector (`quot` x)" forall x v . mapWord16X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:237:{-# RULES "mapVector (x `quot`)" forall x v . mapWord16X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:252:{-# RULES "zipVector +" forall a b . zipWord16X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:253:{-# RULES "zipVector -" forall a b . zipWord16X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:254:{-# RULES "zipVector *" forall a b . zipWord16X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:255:{-# RULES "zipVector `quotVector`" forall a b . zipWord16X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word16X8.hs:256:{-# RULES "zipVector `remVector`" forall a b . zipWord16X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:241:{-# RULES "mapVector abs" mapWord32X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:242:{-# RULES "mapVector signum" mapWord32X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:244:{-# RULES "mapVector const" forall x . mapWord32X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:245:{-# RULES "mapVector (x+)" forall x v . mapWord32X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:246:{-# RULES "mapVector (+x)" forall x v . mapWord32X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:247:{-# RULES "mapVector (x-)" forall x v . mapWord32X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:248:{-# RULES "mapVector (-x)" forall x v . mapWord32X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:249:{-# RULES "mapVector (x*)" forall x v . mapWord32X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:250:{-# RULES "mapVector (*x)" forall x v . mapWord32X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:252:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:253:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:268:{-# RULES "zipVector +" forall a b . zipWord32X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:269:{-# RULES "zipVector -" forall a b . zipWord32X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:270:{-# RULES "zipVector *" forall a b . zipWord32X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:271:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X16.hs:272:{-# RULES "zipVector `remVector`" forall a b . zipWord32X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:217:{-# RULES "mapVector abs" mapWord32X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:218:{-# RULES "mapVector signum" mapWord32X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:220:{-# RULES "mapVector const" forall x . mapWord32X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:221:{-# RULES "mapVector (x+)" forall x v . mapWord32X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:222:{-# RULES "mapVector (+x)" forall x v . mapWord32X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:223:{-# RULES "mapVector (x-)" forall x v . mapWord32X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:224:{-# RULES "mapVector (-x)" forall x v . mapWord32X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:225:{-# RULES "mapVector (x*)" forall x v . mapWord32X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:226:{-# RULES "mapVector (*x)" forall x v . mapWord32X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:228:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:229:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:244:{-# RULES "zipVector +" forall a b . zipWord32X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:245:{-# RULES "zipVector -" forall a b . zipWord32X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:246:{-# RULES "zipVector *" forall a b . zipWord32X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:247:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X4.hs:248:{-# RULES "zipVector `remVector`" forall a b . zipWord32X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:225:{-# RULES "mapVector abs" mapWord32X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:226:{-# RULES "mapVector signum" mapWord32X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:228:{-# RULES "mapVector const" forall x . mapWord32X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:229:{-# RULES "mapVector (x+)" forall x v . mapWord32X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:230:{-# RULES "mapVector (+x)" forall x v . mapWord32X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:231:{-# RULES "mapVector (x-)" forall x v . mapWord32X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:232:{-# RULES "mapVector (-x)" forall x v . mapWord32X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:233:{-# RULES "mapVector (x*)" forall x v . mapWord32X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:234:{-# RULES "mapVector (*x)" forall x v . mapWord32X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:236:{-# RULES "mapVector (`quot` x)" forall x v . mapWord32X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:237:{-# RULES "mapVector (x `quot`)" forall x v . mapWord32X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:252:{-# RULES "zipVector +" forall a b . zipWord32X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:253:{-# RULES "zipVector -" forall a b . zipWord32X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:254:{-# RULES "zipVector *" forall a b . zipWord32X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:255:{-# RULES "zipVector `quotVector`" forall a b . zipWord32X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word32X8.hs:256:{-# RULES "zipVector `remVector`" forall a b . zipWord32X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:223:{-# RULES "mapVector abs" mapWord64X2 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:224:{-# RULES "mapVector signum" mapWord64X2 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:226:{-# RULES "mapVector const" forall x . mapWord64X2 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:227:{-# RULES "mapVector (x+)" forall x v . mapWord64X2 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:228:{-# RULES "mapVector (+x)" forall x v . mapWord64X2 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:229:{-# RULES "mapVector (x-)" forall x v . mapWord64X2 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:230:{-# RULES "mapVector (-x)" forall x v . mapWord64X2 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:231:{-# RULES "mapVector (x*)" forall x v . mapWord64X2 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:232:{-# RULES "mapVector (*x)" forall x v . mapWord64X2 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:234:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X2 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:235:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X2 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:250:{-# RULES "zipVector +" forall a b . zipWord64X2 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:251:{-# RULES "zipVector -" forall a b . zipWord64X2 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:252:{-# RULES "zipVector *" forall a b . zipWord64X2 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:253:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X2 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X2.hs:254:{-# RULES "zipVector `remVector`" forall a b . zipWord64X2 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:227:{-# RULES "mapVector abs" mapWord64X4 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:228:{-# RULES "mapVector signum" mapWord64X4 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:230:{-# RULES "mapVector const" forall x . mapWord64X4 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:231:{-# RULES "mapVector (x+)" forall x v . mapWord64X4 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:232:{-# RULES "mapVector (+x)" forall x v . mapWord64X4 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:233:{-# RULES "mapVector (x-)" forall x v . mapWord64X4 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:234:{-# RULES "mapVector (-x)" forall x v . mapWord64X4 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:235:{-# RULES "mapVector (x*)" forall x v . mapWord64X4 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:236:{-# RULES "mapVector (*x)" forall x v . mapWord64X4 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:238:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X4 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:239:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X4 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:254:{-# RULES "zipVector +" forall a b . zipWord64X4 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:255:{-# RULES "zipVector -" forall a b . zipWord64X4 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:256:{-# RULES "zipVector *" forall a b . zipWord64X4 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:257:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X4 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X4.hs:258:{-# RULES "zipVector `remVector`" forall a b . zipWord64X4 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:235:{-# RULES "mapVector abs" mapWord64X8 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:236:{-# RULES "mapVector signum" mapWord64X8 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:238:{-# RULES "mapVector const" forall x . mapWord64X8 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:239:{-# RULES "mapVector (x+)" forall x v . mapWord64X8 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:240:{-# RULES "mapVector (+x)" forall x v . mapWord64X8 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:241:{-# RULES "mapVector (x-)" forall x v . mapWord64X8 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:242:{-# RULES "mapVector (-x)" forall x v . mapWord64X8 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:243:{-# RULES "mapVector (x*)" forall x v . mapWord64X8 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:244:{-# RULES "mapVector (*x)" forall x v . mapWord64X8 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:246:{-# RULES "mapVector (`quot` x)" forall x v . mapWord64X8 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:247:{-# RULES "mapVector (x `quot`)" forall x v . mapWord64X8 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:262:{-# RULES "zipVector +" forall a b . zipWord64X8 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:263:{-# RULES "zipVector -" forall a b . zipWord64X8 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:264:{-# RULES "zipVector *" forall a b . zipWord64X8 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:265:{-# RULES "zipVector `quotVector`" forall a b . zipWord64X8 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word64X8.hs:266:{-# RULES "zipVector `remVector`" forall a b . zipWord64X8 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:241:{-# RULES "mapVector abs" mapWord8X16 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:242:{-# RULES "mapVector signum" mapWord8X16 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:244:{-# RULES "mapVector const" forall x . mapWord8X16 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:245:{-# RULES "mapVector (x+)" forall x v . mapWord8X16 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:246:{-# RULES "mapVector (+x)" forall x v . mapWord8X16 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:247:{-# RULES "mapVector (x-)" forall x v . mapWord8X16 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:248:{-# RULES "mapVector (-x)" forall x v . mapWord8X16 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:249:{-# RULES "mapVector (x*)" forall x v . mapWord8X16 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:250:{-# RULES "mapVector (*x)" forall x v . mapWord8X16 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:252:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X16 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:253:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X16 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:268:{-# RULES "zipVector +" forall a b . zipWord8X16 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:269:{-# RULES "zipVector -" forall a b . zipWord8X16 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:270:{-# RULES "zipVector *" forall a b . zipWord8X16 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:271:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X16 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X16.hs:272:{-# RULES "zipVector `remVector`" forall a b . zipWord8X16 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:273:{-# RULES "mapVector abs" mapWord8X32 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:274:{-# RULES "mapVector signum" mapWord8X32 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:276:{-# RULES "mapVector const" forall x . mapWord8X32 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:277:{-# RULES "mapVector (x+)" forall x v . mapWord8X32 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:278:{-# RULES "mapVector (+x)" forall x v . mapWord8X32 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:279:{-# RULES "mapVector (x-)" forall x v . mapWord8X32 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:280:{-# RULES "mapVector (-x)" forall x v . mapWord8X32 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:281:{-# RULES "mapVector (x*)" forall x v . mapWord8X32 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:282:{-# RULES "mapVector (*x)" forall x v . mapWord8X32 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:284:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X32 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:285:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X32 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:300:{-# RULES "zipVector +" forall a b . zipWord8X32 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:301:{-# RULES "zipVector -" forall a b . zipWord8X32 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:302:{-# RULES "zipVector *" forall a b . zipWord8X32 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:303:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X32 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X32.hs:304:{-# RULES "zipVector `remVector`" forall a b . zipWord8X32 rem a b = a `remVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:337:{-# RULES "mapVector abs" mapWord8X64 abs = abs #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:338:{-# RULES "mapVector signum" mapWord8X64 signum = signum #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:340:{-# RULES "mapVector const" forall x . mapWord8X64 (const x) = const (broadcastVector x) #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:341:{-# RULES "mapVector (x+)" forall x v . mapWord8X64 (\ y -> x + y) v = broadcastVector x + v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:342:{-# RULES "mapVector (+x)" forall x v . mapWord8X64 (\ y -> y + x) v = v + broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:343:{-# RULES "mapVector (x-)" forall x v . mapWord8X64 (\ y -> x - y) v = broadcastVector x - v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:344:{-# RULES "mapVector (-x)" forall x v . mapWord8X64 (\ y -> y - x) v = v - broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:345:{-# RULES "mapVector (x*)" forall x v . mapWord8X64 (\ y -> x * y) v = broadcastVector x * v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:346:{-# RULES "mapVector (*x)" forall x v . mapWord8X64 (\ y -> y * x) v = v * broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:348:{-# RULES "mapVector (`quot` x)" forall x v . mapWord8X64 (\ y -> y `quot` x) v = v `quotVector` broadcastVector x #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:349:{-# RULES "mapVector (x `quot`)" forall x v . mapWord8X64 (\ y -> x `quot` y) v = broadcastVector x `quotVector` v #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:364:{-# RULES "zipVector +" forall a b . zipWord8X64 (+) a b = a + b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:365:{-# RULES "zipVector -" forall a b . zipWord8X64 (-) a b = a - b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:366:{-# RULES "zipVector *" forall a b . zipWord8X64 (*) a b = a * b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:367:{-# RULES "zipVector `quotVector`" forall a b . zipWord8X64 quot a b = a `quotVector` b #-}
./primitive-simd-0.1.0.0/src-no-vec/Data/Primitive/SIMD/Word8X64.hs:368:{-# RULES "zipVector `remVector`" forall a b . zipWord8X64 rem a b = a `remVector` b #-}
./propellor-2.10.0/src/Propellor/Property/Rsync.hs:32:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.11.0/src/Propellor/Property/Rsync.hs:32:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.12.0/src/Propellor/Property/Rsync.hs:34:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.13.0/src/Propellor/Property/Rsync.hs:34:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.14.0/src/Propellor/Property/Rsync.hs:34:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.15.0/src/Propellor/Property/Rsync.hs:34:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.15.1/src/Propellor/Property/Rsync.hs:34:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.15.2/src/Propellor/Property/Rsync.hs:34:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.15.3/src/Propellor/Property/Rsync.hs:34:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.15.4/src/Propellor/Property/Rsync.hs:34:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.8.0/src/Propellor/Property/Rsync.hs:32:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.8.1/src/Propellor/Property/Rsync.hs:32:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./propellor-2.9.0/src/Propellor/Property/Rsync.hs:32:-- See "INCLUDE/EXCLUDE PATTERN RULES" in the rsync(1) man page.
./property-list-0.0.1.0/src/Data/PropertyList/Types.hs:36:{-# RULES
./property-list-0.0.1.0/src/Data/PropertyList/Types.hs:80:{-# RULES
./property-list-0.0.3/src/Data/PropertyList/Types.hs:48:{-# RULES
./property-list-0.0.3/src/Data/PropertyList/Types.hs:86:{-# RULES
./property-list-0.1/src/Data/PropertyList/Types.hs:46:{-# RULES
./property-list-0.1/src/Data/PropertyList/Types.hs:95:{-# RULES
./property-list-0.1.0.1/src/Data/PropertyList/Types.hs:46:{-# RULES
./property-list-0.1.0.1/src/Data/PropertyList/Types.hs:95:{-# RULES
./property-list-0.1.0.2/src/Data/PropertyList/Types.hs:46:{-# RULES
./property-list-0.1.0.2/src/Data/PropertyList/Types.hs:95:{-# RULES
./property-list-0.1.0.3/src/Data/PropertyList/Types.hs:47:{-# RULES
./property-list-0.1.0.3/src/Data/PropertyList/Types.hs:96:{-# RULES
./property-list-0.1.0.4/src/Data/PropertyList/Types.hs:47:{-# RULES
./property-list-0.1.0.4/src/Data/PropertyList/Types.hs:96:{-# RULES
./property-list-0.1.0.5/src/Data/PropertyList/Types.hs:47:{-# RULES
./property-list-0.1.0.5/src/Data/PropertyList/Types.hs:96:{-# RULES
./queuelike-1.0.0/Data/Queue/QueueHelpers.hs:83:{-# RULES
./queuelike-1.0.1/Data/Queue/PQueue.hs:58:{-# RULES
./queuelike-1.0.1/Data/Queue/QueueHelpers.hs:98:{-# RULES
./queuelike-1.0.2/Data/Queue/PQueue.hs:58:{-# RULES
./queuelike-1.0.2/Data/Queue/QueueHelpers.hs:98:{-# RULES
./queuelike-1.0.3/Data/Queue/PQueue.hs:58:{-# RULES
./queuelike-1.0.3/Data/Queue/QueueHelpers.hs:98:{-# RULES
./queuelike-1.0.4/Data/Queue/PQueue.hs:58:{-# RULES
./queuelike-1.0.4/Data/Queue/QueueHelpers.hs:98:{-# RULES
./queuelike-1.0.5/Data/Queue/PQueue.hs:58:{-# RULES
./queuelike-1.0.5/Data/Queue/QueueHelpers.hs:98:{-# RULES
./queuelike-1.0.6/Data/Queue/PQueue.hs:64:{-# RULES
./queuelike-1.0.6/Data/Queue/QueueHelpers.hs:115:{-# RULES
./queuelike-1.0.7/Data/Queue/PQueue.hs:64:{-# RULES
./queuelike-1.0.7/Data/Queue/QueueHelpers.hs:96:{-# RULES
./queuelike-1.0.7/Data/Semigroup.hs:39:{-# RULES "endoMaybe/Just" forall f a b . endoMaybe f a (Just b) = Just (maybe b (`f` b) a) #-}
./queuelike-1.0.8/Data/Queue/PQueue.hs:64:{-# RULES
./queuelike-1.0.8/Data/Queue/QueueHelpers.hs:96:{-# RULES
./queuelike-1.0.8/Data/Semigroup.hs:39:{-# RULES "endoMaybe/Just" forall f a b . endoMaybe f a (Just b) = Just (maybe b (`f` b) a) #-}
./queuelike-1.0.9/Data/Queue/PQueue.hs:64:{-# RULES
./queuelike-1.0.9/Data/Queue/QueueHelpers.hs:96:{-# RULES
./queuelike-1.0.9/Data/Semigroup.hs:39:{-# RULES "endoMaybe/Just" forall f a b . endoMaybe f a (Just b) = Just (maybe b (`f` b) a) #-}
./range-0.1.1.0/Data/Range/RangeInternal.hs:60:{-# RULES "load/export" [1] forall x. loadRanges (exportRangeMerge x) = x #-}
./range-0.1.1.1/Data/Range/RangeInternal.hs:60:{-# RULES "load/export" [1] forall x. loadRanges (exportRangeMerge x) = x #-}
./range-0.1.2.0/Data/Range/RangeInternal.hs:62:{-# RULES "load/export" [1] forall x. loadRanges (exportRangeMerge x) = x #-}
./rangemin-1.0/Data/RangeMin/Internal/Combinators.hs:6:{-# RULES
./rangemin-1.0/Data/RangeMin/Internal/HandyList.hs:73:{-# RULES
./rangemin-1.0.1/Data/RangeMin/Internal/Combinators.hs:6:{-# RULES
./rangemin-1.0.1/Data/RangeMin/Internal/HandyList.hs:73:{-# RULES
./rangemin-1.0.2/Data/RangeMin/Internal/Combinators.hs:7:{-# RULES
./rangemin-1.0.2/Data/RangeMin/Internal/HandyList.hs:85:{-# RULES
./rangemin-1.0.3/Data/RangeMin/Internal/Combinators.hs:7:{-# RULES
./rangemin-1.0.3/Data/RangeMin/Internal/HandyList.hs:85:{-# RULES
./rangemin-1.0.4/Data/RangeMin/Internal/Combinators.hs:7:{-# RULES
./rangemin-1.0.4/Data/RangeMin/Internal/HandyList.hs:99:{-# RULES
./rangemin-1.0.5/Data/RangeMin/Internal/Combinators.hs:7:{-# RULES
./rangemin-1.0.5/Data/RangeMin/Internal/HandyList.hs:100:{-# RULES
./rangemin-1.0.6/Data/RangeMin/Internal/Combinators.hs:7:{-# RULES
./rangemin-1.0.6/Data/RangeMin/Internal/HandyList.hs:106:{-# RULES
./rangemin-1.0.6/Data/RangeMin.hs:320:{-# RULES
./rangemin-1.1.0/Data/RangeMin/Internal/Combinators.hs:7:{-# RULES
./rangemin-1.1.0/Data/RangeMin/Internal/HandyList.hs:147:{-# RULES
./rangemin-1.1.0/Data/RangeMin.hs:398:{-# RULES
./rangemin-1.1.1/Data/RangeMin/Internal/Combinators.hs:7:{-# RULES
./rangemin-1.1.1/Data/RangeMin/Internal/HandyList.hs:147:{-# RULES
./rangemin-1.1.1/Data/RangeMin.hs:398:{-# RULES
./rangemin-1.1.2/Data/RangeMin/Internal/Combinators.hs:7:{-# RULES
./rangemin-1.1.2/Data/RangeMin/Internal/HandyArray.hs:204:{-# RULES
./rangemin-1.1.2/Data/RangeMin/Internal/HandyList.hs:147:{-# RULES
./rangemin-1.1.2/Data/RangeMin.hs:398:{-# RULES
./rangemin-2.1.0/Data/RangeMin.hs:95:{-# RULES
./rangemin-2.1.1/Data/RangeMin/Cartesian.hs:106:{-# RULES
./rangemin-2.1.1/Data/RangeMin.hs:97:{-# RULES
./rangemin-2.1.2/Data/RangeMin/Cartesian.hs:106:{-# RULES
./rangemin-2.1.2/Data/RangeMin.hs:97:{-# RULES
./rangemin-2.1.3/Data/RangeMin/Cartesian.hs:96:{-# RULES
./rangemin-2.1.3/Data/RangeMin/Fusion.hs:168:{-# RULES
./rangemin-2.1.3/Data/RangeMin.hs:97:{-# RULES
./rangemin-2.1.4/Data/RangeMin/Cartesian.hs:94:{-# RULES
./rangemin-2.1.4/Data/RangeMin/Fusion.hs:185:{-# RULES
./rangemin-2.1.4/Data/RangeMin.hs:97:{-# RULES
./rangemin-2.1.5/Data/RangeMin/Cartesian.hs:94:{-# RULES
./rangemin-2.1.5/Data/RangeMin/Fusion.hs:185:{-# RULES
./rangemin-2.1.5/Data/RangeMin.hs:97:{-# RULES
./rangemin-2.2.0/Data/RangeMin/Cartesian/Spec.hs:82:{-# RULES						\
./rangemin-2.2.0/Data/RangeMin/Cartesian/Spec.hs:91:{-# RULES
./rangemin-2.2.0/Data/RangeMin/Fusion.hs:203:{-# RULES
./rangemin-2.2.1/Data/RangeMin/Cartesian/Spec.hs:82:{-# RULES						\
./rangemin-2.2.1/Data/RangeMin/Cartesian/Spec.hs:91:{-# RULES
./rangemin-2.2.1/Data/RangeMin/Fusion.hs:203:{-# RULES
./rangemin-2.2.2/Data/RangeMin/Cartesian/Spec.hs:62:{-# RULES						\
./rangemin-2.2.2/Data/RangeMin/Cartesian/Spec.hs:81:{-# RULES
./rangemin-2.2.2/Data/RangeMin/Fusion.hs:161:{-# RULES
./Rasterific-0.4/src/Graphics/Rasterific/Transformations.hs:114:{-# RULES
./Rasterific-0.4/src/Graphics/Rasterific/Transformations.hs:131:{-# RULES
./Rasterific-0.4.1/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.4.1/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.4.2/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.4.2/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.5/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.5/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.5.0.1/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.5.0.1/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.5.0.2/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.5.0.2/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.5.0.3/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.5.0.3/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.5.1/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.5.1/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.5.2/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.5.2/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.5.2.1/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.5.2.1/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.6/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.6/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./Rasterific-0.6.1/src/Graphics/Rasterific/Transformations.hs:118:{-# RULES
./Rasterific-0.6.1/src/Graphics/Rasterific/Transformations.hs:135:{-# RULES
./reducers-0.1/Data/Semigroup/Applicative.hs:48:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1/Data/Semigroup/Applicative.hs:49:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.1.1/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1.1/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1.1/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1.1/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1.1/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1.1/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.1.2/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1.2/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1.2/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1.2/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1.2/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1.2/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.1.3/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1.3/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1.3/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1.3/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1.3/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1.3/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.1.4/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1.4/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1.4/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1.4/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1.4/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1.4/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.1.5/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1.5/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1.5/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1.5/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1.5/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1.5/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.1.6/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1.6/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1.6/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1.6/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1.6/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1.6/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.1.7/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1.7/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1.7/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1.7/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1.7/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1.7/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.1.8/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1.8/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1.8/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1.8/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1.8/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1.8/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.1.9/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.1.9/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.1.9/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.1.9/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.1.9/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.1.9/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.2/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.2/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.2/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.2/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.2/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.2/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.3/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.3/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.3/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.3/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.3/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.3/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-0.3.0.1/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-0.3.0.1/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-0.3.0.1/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-0.3.0.1/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-0.3.0.1/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-0.3.0.1/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.0/src/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.0/src/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.0/src/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.0/src/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.0/src/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-3.0/src/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.0.0.1/src/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.0.0.1/src/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.0.0.1/src/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.0.0.1/src/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.0.0.1/src/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-3.0.0.1/src/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.0.0.2/src/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.0.0.2/src/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.0.0.2/src/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.0.0.2/src/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.0.0.2/src/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-3.0.0.2/src/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.0.1/src/Data/Semigroup/Applicative.hs:47:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.0.1/src/Data/Semigroup/Applicative.hs:48:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.0.1/src/Data/Semigroup/Apply.hs:43:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.0.1/src/Data/Semigroup/Apply.hs:44:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.0.1/src/Data/Semigroup/Monad.hs:47:{-# RULES "unitAction" unit = Action #-}
./reducers-3.0.1/src/Data/Semigroup/Monad.hs:48:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.0.2/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.0.2/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.0.2/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.0.2/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.0.2/src/Data/Semigroup/Monad.hs:51:{-# RULES "unitAction" unit = Action #-}
./reducers-3.0.2/src/Data/Semigroup/Monad.hs:52:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.0.2.1/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.0.2.1/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.0.2.1/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.0.2.1/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.0.2.1/src/Data/Semigroup/Monad.hs:51:{-# RULES "unitAction" unit = Action #-}
./reducers-3.0.2.1/src/Data/Semigroup/Monad.hs:52:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.10/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.10/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.10/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.10/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.10/src/Data/Semigroup/Monad.hs:51:{-# RULES "unitAction" unit = Action #-}
./reducers-3.10/src/Data/Semigroup/Monad.hs:52:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.10.1/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.10.1/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.10.1/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.10.1/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.10.1/src/Data/Semigroup/Monad.hs:51:{-# RULES "unitAction" unit = Action #-}
./reducers-3.10.1/src/Data/Semigroup/Monad.hs:52:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.10.1.1/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.10.1.1/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.10.1.1/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.10.1.1/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.10.1.1/src/Data/Semigroup/Monad.hs:51:{-# RULES "unitAction" unit = Action #-}
./reducers-3.10.1.1/src/Data/Semigroup/Monad.hs:52:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.10.2/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.10.2/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.10.2/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.10.2/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.10.2/src/Data/Semigroup/Monad.hs:52:{-# RULES "unitAction" unit = Action #-}
./reducers-3.10.2/src/Data/Semigroup/Monad.hs:53:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.10.2.1/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.10.2.1/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.10.2.1/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.10.2.1/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.10.2.1/src/Data/Semigroup/Monad.hs:52:{-# RULES "unitAction" unit = Action #-}
./reducers-3.10.2.1/src/Data/Semigroup/Monad.hs:53:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.10.3/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.10.3/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.10.3/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.10.3/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.10.3/src/Data/Semigroup/Monad.hs:52:{-# RULES "unitAction" unit = Action #-}
./reducers-3.10.3/src/Data/Semigroup/Monad.hs:53:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.10.3.1/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.10.3.1/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.10.3.1/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.10.3.1/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.10.3.1/src/Data/Semigroup/Monad.hs:52:{-# RULES "unitAction" unit = Action #-}
./reducers-3.10.3.1/src/Data/Semigroup/Monad.hs:53:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.10.3.2/src/Data/Semigroup/Applicative.hs:51:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.10.3.2/src/Data/Semigroup/Applicative.hs:52:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.10.3.2/src/Data/Semigroup/Apply.hs:47:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.10.3.2/src/Data/Semigroup/Apply.hs:48:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.10.3.2/src/Data/Semigroup/Monad.hs:52:{-# RULES "unitAction" unit = Action #-}
./reducers-3.10.3.2/src/Data/Semigroup/Monad.hs:53:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.11/src/Data/Semigroup/Applicative.hs:53:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.11/src/Data/Semigroup/Applicative.hs:54:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.11/src/Data/Semigroup/Apply.hs:49:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.11/src/Data/Semigroup/Apply.hs:50:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.11/src/Data/Semigroup/Monad.hs:54:{-# RULES "unitAction" unit = Action #-}
./reducers-3.11/src/Data/Semigroup/Monad.hs:55:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.12/src/Data/Semigroup/Applicative.hs:53:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.12/src/Data/Semigroup/Applicative.hs:54:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.12/src/Data/Semigroup/Apply.hs:49:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.12/src/Data/Semigroup/Apply.hs:50:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.12/src/Data/Semigroup/Monad.hs:54:{-# RULES "unitAction" unit = Action #-}
./reducers-3.12/src/Data/Semigroup/Monad.hs:55:{-# RULES "snocAction" snoc = snocAction #-}
./reducers-3.12.1/src/Data/Semigroup/Applicative.hs:53:{-# RULES "unitTraversal" unit = Traversal #-}
./reducers-3.12.1/src/Data/Semigroup/Applicative.hs:54:{-# RULES "snocTraversal" snoc = snocTraversal #-}
./reducers-3.12.1/src/Data/Semigroup/Apply.hs:49:{-# RULES "unitTrav" unit = Trav #-}
./reducers-3.12.1/src/Data/Semigroup/Apply.hs:50:{-# RULES "snocTrav" snoc = snocTrav #-}
./reducers-3.12.1/src/Data/Semigroup/Monad.hs:54:{-# RULES "unitAction" unit = Action #-}
./reducers-3.12.1/src/Data/Semigroup/Monad.hs:55:{-# RULES "snocAction" snoc = snocAction #-}
./reflex-0.0.1/src/Reflex/Spider/Internal.hs:421:{-# RULES "push/push" forall f g e. push f (push g e) = push (maybe (return Nothing) f <=< g) e #-}
./reflex-0.0.1/src/Reflex/Spider/Internal.hs:429:{-# RULES "pull/pull" forall a. pull (readBehaviorTracked (pull a)) = pull a #-}
./reflex-0.0.1/src/Reflex/Spider/Internal.hs:437:{-# RULES "switch/constB" forall e. switch (BehaviorConst e) = e #-}
./reflex-0.1.0/src/Reflex/Spider/Internal.hs:419:{-# RULES "push/push" forall f g e. push f (push g e) = push (maybe (return Nothing) f <=< g) e #-}
./reflex-0.1.0/src/Reflex/Spider/Internal.hs:427:{-# RULES "pull/pull" forall a. pull (readBehaviorTracked (pull a)) = pull a #-}
./reflex-0.1.0/src/Reflex/Spider/Internal.hs:435:{-# RULES "switch/constB" forall e. switch (BehaviorConst e) = e #-}
./reflex-0.1.1/src/Reflex/Spider/Internal.hs:419:{-# RULES "push/push" forall f g e. push f (push g e) = push (maybe (return Nothing) f <=< g) e #-}
./reflex-0.1.1/src/Reflex/Spider/Internal.hs:427:{-# RULES "pull/pull" forall a. pull (readBehaviorTracked (pull a)) = pull a #-}
./reflex-0.1.1/src/Reflex/Spider/Internal.hs:435:{-# RULES "switch/constB" forall e. switch (BehaviorConst e) = e #-}
./reflex-0.2/src/Reflex/Spider/Internal.hs:474:{-# RULES "push/push" forall f g e. push f (push g e) = push (maybe (return Nothing) f <=< g) e #-}
./reflex-0.2/src/Reflex/Spider/Internal.hs:482:{-# RULES "pull/pull" forall a. pull (readBehaviorTracked (pull a)) = pull a #-}
./reflex-0.2/src/Reflex/Spider/Internal.hs:490:{-# RULES "switch/constB" forall e. switch (BehaviorConst e) = e #-}
./reflex-0.3/src/Reflex/Spider/Internal.hs:480:{-# RULES "push/push" forall f g e. push f (push g e) = push (maybe (return Nothing) f <=< g) e #-}
./reflex-0.3/src/Reflex/Spider/Internal.hs:488:{-# RULES "pull/pull" forall a. pull (readBehaviorTracked (pull a)) = pull a #-}
./reflex-0.3/src/Reflex/Spider/Internal.hs:496:{-# RULES "switch/constB" forall e. switch (BehaviorConst e) = e #-}
./reflex-0.3.1/src/Reflex/Spider/Internal.hs:480:{-# RULES "push/push" forall f g e. push f (push g e) = push (maybe (return Nothing) f <=< g) e #-}
./reflex-0.3.1/src/Reflex/Spider/Internal.hs:488:{-# RULES "pull/pull" forall a. pull (readBehaviorTracked (pull a)) = pull a #-}
./reflex-0.3.1/src/Reflex/Spider/Internal.hs:496:{-# RULES "switch/constB" forall e. switch (BehaviorConst e) = e #-}
./reflex-0.3.2/src/Reflex/Spider/Internal.hs:480:{-# RULES "push/push" forall f g e. push f (push g e) = push (maybe (return Nothing) f <=< g) e #-}
./reflex-0.3.2/src/Reflex/Spider/Internal.hs:488:{-# RULES "pull/pull" forall a. pull (readBehaviorTracked (pull a)) = pull a #-}
./reflex-0.3.2/src/Reflex/Spider/Internal.hs:496:{-# RULES "switch/constB" forall e. switch (BehaviorConst e) = e #-}
./reflex-0.4.0/src/Reflex/Spider/Internal.hs:481:{-# RULES "push/push" forall f g e. push f (push g e) = push (maybe (return Nothing) f <=< g) e #-}
./reflex-0.4.0/src/Reflex/Spider/Internal.hs:489:{-# RULES "pull/pull" forall a. pull (readBehaviorTracked (pull a)) = pull a #-}
./reflex-0.4.0/src/Reflex/Spider/Internal.hs:497:{-# RULES "switch/constB" forall e. switch (BehaviorConst e) = e #-}
./repa-3.0.0.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.0.0.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.0.0.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.1.0.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.1.0.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.1.0.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.1.1.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.1.1.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.1.1.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.1.2.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.1.2.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.1.2.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.1.3.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.1.3.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.1.3.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.1.3.2/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.1.3.2/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.1.3.2/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.1.3.3/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.1.3.3/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.1.3.3/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.1.4.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.1.4.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.1.4.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.1.4.2/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.1.4.2/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.1.4.2/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.2.1.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.2.1.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.2.1.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.2.2.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.2.2.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.2.2.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.2.2.2/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.2.2.2/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.2.2.2/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.2.2.201204.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.2.2.201204.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.2.2.201204.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.2.2.3/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.2.2.3/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.2.2.3/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.2.3.1/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.2.3.1/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.2.3.1/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.2.3.2/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.2.3.2/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.2.3.2/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.2.3.3/Data/Array/Repa/Eval/Reduction.hs:221:{-# RULES "reduceInt" 
./repa-3.2.3.3/Data/Array/Repa/Eval/Reduction.hs:233:{-# RULES "reduceFloat" 
./repa-3.2.3.3/Data/Array/Repa/Eval/Reduction.hs:245:{-# RULES "reduceDouble" 
./repa-3.2.5.1/Data/Array/Repa/Eval/Reduction.hs:225:{-# RULES "reduceInt" 
./repa-3.2.5.1/Data/Array/Repa/Eval/Reduction.hs:237:{-# RULES "reduceFloat" 
./repa-3.2.5.1/Data/Array/Repa/Eval/Reduction.hs:249:{-# RULES "reduceDouble" 
./repa-3.3.1.1/Data/Array/Repa/Eval/Reduction.hs:225:{-# RULES "reduceInt" 
./repa-3.3.1.1/Data/Array/Repa/Eval/Reduction.hs:237:{-# RULES "reduceFloat" 
./repa-3.3.1.1/Data/Array/Repa/Eval/Reduction.hs:249:{-# RULES "reduceDouble" 
./repa-3.3.1.2/Data/Array/Repa/Eval/Reduction.hs:225:{-# RULES "reduceInt" 
./repa-3.3.1.2/Data/Array/Repa/Eval/Reduction.hs:237:{-# RULES "reduceFloat" 
./repa-3.3.1.2/Data/Array/Repa/Eval/Reduction.hs:249:{-# RULES "reduceDouble" 
./repa-3.4.0.1/Data/Array/Repa/Eval/Reduction.hs:225:{-# RULES "reduceInt" 
./repa-3.4.0.1/Data/Array/Repa/Eval/Reduction.hs:237:{-# RULES "reduceFloat" 
./repa-3.4.0.1/Data/Array/Repa/Eval/Reduction.hs:249:{-# RULES "reduceDouble" 
./repa-3.4.0.2/Data/Array/Repa/Eval/Reduction.hs:225:{-# RULES "reduceInt" 
./repa-3.4.0.2/Data/Array/Repa/Eval/Reduction.hs:237:{-# RULES "reduceFloat" 
./repa-3.4.0.2/Data/Array/Repa/Eval/Reduction.hs:249:{-# RULES "reduceDouble" 
./repa-eval-4.0.0.1/Data/Repa/Eval/Generic/Seq/Reduction.hs:132:{-# RULES "foldRangeInt" 
./repa-eval-4.0.0.1/Data/Repa/Eval/Generic/Seq/Reduction.hs:144:{-# RULES "foldRangeFloat" 
./repa-eval-4.0.0.1/Data/Repa/Eval/Generic/Seq/Reduction.hs:156:{-# RULES "foldRangeDouble" 
./representable-functors-0.1.0/Data/Functor/Representable.hs:66:{-# RULES
./representable-functors-0.1.0.1/Data/Functor/Representable.hs:66:{-# RULES
./representable-functors-0.1.0.2/Data/Functor/Representable.hs:66:{-# RULES
./representable-functors-0.2.0/Data/Functor/Representable.hs:66:{-# RULES
./representable-functors-0.3.0/Data/Functor/Corepresentable.hs:58:{-# RULES
./representable-functors-0.3.0/Data/Functor/Representable.hs:67:{-# RULES
./representable-functors-0.3.0.1/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-0.3.0.1/Data/Functor/Representable.hs:67:{-# RULES
./representable-functors-0.3.0.2/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-0.3.0.2/Data/Functor/Representable.hs:67:{-# RULES
./representable-functors-0.3.0.3/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-0.3.0.3/Data/Functor/Representable.hs:67:{-# RULES
./representable-functors-0.4.0/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-0.4.0/Data/Functor/Representable.hs:70:{-# RULES
./representable-functors-0.4.1/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-0.4.1/Data/Functor/Representable.hs:70:{-# RULES
./representable-functors-0.4.2/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-0.4.2/Data/Functor/Representable.hs:70:{-# RULES
./representable-functors-0.4.3/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-0.4.3/Data/Functor/Representable.hs:70:{-# RULES
./representable-functors-0.4.4/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-0.4.4/Data/Functor/Representable.hs:70:{-# RULES
./representable-functors-0.5.0/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-0.5.0/Data/Functor/Representable.hs:70:{-# RULES
./representable-functors-1.8.0/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-1.8.0/Data/Functor/Representable.hs:70:{-# RULES
./representable-functors-2.0/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.0/Data/Functor/Representable.hs:73:{-# RULES
./representable-functors-2.0.0.1/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.0.0.1/Data/Functor/Representable.hs:73:{-# RULES
./representable-functors-2.0.0.3/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.0.0.3/Data/Functor/Representable.hs:73:{-# RULES
./representable-functors-2.0.0.4/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.0.0.4/Data/Functor/Representable.hs:73:{-# RULES
./representable-functors-2.0.0.5/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.0.0.5/Data/Functor/Representable.hs:73:{-# RULES
./representable-functors-2.0.1/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.0.1/Data/Functor/Representable.hs:74:{-# RULES
./representable-functors-2.0.2/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.0.2/Data/Functor/Representable.hs:73:{-# RULES
./representable-functors-2.1/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.1/Data/Functor/Representable.hs:75:{-# RULES
./representable-functors-2.1.2/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.1.2/Data/Functor/Representable.hs:75:{-# RULES
./representable-functors-2.2/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.2/Data/Functor/Representable.hs:75:{-# RULES
./representable-functors-2.2.1/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.2.1/Data/Functor/Representable.hs:75:{-# RULES
./representable-functors-2.2.1.1/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.2.1.1/Data/Functor/Representable.hs:75:{-# RULES
./representable-functors-2.4/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.4/Data/Functor/Representable.hs:86:{-# RULES
./representable-functors-2.4.0.1/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.4.0.1/Data/Functor/Representable.hs:86:{-# RULES
./representable-functors-2.4.0.2/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.4.0.2/Data/Functor/Representable.hs:86:{-# RULES
./representable-functors-2.5/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-2.5/Data/Functor/Representable.hs:86:{-# RULES
./representable-functors-3.0/src/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-3.0/src/Data/Functor/Representable.hs:86:{-# RULES
./representable-functors-3.0.0.1/src/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-3.0.0.1/src/Data/Functor/Representable.hs:86:{-# RULES
./representable-functors-3.0.0.2/src/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-3.0.0.2/src/Data/Functor/Representable.hs:86:{-# RULES
./representable-functors-3.0.0.3/src/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-3.0.0.3/src/Data/Functor/Representable.hs:86:{-# RULES
./representable-functors-3.0.1/src/Data/Functor/Corepresentable.hs:59:{-# RULES
./representable-functors-3.0.1/src/Data/Functor/Representable.hs:86:{-# RULES
./representable-functors-3.1/src/Data/Functor/Contravariant/Representable.hs:51:{-# RULES
./representable-functors-3.1/src/Data/Functor/Representable.hs:85:{-# RULES
./representable-functors-3.2.0.1/src/Data/Functor/Contravariant/Representable.hs:68:{-# RULES
./representable-functors-3.2.0.1/src/Data/Functor/Representable.hs:85:{-# RULES
./representable-functors-3.2.0.2/src/Data/Functor/Contravariant/Representable.hs:68:{-# RULES
./representable-functors-3.2.0.2/src/Data/Functor/Representable.hs:85:{-# RULES
./representable-tries-0.2.1/Data/Functor/Representable/Trie.hs:67:{-# RULES
./representable-tries-0.2.2/Data/Functor/Representable/Trie.hs:65:{-# RULES
./representable-tries-0.2.3/Data/Functor/Representable/Trie.hs:67:{-# RULES
./representable-tries-0.2.3.1/Data/Functor/Representable/Trie.hs:67:{-# RULES
./representable-tries-0.3/Data/Functor/Representable/Trie.hs:90:{-# RULES
./representable-tries-0.3.1/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-0.3.1.1/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-0.3.1.2/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-0.3.2/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-0.3.4/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-0.3.6/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-0.3.7/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-0.5.0/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-0.5.0.1/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-1.8.0/Data/Functor/Representable/Trie.hs:91:{-# RULES
./representable-tries-1.8.1/Data/Functor/Representable/Trie.hs:93:{-# RULES
./representable-tries-2.0/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.0.0.1/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.0.0.2/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.0.1.1/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.0.1.2/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.0.2/Data/Functor/Representable/Trie.hs:88:{-# RULES
./representable-tries-2.0.3/Data/Functor/Representable/Trie.hs:88:{-# RULES
./representable-tries-2.0.4/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.0.5/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.2/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.2.1/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.4/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.4.0.1/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.4.0.2/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-2.5/Data/Functor/Representable/Trie.hs:87:{-# RULES
./representable-tries-3.0/src/Data/Functor/Representable/Trie.hs:88:{-# RULES
./representable-tries-3.0.1/src/Data/Functor/Representable/Trie.hs:88:{-# RULES
./representable-tries-3.0.1.1/src/Data/Functor/Representable/Trie.hs:88:{-# RULES
./representable-tries-3.0.2/src/Data/Functor/Representable/Trie.hs:88:{-# RULES
./rsagl-0.4.0.0/RSAGL/Types.hs:28:{-# RULES
./rsagl-0.4.0.1/RSAGL/Types.hs:28:{-# RULES
./rsagl-0.4.0.2/RSAGL/Types.hs:28:{-# RULES
./rsagl-0.4.0.3/RSAGL/Types.hs:28:{-# RULES
./rsagl-0.6.0.0/RSAGL/Color/ColorSpace.hs:289:{-# RULES
./rsagl-0.6.0.1/RSAGL/Color/ColorSpace.hs:289:{-# RULES
./rsagl-math-0.6.0.0/RSAGL/Math/Types.hs:57:{-# RULES
./rsagl-math-0.6.0.1/RSAGL/Math/Types.hs:57:{-# RULES
./safeint-0.5/src/Data/SafeInt.hs:110:{-# RULES
./safeint-0.5/src/Data/SafeInt.hs:133:{-# RULES
./safeint-0.5/src/Data/SafeInt.hs:282:{-# RULES
./safeint-0.5/src/Data/SafeInt.hs:303:{-# RULES
./safeint-0.5/src/Data/SafeInt.hs:308:{-# RULES
./safeint-0.5/src/Data/SafeInt.hs:318:{-# RULES
./safeint-0.5.2/src/Data/SafeInt.hs:110:{-# RULES
./safeint-0.5.2/src/Data/SafeInt.hs:133:{-# RULES
./safeint-0.5.2/src/Data/SafeInt.hs:282:{-# RULES
./safeint-0.5.2/src/Data/SafeInt.hs:303:{-# RULES
./safeint-0.5.2/src/Data/SafeInt.hs:308:{-# RULES
./safeint-0.5.2/src/Data/SafeInt.hs:318:{-# RULES
./safeint-0.5.3/src/Data/SafeInt.hs:110:{-# RULES
./safeint-0.5.3/src/Data/SafeInt.hs:133:{-# RULES
./safeint-0.5.3/src/Data/SafeInt.hs:282:{-# RULES
./safeint-0.5.3/src/Data/SafeInt.hs:303:{-# RULES
./safeint-0.5.3/src/Data/SafeInt.hs:308:{-# RULES
./safeint-0.5.3/src/Data/SafeInt.hs:318:{-# RULES
./safeint-0.6/src/Data/SafeInt.hs:133:{-# RULES
./safeint-0.6/src/Data/SafeInt.hs:157:{-# RULES
./safeint-0.6/src/Data/SafeInt.hs:307:{-# RULES
./safeint-0.6/src/Data/SafeInt.hs:328:{-# RULES
./safeint-0.6/src/Data/SafeInt.hs:333:{-# RULES
./safeint-0.6/src/Data/SafeInt.hs:343:{-# RULES
./samtools-0.1/src/C2HS.hs:197:{-# RULES 
./samtools-0.1.1/src/C2HS.hs:197:{-# RULES 
./samtools-0.1.2/src/C2HS.hs:197:{-# RULES 
./samtools-0.1.3/src/C2HS.hs:197:{-# RULES 
./samtools-0.2/src/C2HS.hs:197:{-# RULES 
./samtools-0.2.0.1/src/C2HS.hs:199:{-# RULES 
./samtools-0.2.1/src/C2HS.hs:199:{-# RULES 
./sci-ratio-0.2.0.0/src/Data/SciRatio.hs:182:{-# RULES "realToFrac/fromSciRational"
./sci-ratio-0.2.0.0/src/Data/SciRatio.hs:193:{-# RULES "(^^)/SciRational" forall (x :: SciRational) . (^^) x = (^^!) x #-}
./sci-ratio-0.2.0.0/src/Data/SciRatio.hs:199:{-# RULES "(^)/SciRational" forall (x :: SciRational) . (^) x = (^!) x #-}
./sci-ratio-0.2.0.1/src/Data/SciRatio.hs:190:{-# RULES "realToFrac/fromSciRational"
./sci-ratio-0.2.0.1/src/Data/SciRatio.hs:201:{-# RULES "(^^)/SciRational" forall (x :: SciRational) . (^^) x = (^^!) x #-}
./sci-ratio-0.2.0.1/src/Data/SciRatio.hs:207:{-# RULES "(^)/SciRational" forall (x :: SciRational) . (^) x = (^!) x #-}
./sci-ratio-0.2.1.0/src/Data/SciRatio.hs:186:{-# RULES "realToFrac/fromSciRational"
./sci-ratio-0.2.1.0/src/Data/SciRatio.hs:197:{-# RULES "(^^)/SciRational" forall (x :: SciRational) . (^^) x = (^^!) x #-}
./sci-ratio-0.2.1.0/src/Data/SciRatio.hs:203:{-# RULES "(^)/SciRational" forall (x :: SciRational) . (^) x = (^!) x #-}
./scientific-0.0.0.0/src/Data/Scientific.hs:273:{-# RULES
./scientific-0.0.0.0/src/Data/Scientific.hs:278:-- Note that this module provides rewrite RULES that convert
./scientific-0.0.0.0/src/Data/Scientific.hs:285:-- RULES this function can be used.
./scientific-0.0.0.0/src/Data/Scientific.hs:290:{-# RULES
./scientific-0.0.0.0/src/Data/Scientific.hs:299:-- Note that this module provides rewrite RULES that convert
./scientific-0.0.0.0/src/Data/Scientific.hs:306:-- RULES this function can be used.
./scientific-0.0.0.0/src/Data/Scientific.hs:325:{-# RULES
./scientific-0.0.0.1/src/Data/Scientific.hs:273:{-# RULES
./scientific-0.0.0.1/src/Data/Scientific.hs:278:-- Note that this module provides rewrite RULES that convert
./scientific-0.0.0.1/src/Data/Scientific.hs:285:-- RULES this function can be used.
./scientific-0.0.0.1/src/Data/Scientific.hs:290:{-# RULES
./scientific-0.0.0.1/src/Data/Scientific.hs:299:-- Note that this module provides rewrite RULES that convert
./scientific-0.0.0.1/src/Data/Scientific.hs:306:-- RULES this function can be used.
./scientific-0.0.0.1/src/Data/Scientific.hs:325:{-# RULES
./scientific-0.0.0.2/src/Data/Scientific.hs:279:{-# RULES
./scientific-0.0.0.2/src/Data/Scientific.hs:284:-- Note that this module provides rewrite RULES that convert
./scientific-0.0.0.2/src/Data/Scientific.hs:291:-- RULES this function can be used.
./scientific-0.0.0.2/src/Data/Scientific.hs:296:{-# RULES
./scientific-0.0.0.2/src/Data/Scientific.hs:305:-- Note that this module provides rewrite RULES that convert
./scientific-0.0.0.2/src/Data/Scientific.hs:312:-- RULES this function can be used.
./scientific-0.0.0.2/src/Data/Scientific.hs:331:{-# RULES
./scientific-0.3.0.0/src/Data/Scientific.hs:203:{-# RULES
./scientific-0.3.0.0/src/Data/Scientific.hs:207:{-# RULES
./scientific-0.3.0.1/src/Data/Scientific.hs:203:{-# RULES
./scientific-0.3.0.1/src/Data/Scientific.hs:207:{-# RULES
./scientific-0.3.0.2/src/Data/Scientific.hs:203:{-# RULES
./scientific-0.3.0.2/src/Data/Scientific.hs:207:{-# RULES
./scientific-0.3.1.0/src/Data/Scientific.hs:206:{-# RULES
./scientific-0.3.1.0/src/Data/Scientific.hs:210:{-# RULES
./scientific-0.3.2.0/src/Data/Scientific.hs:211:{-# RULES
./scientific-0.3.2.0/src/Data/Scientific.hs:215:{-# RULES
./scientific-0.3.2.1/src/Data/Scientific.hs:211:{-# RULES
./scientific-0.3.2.1/src/Data/Scientific.hs:215:{-# RULES
./scientific-0.3.2.2/src/Data/Scientific.hs:211:{-# RULES
./scientific-0.3.2.2/src/Data/Scientific.hs:215:{-# RULES
./scientific-0.3.3.0/src/Data/Scientific.hs:223:{-# RULES
./scientific-0.3.3.0/src/Data/Scientific.hs:227:{-# RULES
./scientific-0.3.3.1/src/Data/Scientific.hs:223:{-# RULES
./scientific-0.3.3.1/src/Data/Scientific.hs:227:{-# RULES
./scientific-0.3.3.2/src/Data/Scientific.hs:223:{-# RULES
./scientific-0.3.3.2/src/Data/Scientific.hs:227:{-# RULES
./scientific-0.3.3.3/src/Data/Scientific.hs:224:{-# RULES
./scientific-0.3.3.3/src/Data/Scientific.hs:228:{-# RULES
./scientific-0.3.3.4/src/Data/Scientific.hs:224:{-# RULES
./scientific-0.3.3.4/src/Data/Scientific.hs:228:{-# RULES
./scientific-0.3.3.5/src/Data/Scientific.hs:224:{-# RULES
./scientific-0.3.3.5/src/Data/Scientific.hs:228:{-# RULES
./scientific-0.3.3.6/src/Data/Scientific.hs:224:{-# RULES
./scientific-0.3.3.6/src/Data/Scientific.hs:228:{-# RULES
./scientific-0.3.3.7/src/Data/Scientific.hs:225:{-# RULES
./scientific-0.3.3.7/src/Data/Scientific.hs:229:{-# RULES
./scientific-0.3.3.8/src/Data/Scientific.hs:225:{-# RULES
./scientific-0.3.3.8/src/Data/Scientific.hs:229:{-# RULES
./scientific-0.3.4.0/src/Data/Scientific.hs:258:{-# RULES
./scientific-0.3.4.0/src/Data/Scientific.hs:262:{-# RULES
./scientific-0.3.4.1/src/Data/Scientific.hs:264:{-# RULES
./scientific-0.3.4.1/src/Data/Scientific.hs:268:{-# RULES
./scientific-0.3.4.2/src/Data/Scientific.hs:260:{-# RULES
./scientific-0.3.4.2/src/Data/Scientific.hs:264:{-# RULES
./scientific-0.3.4.3/src/Data/Scientific.hs:254:{-# RULES
./scientific-0.3.4.3/src/Data/Scientific.hs:258:{-# RULES
./scientific-0.3.4.4/src/Data/Scientific.hs:254:{-# RULES
./scientific-0.3.4.4/src/Data/Scientific.hs:258:{-# RULES
./scion-0.1/server/Scion/Server/Commands.hs:416:    , "INLINE", "NOINLINE", "RULES", "SPECIALIZE", "UNPACK", "SOURCE"
./scion-0.1.0.1/server/Scion/Server/Commands.hs:416:    , "INLINE", "NOINLINE", "RULES", "SPECIALIZE", "UNPACK", "SOURCE"
./scion-0.1.0.2/server/Scion/Server/Commands.hs:416:    , "INLINE", "NOINLINE", "RULES", "SPECIALIZE", "UNPACK", "SOURCE"
./sequent-core-0.5/src/Language/SequentCore/Subst.hs:371:       -- Reason: substitution applies to the LHS of RULES, and
./sequent-core-0.5.0.1/src/Language/SequentCore/Subst.hs:371:       -- Reason: substitution applies to the LHS of RULES, and
./shake-0.0/Development/Shake/Core.hs:45:-- RULES
./shake-0.1/Development/Shake/Core.hs:47:-- RULES
./shake-0.1.1/Development/Shake/Core.hs:47:-- RULES
./shake-0.1.2/Development/Shake/Core.hs:47:-- RULES
./shake-0.1.3/Development/Shake/Core.hs:63:-- RULES
./shake-0.1.4/Development/Shake/Core.hs:69:-- RULES
./shake-0.1.5/Development/Shake/Core.hs:70:-- RULES
./shake-0.10/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10/Development/Shake/Core.hs:49:-- RULES
./shake-0.10.1/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.1/Development/Shake/Core.hs:49:-- RULES
./shake-0.10.10/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.10/Development/Shake/Core.hs:53:-- RULES
./shake-0.10.2/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.2/Development/Shake/Core.hs:50:-- RULES
./shake-0.10.3/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.3/Development/Shake/Core.hs:50:-- RULES
./shake-0.10.4/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.4/Development/Shake/Core.hs:51:-- RULES
./shake-0.10.5/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.5/Development/Shake/Core.hs:51:-- RULES
./shake-0.10.6/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.6/Development/Shake/Core.hs:51:-- RULES
./shake-0.10.7/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.7/Development/Shake/Core.hs:53:-- RULES
./shake-0.10.8/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.8/Development/Shake/Core.hs:53:-- RULES
./shake-0.10.9/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.10.9/Development/Shake/Core.hs:53:-- RULES
./shake-0.11/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.11/Development/Shake/Core.hs:56:-- RULES
./shake-0.11.1/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.11.1/Development/Shake/Core.hs:56:-- RULES
./shake-0.11.2/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.11.2/Development/Shake/Core.hs:56:-- RULES
./shake-0.11.3/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.11.3/Development/Shake/Core.hs:56:-- RULES
./shake-0.11.4/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.11.4/Development/Shake/Core.hs:56:-- RULES
./shake-0.11.5/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.11.5/Development/Shake/Core.hs:56:-- RULES
./shake-0.11.6/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.11.6/Development/Shake/Core.hs:56:-- RULES
./shake-0.11.7/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.11.7/Development/Shake/Core.hs:56:-- RULES
./shake-0.12/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.12/Development/Shake/Core.hs:56:-- RULES
./shake-0.13/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.13/Development/Shake/Core.hs:57:-- RULES
./shake-0.13.1/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.13.1/Development/Shake/Core.hs:57:-- RULES
./shake-0.13.2/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.13.2/Development/Shake/Core.hs:57:-- RULES
./shake-0.13.3/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.13.3/Development/Shake/Core.hs:60:-- RULES
./shake-0.13.4/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.13.4/Development/Shake/Core.hs:60:-- RULES
./shake-0.14/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.14/src/Development/Shake/Core.hs:64:-- RULES
./shake-0.14.1/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.14.1/src/Development/Shake/Core.hs:64:-- RULES
./shake-0.14.2/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.14.2/src/Development/Shake/Core.hs:64:-- RULES
./shake-0.14.3/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.14.3/src/Development/Shake/Core.hs:64:-- RULES
./shake-0.15/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.15/src/Development/Shake/Core.hs:65:-- RULES
./shake-0.15.1/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.15.1/src/Development/Shake/Core.hs:65:-- RULES
./shake-0.15.2/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.15.2/src/Development/Shake/Core.hs:65:-- RULES
./shake-0.15.3/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.15.3/src/Development/Shake/Core.hs:65:-- RULES
./shake-0.15.4/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.15.4/src/Development/Shake/Core.hs:65:-- RULES
./shake-0.15.5/src/Development/Make/Rules.hs:22:-- FILE_ RULES
./shake-0.15.5/src/Development/Shake/Core.hs:65:-- RULES
./shake-0.2/Development/Shake/Core.hs:82:-- RULES
./shake-0.2.1/Development/Shake/Core.hs:83:-- RULES
./shake-0.2.10/Development/Shake/Core.hs:85:-- RULES
./shake-0.2.11/Development/Shake/Core.hs:85:-- RULES
./shake-0.2.2/Development/Shake/Core.hs:84:-- RULES
./shake-0.2.3/Development/Shake/Core.hs:84:-- RULES
./shake-0.2.4/Development/Shake/Core.hs:84:-- RULES
./shake-0.2.5/Development/Shake/Core.hs:85:-- RULES
./shake-0.2.6/Development/Shake/Core.hs:85:-- RULES
./shake-0.2.7/Development/Shake/Core.hs:85:-- RULES
./shake-0.2.8/Development/Shake/Core.hs:85:-- RULES
./shake-0.2.9/Development/Shake/Core.hs:85:-- RULES
./shake-0.3/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.1/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.10/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.2/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.3/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.4/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.5/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.6/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.7/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.8/Development/Shake/Core.hs:85:-- RULES
./shake-0.3.9/Development/Shake/Core.hs:85:-- RULES
./shake-0.4/Development/Shake/Core.hs:36:-- RULES
./shake-0.5/Development/Shake/Core.hs:40:-- RULES
./shake-0.6/Development/Shake/Core.hs:42:-- RULES
./shake-0.7/Development/Shake/Core.hs:46:-- RULES
./shake-0.8/Development/Shake/Core.hs:46:-- RULES
./shake-0.9/Development/Shake/Core.hs:49:-- RULES
./shake-0.9.1/Development/Shake/Core.hs:49:-- RULES
./sized-0.1.0.0/Data/Sized.hs:136:{-# RULES
./sized-0.1.0.0/Data/Sized.hs:531:{-# RULES
./sized-0.1.0.0/Data/Sized.hs:551:{-# RULES
./sized-0.1.0.0/Data/Sized.hs:573:{-# RULES
./snaplet-mongoDB-0.2/src/Snap/Snaplet/MongoDB/Parse.hs:260:mapDecl (H.RulePragmaDecl _ _) = error "No support for RULES pragma in Template Haskell"
./sndfile-enumerators-0.10.0.0/src/Sound/Iteratee/Codecs/Common.hs:40:{-# RULES "unroll8" forall n. unroller n = unroll8 #-}
./sndfile-enumerators-0.4.0/src/Sound/Iteratee/Codecs/Common.hs:45:{-# RULES "unroll8" forall n. unroller n = unroll8 #-}
./sndfile-enumerators-0.5.0/src/Sound/Iteratee/Codecs/Common.hs:45:{-# RULES "unroll8" forall n. unroller n = unroll8 #-}
./sndfile-enumerators-0.6.0/src/Sound/Iteratee/Codecs/Common.hs:45:{-# RULES "unroll8" forall n. unroller n = unroll8 #-}
./sndfile-enumerators-0.7.0/src/Sound/Iteratee/Codecs/Common.hs:45:{-# RULES "unroll8" forall n. unroller n = unroll8 #-}
./sndfile-enumerators-0.8.0/src/Sound/Iteratee/Codecs/Common.hs:45:{-# RULES "unroll8" forall n. unroller n = unroll8 #-}
./sndfile-enumerators-0.9.0/src/Sound/Iteratee/Codecs/Common.hs:43:{-# RULES "unroll8" forall n. unroller n = unroll8 #-}
./sndfile-enumerators-0.9.0.1/src/Sound/Iteratee/Codecs/Common.hs:40:{-# RULES "unroll8" forall n. unroller n = unroll8 #-}
./snowball-0.1.0/src/Text/Snowball.hs:64:{-# RULES "map/stem" forall a xs. map (stem a) xs = stems a xs #-}
./snowball-0.1.0.1/src/Text/Snowball.hs:64:{-# RULES "map/stem" forall a xs. map (stem a) xs = stems a xs #-}
./snowball-0.1.0.2/src/Text/Snowball.hs:64:{-# RULES "map/stem" forall a xs. map (stem a) xs = stems a xs #-}
./snowball-1.0.0/src/NLP/Snowball.hs:74:{-# RULES "map/stem" forall a xs. map (stem a) xs = stems a xs #-}
./snowball-1.0.0.1/src/NLP/Snowball.hs:74:{-# RULES "map/stem" forall a xs. map (stem a) xs = stems a xs #-}
./snowglobe-1/SnowGlobe.hs:67:{-# RULES "realToFrac/glDouble" realToFrac = unsafeCoerceGLdouble #-}
./snowglobe-1/SnowGlobe.hs:71:{-# RULES "realToFrac/glFloat" realToFrac = unsafeCoerceGLfloat #-}
./snowglobe-2/SnowGlobe.hs:69:{-# RULES "realToFrac/glDouble" realToFrac = unsafeCoerceGLdouble #-}
./snowglobe-2/SnowGlobe.hs:73:{-# RULES "realToFrac/glFloat" realToFrac = unsafeCoerceGLfloat #-}
./snowglobe-2.0.0.2/SnowGlobe.hs:69:{-# RULES "realToFrac/glDouble" realToFrac = unsafeCoerceGLdouble #-}
./snowglobe-2.0.0.2/SnowGlobe.hs:73:{-# RULES "realToFrac/glFloat" realToFrac = unsafeCoerceGLfloat #-}
./sorted-list-0.1.2.0/Data/SortedList.hs:197:{-# RULES
./sorted-list-0.1.2.1/Data/SortedList.hs:198:{-# RULES
./sorted-list-0.1.3.0/Data/SortedList.hs:205:{-# RULES
./sorted-list-0.1.4.0/Data/SortedList.hs:267:{-# RULES
./sorted-list-0.1.4.0/Data/SortedList.hs:289:{-# RULES
./sorted-list-0.1.4.1/Data/SortedList.hs:267:{-# RULES
./sorted-list-0.1.4.1/Data/SortedList.hs:289:{-# RULES
./sorted-list-0.1.4.2/Data/SortedList.hs:268:{-# RULES
./sorted-list-0.1.4.2/Data/SortedList.hs:290:{-# RULES
./statistics-dirichlet-0.6/src/Math/Statistics/Dirichlet/Matrix.hs:208:{-# RULES
./statistics-dirichlet-0.6.1/src/Math/Statistics/Dirichlet/Matrix.hs:208:{-# RULES
./statistics-dirichlet-0.6.2/src/Math/Statistics/Dirichlet/Matrix.hs:208:{-# RULES
./statistics-dirichlet-0.6.3/src/Math/Statistics/Dirichlet/Matrix.hs:208:{-# RULES
./stepwise-1.0/src/Control/Monad/Stepwise/Core.hs:119:-- {-# RULES  "Pending/Root"   forall r . Pending Root r = r  #-}
./stepwise-1.0/src/Control/Monad/Stepwise/Core.hs:120:-- {-# RULES  "Bind/Final"     forall c t . Cont (Bind Final) TransNone t c = c  #-}
./stepwise-1.0.1/src/Control/Monad/Stepwise/Core.hs:119:-- {-# RULES  "Pending/Root"   forall r . Pending Root r = r  #-}
./stepwise-1.0.1/src/Control/Monad/Stepwise/Core.hs:120:-- {-# RULES  "Bind/Final"     forall c t . Cont (Bind Final) TransNone t c = c  #-}
./stepwise-1.0.2/src/Control/Monad/Stepwise/Core.hs:119:-- {-# RULES  "Pending/Root"   forall r . Pending Root r = r  #-}
./stepwise-1.0.2/src/Control/Monad/Stepwise/Core.hs:120:-- {-# RULES  "Bind/Final"     forall c t . Cont (Bind Final) TransNone t c = c  #-}
./storablevector-0.2/Data/StorableVector/Lazy.hs:664:{-# RULES
./storablevector-0.2/Data/StorableVector/Lazy.hs:883:{-# RULES
./storablevector-0.2.1/Data/StorableVector/Lazy.hs:681:{-# RULES
./storablevector-0.2.1/Data/StorableVector/Lazy.hs:900:{-# RULES
./storablevector-0.2.10/src/Data/StorableVector/Lazy.hs:958:{-# RULES
./storablevector-0.2.10/src/Data/StorableVector/Lazy.hs:1177:{-# RULES
./storablevector-0.2.2/Data/StorableVector/Lazy.hs:710:{-# RULES
./storablevector-0.2.2/Data/StorableVector/Lazy.hs:929:{-# RULES
./storablevector-0.2.3/Data/StorableVector/Lazy.hs:717:{-# RULES
./storablevector-0.2.3/Data/StorableVector/Lazy.hs:936:{-# RULES
./storablevector-0.2.3.1/Data/StorableVector/Lazy.hs:717:{-# RULES
./storablevector-0.2.3.1/Data/StorableVector/Lazy.hs:936:{-# RULES
./storablevector-0.2.4/Data/StorableVector/Lazy.hs:761:{-# RULES
./storablevector-0.2.4/Data/StorableVector/Lazy.hs:980:{-# RULES
./storablevector-0.2.5/Data/StorableVector/Lazy.hs:872:{-# RULES
./storablevector-0.2.5/Data/StorableVector/Lazy.hs:1091:{-# RULES
./storablevector-0.2.6/Data/StorableVector/Lazy.hs:880:{-# RULES
./storablevector-0.2.6/Data/StorableVector/Lazy.hs:1099:{-# RULES
./storablevector-0.2.7/Data/StorableVector/Lazy.hs:889:{-# RULES
./storablevector-0.2.7/Data/StorableVector/Lazy.hs:1108:{-# RULES
./storablevector-0.2.7.1/Data/StorableVector/Lazy.hs:889:{-# RULES
./storablevector-0.2.7.1/Data/StorableVector/Lazy.hs:1108:{-# RULES
./storablevector-0.2.7.2/Data/StorableVector/Lazy.hs:890:{-# RULES
./storablevector-0.2.7.2/Data/StorableVector/Lazy.hs:1109:{-# RULES
./storablevector-0.2.7.3/Data/StorableVector/Lazy.hs:888:{-# RULES
./storablevector-0.2.7.3/Data/StorableVector/Lazy.hs:1107:{-# RULES
./storablevector-0.2.8/Data/StorableVector/Lazy.hs:937:{-# RULES
./storablevector-0.2.8/Data/StorableVector/Lazy.hs:1156:{-# RULES
./storablevector-0.2.8.1/Data/StorableVector/Lazy.hs:937:{-# RULES
./storablevector-0.2.8.1/Data/StorableVector/Lazy.hs:1156:{-# RULES
./storablevector-0.2.8.2/Data/StorableVector/Lazy.hs:942:{-# RULES
./storablevector-0.2.8.2/Data/StorableVector/Lazy.hs:1161:{-# RULES
./storablevector-0.2.8.3/Data/StorableVector/Lazy.hs:942:{-# RULES
./storablevector-0.2.8.3/Data/StorableVector/Lazy.hs:1161:{-# RULES
./storablevector-0.2.9/src/Data/StorableVector/Lazy.hs:954:{-# RULES
./storablevector-0.2.9/src/Data/StorableVector/Lazy.hs:1173:{-# RULES
./storablevector-0.2.9.1/src/Data/StorableVector/Lazy.hs:954:{-# RULES
./storablevector-0.2.9.1/src/Data/StorableVector/Lazy.hs:1173:{-# RULES
./stream-fusion-0.1/Control/Monad/Stream.hs:242:{-# RULES
./stream-fusion-0.1/Control/Monad/Stream.hs:254:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:322:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:357:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:382:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:399:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:413:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:430:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:443:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:463:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:492:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:546:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:584:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:622:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:637:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:654:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:670:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:692:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:708:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:733:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:755:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:772:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:788:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:808:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:825:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:851:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:855:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:862:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:888:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:892:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:899:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:915:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:926:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:936:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:952:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:959:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:969:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1007:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1023:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1042:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:1098:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1110:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1130:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1149:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1190:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1224:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1272:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1315:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1339:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1362:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1463:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1506:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1518:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:1539:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1565:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1587:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1626:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1658:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:1690:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:1714:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1738:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1761:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1780:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1824:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1844:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1860:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:1984:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:2038:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:2075:{- RULES
./stream-fusion-0.1/Data/List/Stream.hs:2269:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2289:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2308:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2327:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2334:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2348:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2355:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2368:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2375:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2394:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2401:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2416:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2423:{-# RULES
./stream-fusion-0.1/Data/List/Stream.hs:2434:{-# RULES
./stream-fusion-0.1/Data/Stream.hs:401:{-# RULES
./stream-fusion-0.1/Data/Stream.hs:562:{-# RULES
./stream-fusion-0.1/Data/Stream.hs:747:{- RULES
./stream-fusion-0.1/Data/Stream.hs:862:{-# RULES
./stream-fusion-0.1/Data/Stream.hs:893:{-# RULES
./stream-fusion-0.1/Data/Stream.hs:1015:{-# RULES
./stream-fusion-0.1/Data/Stream.hs:1027:{-# RULES
./stream-fusion-0.1/Data/Stream.hs:1234:{-# RULES
./stream-fusion-0.1/tests/Properties/StreamListVsSpec.hs:255:{-# RULES
./stream-fusion-0.1/tests/Properties/StreamListVsSpec.hs:256:"main/error" main = error "RULES are on!"
./stream-fusion-0.1.1/Control/Monad/Stream.hs:242:{-# RULES
./stream-fusion-0.1.1/Control/Monad/Stream.hs:254:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:329:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:364:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:389:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:406:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:420:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:437:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:450:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:470:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:499:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:553:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:591:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:629:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:646:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:663:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:681:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:703:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:719:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:744:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:766:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:783:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:799:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:819:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:836:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:862:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:866:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:873:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:899:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:903:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:910:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:926:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:937:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:947:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:963:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:970:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:980:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1018:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1034:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1053:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1109:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1121:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1141:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1160:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1201:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1235:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1283:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1326:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1350:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1373:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1474:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1517:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1529:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1550:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1576:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1598:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1637:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1669:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1701:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1725:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1749:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1772:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1791:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1835:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1855:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1871:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:1995:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2049:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2086:{- RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2280:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2300:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2319:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2338:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2345:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2359:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2366:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2379:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2386:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2405:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2412:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2427:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2434:{-# RULES
./stream-fusion-0.1.1/Data/List/Stream.hs:2445:{-# RULES
./stream-fusion-0.1.1/Data/Stream.hs:411:{-# RULES
./stream-fusion-0.1.1/Data/Stream.hs:572:{-# RULES
./stream-fusion-0.1.1/Data/Stream.hs:757:{- RULES
./stream-fusion-0.1.1/Data/Stream.hs:872:{-# RULES
./stream-fusion-0.1.1/Data/Stream.hs:903:{-# RULES
./stream-fusion-0.1.1/Data/Stream.hs:1025:{-# RULES
./stream-fusion-0.1.1/Data/Stream.hs:1037:{-# RULES
./stream-fusion-0.1.1/Data/Stream.hs:1244:{-# RULES
./stream-fusion-0.1.1/tests/Properties/StreamListVsSpec.hs:255:{-# RULES
./stream-fusion-0.1.1/tests/Properties/StreamListVsSpec.hs:256:"main/error" main = error "RULES are on!"
./stream-fusion-0.1.2/Control/Monad/Stream.hs:242:{-# RULES
./stream-fusion-0.1.2/Control/Monad/Stream.hs:254:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:322:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:357:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:382:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:399:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:413:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:430:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:443:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:463:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:492:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:546:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:584:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:622:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:637:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:654:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:670:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:692:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:708:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:733:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:755:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:772:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:788:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:808:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:825:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:851:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:855:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:862:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:888:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:892:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:899:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:915:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:926:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:936:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:952:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:959:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:969:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1007:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1023:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1042:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1098:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1110:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1130:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1149:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1190:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1224:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1272:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1315:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1339:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1362:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1463:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1506:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1518:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1539:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1565:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1587:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1626:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1658:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1690:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1714:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1738:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1761:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1780:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1824:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1844:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1860:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:1984:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2038:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2075:{- RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2269:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2289:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2308:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2327:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2334:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2348:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2355:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2368:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2375:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2394:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2401:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2416:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2423:{-# RULES
./stream-fusion-0.1.2/Data/List/Stream.hs:2434:{-# RULES
./stream-fusion-0.1.2/Data/Stream.hs:401:{-# RULES
./stream-fusion-0.1.2/Data/Stream.hs:562:{-# RULES
./stream-fusion-0.1.2/Data/Stream.hs:747:{- RULES
./stream-fusion-0.1.2/Data/Stream.hs:862:{-# RULES
./stream-fusion-0.1.2/Data/Stream.hs:893:{-# RULES
./stream-fusion-0.1.2/Data/Stream.hs:1015:{-# RULES
./stream-fusion-0.1.2/Data/Stream.hs:1027:{-# RULES
./stream-fusion-0.1.2/Data/Stream.hs:1234:{-# RULES
./stream-fusion-0.1.2/tests/Properties/StreamListVsSpec.hs:255:{-# RULES
./stream-fusion-0.1.2/tests/Properties/StreamListVsSpec.hs:256:"main/error" main = error "RULES are on!"
./stream-fusion-0.1.2.1/Control/Monad/Stream.hs:242:{-# RULES
./stream-fusion-0.1.2.1/Control/Monad/Stream.hs:254:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:329:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:364:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:389:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:406:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:420:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:437:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:450:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:470:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:499:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:553:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:591:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:629:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:646:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:663:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:681:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:703:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:719:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:744:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:766:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:783:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:799:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:819:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:836:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:862:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:866:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:873:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:899:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:903:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:910:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:926:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:937:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:947:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:963:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:970:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:980:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1018:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1034:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1053:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1109:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1121:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1141:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1160:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1201:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1235:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1283:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1326:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1350:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1373:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1474:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1517:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1529:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1550:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1576:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1598:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1637:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1669:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1701:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1725:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1749:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1772:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1791:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1835:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1855:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1871:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:1995:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2049:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2086:{- RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2280:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2300:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2319:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2338:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2345:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2359:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2366:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2379:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2386:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2405:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2412:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2427:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2434:{-# RULES
./stream-fusion-0.1.2.1/Data/List/Stream.hs:2445:{-# RULES
./stream-fusion-0.1.2.1/Data/Stream.hs:411:{-# RULES
./stream-fusion-0.1.2.1/Data/Stream.hs:572:{-# RULES
./stream-fusion-0.1.2.1/Data/Stream.hs:757:{- RULES
./stream-fusion-0.1.2.1/Data/Stream.hs:872:{-# RULES
./stream-fusion-0.1.2.1/Data/Stream.hs:903:{-# RULES
./stream-fusion-0.1.2.1/Data/Stream.hs:1025:{-# RULES
./stream-fusion-0.1.2.1/Data/Stream.hs:1037:{-# RULES
./stream-fusion-0.1.2.1/Data/Stream.hs:1244:{-# RULES
./stream-fusion-0.1.2.1/tests/Properties/StreamListVsSpec.hs:255:{-# RULES
./stream-fusion-0.1.2.1/tests/Properties/StreamListVsSpec.hs:256:"main/error" main = error "RULES are on!"
./stream-fusion-0.1.2.2/Control/Monad/Stream.hs:242:{-# RULES
./stream-fusion-0.1.2.2/Control/Monad/Stream.hs:254:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:329:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:364:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:389:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:406:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:420:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:437:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:450:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:470:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:499:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:553:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:591:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:629:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:646:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:663:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:681:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:703:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:719:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:744:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:766:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:783:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:799:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:819:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:836:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:862:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:866:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:873:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:899:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:903:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:910:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:926:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:937:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:947:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:963:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:970:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:980:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1018:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1034:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1053:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1109:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1121:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1141:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1160:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1201:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1235:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1283:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1326:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1350:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1373:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1474:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1517:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1529:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1550:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1576:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1598:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1637:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1669:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1701:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1725:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1749:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1772:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1791:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1835:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1855:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1871:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:1995:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2049:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2086:{- RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2280:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2300:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2319:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2338:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2345:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2359:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2366:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2379:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2386:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2405:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2412:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2427:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2434:{-# RULES
./stream-fusion-0.1.2.2/Data/List/Stream.hs:2445:{-# RULES
./stream-fusion-0.1.2.2/Data/Stream.hs:411:{-# RULES
./stream-fusion-0.1.2.2/Data/Stream.hs:572:{-# RULES
./stream-fusion-0.1.2.2/Data/Stream.hs:757:{- RULES
./stream-fusion-0.1.2.2/Data/Stream.hs:872:{-# RULES
./stream-fusion-0.1.2.2/Data/Stream.hs:903:{-# RULES
./stream-fusion-0.1.2.2/Data/Stream.hs:1025:{-# RULES
./stream-fusion-0.1.2.2/Data/Stream.hs:1037:{-# RULES
./stream-fusion-0.1.2.2/Data/Stream.hs:1244:{-# RULES
./stream-fusion-0.1.2.2/tests/Properties/StreamListVsSpec.hs:255:{-# RULES
./stream-fusion-0.1.2.2/tests/Properties/StreamListVsSpec.hs:256:"main/error" main = error "RULES are on!"
./stream-fusion-0.1.2.3/Control/Monad/Stream.hs:242:{-# RULES
./stream-fusion-0.1.2.3/Control/Monad/Stream.hs:254:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:329:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:364:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:389:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:406:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:420:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:437:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:450:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:470:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:499:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:553:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:591:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:629:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:646:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:663:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:681:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:703:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:719:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:744:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:766:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:783:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:799:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:819:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:836:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:862:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:866:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:873:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:899:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:903:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:910:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:926:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:937:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:947:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:963:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:970:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:980:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1018:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1034:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1053:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1109:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1121:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1141:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1160:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1201:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1235:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1283:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1326:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1350:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1373:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1474:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1517:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1529:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1550:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1576:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1598:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1637:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1669:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1701:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1725:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1749:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1772:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1791:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1835:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1855:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1871:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:1995:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2049:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2086:{- RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2280:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2300:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2319:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2338:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2345:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2359:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2366:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2379:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2386:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2405:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2412:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2427:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2434:{-# RULES
./stream-fusion-0.1.2.3/Data/List/Stream.hs:2445:{-# RULES
./stream-fusion-0.1.2.3/Data/Stream.hs:411:{-# RULES
./stream-fusion-0.1.2.3/Data/Stream.hs:572:{-# RULES
./stream-fusion-0.1.2.3/Data/Stream.hs:757:{- RULES
./stream-fusion-0.1.2.3/Data/Stream.hs:872:{-# RULES
./stream-fusion-0.1.2.3/Data/Stream.hs:903:{-# RULES
./stream-fusion-0.1.2.3/Data/Stream.hs:1025:{-# RULES
./stream-fusion-0.1.2.3/Data/Stream.hs:1037:{-# RULES
./stream-fusion-0.1.2.3/Data/Stream.hs:1244:{-# RULES
./stream-fusion-0.1.2.3/tests/Properties/StreamListVsSpec.hs:255:{-# RULES
./stream-fusion-0.1.2.3/tests/Properties/StreamListVsSpec.hs:256:"main/error" main = error "RULES are on!"
./stream-fusion-0.1.2.4/Control/Monad/Stream.hs:242:{-# RULES
./stream-fusion-0.1.2.4/Control/Monad/Stream.hs:254:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:329:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:364:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:389:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:406:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:420:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:437:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:450:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:470:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:499:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:553:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:591:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:629:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:646:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:663:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:681:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:703:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:719:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:744:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:766:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:783:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:799:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:819:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:836:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:862:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:866:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:873:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:899:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:903:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:910:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:926:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:937:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:947:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:963:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:970:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:980:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1018:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1034:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1053:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1109:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1121:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1141:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1160:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1201:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1235:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1283:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1326:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1350:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1373:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1474:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1517:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1529:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1550:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1576:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1598:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1637:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1669:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1701:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1725:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1749:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1772:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1791:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1835:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1855:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1871:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:1995:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2049:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2086:{- RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2280:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2300:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2319:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2338:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2345:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2359:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2366:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2379:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2386:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2405:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2412:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2427:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2434:{-# RULES
./stream-fusion-0.1.2.4/Data/List/Stream.hs:2445:{-# RULES
./stream-fusion-0.1.2.4/Data/Stream.hs:411:{-# RULES
./stream-fusion-0.1.2.4/Data/Stream.hs:572:{-# RULES
./stream-fusion-0.1.2.4/Data/Stream.hs:757:{- RULES
./stream-fusion-0.1.2.4/Data/Stream.hs:872:{-# RULES
./stream-fusion-0.1.2.4/Data/Stream.hs:903:{-# RULES
./stream-fusion-0.1.2.4/Data/Stream.hs:1025:{-# RULES
./stream-fusion-0.1.2.4/Data/Stream.hs:1037:{-# RULES
./stream-fusion-0.1.2.4/Data/Stream.hs:1244:{-# RULES
./stream-fusion-0.1.2.5/Control/Monad/Stream.hs:242:{-# RULES
./stream-fusion-0.1.2.5/Control/Monad/Stream.hs:254:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:330:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:365:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:390:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:407:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:421:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:438:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:451:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:471:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:500:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:554:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:592:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:630:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:647:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:664:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:682:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:704:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:720:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:745:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:767:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:784:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:800:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:820:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:837:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:863:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:867:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:874:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:900:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:904:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:911:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:927:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:938:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:948:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:964:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:971:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:981:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1019:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1035:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1054:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1110:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1122:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1142:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1161:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1202:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1236:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1284:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1327:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1351:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1374:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1475:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1518:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1530:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1551:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1577:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1599:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1638:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1670:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1702:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1726:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1750:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1773:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1792:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1836:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1856:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1872:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:1996:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2050:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2087:{- RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2281:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2301:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2320:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2339:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2346:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2360:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2367:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2380:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2387:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2406:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2413:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2428:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2435:{-# RULES
./stream-fusion-0.1.2.5/Data/List/Stream.hs:2446:{-# RULES
./stream-fusion-0.1.2.5/Data/Stream.hs:415:{-# RULES
./stream-fusion-0.1.2.5/Data/Stream.hs:576:{-# RULES
./stream-fusion-0.1.2.5/Data/Stream.hs:761:{- RULES
./stream-fusion-0.1.2.5/Data/Stream.hs:876:{-# RULES
./stream-fusion-0.1.2.5/Data/Stream.hs:907:{-# RULES
./stream-fusion-0.1.2.5/Data/Stream.hs:1029:{-# RULES
./stream-fusion-0.1.2.5/Data/Stream.hs:1041:{-# RULES
./stream-fusion-0.1.2.5/Data/Stream.hs:1248:{-# RULES
./stream-fusion-0.1.2.5/tests/Properties/StreamListVsSpec.hs:254:{-# RULES
./stream-fusion-0.1.2.5/tests/Properties/StreamListVsSpec.hs:255:"main/error" main = error "RULES are on!"
./streaming-0.1.0.16/Streaming/Internal.hs:152:{-# RULES
./streaming-0.1.0.17/Streaming/Internal.hs:152:{-# RULES
./streaming-0.1.0.18/Streaming/Internal.hs:152:{-# RULES
./streaming-0.1.0.19/Streaming/Internal.hs:152:{-# RULES
./streaming-0.1.0.20/Streaming/Internal.hs:152:{-# RULES
./streaming-0.1.1.0/Streaming/Internal.hs:152:{-# RULES
./streaming-0.1.1.1/Streaming/Internal.hs:152:{-# RULES
./streaming-0.1.2.0/Streaming/Internal.hs:158:{-# RULES
./streaming-0.1.2.2/Streaming/Internal.hs:158:{-# RULES
./streaming-0.1.3.0/Streaming/Internal.hs:179:{-# RULES
./streaming-0.1.3.1/Streaming/Internal.hs:179:{-# RULES
./streaming-0.1.3.2/Streaming/Internal.hs:179:{-# RULES
./streaming-0.1.3.3/Streaming/Internal.hs:179:{-# RULES
./streaming-0.1.3.4/Streaming/Internal.hs:179:{-# RULES
./streaming-0.1.4.0/Streaming/Internal.hs:178:{-# RULES
./streaming-0.1.4.0/Streaming/Prelude.hs:1232:-- {-# RULES
./streaming-bytestring-0.1.0.0/Data/ByteString/Streaming.hs:1114:-- {-# RULES
./streaming-bytestring-0.1.0.1/Data/ByteString/Streaming.hs:1114:-- {-# RULES
./streaming-bytestring-0.1.0.2/Data/ByteString/Streaming.hs:1203:-- {-# RULES
./streaming-bytestring-0.1.0.3/Data/ByteString/Streaming.hs:1206:-- {-# RULES
./streaming-bytestring-0.1.0.4/Data/ByteString/Streaming.hs:1215:-- {-# RULES
./streaming-bytestring-0.1.0.5/Data/ByteString/Streaming.hs:1214:-- {-# RULES
./streaming-bytestring-0.1.0.6/Data/ByteString/Streaming.hs:1214:-- {-# RULES
./streaming-bytestring-0.1.0.7/Data/ByteString/Streaming.hs:1214:-- {-# RULES
./streaming-bytestring-0.1.0.8/Data/ByteString/Streaming.hs:1214:-- {-# RULES
./streaming-bytestring-0.1.1.0/Data/ByteString/Streaming.hs:1214:-- {-# RULES
./streaming-bytestring-0.1.2.0/Data/ByteString/Streaming.hs:1301:-- {-# RULES
./streaming-bytestring-0.1.2.2/Data/ByteString/Streaming.hs:1301:-- {-# RULES
./streaming-bytestring-0.1.3.0/Data/ByteString/Streaming.hs:1307:-- {-# RULES
./streaming-bytestring-0.1.4.0/Data/ByteString/Streaming.hs:1309:-- {-# RULES
./structs-0/src/Data/Struct/Internal.hs:53:{-# RULES "st/id" st = id #-}
./subhask-0.1.0.0/bench/Vector.hs:15:{-# RULES
./subhask-0.1.0.0/src/SubHask/Algebra/Vector.hs:88:{-# RULES
./subhask-0.1.0.0/src/SubHask/Algebra.hs:1402:-- need more RULES; need tests
./subhask-0.1.0.0/src/SubHask/Algebra.hs:1403:{-# RULES
./subhask-0.1.0.1/bench/Vector.hs:15:{-# RULES
./subhask-0.1.0.1/src/SubHask/Algebra/Vector.hs:88:{-# RULES
./subhask-0.1.0.1/src/SubHask/Algebra.hs:1402:-- need more RULES; need tests
./subhask-0.1.0.1/src/SubHask/Algebra.hs:1403:{-# RULES
./subhask-0.1.1.0/src/SubHask/Algebra/Vector/FFI.hs:3:-- | Importing this module will activate RULES that use the FFI for vector ops.
./subhask-0.1.1.0/src/SubHask/Algebra/Vector/FFI.hs:33:{-# RULES
./subhask-0.1.1.0/src/SubHask/Algebra/Vector.hs:76:{-# RULES
./subhask-0.1.1.0/src/SubHask/Algebra.hs:1429:-- need more RULES; need tests
./subhask-0.1.1.0/src/SubHask/Algebra.hs:1430:{-# RULES
./svm-simple-0.2.7/AI/SVM/Base.hs:339:{-#RULES
./svm-simple-0.2.7.1/AI/SVM/Base.hs:339:{-#RULES
./synthesizer-0.0.3/src/Sound/Signal.hs:175:{-# RULES
./synthesizer-0.0.3/src/Synthesizer/FusionList/Signal.hs:226:{-# RULES
./synthesizer-0.0.3/src/Synthesizer/FusionList/Signal.hs:413:{-# RULES
./synthesizer-0.0.3/src/Synthesizer/Plain/Signal.hs:127:{-# RULES
./synthesizer-0.0.3/src/Synthesizer/Storable/Signal.hs:696:{-# RULES
./synthesizer-0.0.3/src/Synthesizer/Storable/Signal.hs:960:{-# RULES
./synthesizer-0.0.3/src/Synthesizer/Storable/Signal.hs:1147:{-# RULES
./synthesizer-0.0.3/src/Synthesizer/Storable/Signal.hs:1273:{-# RULES
./synthesizer-0.0.3/src/Synthesizer/Storable/Signal.hs:1284:{-# RULES
./synthesizer-0.2/src/Sound/Signal.hs:187:{-# RULES
./synthesizer-0.2/src/Synthesizer/FusionList/Signal.hs:194:{-# RULES
./synthesizer-0.2/src/Synthesizer/FusionList/Signal.hs:381:{-# RULES
./synthesizer-0.2/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-0.2/src/Synthesizer/Storable/Signal.hs:637:{-# RULES
./synthesizer-0.2/src/Synthesizer/Storable/Signal.hs:913:{-# RULES
./synthesizer-0.2/src/Synthesizer/Storable/Signal.hs:1100:{-# RULES
./synthesizer-0.2/src/Synthesizer/Storable/Signal.hs:1226:{-# RULES
./synthesizer-0.2/src/Synthesizer/Storable/Signal.hs:1237:{-# RULES
./synthesizer-0.2.0.1/src/Sound/Signal.hs:187:{-# RULES
./synthesizer-0.2.0.1/src/Synthesizer/FusionList/Signal.hs:194:{-# RULES
./synthesizer-0.2.0.1/src/Synthesizer/FusionList/Signal.hs:381:{-# RULES
./synthesizer-0.2.0.1/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-0.2.0.1/src/Synthesizer/Storable/Signal.hs:637:{-# RULES
./synthesizer-0.2.0.1/src/Synthesizer/Storable/Signal.hs:913:{-# RULES
./synthesizer-0.2.0.1/src/Synthesizer/Storable/Signal.hs:1100:{-# RULES
./synthesizer-0.2.0.1/src/Synthesizer/Storable/Signal.hs:1226:{-# RULES
./synthesizer-0.2.0.1/src/Synthesizer/Storable/Signal.hs:1237:{-# RULES
./synthesizer-core-0.2/src/Synthesizer/FusionList/Signal.hs:194:{-# RULES
./synthesizer-core-0.2/src/Synthesizer/FusionList/Signal.hs:381:{-# RULES
./synthesizer-core-0.2/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.2/src/Synthesizer/Storable/Signal.hs:637:{-# RULES
./synthesizer-core-0.2/src/Synthesizer/Storable/Signal.hs:913:{-# RULES
./synthesizer-core-0.2/src/Synthesizer/Storable/Signal.hs:1100:{-# RULES
./synthesizer-core-0.2/src/Synthesizer/Storable/Signal.hs:1226:{-# RULES
./synthesizer-core-0.2/src/Synthesizer/Storable/Signal.hs:1237:{-# RULES
./synthesizer-core-0.2.1/src/Synthesizer/FusionList/Signal.hs:194:{-# RULES
./synthesizer-core-0.2.1/src/Synthesizer/FusionList/Signal.hs:381:{-# RULES
./synthesizer-core-0.2.1/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.2.1/src/Synthesizer/Storable/Signal.hs:646:{-# RULES
./synthesizer-core-0.2.1/src/Synthesizer/Storable/Signal.hs:922:{-# RULES
./synthesizer-core-0.2.1/src/Synthesizer/Storable/Signal.hs:1109:{-# RULES
./synthesizer-core-0.2.1/src/Synthesizer/Storable/Signal.hs:1235:{-# RULES
./synthesizer-core-0.2.1/src/Synthesizer/Storable/Signal.hs:1246:{-# RULES
./synthesizer-core-0.3/src/Synthesizer/Basic/Phase.hs:214:{-# RULES
./synthesizer-core-0.3/src/Synthesizer/FusionList/Signal.hs:138:{- disabled RULES
./synthesizer-core-0.3/src/Synthesizer/FusionList/Signal.hs:194:{-# RULES
./synthesizer-core-0.3/src/Synthesizer/FusionList/Signal.hs:385:{-# RULES
./synthesizer-core-0.3/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.3/src/Synthesizer/Storable/Signal.hs:622:{- disabled RULES
./synthesizer-core-0.3/src/Synthesizer/Storable/Signal.hs:641:{- disabled RULES
./synthesizer-core-0.3/src/Synthesizer/Storable/Signal.hs:971:{-# RULES
./synthesizer-core-0.3/src/Synthesizer/Storable/Signal.hs:1026:{- disabled RULES
./synthesizer-core-0.3/src/Synthesizer/Storable/Signal.hs:1158:{-# RULES
./synthesizer-core-0.3/src/Synthesizer/Storable/Signal.hs:1284:{-# RULES
./synthesizer-core-0.3/src/Synthesizer/Storable/Signal.hs:1295:{-# RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/FusionList/Signal.hs:138:{- disabled RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/FusionList/Signal.hs:194:{-# RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/FusionList/Signal.hs:385:{-# RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/Storable/Signal.hs:622:{- disabled RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/Storable/Signal.hs:641:{- disabled RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/Storable/Signal.hs:971:{-# RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/Storable/Signal.hs:1026:{- disabled RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/Storable/Signal.hs:1158:{-# RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/Storable/Signal.hs:1284:{-# RULES
./synthesizer-core-0.3.0.1/src/Synthesizer/Storable/Signal.hs:1295:{-# RULES
./synthesizer-core-0.3.1/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.3.1/src/Synthesizer/FusionList/Signal.hs:138:{- disabled RULES
./synthesizer-core-0.3.1/src/Synthesizer/FusionList/Signal.hs:194:{-# RULES
./synthesizer-core-0.3.1/src/Synthesizer/FusionList/Signal.hs:385:{-# RULES
./synthesizer-core-0.3.1/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.3.1/src/Synthesizer/Storable/Signal.hs:622:{- disabled RULES
./synthesizer-core-0.3.1/src/Synthesizer/Storable/Signal.hs:641:{- disabled RULES
./synthesizer-core-0.3.1/src/Synthesizer/Storable/Signal.hs:971:{-# RULES
./synthesizer-core-0.3.1/src/Synthesizer/Storable/Signal.hs:1026:{- disabled RULES
./synthesizer-core-0.3.1/src/Synthesizer/Storable/Signal.hs:1158:{-# RULES
./synthesizer-core-0.3.1/src/Synthesizer/Storable/Signal.hs:1284:{-# RULES
./synthesizer-core-0.3.1/src/Synthesizer/Storable/Signal.hs:1295:{-# RULES
./synthesizer-core-0.4/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.4/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.4/src/Synthesizer/Storable/Signal.hs:565:{- disabled RULES
./synthesizer-core-0.4/src/Synthesizer/Storable/Signal.hs:584:{- disabled RULES
./synthesizer-core-0.4/src/Synthesizer/Storable/Signal.hs:910:{- disabled RULES
./synthesizer-core-0.4/src/Synthesizer/Storable/Signal.hs:1042:{-# RULES
./synthesizer-core-0.4/src/Synthesizer/Storable/Signal.hs:1176:{-# RULES
./synthesizer-core-0.4.0.1/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.4.0.1/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.4.0.1/src/Synthesizer/Storable/Signal.hs:565:{- disabled RULES
./synthesizer-core-0.4.0.1/src/Synthesizer/Storable/Signal.hs:584:{- disabled RULES
./synthesizer-core-0.4.0.1/src/Synthesizer/Storable/Signal.hs:910:{- disabled RULES
./synthesizer-core-0.4.0.1/src/Synthesizer/Storable/Signal.hs:1042:{-# RULES
./synthesizer-core-0.4.0.1/src/Synthesizer/Storable/Signal.hs:1176:{-# RULES
./synthesizer-core-0.4.0.2/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.4.0.2/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.4.0.2/src/Synthesizer/Storable/Signal.hs:565:{- disabled RULES
./synthesizer-core-0.4.0.2/src/Synthesizer/Storable/Signal.hs:584:{- disabled RULES
./synthesizer-core-0.4.0.2/src/Synthesizer/Storable/Signal.hs:910:{- disabled RULES
./synthesizer-core-0.4.0.2/src/Synthesizer/Storable/Signal.hs:1042:{-# RULES
./synthesizer-core-0.4.0.2/src/Synthesizer/Storable/Signal.hs:1176:{-# RULES
./synthesizer-core-0.4.0.3/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.4.0.3/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.4.0.3/src/Synthesizer/Storable/Signal.hs:565:{- disabled RULES
./synthesizer-core-0.4.0.3/src/Synthesizer/Storable/Signal.hs:584:{- disabled RULES
./synthesizer-core-0.4.0.3/src/Synthesizer/Storable/Signal.hs:910:{- disabled RULES
./synthesizer-core-0.4.0.3/src/Synthesizer/Storable/Signal.hs:1042:{-# RULES
./synthesizer-core-0.4.0.3/src/Synthesizer/Storable/Signal.hs:1176:{-# RULES
./synthesizer-core-0.4.0.4/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.4.0.4/src/Synthesizer/Plain/Signal.hs:117:{-# RULES
./synthesizer-core-0.4.0.4/src/Synthesizer/Storable/Signal.hs:565:{- disabled RULES
./synthesizer-core-0.4.0.4/src/Synthesizer/Storable/Signal.hs:584:{- disabled RULES
./synthesizer-core-0.4.0.4/src/Synthesizer/Storable/Signal.hs:910:{- disabled RULES
./synthesizer-core-0.4.0.4/src/Synthesizer/Storable/Signal.hs:1042:{-# RULES
./synthesizer-core-0.4.0.4/src/Synthesizer/Storable/Signal.hs:1176:{-# RULES
./synthesizer-core-0.4.1/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.4.1/src/Synthesizer/Plain/Signal.hs:118:{-# RULES
./synthesizer-core-0.4.1/src/Synthesizer/Storable/Signal.hs:565:{- disabled RULES
./synthesizer-core-0.4.1/src/Synthesizer/Storable/Signal.hs:584:{- disabled RULES
./synthesizer-core-0.4.1/src/Synthesizer/Storable/Signal.hs:910:{- disabled RULES
./synthesizer-core-0.4.1/src/Synthesizer/Storable/Signal.hs:1042:{-# RULES
./synthesizer-core-0.4.1/src/Synthesizer/Storable/Signal.hs:1176:{-# RULES
./synthesizer-core-0.4.2/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.4.2/src/Synthesizer/Plain/Signal.hs:118:{-# RULES
./synthesizer-core-0.4.2/src/Synthesizer/Storable/Signal.hs:565:{- disabled RULES
./synthesizer-core-0.4.2/src/Synthesizer/Storable/Signal.hs:584:{- disabled RULES
./synthesizer-core-0.4.2/src/Synthesizer/Storable/Signal.hs:910:{- disabled RULES
./synthesizer-core-0.4.2/src/Synthesizer/Storable/Signal.hs:1042:{-# RULES
./synthesizer-core-0.4.2/src/Synthesizer/Storable/Signal.hs:1176:{-# RULES
./synthesizer-core-0.5/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.5/src/Synthesizer/Plain/Signal.hs:116:{-# RULES
./synthesizer-core-0.5/src/Synthesizer/Storable/Signal.hs:548:{- disabled RULES
./synthesizer-core-0.5/src/Synthesizer/Storable/Signal.hs:567:{- disabled RULES
./synthesizer-core-0.5/src/Synthesizer/Storable/Signal.hs:893:{- disabled RULES
./synthesizer-core-0.5/src/Synthesizer/Storable/Signal.hs:1025:{-# RULES
./synthesizer-core-0.5/src/Synthesizer/Storable/Signal.hs:1159:{-# RULES
./synthesizer-core-0.5.0.1/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.5.0.1/src/Synthesizer/Plain/Signal.hs:116:{-# RULES
./synthesizer-core-0.5.0.1/src/Synthesizer/Storable/Signal.hs:548:{- disabled RULES
./synthesizer-core-0.5.0.1/src/Synthesizer/Storable/Signal.hs:567:{- disabled RULES
./synthesizer-core-0.5.0.1/src/Synthesizer/Storable/Signal.hs:893:{- disabled RULES
./synthesizer-core-0.5.0.1/src/Synthesizer/Storable/Signal.hs:1025:{-# RULES
./synthesizer-core-0.5.0.1/src/Synthesizer/Storable/Signal.hs:1159:{-# RULES
./synthesizer-core-0.5.1/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.5.1/src/Synthesizer/Plain/Signal.hs:116:{-# RULES
./synthesizer-core-0.5.1/src/Synthesizer/Storable/Signal.hs:548:{- disabled RULES
./synthesizer-core-0.5.1/src/Synthesizer/Storable/Signal.hs:567:{- disabled RULES
./synthesizer-core-0.5.1/src/Synthesizer/Storable/Signal.hs:893:{- disabled RULES
./synthesizer-core-0.5.1/src/Synthesizer/Storable/Signal.hs:1025:{-# RULES
./synthesizer-core-0.5.1/src/Synthesizer/Storable/Signal.hs:1159:{-# RULES
./synthesizer-core-0.5.2/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.5.2/src/Synthesizer/Plain/Signal.hs:116:{-# RULES
./synthesizer-core-0.5.2/src/Synthesizer/Storable/Signal.hs:548:{- disabled RULES
./synthesizer-core-0.5.2/src/Synthesizer/Storable/Signal.hs:567:{- disabled RULES
./synthesizer-core-0.5.2/src/Synthesizer/Storable/Signal.hs:893:{- disabled RULES
./synthesizer-core-0.5.2/src/Synthesizer/Storable/Signal.hs:1025:{-# RULES
./synthesizer-core-0.5.2/src/Synthesizer/Storable/Signal.hs:1159:{-# RULES
./synthesizer-core-0.6/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.6/src/Synthesizer/Plain/Signal.hs:116:{-# RULES
./synthesizer-core-0.6/src/Synthesizer/Storable/Signal.hs:548:{- disabled RULES
./synthesizer-core-0.6/src/Synthesizer/Storable/Signal.hs:567:{- disabled RULES
./synthesizer-core-0.6/src/Synthesizer/Storable/Signal.hs:893:{- disabled RULES
./synthesizer-core-0.6/src/Synthesizer/Storable/Signal.hs:1025:{-# RULES
./synthesizer-core-0.6/src/Synthesizer/Storable/Signal.hs:1159:{-# RULES
./synthesizer-core-0.7/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.7/src/Synthesizer/Plain/Signal.hs:116:{-# RULES
./synthesizer-core-0.7/src/Synthesizer/Storable/Signal.hs:548:{- disabled RULES
./synthesizer-core-0.7/src/Synthesizer/Storable/Signal.hs:567:{- disabled RULES
./synthesizer-core-0.7/src/Synthesizer/Storable/Signal.hs:893:{- disabled RULES
./synthesizer-core-0.7/src/Synthesizer/Storable/Signal.hs:1025:{-# RULES
./synthesizer-core-0.7/src/Synthesizer/Storable/Signal.hs:1159:{-# RULES
./synthesizer-core-0.7.0.1/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.7.0.1/src/Synthesizer/Plain/Signal.hs:116:{-# RULES
./synthesizer-core-0.7.0.1/src/Synthesizer/Storable/Signal.hs:548:{- disabled RULES
./synthesizer-core-0.7.0.1/src/Synthesizer/Storable/Signal.hs:567:{- disabled RULES
./synthesizer-core-0.7.0.1/src/Synthesizer/Storable/Signal.hs:893:{- disabled RULES
./synthesizer-core-0.7.0.1/src/Synthesizer/Storable/Signal.hs:1025:{-# RULES
./synthesizer-core-0.7.0.1/src/Synthesizer/Storable/Signal.hs:1159:{-# RULES
./synthesizer-core-0.7.0.2/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.7.0.2/src/Synthesizer/Plain/Signal.hs:116:{-# RULES
./synthesizer-core-0.7.0.2/src/Synthesizer/Storable/Signal.hs:548:{- disabled RULES
./synthesizer-core-0.7.0.2/src/Synthesizer/Storable/Signal.hs:567:{- disabled RULES
./synthesizer-core-0.7.0.2/src/Synthesizer/Storable/Signal.hs:893:{- disabled RULES
./synthesizer-core-0.7.0.2/src/Synthesizer/Storable/Signal.hs:1025:{-# RULES
./synthesizer-core-0.7.0.2/src/Synthesizer/Storable/Signal.hs:1159:{-# RULES
./synthesizer-core-0.7.1/src/Synthesizer/Basic/Phase.hs:213:{-# RULES
./synthesizer-core-0.7.1/src/Synthesizer/Plain/Signal.hs:116:{-# RULES
./synthesizer-core-0.7.1/src/Synthesizer/Storable/Signal.hs:548:{- disabled RULES
./synthesizer-core-0.7.1/src/Synthesizer/Storable/Signal.hs:567:{- disabled RULES
./synthesizer-core-0.7.1/src/Synthesizer/Storable/Signal.hs:893:{- disabled RULES
./synthesizer-core-0.7.1/src/Synthesizer/Storable/Signal.hs:1025:{-# RULES
./synthesizer-core-0.7.1/src/Synthesizer/Storable/Signal.hs:1159:{-# RULES
./target-0.2.0.0/test/Map.hs:2313:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./target-0.2.0.0/test/Map.hs:2314:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./target-0.2.0.0/test/Map.hs:2315:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./target-0.2.0.0/test/Map.hs:2316:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./target-0.2.0.0/test/Map.hs:2317:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./target-0.2.0.0/test/Map.hs:2318:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./target-0.2.0.0/test/Map.hs:2319:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./target-0.2.0.0/test/Map.hs:2320:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./target-0.2.0.1/test/Map.hs:2313:{-# RULES "Map.elems" [~1] forall m . elems m = build (\c n -> foldrFB (\_ x xs -> c x xs) n m) #-}
./target-0.2.0.1/test/Map.hs:2314:{-# RULES "Map.elemsBack" [1] foldrFB (\_ x xs -> x : xs) [] = elems #-}
./target-0.2.0.1/test/Map.hs:2315:{-# RULES "Map.keys" [~1] forall m . keys m = build (\c n -> foldrFB (\k _ xs -> c k xs) n m) #-}
./target-0.2.0.1/test/Map.hs:2316:{-# RULES "Map.keysBack" [1] foldrFB (\k _ xs -> k : xs) [] = keys #-}
./target-0.2.0.1/test/Map.hs:2317:{-# RULES "Map.toAscList" [~1] forall m . toAscList m = build (\c n -> foldrFB (\k x xs -> c (k,x) xs) n m) #-}
./target-0.2.0.1/test/Map.hs:2318:{-# RULES "Map.toAscListBack" [1] foldrFB (\k x xs -> (k, x) : xs) [] = toAscList #-}
./target-0.2.0.1/test/Map.hs:2319:{-# RULES "Map.toDescList" [~1] forall m . toDescList m = build (\c n -> foldlFB (\xs k x -> c (k,x) xs) n m) #-}
./target-0.2.0.1/test/Map.hs:2320:{-# RULES "Map.toDescListBack" [1] foldlFB (\xs k x -> (k, x) : xs) [] = toDescList #-}
./template-haskell-2.10.0.0/Language/Haskell/TH/Ppr.hs:419:       = sep [ text "{-# RULES" <+> pprString n <+> ppr phases
./template-haskell-2.10.0.0/Language/Haskell/TH/Syntax.hs:560:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.2.0.0/Language/Haskell/TH/Syntax.hs:263:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.3.0.0/Language/Haskell/TH/Syntax.hs:260:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.3.0.1/Language/Haskell/TH/Syntax.hs:260:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.4.0.0/Language/Haskell/TH/Syntax.hs:265:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.4.0.1/Language/Haskell/TH/Syntax.hs:265:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.5.0.0/Language/Haskell/TH/Syntax.hs:283:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.6.0.0/Language/Haskell/TH/Syntax.hs:285:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.7.0.0/Language/Haskell/TH/Syntax.hs:317:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.8.0.0/Language/Haskell/TH/Ppr.hs:362:       = sep [ text "{-# RULES" <+> pprString n <+> ppr phases
./template-haskell-2.8.0.0/Language/Haskell/TH/Syntax.hs:419:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./template-haskell-2.9.0.0/Language/Haskell/TH/Ppr.hs:408:       = sep [ text "{-# RULES" <+> pprString n <+> ppr phases
./template-haskell-2.9.0.0/Language/Haskell/TH/Syntax.hs:505:{-# RULES "TH:liftString" lift = \s -> return (LitE (StringL s)) #-}
./term-rewriting-0.1/src/Data/Rewriting/Problem/Parse.hs:92:           <|> decl "RULES"     rules      (\ e p -> p {Prob.rules   = e, --FIXME multiple RULES blocks?
./term-rewriting-0.1/src/Data/Rewriting/Problem/Pretty.hs:32:    <$$> block "RULES" (ppRules $ rules prob)
./term-rewriting-0.1.1/src/Data/Rewriting/Problem/Parse.hs:92:           <|> decl "RULES"     rules      (\ e p -> p {Prob.rules   = e, --FIXME multiple RULES blocks?
./term-rewriting-0.1.1/src/Data/Rewriting/Problem/Pretty.hs:32:    <$$> block "RULES" (ppRules $ rules prob)
./term-rewriting-0.1.2/src/Data/Rewriting/Problem/Parse.hs:92:           <|> decl "RULES"     rules      (\ e p -> p {Prob.rules   = e, --FIXME multiple RULES blocks?
./term-rewriting-0.1.2/src/Data/Rewriting/Problem/Pretty.hs:32:    <$$> block "RULES" (ppRules $ rules prob)
./term-rewriting-0.1.2.1/src/Data/Rewriting/Problem/Parse.hs:92:           <|> decl "RULES"     rules      (\ e p -> p {Prob.rules   = e, --FIXME multiple RULES blocks?
./term-rewriting-0.1.2.1/src/Data/Rewriting/Problem/Pretty.hs:32:    <$$> block "RULES" (ppRules $ rules prob)
./term-rewriting-0.1.2.2/src/Data/Rewriting/Problem/Parse.hs:92:           <|> decl "RULES"     rules      (\ e p -> p {Prob.rules   = e, --FIXME multiple RULES blocks?
./term-rewriting-0.1.2.2/src/Data/Rewriting/Problem/Pretty.hs:32:    <$$> block "RULES" (ppRules $ rules prob)
./term-rewriting-0.2/src/Data/Rewriting/Problem/Parse.hs:92:           <|> decl "RULES"     rules      (\ e p -> p {Prob.rules   = e, --FIXME multiple RULES blocks?
./term-rewriting-0.2/src/Data/Rewriting/Problem/Pretty.hs:32:    <$$> block "RULES" (ppRules $ rules prob)
./text-0.1/Data/Text/Fusion.hs:199:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.1/Data/Text/Fusion.hs:380:  RULES "STREAM map/map fusion" forall f g s.
./text-0.1/Data/Text/Fusion.hs:816:{-# RULES
./text-0.1/Data/Text.hs:264:{-# RULES
./text-0.1/Data/Text.hs:290:{-# RULES
./text-0.1/Data/Text.hs:308:{-# RULES
./text-0.1/Data/Text.hs:331:{-# RULES
./text-0.1/Data/Text.hs:348:{-# RULES
./text-0.1/Data/Text.hs:361:{-# RULES
./text-0.1/Data/Text.hs:599:{-# RULES
./text-0.1/Data/Text.hs:621:{-# RULES
./text-0.1/Data/Text.hs:639:{-# RULES
./text-0.1/Data/Text.hs:656:{-# RULES
./text-0.1/Data/Text.hs:957:{-# RULES
./text-0.10.0.0/Data/Text/Encoding.hs:108:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.10.0.0/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.10.0.0/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.10.0.0/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.10.0.0/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.10.0.0/Data/Text/Lazy/Builder.hs:126:{-# RULES
./text-0.10.0.0/Data/Text/Lazy/Builder.hs:269:{-# RULES
./text-0.10.0.0/Data/Text/Lazy/Encoding.hs:103:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.10.0.0/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.10.0.0/Data/Text/Lazy.hs:294:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:329:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:342:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:355:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:384:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:400:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:414:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:436:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:450:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:502:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:768:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:806:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:828:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:863:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:881:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:1135:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:1211:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:1241:{-# RULES
./text-0.10.0.0/Data/Text/Lazy.hs:1337:{-# RULES
./text-0.10.0.0/Data/Text.hs:372:{-# RULES
./text-0.10.0.0/Data/Text.hs:409:{-# RULES
./text-0.10.0.0/Data/Text.hs:425:{-# RULES
./text-0.10.0.0/Data/Text.hs:442:{-# RULES
./text-0.10.0.0/Data/Text.hs:459:{-# RULES
./text-0.10.0.0/Data/Text.hs:488:{-# RULES
./text-0.10.0.0/Data/Text.hs:493:{-# RULES
./text-0.10.0.0/Data/Text.hs:498:{-# RULES
./text-0.10.0.0/Data/Text.hs:503:{-# RULES
./text-0.10.0.0/Data/Text.hs:508:{-# RULES
./text-0.10.0.0/Data/Text.hs:513:{-# RULES
./text-0.10.0.0/Data/Text.hs:518:{-# RULES
./text-0.10.0.0/Data/Text.hs:628:{-# RULES
./text-0.10.0.0/Data/Text.hs:834:{-# RULES
./text-0.10.0.0/Data/Text.hs:884:{-# RULES
./text-0.10.0.0/Data/Text.hs:905:{-# RULES
./text-0.10.0.0/Data/Text.hs:923:{-# RULES
./text-0.10.0.0/Data/Text.hs:940:{-# RULES
./text-0.10.0.0/Data/Text.hs:961:{-# RULES
./text-0.10.0.0/Data/Text.hs:1099:{-# RULES
./text-0.10.0.0/Data/Text.hs:1276:{-# RULES
./text-0.10.0.0/Data/Text.hs:1372:{-# RULES
./text-0.10.0.0/Data/Text.hs:1402:{-# RULES
./text-0.10.0.1/Data/Text/Encoding.hs:128:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.10.0.1/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.10.0.1/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.10.0.1/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.10.0.1/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.10.0.1/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.10.0.1/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.10.0.1/Data/Text/Lazy/Encoding.hs:121:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.10.0.1/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.10.0.1/Data/Text/Lazy.hs:359:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:394:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:407:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:419:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:448:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:464:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:478:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:500:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:514:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:571:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:846:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:886:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:908:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:943:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:961:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:1215:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:1290:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:1320:{-# RULES
./text-0.10.0.1/Data/Text/Lazy.hs:1416:{-# RULES
./text-0.10.0.1/Data/Text.hs:414:{-# RULES
./text-0.10.0.1/Data/Text.hs:451:{-# RULES
./text-0.10.0.1/Data/Text.hs:467:{-# RULES
./text-0.10.0.1/Data/Text.hs:484:{-# RULES
./text-0.10.0.1/Data/Text.hs:501:{-# RULES
./text-0.10.0.1/Data/Text.hs:530:{-# RULES
./text-0.10.0.1/Data/Text.hs:535:{-# RULES
./text-0.10.0.1/Data/Text.hs:540:{-# RULES
./text-0.10.0.1/Data/Text.hs:545:{-# RULES
./text-0.10.0.1/Data/Text.hs:550:{-# RULES
./text-0.10.0.1/Data/Text.hs:555:{-# RULES
./text-0.10.0.1/Data/Text.hs:560:{-# RULES
./text-0.10.0.1/Data/Text.hs:676:{-# RULES
./text-0.10.0.1/Data/Text.hs:898:{-# RULES
./text-0.10.0.1/Data/Text.hs:948:{-# RULES
./text-0.10.0.1/Data/Text.hs:969:{-# RULES
./text-0.10.0.1/Data/Text.hs:987:{-# RULES
./text-0.10.0.1/Data/Text.hs:1004:{-# RULES
./text-0.10.0.1/Data/Text.hs:1025:{-# RULES
./text-0.10.0.1/Data/Text.hs:1163:{-# RULES
./text-0.10.0.1/Data/Text.hs:1341:{-# RULES
./text-0.10.0.1/Data/Text.hs:1438:{-# RULES
./text-0.10.0.1/Data/Text.hs:1468:{-# RULES
./text-0.10.0.2/Data/Text/Encoding.hs:108:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.10.0.2/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.10.0.2/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.10.0.2/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.10.0.2/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.10.0.2/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.10.0.2/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.10.0.2/Data/Text/Lazy/Encoding.hs:103:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.10.0.2/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.10.0.2/Data/Text/Lazy.hs:359:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:394:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:407:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:419:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:448:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:464:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:478:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:500:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:514:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:571:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:846:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:886:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:908:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:943:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:961:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:1215:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:1290:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:1320:{-# RULES
./text-0.10.0.2/Data/Text/Lazy.hs:1416:{-# RULES
./text-0.10.0.2/Data/Text.hs:414:{-# RULES
./text-0.10.0.2/Data/Text.hs:451:{-# RULES
./text-0.10.0.2/Data/Text.hs:467:{-# RULES
./text-0.10.0.2/Data/Text.hs:484:{-# RULES
./text-0.10.0.2/Data/Text.hs:501:{-# RULES
./text-0.10.0.2/Data/Text.hs:530:{-# RULES
./text-0.10.0.2/Data/Text.hs:535:{-# RULES
./text-0.10.0.2/Data/Text.hs:540:{-# RULES
./text-0.10.0.2/Data/Text.hs:545:{-# RULES
./text-0.10.0.2/Data/Text.hs:550:{-# RULES
./text-0.10.0.2/Data/Text.hs:555:{-# RULES
./text-0.10.0.2/Data/Text.hs:560:{-# RULES
./text-0.10.0.2/Data/Text.hs:675:{-# RULES
./text-0.10.0.2/Data/Text.hs:897:{-# RULES
./text-0.10.0.2/Data/Text.hs:947:{-# RULES
./text-0.10.0.2/Data/Text.hs:968:{-# RULES
./text-0.10.0.2/Data/Text.hs:986:{-# RULES
./text-0.10.0.2/Data/Text.hs:1003:{-# RULES
./text-0.10.0.2/Data/Text.hs:1024:{-# RULES
./text-0.10.0.2/Data/Text.hs:1162:{-# RULES
./text-0.10.0.2/Data/Text.hs:1339:{-# RULES
./text-0.10.0.2/Data/Text.hs:1436:{-# RULES
./text-0.10.0.2/Data/Text.hs:1466:{-# RULES
./text-0.11.0.0/Data/Text/Encoding.hs:128:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.0.0/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.0.0/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.0.0/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.0.0/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.0.0/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.11.0.0/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.11.0.0/Data/Text/Lazy/Encoding.hs:121:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.0.0/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.0.0/Data/Text/Lazy.hs:359:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:394:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:407:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:419:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:448:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:464:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:478:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:500:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:514:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:571:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:846:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:886:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:908:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:943:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:961:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:1215:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:1290:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:1320:{-# RULES
./text-0.11.0.0/Data/Text/Lazy.hs:1416:{-# RULES
./text-0.11.0.0/Data/Text.hs:414:{-# RULES
./text-0.11.0.0/Data/Text.hs:451:{-# RULES
./text-0.11.0.0/Data/Text.hs:467:{-# RULES
./text-0.11.0.0/Data/Text.hs:484:{-# RULES
./text-0.11.0.0/Data/Text.hs:501:{-# RULES
./text-0.11.0.0/Data/Text.hs:530:{-# RULES
./text-0.11.0.0/Data/Text.hs:535:{-# RULES
./text-0.11.0.0/Data/Text.hs:540:{-# RULES
./text-0.11.0.0/Data/Text.hs:545:{-# RULES
./text-0.11.0.0/Data/Text.hs:550:{-# RULES
./text-0.11.0.0/Data/Text.hs:555:{-# RULES
./text-0.11.0.0/Data/Text.hs:560:{-# RULES
./text-0.11.0.0/Data/Text.hs:676:{-# RULES
./text-0.11.0.0/Data/Text.hs:898:{-# RULES
./text-0.11.0.0/Data/Text.hs:948:{-# RULES
./text-0.11.0.0/Data/Text.hs:969:{-# RULES
./text-0.11.0.0/Data/Text.hs:987:{-# RULES
./text-0.11.0.0/Data/Text.hs:1004:{-# RULES
./text-0.11.0.0/Data/Text.hs:1025:{-# RULES
./text-0.11.0.0/Data/Text.hs:1163:{-# RULES
./text-0.11.0.0/Data/Text.hs:1341:{-# RULES
./text-0.11.0.0/Data/Text.hs:1438:{-# RULES
./text-0.11.0.0/Data/Text.hs:1468:{-# RULES
./text-0.11.0.1/Data/Text/Encoding.hs:128:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.0.1/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.0.1/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.0.1/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.0.1/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.0.1/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.11.0.1/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.11.0.1/Data/Text/Lazy/Encoding.hs:121:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.0.1/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.0.1/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:395:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:408:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:420:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:449:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:465:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:479:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:501:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:515:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:572:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:847:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:887:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:909:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:944:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:962:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:1216:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:1291:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:1321:{-# RULES
./text-0.11.0.1/Data/Text/Lazy.hs:1443:{-# RULES
./text-0.11.0.1/Data/Text.hs:415:{-# RULES
./text-0.11.0.1/Data/Text.hs:452:{-# RULES
./text-0.11.0.1/Data/Text.hs:468:{-# RULES
./text-0.11.0.1/Data/Text.hs:485:{-# RULES
./text-0.11.0.1/Data/Text.hs:502:{-# RULES
./text-0.11.0.1/Data/Text.hs:531:{-# RULES
./text-0.11.0.1/Data/Text.hs:536:{-# RULES
./text-0.11.0.1/Data/Text.hs:541:{-# RULES
./text-0.11.0.1/Data/Text.hs:546:{-# RULES
./text-0.11.0.1/Data/Text.hs:551:{-# RULES
./text-0.11.0.1/Data/Text.hs:556:{-# RULES
./text-0.11.0.1/Data/Text.hs:561:{-# RULES
./text-0.11.0.1/Data/Text.hs:677:{-# RULES
./text-0.11.0.1/Data/Text.hs:899:{-# RULES
./text-0.11.0.1/Data/Text.hs:949:{-# RULES
./text-0.11.0.1/Data/Text.hs:970:{-# RULES
./text-0.11.0.1/Data/Text.hs:988:{-# RULES
./text-0.11.0.1/Data/Text.hs:1005:{-# RULES
./text-0.11.0.1/Data/Text.hs:1026:{-# RULES
./text-0.11.0.1/Data/Text.hs:1164:{-# RULES
./text-0.11.0.1/Data/Text.hs:1342:{-# RULES
./text-0.11.0.1/Data/Text.hs:1439:{-# RULES
./text-0.11.0.1/Data/Text.hs:1469:{-# RULES
./text-0.11.0.2/Data/Text/Encoding.hs:128:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.0.2/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.0.2/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.0.2/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.0.2/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.0.2/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.11.0.2/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.11.0.2/Data/Text/Lazy/Encoding.hs:121:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.0.2/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.0.2/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:395:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:408:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:420:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:449:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:465:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:479:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:501:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:515:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:572:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:847:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:887:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:909:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:944:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:962:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:1216:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:1291:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:1321:{-# RULES
./text-0.11.0.2/Data/Text/Lazy.hs:1443:{-# RULES
./text-0.11.0.2/Data/Text.hs:415:{-# RULES
./text-0.11.0.2/Data/Text.hs:452:{-# RULES
./text-0.11.0.2/Data/Text.hs:468:{-# RULES
./text-0.11.0.2/Data/Text.hs:485:{-# RULES
./text-0.11.0.2/Data/Text.hs:502:{-# RULES
./text-0.11.0.2/Data/Text.hs:531:{-# RULES
./text-0.11.0.2/Data/Text.hs:536:{-# RULES
./text-0.11.0.2/Data/Text.hs:541:{-# RULES
./text-0.11.0.2/Data/Text.hs:546:{-# RULES
./text-0.11.0.2/Data/Text.hs:551:{-# RULES
./text-0.11.0.2/Data/Text.hs:556:{-# RULES
./text-0.11.0.2/Data/Text.hs:561:{-# RULES
./text-0.11.0.2/Data/Text.hs:677:{-# RULES
./text-0.11.0.2/Data/Text.hs:899:{-# RULES
./text-0.11.0.2/Data/Text.hs:949:{-# RULES
./text-0.11.0.2/Data/Text.hs:970:{-# RULES
./text-0.11.0.2/Data/Text.hs:988:{-# RULES
./text-0.11.0.2/Data/Text.hs:1005:{-# RULES
./text-0.11.0.2/Data/Text.hs:1026:{-# RULES
./text-0.11.0.2/Data/Text.hs:1164:{-# RULES
./text-0.11.0.2/Data/Text.hs:1342:{-# RULES
./text-0.11.0.2/Data/Text.hs:1439:{-# RULES
./text-0.11.0.2/Data/Text.hs:1469:{-# RULES
./text-0.11.0.3/Data/Text/Encoding.hs:128:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.0.3/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.0.3/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.0.3/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.0.3/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.0.3/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.11.0.3/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.11.0.3/Data/Text/Lazy/Encoding.hs:121:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.0.3/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.0.3/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:395:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:408:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:420:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:449:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:465:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:479:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:501:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:515:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:572:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:847:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:887:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:909:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:944:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:962:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:1216:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:1291:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:1321:{-# RULES
./text-0.11.0.3/Data/Text/Lazy.hs:1443:{-# RULES
./text-0.11.0.3/Data/Text.hs:415:{-# RULES
./text-0.11.0.3/Data/Text.hs:452:{-# RULES
./text-0.11.0.3/Data/Text.hs:468:{-# RULES
./text-0.11.0.3/Data/Text.hs:485:{-# RULES
./text-0.11.0.3/Data/Text.hs:502:{-# RULES
./text-0.11.0.3/Data/Text.hs:531:{-# RULES
./text-0.11.0.3/Data/Text.hs:536:{-# RULES
./text-0.11.0.3/Data/Text.hs:541:{-# RULES
./text-0.11.0.3/Data/Text.hs:546:{-# RULES
./text-0.11.0.3/Data/Text.hs:551:{-# RULES
./text-0.11.0.3/Data/Text.hs:556:{-# RULES
./text-0.11.0.3/Data/Text.hs:561:{-# RULES
./text-0.11.0.3/Data/Text.hs:677:{-# RULES
./text-0.11.0.3/Data/Text.hs:899:{-# RULES
./text-0.11.0.3/Data/Text.hs:949:{-# RULES
./text-0.11.0.3/Data/Text.hs:970:{-# RULES
./text-0.11.0.3/Data/Text.hs:988:{-# RULES
./text-0.11.0.3/Data/Text.hs:1005:{-# RULES
./text-0.11.0.3/Data/Text.hs:1026:{-# RULES
./text-0.11.0.3/Data/Text.hs:1164:{-# RULES
./text-0.11.0.3/Data/Text.hs:1342:{-# RULES
./text-0.11.0.3/Data/Text.hs:1439:{-# RULES
./text-0.11.0.3/Data/Text.hs:1469:{-# RULES
./text-0.11.0.4/Data/Text/Encoding.hs:128:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.0.4/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.0.4/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.0.4/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.0.4/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.0.4/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.11.0.4/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.11.0.4/Data/Text/Lazy/Encoding.hs:121:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.0.4/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.0.4/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.0.4/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.0.4/Data/Text.hs:417:{-# RULES
./text-0.11.0.4/Data/Text.hs:454:{-# RULES
./text-0.11.0.4/Data/Text.hs:470:{-# RULES
./text-0.11.0.4/Data/Text.hs:487:{-# RULES
./text-0.11.0.4/Data/Text.hs:504:{-# RULES
./text-0.11.0.4/Data/Text.hs:533:{-# RULES
./text-0.11.0.4/Data/Text.hs:538:{-# RULES
./text-0.11.0.4/Data/Text.hs:543:{-# RULES
./text-0.11.0.4/Data/Text.hs:548:{-# RULES
./text-0.11.0.4/Data/Text.hs:553:{-# RULES
./text-0.11.0.4/Data/Text.hs:558:{-# RULES
./text-0.11.0.4/Data/Text.hs:563:{-# RULES
./text-0.11.0.4/Data/Text.hs:679:{-# RULES
./text-0.11.0.4/Data/Text.hs:901:{-# RULES
./text-0.11.0.4/Data/Text.hs:951:{-# RULES
./text-0.11.0.4/Data/Text.hs:972:{-# RULES
./text-0.11.0.4/Data/Text.hs:990:{-# RULES
./text-0.11.0.4/Data/Text.hs:1007:{-# RULES
./text-0.11.0.4/Data/Text.hs:1028:{-# RULES
./text-0.11.0.4/Data/Text.hs:1166:{-# RULES
./text-0.11.0.4/Data/Text.hs:1344:{-# RULES
./text-0.11.0.4/Data/Text.hs:1441:{-# RULES
./text-0.11.0.4/Data/Text.hs:1471:{-# RULES
./text-0.11.0.5/Data/Text/Encoding.hs:128:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.0.5/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.0.5/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.0.5/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.0.5/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.0.5/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.11.0.5/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.11.0.5/Data/Text/Lazy/Encoding.hs:121:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.0.5/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.0.5/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.0.5/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.0.5/Data/Text.hs:417:{-# RULES
./text-0.11.0.5/Data/Text.hs:454:{-# RULES
./text-0.11.0.5/Data/Text.hs:470:{-# RULES
./text-0.11.0.5/Data/Text.hs:487:{-# RULES
./text-0.11.0.5/Data/Text.hs:504:{-# RULES
./text-0.11.0.5/Data/Text.hs:533:{-# RULES
./text-0.11.0.5/Data/Text.hs:538:{-# RULES
./text-0.11.0.5/Data/Text.hs:543:{-# RULES
./text-0.11.0.5/Data/Text.hs:548:{-# RULES
./text-0.11.0.5/Data/Text.hs:553:{-# RULES
./text-0.11.0.5/Data/Text.hs:558:{-# RULES
./text-0.11.0.5/Data/Text.hs:563:{-# RULES
./text-0.11.0.5/Data/Text.hs:679:{-# RULES
./text-0.11.0.5/Data/Text.hs:901:{-# RULES
./text-0.11.0.5/Data/Text.hs:951:{-# RULES
./text-0.11.0.5/Data/Text.hs:972:{-# RULES
./text-0.11.0.5/Data/Text.hs:990:{-# RULES
./text-0.11.0.5/Data/Text.hs:1007:{-# RULES
./text-0.11.0.5/Data/Text.hs:1028:{-# RULES
./text-0.11.0.5/Data/Text.hs:1166:{-# RULES
./text-0.11.0.5/Data/Text.hs:1344:{-# RULES
./text-0.11.0.5/Data/Text.hs:1441:{-# RULES
./text-0.11.0.5/Data/Text.hs:1471:{-# RULES
./text-0.11.0.6/Data/Text/Encoding.hs:133:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.0.6/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.0.6/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.0.6/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.0.6/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.0.6/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.11.0.6/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.11.0.6/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.0.6/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.0.6/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.0.6/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.0.6/Data/Text.hs:417:{-# RULES
./text-0.11.0.6/Data/Text.hs:454:{-# RULES
./text-0.11.0.6/Data/Text.hs:470:{-# RULES
./text-0.11.0.6/Data/Text.hs:487:{-# RULES
./text-0.11.0.6/Data/Text.hs:504:{-# RULES
./text-0.11.0.6/Data/Text.hs:533:{-# RULES
./text-0.11.0.6/Data/Text.hs:538:{-# RULES
./text-0.11.0.6/Data/Text.hs:543:{-# RULES
./text-0.11.0.6/Data/Text.hs:548:{-# RULES
./text-0.11.0.6/Data/Text.hs:553:{-# RULES
./text-0.11.0.6/Data/Text.hs:558:{-# RULES
./text-0.11.0.6/Data/Text.hs:563:{-# RULES
./text-0.11.0.6/Data/Text.hs:679:{-# RULES
./text-0.11.0.6/Data/Text.hs:901:{-# RULES
./text-0.11.0.6/Data/Text.hs:951:{-# RULES
./text-0.11.0.6/Data/Text.hs:972:{-# RULES
./text-0.11.0.6/Data/Text.hs:990:{-# RULES
./text-0.11.0.6/Data/Text.hs:1007:{-# RULES
./text-0.11.0.6/Data/Text.hs:1028:{-# RULES
./text-0.11.0.6/Data/Text.hs:1166:{-# RULES
./text-0.11.0.6/Data/Text.hs:1344:{-# RULES
./text-0.11.0.6/Data/Text.hs:1441:{-# RULES
./text-0.11.0.6/Data/Text.hs:1471:{-# RULES
./text-0.11.0.7/Data/Text/Encoding.hs:133:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.0.7/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.0.7/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.0.7/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.0.7/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.0.7/Data/Text/Lazy/Builder.hs:139:{-# RULES
./text-0.11.0.7/Data/Text/Lazy/Builder.hs:282:{-# RULES
./text-0.11.0.7/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.0.7/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.0.7/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.0.7/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.0.7/Data/Text.hs:417:{-# RULES
./text-0.11.0.7/Data/Text.hs:454:{-# RULES
./text-0.11.0.7/Data/Text.hs:470:{-# RULES
./text-0.11.0.7/Data/Text.hs:487:{-# RULES
./text-0.11.0.7/Data/Text.hs:504:{-# RULES
./text-0.11.0.7/Data/Text.hs:533:{-# RULES
./text-0.11.0.7/Data/Text.hs:538:{-# RULES
./text-0.11.0.7/Data/Text.hs:543:{-# RULES
./text-0.11.0.7/Data/Text.hs:548:{-# RULES
./text-0.11.0.7/Data/Text.hs:553:{-# RULES
./text-0.11.0.7/Data/Text.hs:558:{-# RULES
./text-0.11.0.7/Data/Text.hs:563:{-# RULES
./text-0.11.0.7/Data/Text.hs:679:{-# RULES
./text-0.11.0.7/Data/Text.hs:901:{-# RULES
./text-0.11.0.7/Data/Text.hs:951:{-# RULES
./text-0.11.0.7/Data/Text.hs:972:{-# RULES
./text-0.11.0.7/Data/Text.hs:990:{-# RULES
./text-0.11.0.7/Data/Text.hs:1007:{-# RULES
./text-0.11.0.7/Data/Text.hs:1028:{-# RULES
./text-0.11.0.7/Data/Text.hs:1166:{-# RULES
./text-0.11.0.7/Data/Text.hs:1344:{-# RULES
./text-0.11.0.7/Data/Text.hs:1441:{-# RULES
./text-0.11.0.7/Data/Text.hs:1471:{-# RULES
./text-0.11.0.8/Data/Text/Encoding.hs:133:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.0.8/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.0.8/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.0.8/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.0.8/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.0.8/Data/Text/Lazy/Builder.hs:140:{-# RULES
./text-0.11.0.8/Data/Text/Lazy/Builder.hs:283:{-# RULES
./text-0.11.0.8/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.0.8/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.0.8/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.0.8/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.0.8/Data/Text.hs:417:{-# RULES
./text-0.11.0.8/Data/Text.hs:454:{-# RULES
./text-0.11.0.8/Data/Text.hs:470:{-# RULES
./text-0.11.0.8/Data/Text.hs:487:{-# RULES
./text-0.11.0.8/Data/Text.hs:504:{-# RULES
./text-0.11.0.8/Data/Text.hs:533:{-# RULES
./text-0.11.0.8/Data/Text.hs:538:{-# RULES
./text-0.11.0.8/Data/Text.hs:543:{-# RULES
./text-0.11.0.8/Data/Text.hs:548:{-# RULES
./text-0.11.0.8/Data/Text.hs:553:{-# RULES
./text-0.11.0.8/Data/Text.hs:558:{-# RULES
./text-0.11.0.8/Data/Text.hs:563:{-# RULES
./text-0.11.0.8/Data/Text.hs:679:{-# RULES
./text-0.11.0.8/Data/Text.hs:901:{-# RULES
./text-0.11.0.8/Data/Text.hs:951:{-# RULES
./text-0.11.0.8/Data/Text.hs:972:{-# RULES
./text-0.11.0.8/Data/Text.hs:990:{-# RULES
./text-0.11.0.8/Data/Text.hs:1007:{-# RULES
./text-0.11.0.8/Data/Text.hs:1028:{-# RULES
./text-0.11.0.8/Data/Text.hs:1166:{-# RULES
./text-0.11.0.8/Data/Text.hs:1344:{-# RULES
./text-0.11.0.8/Data/Text.hs:1441:{-# RULES
./text-0.11.0.8/Data/Text.hs:1471:{-# RULES
./text-0.11.1.0/Data/Text/Encoding.hs:133:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.0/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.0/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.0/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.0/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.0/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.0/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.0/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.0/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.0/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.0/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.0/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.0/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.0/Data/Text.hs:417:{-# RULES
./text-0.11.1.0/Data/Text.hs:454:{-# RULES
./text-0.11.1.0/Data/Text.hs:470:{-# RULES
./text-0.11.1.0/Data/Text.hs:487:{-# RULES
./text-0.11.1.0/Data/Text.hs:504:{-# RULES
./text-0.11.1.0/Data/Text.hs:533:{-# RULES
./text-0.11.1.0/Data/Text.hs:538:{-# RULES
./text-0.11.1.0/Data/Text.hs:543:{-# RULES
./text-0.11.1.0/Data/Text.hs:548:{-# RULES
./text-0.11.1.0/Data/Text.hs:553:{-# RULES
./text-0.11.1.0/Data/Text.hs:558:{-# RULES
./text-0.11.1.0/Data/Text.hs:563:{-# RULES
./text-0.11.1.0/Data/Text.hs:679:{-# RULES
./text-0.11.1.0/Data/Text.hs:901:{-# RULES
./text-0.11.1.0/Data/Text.hs:951:{-# RULES
./text-0.11.1.0/Data/Text.hs:972:{-# RULES
./text-0.11.1.0/Data/Text.hs:990:{-# RULES
./text-0.11.1.0/Data/Text.hs:1007:{-# RULES
./text-0.11.1.0/Data/Text.hs:1028:{-# RULES
./text-0.11.1.0/Data/Text.hs:1166:{-# RULES
./text-0.11.1.0/Data/Text.hs:1344:{-# RULES
./text-0.11.1.0/Data/Text.hs:1441:{-# RULES
./text-0.11.1.0/Data/Text.hs:1471:{-# RULES
./text-0.11.1.1/Data/Text/Encoding.hs:133:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.1/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.1/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.1/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.1/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.1/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.1/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.1/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.1/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.1/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.1/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.1/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.1/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.1/Data/Text.hs:417:{-# RULES
./text-0.11.1.1/Data/Text.hs:454:{-# RULES
./text-0.11.1.1/Data/Text.hs:470:{-# RULES
./text-0.11.1.1/Data/Text.hs:487:{-# RULES
./text-0.11.1.1/Data/Text.hs:504:{-# RULES
./text-0.11.1.1/Data/Text.hs:533:{-# RULES
./text-0.11.1.1/Data/Text.hs:538:{-# RULES
./text-0.11.1.1/Data/Text.hs:543:{-# RULES
./text-0.11.1.1/Data/Text.hs:548:{-# RULES
./text-0.11.1.1/Data/Text.hs:553:{-# RULES
./text-0.11.1.1/Data/Text.hs:558:{-# RULES
./text-0.11.1.1/Data/Text.hs:563:{-# RULES
./text-0.11.1.1/Data/Text.hs:679:{-# RULES
./text-0.11.1.1/Data/Text.hs:901:{-# RULES
./text-0.11.1.1/Data/Text.hs:951:{-# RULES
./text-0.11.1.1/Data/Text.hs:972:{-# RULES
./text-0.11.1.1/Data/Text.hs:990:{-# RULES
./text-0.11.1.1/Data/Text.hs:1007:{-# RULES
./text-0.11.1.1/Data/Text.hs:1028:{-# RULES
./text-0.11.1.1/Data/Text.hs:1166:{-# RULES
./text-0.11.1.1/Data/Text.hs:1344:{-# RULES
./text-0.11.1.1/Data/Text.hs:1441:{-# RULES
./text-0.11.1.1/Data/Text.hs:1471:{-# RULES
./text-0.11.1.10/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.10/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.10/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.10/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.10/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.10/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.10/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.10/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.10/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.10/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.10/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.10/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.10/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.10/Data/Text.hs:417:{-# RULES
./text-0.11.1.10/Data/Text.hs:454:{-# RULES
./text-0.11.1.10/Data/Text.hs:470:{-# RULES
./text-0.11.1.10/Data/Text.hs:487:{-# RULES
./text-0.11.1.10/Data/Text.hs:504:{-# RULES
./text-0.11.1.10/Data/Text.hs:533:{-# RULES
./text-0.11.1.10/Data/Text.hs:538:{-# RULES
./text-0.11.1.10/Data/Text.hs:543:{-# RULES
./text-0.11.1.10/Data/Text.hs:548:{-# RULES
./text-0.11.1.10/Data/Text.hs:553:{-# RULES
./text-0.11.1.10/Data/Text.hs:558:{-# RULES
./text-0.11.1.10/Data/Text.hs:563:{-# RULES
./text-0.11.1.10/Data/Text.hs:679:{-# RULES
./text-0.11.1.10/Data/Text.hs:901:{-# RULES
./text-0.11.1.10/Data/Text.hs:951:{-# RULES
./text-0.11.1.10/Data/Text.hs:972:{-# RULES
./text-0.11.1.10/Data/Text.hs:990:{-# RULES
./text-0.11.1.10/Data/Text.hs:1007:{-# RULES
./text-0.11.1.10/Data/Text.hs:1028:{-# RULES
./text-0.11.1.10/Data/Text.hs:1166:{-# RULES
./text-0.11.1.10/Data/Text.hs:1344:{-# RULES
./text-0.11.1.10/Data/Text.hs:1441:{-# RULES
./text-0.11.1.10/Data/Text.hs:1471:{-# RULES
./text-0.11.1.11/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.11/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.11/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.11/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.11/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.11/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.11/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.11/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.11/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.11/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.11/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.11/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.11/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.11/Data/Text.hs:417:{-# RULES
./text-0.11.1.11/Data/Text.hs:454:{-# RULES
./text-0.11.1.11/Data/Text.hs:470:{-# RULES
./text-0.11.1.11/Data/Text.hs:487:{-# RULES
./text-0.11.1.11/Data/Text.hs:504:{-# RULES
./text-0.11.1.11/Data/Text.hs:533:{-# RULES
./text-0.11.1.11/Data/Text.hs:538:{-# RULES
./text-0.11.1.11/Data/Text.hs:543:{-# RULES
./text-0.11.1.11/Data/Text.hs:548:{-# RULES
./text-0.11.1.11/Data/Text.hs:553:{-# RULES
./text-0.11.1.11/Data/Text.hs:558:{-# RULES
./text-0.11.1.11/Data/Text.hs:563:{-# RULES
./text-0.11.1.11/Data/Text.hs:679:{-# RULES
./text-0.11.1.11/Data/Text.hs:901:{-# RULES
./text-0.11.1.11/Data/Text.hs:951:{-# RULES
./text-0.11.1.11/Data/Text.hs:972:{-# RULES
./text-0.11.1.11/Data/Text.hs:990:{-# RULES
./text-0.11.1.11/Data/Text.hs:1007:{-# RULES
./text-0.11.1.11/Data/Text.hs:1028:{-# RULES
./text-0.11.1.11/Data/Text.hs:1166:{-# RULES
./text-0.11.1.11/Data/Text.hs:1344:{-# RULES
./text-0.11.1.11/Data/Text.hs:1441:{-# RULES
./text-0.11.1.11/Data/Text.hs:1471:{-# RULES
./text-0.11.1.12/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.12/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.12/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.12/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.12/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.12/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.12/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.12/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.12/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.12/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.12/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.12/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.12/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.12/Data/Text.hs:418:{-# RULES
./text-0.11.1.12/Data/Text.hs:455:{-# RULES
./text-0.11.1.12/Data/Text.hs:471:{-# RULES
./text-0.11.1.12/Data/Text.hs:488:{-# RULES
./text-0.11.1.12/Data/Text.hs:505:{-# RULES
./text-0.11.1.12/Data/Text.hs:534:{-# RULES
./text-0.11.1.12/Data/Text.hs:539:{-# RULES
./text-0.11.1.12/Data/Text.hs:544:{-# RULES
./text-0.11.1.12/Data/Text.hs:549:{-# RULES
./text-0.11.1.12/Data/Text.hs:554:{-# RULES
./text-0.11.1.12/Data/Text.hs:559:{-# RULES
./text-0.11.1.12/Data/Text.hs:564:{-# RULES
./text-0.11.1.12/Data/Text.hs:680:{-# RULES
./text-0.11.1.12/Data/Text.hs:902:{-# RULES
./text-0.11.1.12/Data/Text.hs:952:{-# RULES
./text-0.11.1.12/Data/Text.hs:973:{-# RULES
./text-0.11.1.12/Data/Text.hs:991:{-# RULES
./text-0.11.1.12/Data/Text.hs:1008:{-# RULES
./text-0.11.1.12/Data/Text.hs:1029:{-# RULES
./text-0.11.1.12/Data/Text.hs:1164:{-# RULES
./text-0.11.1.12/Data/Text.hs:1342:{-# RULES
./text-0.11.1.12/Data/Text.hs:1439:{-# RULES
./text-0.11.1.12/Data/Text.hs:1469:{-# RULES
./text-0.11.1.13/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.13/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.13/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.13/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.13/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.13/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.13/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.13/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.13/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.13/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.13/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.13/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.13/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.13/Data/Text.hs:418:{-# RULES
./text-0.11.1.13/Data/Text.hs:455:{-# RULES
./text-0.11.1.13/Data/Text.hs:471:{-# RULES
./text-0.11.1.13/Data/Text.hs:488:{-# RULES
./text-0.11.1.13/Data/Text.hs:505:{-# RULES
./text-0.11.1.13/Data/Text.hs:534:{-# RULES
./text-0.11.1.13/Data/Text.hs:539:{-# RULES
./text-0.11.1.13/Data/Text.hs:544:{-# RULES
./text-0.11.1.13/Data/Text.hs:549:{-# RULES
./text-0.11.1.13/Data/Text.hs:554:{-# RULES
./text-0.11.1.13/Data/Text.hs:559:{-# RULES
./text-0.11.1.13/Data/Text.hs:564:{-# RULES
./text-0.11.1.13/Data/Text.hs:680:{-# RULES
./text-0.11.1.13/Data/Text.hs:902:{-# RULES
./text-0.11.1.13/Data/Text.hs:952:{-# RULES
./text-0.11.1.13/Data/Text.hs:973:{-# RULES
./text-0.11.1.13/Data/Text.hs:991:{-# RULES
./text-0.11.1.13/Data/Text.hs:1008:{-# RULES
./text-0.11.1.13/Data/Text.hs:1029:{-# RULES
./text-0.11.1.13/Data/Text.hs:1164:{-# RULES
./text-0.11.1.13/Data/Text.hs:1342:{-# RULES
./text-0.11.1.13/Data/Text.hs:1439:{-# RULES
./text-0.11.1.13/Data/Text.hs:1467:{-# RULES
./text-0.11.1.2/Data/Text/Encoding.hs:133:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.2/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.2/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.2/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.2/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.2/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.2/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.2/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.2/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.2/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.2/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.2/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.2/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.2/Data/Text.hs:417:{-# RULES
./text-0.11.1.2/Data/Text.hs:454:{-# RULES
./text-0.11.1.2/Data/Text.hs:470:{-# RULES
./text-0.11.1.2/Data/Text.hs:487:{-# RULES
./text-0.11.1.2/Data/Text.hs:504:{-# RULES
./text-0.11.1.2/Data/Text.hs:533:{-# RULES
./text-0.11.1.2/Data/Text.hs:538:{-# RULES
./text-0.11.1.2/Data/Text.hs:543:{-# RULES
./text-0.11.1.2/Data/Text.hs:548:{-# RULES
./text-0.11.1.2/Data/Text.hs:553:{-# RULES
./text-0.11.1.2/Data/Text.hs:558:{-# RULES
./text-0.11.1.2/Data/Text.hs:563:{-# RULES
./text-0.11.1.2/Data/Text.hs:679:{-# RULES
./text-0.11.1.2/Data/Text.hs:901:{-# RULES
./text-0.11.1.2/Data/Text.hs:951:{-# RULES
./text-0.11.1.2/Data/Text.hs:972:{-# RULES
./text-0.11.1.2/Data/Text.hs:990:{-# RULES
./text-0.11.1.2/Data/Text.hs:1007:{-# RULES
./text-0.11.1.2/Data/Text.hs:1028:{-# RULES
./text-0.11.1.2/Data/Text.hs:1166:{-# RULES
./text-0.11.1.2/Data/Text.hs:1344:{-# RULES
./text-0.11.1.2/Data/Text.hs:1441:{-# RULES
./text-0.11.1.2/Data/Text.hs:1471:{-# RULES
./text-0.11.1.3/Data/Text/Encoding.hs:133:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.3/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.3/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.3/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.3/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.3/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.3/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.3/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.3/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.3/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.3/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.3/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.3/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.3/Data/Text.hs:417:{-# RULES
./text-0.11.1.3/Data/Text.hs:454:{-# RULES
./text-0.11.1.3/Data/Text.hs:470:{-# RULES
./text-0.11.1.3/Data/Text.hs:487:{-# RULES
./text-0.11.1.3/Data/Text.hs:504:{-# RULES
./text-0.11.1.3/Data/Text.hs:533:{-# RULES
./text-0.11.1.3/Data/Text.hs:538:{-# RULES
./text-0.11.1.3/Data/Text.hs:543:{-# RULES
./text-0.11.1.3/Data/Text.hs:548:{-# RULES
./text-0.11.1.3/Data/Text.hs:553:{-# RULES
./text-0.11.1.3/Data/Text.hs:558:{-# RULES
./text-0.11.1.3/Data/Text.hs:563:{-# RULES
./text-0.11.1.3/Data/Text.hs:679:{-# RULES
./text-0.11.1.3/Data/Text.hs:901:{-# RULES
./text-0.11.1.3/Data/Text.hs:951:{-# RULES
./text-0.11.1.3/Data/Text.hs:972:{-# RULES
./text-0.11.1.3/Data/Text.hs:990:{-# RULES
./text-0.11.1.3/Data/Text.hs:1007:{-# RULES
./text-0.11.1.3/Data/Text.hs:1028:{-# RULES
./text-0.11.1.3/Data/Text.hs:1166:{-# RULES
./text-0.11.1.3/Data/Text.hs:1344:{-# RULES
./text-0.11.1.3/Data/Text.hs:1441:{-# RULES
./text-0.11.1.3/Data/Text.hs:1471:{-# RULES
./text-0.11.1.5/Data/Text/Encoding.hs:131:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.5/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.5/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.5/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.5/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.5/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.5/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.5/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.5/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.5/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.5/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.5/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.5/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.5/Data/Text.hs:417:{-# RULES
./text-0.11.1.5/Data/Text.hs:454:{-# RULES
./text-0.11.1.5/Data/Text.hs:470:{-# RULES
./text-0.11.1.5/Data/Text.hs:487:{-# RULES
./text-0.11.1.5/Data/Text.hs:504:{-# RULES
./text-0.11.1.5/Data/Text.hs:533:{-# RULES
./text-0.11.1.5/Data/Text.hs:538:{-# RULES
./text-0.11.1.5/Data/Text.hs:543:{-# RULES
./text-0.11.1.5/Data/Text.hs:548:{-# RULES
./text-0.11.1.5/Data/Text.hs:553:{-# RULES
./text-0.11.1.5/Data/Text.hs:558:{-# RULES
./text-0.11.1.5/Data/Text.hs:563:{-# RULES
./text-0.11.1.5/Data/Text.hs:679:{-# RULES
./text-0.11.1.5/Data/Text.hs:901:{-# RULES
./text-0.11.1.5/Data/Text.hs:951:{-# RULES
./text-0.11.1.5/Data/Text.hs:972:{-# RULES
./text-0.11.1.5/Data/Text.hs:990:{-# RULES
./text-0.11.1.5/Data/Text.hs:1007:{-# RULES
./text-0.11.1.5/Data/Text.hs:1028:{-# RULES
./text-0.11.1.5/Data/Text.hs:1166:{-# RULES
./text-0.11.1.5/Data/Text.hs:1344:{-# RULES
./text-0.11.1.5/Data/Text.hs:1441:{-# RULES
./text-0.11.1.5/Data/Text.hs:1471:{-# RULES
./text-0.11.1.6/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.6/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.6/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.6/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.6/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.6/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.6/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.6/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.6/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.6/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.6/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.6/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.6/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.6/Data/Text.hs:417:{-# RULES
./text-0.11.1.6/Data/Text.hs:454:{-# RULES
./text-0.11.1.6/Data/Text.hs:470:{-# RULES
./text-0.11.1.6/Data/Text.hs:487:{-# RULES
./text-0.11.1.6/Data/Text.hs:504:{-# RULES
./text-0.11.1.6/Data/Text.hs:533:{-# RULES
./text-0.11.1.6/Data/Text.hs:538:{-# RULES
./text-0.11.1.6/Data/Text.hs:543:{-# RULES
./text-0.11.1.6/Data/Text.hs:548:{-# RULES
./text-0.11.1.6/Data/Text.hs:553:{-# RULES
./text-0.11.1.6/Data/Text.hs:558:{-# RULES
./text-0.11.1.6/Data/Text.hs:563:{-# RULES
./text-0.11.1.6/Data/Text.hs:679:{-# RULES
./text-0.11.1.6/Data/Text.hs:901:{-# RULES
./text-0.11.1.6/Data/Text.hs:951:{-# RULES
./text-0.11.1.6/Data/Text.hs:972:{-# RULES
./text-0.11.1.6/Data/Text.hs:990:{-# RULES
./text-0.11.1.6/Data/Text.hs:1007:{-# RULES
./text-0.11.1.6/Data/Text.hs:1028:{-# RULES
./text-0.11.1.6/Data/Text.hs:1166:{-# RULES
./text-0.11.1.6/Data/Text.hs:1344:{-# RULES
./text-0.11.1.6/Data/Text.hs:1441:{-# RULES
./text-0.11.1.6/Data/Text.hs:1471:{-# RULES
./text-0.11.1.7/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.7/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.7/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.7/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.7/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.7/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.7/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.7/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.7/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.7/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.7/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.7/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.7/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.7/Data/Text.hs:417:{-# RULES
./text-0.11.1.7/Data/Text.hs:454:{-# RULES
./text-0.11.1.7/Data/Text.hs:470:{-# RULES
./text-0.11.1.7/Data/Text.hs:487:{-# RULES
./text-0.11.1.7/Data/Text.hs:504:{-# RULES
./text-0.11.1.7/Data/Text.hs:533:{-# RULES
./text-0.11.1.7/Data/Text.hs:538:{-# RULES
./text-0.11.1.7/Data/Text.hs:543:{-# RULES
./text-0.11.1.7/Data/Text.hs:548:{-# RULES
./text-0.11.1.7/Data/Text.hs:553:{-# RULES
./text-0.11.1.7/Data/Text.hs:558:{-# RULES
./text-0.11.1.7/Data/Text.hs:563:{-# RULES
./text-0.11.1.7/Data/Text.hs:679:{-# RULES
./text-0.11.1.7/Data/Text.hs:901:{-# RULES
./text-0.11.1.7/Data/Text.hs:951:{-# RULES
./text-0.11.1.7/Data/Text.hs:972:{-# RULES
./text-0.11.1.7/Data/Text.hs:990:{-# RULES
./text-0.11.1.7/Data/Text.hs:1007:{-# RULES
./text-0.11.1.7/Data/Text.hs:1028:{-# RULES
./text-0.11.1.7/Data/Text.hs:1166:{-# RULES
./text-0.11.1.7/Data/Text.hs:1344:{-# RULES
./text-0.11.1.7/Data/Text.hs:1441:{-# RULES
./text-0.11.1.7/Data/Text.hs:1471:{-# RULES
./text-0.11.1.8/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.8/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.8/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.8/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.8/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.8/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.8/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.8/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.8/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.8/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.8/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.8/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.8/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.8/Data/Text.hs:417:{-# RULES
./text-0.11.1.8/Data/Text.hs:454:{-# RULES
./text-0.11.1.8/Data/Text.hs:470:{-# RULES
./text-0.11.1.8/Data/Text.hs:487:{-# RULES
./text-0.11.1.8/Data/Text.hs:504:{-# RULES
./text-0.11.1.8/Data/Text.hs:533:{-# RULES
./text-0.11.1.8/Data/Text.hs:538:{-# RULES
./text-0.11.1.8/Data/Text.hs:543:{-# RULES
./text-0.11.1.8/Data/Text.hs:548:{-# RULES
./text-0.11.1.8/Data/Text.hs:553:{-# RULES
./text-0.11.1.8/Data/Text.hs:558:{-# RULES
./text-0.11.1.8/Data/Text.hs:563:{-# RULES
./text-0.11.1.8/Data/Text.hs:679:{-# RULES
./text-0.11.1.8/Data/Text.hs:901:{-# RULES
./text-0.11.1.8/Data/Text.hs:951:{-# RULES
./text-0.11.1.8/Data/Text.hs:972:{-# RULES
./text-0.11.1.8/Data/Text.hs:990:{-# RULES
./text-0.11.1.8/Data/Text.hs:1007:{-# RULES
./text-0.11.1.8/Data/Text.hs:1028:{-# RULES
./text-0.11.1.8/Data/Text.hs:1166:{-# RULES
./text-0.11.1.8/Data/Text.hs:1344:{-# RULES
./text-0.11.1.8/Data/Text.hs:1441:{-# RULES
./text-0.11.1.8/Data/Text.hs:1471:{-# RULES
./text-0.11.1.9/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.1.9/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.1.9/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.1.9/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.11.1.9/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.1.9/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.1.9/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.1.9/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.1.9/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.1.9/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.1.9/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.1.9/Data/Text/Lazy.hs:360:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:397:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:410:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:422:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:451:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:467:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:481:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:517:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:574:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:849:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:889:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:946:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:964:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:1218:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:1293:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:1323:{-# RULES
./text-0.11.1.9/Data/Text/Lazy.hs:1445:{-# RULES
./text-0.11.1.9/Data/Text.hs:417:{-# RULES
./text-0.11.1.9/Data/Text.hs:454:{-# RULES
./text-0.11.1.9/Data/Text.hs:470:{-# RULES
./text-0.11.1.9/Data/Text.hs:487:{-# RULES
./text-0.11.1.9/Data/Text.hs:504:{-# RULES
./text-0.11.1.9/Data/Text.hs:533:{-# RULES
./text-0.11.1.9/Data/Text.hs:538:{-# RULES
./text-0.11.1.9/Data/Text.hs:543:{-# RULES
./text-0.11.1.9/Data/Text.hs:548:{-# RULES
./text-0.11.1.9/Data/Text.hs:553:{-# RULES
./text-0.11.1.9/Data/Text.hs:558:{-# RULES
./text-0.11.1.9/Data/Text.hs:563:{-# RULES
./text-0.11.1.9/Data/Text.hs:679:{-# RULES
./text-0.11.1.9/Data/Text.hs:901:{-# RULES
./text-0.11.1.9/Data/Text.hs:951:{-# RULES
./text-0.11.1.9/Data/Text.hs:972:{-# RULES
./text-0.11.1.9/Data/Text.hs:990:{-# RULES
./text-0.11.1.9/Data/Text.hs:1007:{-# RULES
./text-0.11.1.9/Data/Text.hs:1028:{-# RULES
./text-0.11.1.9/Data/Text.hs:1166:{-# RULES
./text-0.11.1.9/Data/Text.hs:1344:{-# RULES
./text-0.11.1.9/Data/Text.hs:1441:{-# RULES
./text-0.11.1.9/Data/Text.hs:1471:{-# RULES
./text-0.11.2.0/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.2.0/Data/Text/Fusion/Common.hs:136:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.2.0/Data/Text/Fusion/Common.hs:349:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.2.0/Data/Text/Fusion/Common.hs:841:{-# RULES
./text-0.11.2.0/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.2.0/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.2.0/Data/Text/Lazy/Builder/Int.hs:71:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.2.0/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.2.0/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.2.0/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.2.0/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.2.0/Data/Text/Lazy.hs:365:{-# RULES "TEXT literal" forall a.
./text-0.11.2.0/Data/Text/Lazy.hs:369:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.2.0/Data/Text/Lazy.hs:379:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:416:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:429:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:441:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:470:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:486:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:500:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:522:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:536:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:593:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:868:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:908:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:930:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:965:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:983:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:1237:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:1312:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:1342:{-# RULES
./text-0.11.2.0/Data/Text/Lazy.hs:1464:{-# RULES
./text-0.11.2.0/Data/Text.hs:386:{-# RULES "TEXT literal" forall a.
./text-0.11.2.0/Data/Text.hs:390:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.2.0/Data/Text.hs:437:{-# RULES
./text-0.11.2.0/Data/Text.hs:474:{-# RULES
./text-0.11.2.0/Data/Text.hs:490:{-# RULES
./text-0.11.2.0/Data/Text.hs:507:{-# RULES
./text-0.11.2.0/Data/Text.hs:524:{-# RULES
./text-0.11.2.0/Data/Text.hs:553:{-# RULES
./text-0.11.2.0/Data/Text.hs:558:{-# RULES
./text-0.11.2.0/Data/Text.hs:563:{-# RULES
./text-0.11.2.0/Data/Text.hs:568:{-# RULES
./text-0.11.2.0/Data/Text.hs:573:{-# RULES
./text-0.11.2.0/Data/Text.hs:578:{-# RULES
./text-0.11.2.0/Data/Text.hs:583:{-# RULES
./text-0.11.2.0/Data/Text.hs:699:{-# RULES
./text-0.11.2.0/Data/Text.hs:921:{-# RULES
./text-0.11.2.0/Data/Text.hs:971:{-# RULES
./text-0.11.2.0/Data/Text.hs:992:{-# RULES
./text-0.11.2.0/Data/Text.hs:1010:{-# RULES
./text-0.11.2.0/Data/Text.hs:1027:{-# RULES
./text-0.11.2.0/Data/Text.hs:1048:{-# RULES
./text-0.11.2.0/Data/Text.hs:1183:{-# RULES
./text-0.11.2.0/Data/Text.hs:1361:{-# RULES
./text-0.11.2.0/Data/Text.hs:1458:{-# RULES
./text-0.11.2.0/Data/Text.hs:1486:{-# RULES
./text-0.11.2.1/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.2.1/Data/Text/Fusion/Common.hs:136:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.2.1/Data/Text/Fusion/Common.hs:349:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.2.1/Data/Text/Fusion/Common.hs:841:{-# RULES
./text-0.11.2.1/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.2.1/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.2.1/Data/Text/Lazy/Builder/Int.hs:75:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.2.1/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.2.1/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.2.1/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.2.1/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.2.1/Data/Text/Lazy.hs:365:{-# RULES "TEXT literal" forall a.
./text-0.11.2.1/Data/Text/Lazy.hs:369:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.2.1/Data/Text/Lazy.hs:379:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:416:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:429:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:441:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:470:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:486:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:500:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:522:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:536:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:593:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:868:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:908:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:930:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:965:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:983:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:1237:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:1312:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:1342:{-# RULES
./text-0.11.2.1/Data/Text/Lazy.hs:1464:{-# RULES
./text-0.11.2.1/Data/Text.hs:386:{-# RULES "TEXT literal" forall a.
./text-0.11.2.1/Data/Text.hs:390:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.2.1/Data/Text.hs:437:{-# RULES
./text-0.11.2.1/Data/Text.hs:474:{-# RULES
./text-0.11.2.1/Data/Text.hs:490:{-# RULES
./text-0.11.2.1/Data/Text.hs:507:{-# RULES
./text-0.11.2.1/Data/Text.hs:524:{-# RULES
./text-0.11.2.1/Data/Text.hs:553:{-# RULES
./text-0.11.2.1/Data/Text.hs:558:{-# RULES
./text-0.11.2.1/Data/Text.hs:563:{-# RULES
./text-0.11.2.1/Data/Text.hs:568:{-# RULES
./text-0.11.2.1/Data/Text.hs:573:{-# RULES
./text-0.11.2.1/Data/Text.hs:578:{-# RULES
./text-0.11.2.1/Data/Text.hs:583:{-# RULES
./text-0.11.2.1/Data/Text.hs:699:{-# RULES
./text-0.11.2.1/Data/Text.hs:921:{-# RULES
./text-0.11.2.1/Data/Text.hs:971:{-# RULES
./text-0.11.2.1/Data/Text.hs:992:{-# RULES
./text-0.11.2.1/Data/Text.hs:1010:{-# RULES
./text-0.11.2.1/Data/Text.hs:1027:{-# RULES
./text-0.11.2.1/Data/Text.hs:1048:{-# RULES
./text-0.11.2.1/Data/Text.hs:1183:{-# RULES
./text-0.11.2.1/Data/Text.hs:1361:{-# RULES
./text-0.11.2.1/Data/Text.hs:1458:{-# RULES
./text-0.11.2.1/Data/Text.hs:1486:{-# RULES
./text-0.11.2.2/Data/Text/Encoding.hs:135:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.2.2/Data/Text/Fusion/Common.hs:136:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.2.2/Data/Text/Fusion/Common.hs:349:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.2.2/Data/Text/Fusion/Common.hs:841:{-# RULES
./text-0.11.2.2/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.2.2/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.2.2/Data/Text/Lazy/Builder/Int.hs:75:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.2.2/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.2.2/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.2.2/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.2.2/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.2.2/Data/Text/Lazy.hs:365:{-# RULES "TEXT literal" forall a.
./text-0.11.2.2/Data/Text/Lazy.hs:369:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.2.2/Data/Text/Lazy.hs:379:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:416:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:429:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:441:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:470:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:486:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:500:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:522:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:536:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:593:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:868:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:908:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:930:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:965:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:983:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:1237:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:1312:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:1342:{-# RULES
./text-0.11.2.2/Data/Text/Lazy.hs:1464:{-# RULES
./text-0.11.2.2/Data/Text.hs:386:{-# RULES "TEXT literal" forall a.
./text-0.11.2.2/Data/Text.hs:390:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.2.2/Data/Text.hs:437:{-# RULES
./text-0.11.2.2/Data/Text.hs:474:{-# RULES
./text-0.11.2.2/Data/Text.hs:490:{-# RULES
./text-0.11.2.2/Data/Text.hs:507:{-# RULES
./text-0.11.2.2/Data/Text.hs:524:{-# RULES
./text-0.11.2.2/Data/Text.hs:553:{-# RULES
./text-0.11.2.2/Data/Text.hs:558:{-# RULES
./text-0.11.2.2/Data/Text.hs:563:{-# RULES
./text-0.11.2.2/Data/Text.hs:568:{-# RULES
./text-0.11.2.2/Data/Text.hs:573:{-# RULES
./text-0.11.2.2/Data/Text.hs:578:{-# RULES
./text-0.11.2.2/Data/Text.hs:583:{-# RULES
./text-0.11.2.2/Data/Text.hs:699:{-# RULES
./text-0.11.2.2/Data/Text.hs:921:{-# RULES
./text-0.11.2.2/Data/Text.hs:971:{-# RULES
./text-0.11.2.2/Data/Text.hs:992:{-# RULES
./text-0.11.2.2/Data/Text.hs:1010:{-# RULES
./text-0.11.2.2/Data/Text.hs:1027:{-# RULES
./text-0.11.2.2/Data/Text.hs:1048:{-# RULES
./text-0.11.2.2/Data/Text.hs:1183:{-# RULES
./text-0.11.2.2/Data/Text.hs:1361:{-# RULES
./text-0.11.2.2/Data/Text.hs:1458:{-# RULES
./text-0.11.2.2/Data/Text.hs:1486:{-# RULES
./text-0.11.2.3/Data/Text/Encoding.hs:136:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.2.3/Data/Text/Fusion/Common.hs:136:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.2.3/Data/Text/Fusion/Common.hs:349:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.2.3/Data/Text/Fusion/Common.hs:840:{-# RULES
./text-0.11.2.3/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:47:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:48:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:49:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:50:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:51:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder/Int.hs:103:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-0.11.2.3/Data/Text/Lazy/Builder.hs:158:{-# RULES
./text-0.11.2.3/Data/Text/Lazy/Builder.hs:290:{-# RULES
./text-0.11.2.3/Data/Text/Lazy/Encoding.hs:132:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.2.3/Data/Text/Lazy/Fusion.hs:95:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.2.3/Data/Text/Lazy.hs:365:{-# RULES "TEXT literal" forall a.
./text-0.11.2.3/Data/Text/Lazy.hs:369:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.2.3/Data/Text/Lazy.hs:379:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:416:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:429:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:441:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:470:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:486:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:500:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:522:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:536:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:593:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:868:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:908:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:930:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:965:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:983:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:1237:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:1312:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:1342:{-# RULES
./text-0.11.2.3/Data/Text/Lazy.hs:1464:{-# RULES
./text-0.11.2.3/Data/Text.hs:386:{-# RULES "TEXT literal" forall a.
./text-0.11.2.3/Data/Text.hs:390:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.2.3/Data/Text.hs:437:{-# RULES
./text-0.11.2.3/Data/Text.hs:474:{-# RULES
./text-0.11.2.3/Data/Text.hs:490:{-# RULES
./text-0.11.2.3/Data/Text.hs:507:{-# RULES
./text-0.11.2.3/Data/Text.hs:524:{-# RULES
./text-0.11.2.3/Data/Text.hs:553:{-# RULES
./text-0.11.2.3/Data/Text.hs:558:{-# RULES
./text-0.11.2.3/Data/Text.hs:563:{-# RULES
./text-0.11.2.3/Data/Text.hs:568:{-# RULES
./text-0.11.2.3/Data/Text.hs:573:{-# RULES
./text-0.11.2.3/Data/Text.hs:578:{-# RULES
./text-0.11.2.3/Data/Text.hs:583:{-# RULES
./text-0.11.2.3/Data/Text.hs:699:{-# RULES
./text-0.11.2.3/Data/Text.hs:921:{-# RULES
./text-0.11.2.3/Data/Text.hs:971:{-# RULES
./text-0.11.2.3/Data/Text.hs:992:{-# RULES
./text-0.11.2.3/Data/Text.hs:1010:{-# RULES
./text-0.11.2.3/Data/Text.hs:1027:{-# RULES
./text-0.11.2.3/Data/Text.hs:1048:{-# RULES
./text-0.11.2.3/Data/Text.hs:1183:{-# RULES
./text-0.11.2.3/Data/Text.hs:1361:{-# RULES
./text-0.11.2.3/Data/Text.hs:1458:{-# RULES
./text-0.11.2.3/Data/Text.hs:1486:{-# RULES
./text-0.11.3.0/Data/Text/Encoding.hs:152:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.3.0/Data/Text/Fusion/Common.hs:136:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.3.0/Data/Text/Fusion/Common.hs:353:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.3.0/Data/Text/Fusion/Common.hs:844:{-# RULES
./text-0.11.3.0/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.3.0/Data/Text/Lazy/Builder/Int.hs:163:{-# RULES "hexadecimal/Integer"
./text-0.11.3.0/Data/Text/Lazy/Builder/Internal.hs:167:{-# RULES
./text-0.11.3.0/Data/Text/Lazy/Builder/Internal.hs:299:{-# RULES
./text-0.11.3.0/Data/Text/Lazy/Encoding.hs:140:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.3.0/Data/Text/Lazy/Fusion.hs:97:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.3.0/Data/Text/Lazy.hs:368:{-# RULES "TEXT literal" forall a.
./text-0.11.3.0/Data/Text/Lazy.hs:372:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.3.0/Data/Text/Lazy.hs:382:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:419:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:432:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:444:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:473:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:489:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:525:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:539:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:596:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:871:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:933:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:968:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:986:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:1240:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:1315:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:1345:{-# RULES
./text-0.11.3.0/Data/Text/Lazy.hs:1467:{-# RULES
./text-0.11.3.0/Data/Text.hs:392:{-# RULES "TEXT literal" forall a.
./text-0.11.3.0/Data/Text.hs:396:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.3.0/Data/Text.hs:443:{-# RULES
./text-0.11.3.0/Data/Text.hs:480:{-# RULES
./text-0.11.3.0/Data/Text.hs:496:{-# RULES
./text-0.11.3.0/Data/Text.hs:513:{-# RULES
./text-0.11.3.0/Data/Text.hs:530:{-# RULES
./text-0.11.3.0/Data/Text.hs:559:{-# RULES
./text-0.11.3.0/Data/Text.hs:564:{-# RULES
./text-0.11.3.0/Data/Text.hs:569:{-# RULES
./text-0.11.3.0/Data/Text.hs:574:{-# RULES
./text-0.11.3.0/Data/Text.hs:579:{-# RULES
./text-0.11.3.0/Data/Text.hs:584:{-# RULES
./text-0.11.3.0/Data/Text.hs:589:{-# RULES
./text-0.11.3.0/Data/Text.hs:705:{-# RULES
./text-0.11.3.0/Data/Text.hs:927:{-# RULES
./text-0.11.3.0/Data/Text.hs:977:{-# RULES
./text-0.11.3.0/Data/Text.hs:998:{-# RULES
./text-0.11.3.0/Data/Text.hs:1016:{-# RULES
./text-0.11.3.0/Data/Text.hs:1033:{-# RULES
./text-0.11.3.0/Data/Text.hs:1054:{-# RULES
./text-0.11.3.0/Data/Text.hs:1189:{-# RULES
./text-0.11.3.0/Data/Text.hs:1367:{-# RULES
./text-0.11.3.0/Data/Text.hs:1464:{-# RULES
./text-0.11.3.0/Data/Text.hs:1492:{-# RULES
./text-0.11.3.1/Data/Text/Encoding.hs:152:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.11.3.1/Data/Text/Fusion/Common.hs:136:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.11.3.1/Data/Text/Fusion/Common.hs:353:  RULES "STREAM map/map fusion" forall f g s.
./text-0.11.3.1/Data/Text/Fusion/Common.hs:844:{-# RULES
./text-0.11.3.1/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-0.11.3.1/Data/Text/Lazy/Builder/Int.hs:163:{-# RULES "hexadecimal/Integer"
./text-0.11.3.1/Data/Text/Lazy/Builder/Internal.hs:167:{-# RULES
./text-0.11.3.1/Data/Text/Lazy/Builder/Internal.hs:299:{-# RULES
./text-0.11.3.1/Data/Text/Lazy/Encoding.hs:140:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.11.3.1/Data/Text/Lazy/Fusion.hs:97:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.11.3.1/Data/Text/Lazy.hs:368:{-# RULES "TEXT literal" forall a.
./text-0.11.3.1/Data/Text/Lazy.hs:372:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.3.1/Data/Text/Lazy.hs:382:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:419:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:432:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:444:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:473:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:489:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:503:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:525:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:539:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:596:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:871:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:911:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:933:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:968:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:986:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:1240:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:1315:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:1345:{-# RULES
./text-0.11.3.1/Data/Text/Lazy.hs:1467:{-# RULES
./text-0.11.3.1/Data/Text.hs:392:{-# RULES "TEXT literal" forall a.
./text-0.11.3.1/Data/Text.hs:396:{-# RULES "TEXT literal UTF8" forall a.
./text-0.11.3.1/Data/Text.hs:443:{-# RULES
./text-0.11.3.1/Data/Text.hs:480:{-# RULES
./text-0.11.3.1/Data/Text.hs:496:{-# RULES
./text-0.11.3.1/Data/Text.hs:513:{-# RULES
./text-0.11.3.1/Data/Text.hs:530:{-# RULES
./text-0.11.3.1/Data/Text.hs:559:{-# RULES
./text-0.11.3.1/Data/Text.hs:564:{-# RULES
./text-0.11.3.1/Data/Text.hs:569:{-# RULES
./text-0.11.3.1/Data/Text.hs:574:{-# RULES
./text-0.11.3.1/Data/Text.hs:579:{-# RULES
./text-0.11.3.1/Data/Text.hs:584:{-# RULES
./text-0.11.3.1/Data/Text.hs:589:{-# RULES
./text-0.11.3.1/Data/Text.hs:705:{-# RULES
./text-0.11.3.1/Data/Text.hs:927:{-# RULES
./text-0.11.3.1/Data/Text.hs:977:{-# RULES
./text-0.11.3.1/Data/Text.hs:998:{-# RULES
./text-0.11.3.1/Data/Text.hs:1016:{-# RULES
./text-0.11.3.1/Data/Text.hs:1033:{-# RULES
./text-0.11.3.1/Data/Text.hs:1054:{-# RULES
./text-0.11.3.1/Data/Text.hs:1189:{-# RULES
./text-0.11.3.1/Data/Text.hs:1367:{-# RULES
./text-0.11.3.1/Data/Text.hs:1464:{-# RULES
./text-0.11.3.1/Data/Text.hs:1492:{-# RULES
./text-0.2/Data/Text/Fusion/Common.hs:122:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.2/Data/Text/Fusion/Common.hs:273:  RULES "STREAM map/map fusion" forall f g s.
./text-0.2/Data/Text/Fusion/Common.hs:673:{-# RULES
./text-0.2/Data/Text/Fusion.hs:114:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.2/Data/Text/Lazy/Fusion.hs:92:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.2/Data/Text/Lazy.hs:199:{-# RULES
./text-0.2/Data/Text/Lazy.hs:218:{-# RULES
./text-0.2/Data/Text/Lazy.hs:229:{-# RULES
./text-0.2/Data/Text/Lazy.hs:242:{-# RULES
./text-0.2/Data/Text/Lazy.hs:271:{-# RULES
./text-0.2/Data/Text/Lazy.hs:287:{-# RULES
./text-0.2/Data/Text/Lazy.hs:301:{-# RULES
./text-0.2/Data/Text/Lazy.hs:317:{-# RULES
./text-0.2/Data/Text/Lazy.hs:329:{-# RULES
./text-0.2/Data/Text/Lazy.hs:545:{-# RULES
./text-0.2/Data/Text/Lazy.hs:567:{-# RULES
./text-0.2/Data/Text/Lazy.hs:587:{-# RULES
./text-0.2/Data/Text/Lazy.hs:605:{-# RULES
./text-0.2/Data/Text/Lazy.hs:760:{-# RULES
./text-0.2/Data/Text.hs:255:{-# RULES
./text-0.2/Data/Text.hs:281:{-# RULES
./text-0.2/Data/Text.hs:299:{-# RULES
./text-0.2/Data/Text.hs:315:{-# RULES
./text-0.2/Data/Text.hs:332:{-# RULES
./text-0.2/Data/Text.hs:345:{-# RULES
./text-0.2/Data/Text.hs:585:{-# RULES
./text-0.2/Data/Text.hs:606:{-# RULES
./text-0.2/Data/Text.hs:624:{-# RULES
./text-0.2/Data/Text.hs:641:{-# RULES
./text-0.2/Data/Text.hs:950:{-# RULES
./text-0.3/Data/Text/Fusion/Common.hs:129:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.3/Data/Text/Fusion/Common.hs:280:  RULES "STREAM map/map fusion" forall f g s.
./text-0.3/Data/Text/Fusion/Common.hs:739:{-# RULES
./text-0.3/Data/Text/Fusion.hs:115:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.3/Data/Text/Lazy/Fusion.hs:92:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.3/Data/Text/Lazy.hs:205:{-# RULES
./text-0.3/Data/Text/Lazy.hs:224:{-# RULES
./text-0.3/Data/Text/Lazy.hs:235:{-# RULES
./text-0.3/Data/Text/Lazy.hs:248:{-# RULES
./text-0.3/Data/Text/Lazy.hs:277:{-# RULES
./text-0.3/Data/Text/Lazy.hs:293:{-# RULES
./text-0.3/Data/Text/Lazy.hs:307:{-# RULES
./text-0.3/Data/Text/Lazy.hs:323:{-# RULES
./text-0.3/Data/Text/Lazy.hs:335:{-# RULES
./text-0.3/Data/Text/Lazy.hs:598:{-# RULES
./text-0.3/Data/Text/Lazy.hs:620:{-# RULES
./text-0.3/Data/Text/Lazy.hs:640:{-# RULES
./text-0.3/Data/Text/Lazy.hs:658:{-# RULES
./text-0.3/Data/Text/Lazy.hs:813:{-# RULES
./text-0.3/Data/Text.hs:261:{-# RULES
./text-0.3/Data/Text.hs:287:{-# RULES
./text-0.3/Data/Text.hs:305:{-# RULES
./text-0.3/Data/Text.hs:321:{-# RULES
./text-0.3/Data/Text.hs:338:{-# RULES
./text-0.3/Data/Text.hs:351:{-# RULES
./text-0.3/Data/Text.hs:638:{-# RULES
./text-0.3/Data/Text.hs:659:{-# RULES
./text-0.3/Data/Text.hs:677:{-# RULES
./text-0.3/Data/Text.hs:694:{-# RULES
./text-0.3/Data/Text.hs:1003:{-# RULES
./text-0.4/Data/Text/Fusion/Common.hs:134:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.4/Data/Text/Fusion/Common.hs:285:  RULES "STREAM map/map fusion" forall f g s.
./text-0.4/Data/Text/Fusion/Common.hs:775:{-# RULES
./text-0.4/Data/Text/Fusion.hs:115:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.4/Data/Text/Lazy/Fusion.hs:92:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.4/Data/Text/Lazy.hs:228:{-# RULES
./text-0.4/Data/Text/Lazy.hs:247:{-# RULES
./text-0.4/Data/Text/Lazy.hs:258:{-# RULES
./text-0.4/Data/Text/Lazy.hs:271:{-# RULES
./text-0.4/Data/Text/Lazy.hs:300:{-# RULES
./text-0.4/Data/Text/Lazy.hs:316:{-# RULES
./text-0.4/Data/Text/Lazy.hs:330:{-# RULES
./text-0.4/Data/Text/Lazy.hs:346:{-# RULES
./text-0.4/Data/Text/Lazy.hs:358:{-# RULES
./text-0.4/Data/Text/Lazy.hs:396:{-# RULES
./text-0.4/Data/Text/Lazy.hs:646:{-# RULES
./text-0.4/Data/Text/Lazy.hs:684:{-# RULES
./text-0.4/Data/Text/Lazy.hs:706:{-# RULES
./text-0.4/Data/Text/Lazy.hs:726:{-# RULES
./text-0.4/Data/Text/Lazy.hs:744:{-# RULES
./text-0.4/Data/Text/Lazy.hs:906:{-# RULES
./text-0.4/Data/Text/Lazy.hs:1033:{-# RULES
./text-0.4/Data/Text/Lazy.hs:1134:{-# RULES
./text-0.4/Data/Text.hs:274:{-# RULES
./text-0.4/Data/Text.hs:300:{-# RULES
./text-0.4/Data/Text.hs:318:{-# RULES
./text-0.4/Data/Text.hs:334:{-# RULES
./text-0.4/Data/Text.hs:351:{-# RULES
./text-0.4/Data/Text.hs:364:{-# RULES
./text-0.4/Data/Text.hs:473:{-# RULES
./text-0.4/Data/Text.hs:664:{-# RULES
./text-0.4/Data/Text.hs:713:{-# RULES
./text-0.4/Data/Text.hs:734:{-# RULES
./text-0.4/Data/Text.hs:752:{-# RULES
./text-0.4/Data/Text.hs:769:{-# RULES
./text-0.4/Data/Text.hs:790:{-# RULES
./text-0.4/Data/Text.hs:932:{-# RULES
./text-0.4/Data/Text.hs:1125:{-# RULES
./text-0.4/Data/Text.hs:1221:{-# RULES
./text-0.5/Data/Text/Fusion/Common.hs:131:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.5/Data/Text/Fusion/Common.hs:294:  RULES "STREAM map/map fusion" forall f g s.
./text-0.5/Data/Text/Fusion/Common.hs:783:{-# RULES
./text-0.5/Data/Text/Fusion.hs:112:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.5/Data/Text/Lazy/Fusion.hs:89:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.5/Data/Text/Lazy.hs:226:{-# RULES
./text-0.5/Data/Text/Lazy.hs:245:{-# RULES
./text-0.5/Data/Text/Lazy.hs:256:{-# RULES
./text-0.5/Data/Text/Lazy.hs:269:{-# RULES
./text-0.5/Data/Text/Lazy.hs:298:{-# RULES
./text-0.5/Data/Text/Lazy.hs:314:{-# RULES
./text-0.5/Data/Text/Lazy.hs:328:{-# RULES
./text-0.5/Data/Text/Lazy.hs:350:{-# RULES
./text-0.5/Data/Text/Lazy.hs:362:{-# RULES
./text-0.5/Data/Text/Lazy.hs:400:{-# RULES
./text-0.5/Data/Text/Lazy.hs:653:{-# RULES
./text-0.5/Data/Text/Lazy.hs:691:{-# RULES
./text-0.5/Data/Text/Lazy.hs:713:{-# RULES
./text-0.5/Data/Text/Lazy.hs:748:{-# RULES
./text-0.5/Data/Text/Lazy.hs:766:{-# RULES
./text-0.5/Data/Text/Lazy.hs:1009:{-# RULES
./text-0.5/Data/Text/Lazy.hs:1085:{-# RULES
./text-0.5/Data/Text/Lazy.hs:1115:{-# RULES
./text-0.5/Data/Text/Lazy.hs:1162:{-# RULES
./text-0.5/Data/Text.hs:268:{-# RULES
./text-0.5/Data/Text.hs:294:{-# RULES
./text-0.5/Data/Text.hs:312:{-# RULES
./text-0.5/Data/Text.hs:328:{-# RULES
./text-0.5/Data/Text.hs:345:{-# RULES
./text-0.5/Data/Text.hs:358:{-# RULES
./text-0.5/Data/Text.hs:473:{-# RULES
./text-0.5/Data/Text.hs:666:{-# RULES
./text-0.5/Data/Text.hs:716:{-# RULES
./text-0.5/Data/Text.hs:737:{-# RULES
./text-0.5/Data/Text.hs:755:{-# RULES
./text-0.5/Data/Text.hs:772:{-# RULES
./text-0.5/Data/Text.hs:793:{-# RULES
./text-0.5/Data/Text.hs:931:{-# RULES
./text-0.5/Data/Text.hs:1099:{-# RULES
./text-0.5/Data/Text.hs:1195:{-# RULES
./text-0.5/Data/Text.hs:1225:{-# RULES
./text-0.6/Data/Text/Fusion/Common.hs:131:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.6/Data/Text/Fusion/Common.hs:296:  RULES "STREAM map/map fusion" forall f g s.
./text-0.6/Data/Text/Fusion/Common.hs:788:{-# RULES
./text-0.6/Data/Text/Fusion.hs:112:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.6/Data/Text/Lazy/Fusion.hs:89:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.6/Data/Text/Lazy.hs:232:{-# RULES
./text-0.6/Data/Text/Lazy.hs:251:{-# RULES
./text-0.6/Data/Text/Lazy.hs:262:{-# RULES
./text-0.6/Data/Text/Lazy.hs:275:{-# RULES
./text-0.6/Data/Text/Lazy.hs:304:{-# RULES
./text-0.6/Data/Text/Lazy.hs:320:{-# RULES
./text-0.6/Data/Text/Lazy.hs:334:{-# RULES
./text-0.6/Data/Text/Lazy.hs:356:{-# RULES
./text-0.6/Data/Text/Lazy.hs:368:{-# RULES
./text-0.6/Data/Text/Lazy.hs:406:{-# RULES
./text-0.6/Data/Text/Lazy.hs:661:{-# RULES
./text-0.6/Data/Text/Lazy.hs:699:{-# RULES
./text-0.6/Data/Text/Lazy.hs:721:{-# RULES
./text-0.6/Data/Text/Lazy.hs:756:{-# RULES
./text-0.6/Data/Text/Lazy.hs:774:{-# RULES
./text-0.6/Data/Text/Lazy.hs:1029:{-# RULES
./text-0.6/Data/Text/Lazy.hs:1105:{-# RULES
./text-0.6/Data/Text/Lazy.hs:1135:{-# RULES
./text-0.6/Data/Text/Lazy.hs:1182:{-# RULES
./text-0.6/Data/Text.hs:268:{-# RULES
./text-0.6/Data/Text.hs:302:{-# RULES
./text-0.6/Data/Text.hs:320:{-# RULES
./text-0.6/Data/Text.hs:336:{-# RULES
./text-0.6/Data/Text.hs:353:{-# RULES
./text-0.6/Data/Text.hs:366:{-# RULES
./text-0.6/Data/Text.hs:481:{-# RULES
./text-0.6/Data/Text.hs:687:{-# RULES
./text-0.6/Data/Text.hs:737:{-# RULES
./text-0.6/Data/Text.hs:758:{-# RULES
./text-0.6/Data/Text.hs:776:{-# RULES
./text-0.6/Data/Text.hs:793:{-# RULES
./text-0.6/Data/Text.hs:814:{-# RULES
./text-0.6/Data/Text.hs:952:{-# RULES
./text-0.6/Data/Text.hs:1132:{-# RULES
./text-0.6/Data/Text.hs:1228:{-# RULES
./text-0.6/Data/Text.hs:1258:{-# RULES
./text-0.7/Data/Text/Fusion/Common.hs:131:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.7/Data/Text/Fusion/Common.hs:296:  RULES "STREAM map/map fusion" forall f g s.
./text-0.7/Data/Text/Fusion/Common.hs:788:{-# RULES
./text-0.7/Data/Text/Fusion.hs:112:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.7/Data/Text/Lazy/Fusion.hs:89:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.7/Data/Text/Lazy.hs:232:{-# RULES
./text-0.7/Data/Text/Lazy.hs:251:{-# RULES
./text-0.7/Data/Text/Lazy.hs:262:{-# RULES
./text-0.7/Data/Text/Lazy.hs:275:{-# RULES
./text-0.7/Data/Text/Lazy.hs:304:{-# RULES
./text-0.7/Data/Text/Lazy.hs:320:{-# RULES
./text-0.7/Data/Text/Lazy.hs:334:{-# RULES
./text-0.7/Data/Text/Lazy.hs:356:{-# RULES
./text-0.7/Data/Text/Lazy.hs:368:{-# RULES
./text-0.7/Data/Text/Lazy.hs:406:{-# RULES
./text-0.7/Data/Text/Lazy.hs:661:{-# RULES
./text-0.7/Data/Text/Lazy.hs:699:{-# RULES
./text-0.7/Data/Text/Lazy.hs:721:{-# RULES
./text-0.7/Data/Text/Lazy.hs:756:{-# RULES
./text-0.7/Data/Text/Lazy.hs:774:{-# RULES
./text-0.7/Data/Text/Lazy.hs:1029:{-# RULES
./text-0.7/Data/Text/Lazy.hs:1105:{-# RULES
./text-0.7/Data/Text/Lazy.hs:1135:{-# RULES
./text-0.7/Data/Text/Lazy.hs:1182:{-# RULES
./text-0.7/Data/Text.hs:268:{-# RULES
./text-0.7/Data/Text.hs:302:{-# RULES
./text-0.7/Data/Text.hs:320:{-# RULES
./text-0.7/Data/Text.hs:336:{-# RULES
./text-0.7/Data/Text.hs:353:{-# RULES
./text-0.7/Data/Text.hs:366:{-# RULES
./text-0.7/Data/Text.hs:481:{-# RULES
./text-0.7/Data/Text.hs:687:{-# RULES
./text-0.7/Data/Text.hs:737:{-# RULES
./text-0.7/Data/Text.hs:758:{-# RULES
./text-0.7/Data/Text.hs:776:{-# RULES
./text-0.7/Data/Text.hs:793:{-# RULES
./text-0.7/Data/Text.hs:814:{-# RULES
./text-0.7/Data/Text.hs:952:{-# RULES
./text-0.7/Data/Text.hs:1132:{-# RULES
./text-0.7/Data/Text.hs:1228:{-# RULES
./text-0.7/Data/Text.hs:1258:{-# RULES
./text-0.7.0.1/Data/Text/Fusion/Common.hs:131:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.7.0.1/Data/Text/Fusion/Common.hs:296:  RULES "STREAM map/map fusion" forall f g s.
./text-0.7.0.1/Data/Text/Fusion/Common.hs:788:{-# RULES
./text-0.7.0.1/Data/Text/Fusion.hs:112:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.7.0.1/Data/Text/Lazy/Fusion.hs:89:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.7.0.1/Data/Text/Lazy.hs:236:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:255:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:266:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:279:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:308:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:324:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:338:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:360:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:372:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:410:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:665:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:703:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:725:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:760:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:778:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:1033:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:1109:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:1139:{-# RULES
./text-0.7.0.1/Data/Text/Lazy.hs:1186:{-# RULES
./text-0.7.0.1/Data/Text.hs:272:{-# RULES
./text-0.7.0.1/Data/Text.hs:306:{-# RULES
./text-0.7.0.1/Data/Text.hs:324:{-# RULES
./text-0.7.0.1/Data/Text.hs:340:{-# RULES
./text-0.7.0.1/Data/Text.hs:357:{-# RULES
./text-0.7.0.1/Data/Text.hs:370:{-# RULES
./text-0.7.0.1/Data/Text.hs:485:{-# RULES
./text-0.7.0.1/Data/Text.hs:691:{-# RULES
./text-0.7.0.1/Data/Text.hs:741:{-# RULES
./text-0.7.0.1/Data/Text.hs:762:{-# RULES
./text-0.7.0.1/Data/Text.hs:780:{-# RULES
./text-0.7.0.1/Data/Text.hs:797:{-# RULES
./text-0.7.0.1/Data/Text.hs:818:{-# RULES
./text-0.7.0.1/Data/Text.hs:956:{-# RULES
./text-0.7.0.1/Data/Text.hs:1136:{-# RULES
./text-0.7.0.1/Data/Text.hs:1232:{-# RULES
./text-0.7.0.1/Data/Text.hs:1262:{-# RULES
./text-0.7.1.0/Data/Text/Fusion/Common.hs:131:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.7.1.0/Data/Text/Fusion/Common.hs:296:  RULES "STREAM map/map fusion" forall f g s.
./text-0.7.1.0/Data/Text/Fusion/Common.hs:788:{-# RULES
./text-0.7.1.0/Data/Text/Fusion.hs:112:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.7.1.0/Data/Text/Lazy/Fusion.hs:89:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.7.1.0/Data/Text/Lazy.hs:252:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:271:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:282:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:295:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:324:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:340:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:354:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:376:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:388:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:426:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:681:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:719:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:741:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:776:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:794:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:1049:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:1125:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:1155:{-# RULES
./text-0.7.1.0/Data/Text/Lazy.hs:1202:{-# RULES
./text-0.7.1.0/Data/Text.hs:300:{-# RULES
./text-0.7.1.0/Data/Text.hs:334:{-# RULES
./text-0.7.1.0/Data/Text.hs:352:{-# RULES
./text-0.7.1.0/Data/Text.hs:368:{-# RULES
./text-0.7.1.0/Data/Text.hs:385:{-# RULES
./text-0.7.1.0/Data/Text.hs:398:{-# RULES
./text-0.7.1.0/Data/Text.hs:513:{-# RULES
./text-0.7.1.0/Data/Text.hs:719:{-# RULES
./text-0.7.1.0/Data/Text.hs:769:{-# RULES
./text-0.7.1.0/Data/Text.hs:790:{-# RULES
./text-0.7.1.0/Data/Text.hs:808:{-# RULES
./text-0.7.1.0/Data/Text.hs:825:{-# RULES
./text-0.7.1.0/Data/Text.hs:846:{-# RULES
./text-0.7.1.0/Data/Text.hs:984:{-# RULES
./text-0.7.1.0/Data/Text.hs:1164:{-# RULES
./text-0.7.1.0/Data/Text.hs:1260:{-# RULES
./text-0.7.1.0/Data/Text.hs:1290:{-# RULES
./text-0.7.2.1/Data/Text/Fusion/Common.hs:131:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.7.2.1/Data/Text/Fusion/Common.hs:296:  RULES "STREAM map/map fusion" forall f g s.
./text-0.7.2.1/Data/Text/Fusion/Common.hs:788:{-# RULES
./text-0.7.2.1/Data/Text/Fusion.hs:112:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.7.2.1/Data/Text/Lazy/Builder.hs:120:{-# RULES
./text-0.7.2.1/Data/Text/Lazy/Builder.hs:293:{-# RULES
./text-0.7.2.1/Data/Text/Lazy/Fusion.hs:89:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.7.2.1/Data/Text/Lazy.hs:252:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:271:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:282:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:295:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:324:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:340:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:354:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:376:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:388:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:426:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:681:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:719:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:741:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:776:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:794:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:1049:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:1125:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:1155:{-# RULES
./text-0.7.2.1/Data/Text/Lazy.hs:1202:{-# RULES
./text-0.7.2.1/Data/Text.hs:300:{-# RULES
./text-0.7.2.1/Data/Text.hs:334:{-# RULES
./text-0.7.2.1/Data/Text.hs:352:{-# RULES
./text-0.7.2.1/Data/Text.hs:368:{-# RULES
./text-0.7.2.1/Data/Text.hs:385:{-# RULES
./text-0.7.2.1/Data/Text.hs:398:{-# RULES
./text-0.7.2.1/Data/Text.hs:513:{-# RULES
./text-0.7.2.1/Data/Text.hs:719:{-# RULES
./text-0.7.2.1/Data/Text.hs:769:{-# RULES
./text-0.7.2.1/Data/Text.hs:790:{-# RULES
./text-0.7.2.1/Data/Text.hs:808:{-# RULES
./text-0.7.2.1/Data/Text.hs:825:{-# RULES
./text-0.7.2.1/Data/Text.hs:846:{-# RULES
./text-0.7.2.1/Data/Text.hs:984:{-# RULES
./text-0.7.2.1/Data/Text.hs:1164:{-# RULES
./text-0.7.2.1/Data/Text.hs:1260:{-# RULES
./text-0.7.2.1/Data/Text.hs:1290:{-# RULES
./text-0.8.0.0/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.8.0.0/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.8.0.0/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.8.0.0/Data/Text/Fusion.hs:115:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.8.0.0/Data/Text/Lazy/Builder.hs:126:{-# RULES
./text-0.8.0.0/Data/Text/Lazy/Builder.hs:269:{-# RULES
./text-0.8.0.0/Data/Text/Lazy/Fusion.hs:91:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.8.0.0/Data/Text/Lazy.hs:263:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:298:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:311:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:324:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:353:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:369:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:383:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:405:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:419:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:471:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:726:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:764:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:786:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:821:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:839:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:1093:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:1169:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:1199:{-# RULES
./text-0.8.0.0/Data/Text/Lazy.hs:1295:{-# RULES
./text-0.8.0.0/Data/Text.hs:306:{-# RULES
./text-0.8.0.0/Data/Text.hs:332:{-# RULES
./text-0.8.0.0/Data/Text.hs:350:{-# RULES
./text-0.8.0.0/Data/Text.hs:366:{-# RULES
./text-0.8.0.0/Data/Text.hs:383:{-# RULES
./text-0.8.0.0/Data/Text.hs:400:{-# RULES
./text-0.8.0.0/Data/Text.hs:429:{-# RULES
./text-0.8.0.0/Data/Text.hs:434:{-# RULES
./text-0.8.0.0/Data/Text.hs:439:{-# RULES
./text-0.8.0.0/Data/Text.hs:444:{-# RULES
./text-0.8.0.0/Data/Text.hs:449:{-# RULES
./text-0.8.0.0/Data/Text.hs:454:{-# RULES
./text-0.8.0.0/Data/Text.hs:459:{-# RULES
./text-0.8.0.0/Data/Text.hs:566:{-# RULES
./text-0.8.0.0/Data/Text.hs:776:{-# RULES
./text-0.8.0.0/Data/Text.hs:826:{-# RULES
./text-0.8.0.0/Data/Text.hs:847:{-# RULES
./text-0.8.0.0/Data/Text.hs:865:{-# RULES
./text-0.8.0.0/Data/Text.hs:882:{-# RULES
./text-0.8.0.0/Data/Text.hs:903:{-# RULES
./text-0.8.0.0/Data/Text.hs:1041:{-# RULES
./text-0.8.0.0/Data/Text.hs:1218:{-# RULES
./text-0.8.0.0/Data/Text.hs:1314:{-# RULES
./text-0.8.0.0/Data/Text.hs:1344:{-# RULES
./text-0.8.1.0/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.8.1.0/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.8.1.0/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.8.1.0/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.8.1.0/Data/Text/Lazy/Builder.hs:126:{-# RULES
./text-0.8.1.0/Data/Text/Lazy/Builder.hs:269:{-# RULES
./text-0.8.1.0/Data/Text/Lazy/Fusion.hs:91:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.8.1.0/Data/Text/Lazy.hs:264:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:299:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:312:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:325:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:354:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:370:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:384:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:406:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:420:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:472:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:735:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:773:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:795:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:830:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:848:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:1102:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:1178:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:1208:{-# RULES
./text-0.8.1.0/Data/Text/Lazy.hs:1304:{-# RULES
./text-0.8.1.0/Data/Text.hs:353:{-# RULES
./text-0.8.1.0/Data/Text.hs:379:{-# RULES
./text-0.8.1.0/Data/Text.hs:397:{-# RULES
./text-0.8.1.0/Data/Text.hs:413:{-# RULES
./text-0.8.1.0/Data/Text.hs:430:{-# RULES
./text-0.8.1.0/Data/Text.hs:447:{-# RULES
./text-0.8.1.0/Data/Text.hs:476:{-# RULES
./text-0.8.1.0/Data/Text.hs:481:{-# RULES
./text-0.8.1.0/Data/Text.hs:486:{-# RULES
./text-0.8.1.0/Data/Text.hs:491:{-# RULES
./text-0.8.1.0/Data/Text.hs:496:{-# RULES
./text-0.8.1.0/Data/Text.hs:501:{-# RULES
./text-0.8.1.0/Data/Text.hs:506:{-# RULES
./text-0.8.1.0/Data/Text.hs:616:{-# RULES
./text-0.8.1.0/Data/Text.hs:821:{-# RULES
./text-0.8.1.0/Data/Text.hs:871:{-# RULES
./text-0.8.1.0/Data/Text.hs:892:{-# RULES
./text-0.8.1.0/Data/Text.hs:910:{-# RULES
./text-0.8.1.0/Data/Text.hs:927:{-# RULES
./text-0.8.1.0/Data/Text.hs:948:{-# RULES
./text-0.8.1.0/Data/Text.hs:1086:{-# RULES
./text-0.8.1.0/Data/Text.hs:1263:{-# RULES
./text-0.8.1.0/Data/Text.hs:1359:{-# RULES
./text-0.8.1.0/Data/Text.hs:1389:{-# RULES
./text-0.9.0.0/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.9.0.0/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.9.0.0/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.9.0.0/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.9.0.0/Data/Text/Lazy/Builder.hs:126:{-# RULES
./text-0.9.0.0/Data/Text/Lazy/Builder.hs:269:{-# RULES
./text-0.9.0.0/Data/Text/Lazy/Fusion.hs:91:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.9.0.0/Data/Text/Lazy.hs:264:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:299:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:312:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:325:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:354:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:370:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:384:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:406:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:420:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:472:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:735:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:773:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:795:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:830:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:848:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:1102:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:1178:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:1208:{-# RULES
./text-0.9.0.0/Data/Text/Lazy.hs:1304:{-# RULES
./text-0.9.0.0/Data/Text.hs:353:{-# RULES
./text-0.9.0.0/Data/Text.hs:379:{-# RULES
./text-0.9.0.0/Data/Text.hs:397:{-# RULES
./text-0.9.0.0/Data/Text.hs:413:{-# RULES
./text-0.9.0.0/Data/Text.hs:430:{-# RULES
./text-0.9.0.0/Data/Text.hs:447:{-# RULES
./text-0.9.0.0/Data/Text.hs:476:{-# RULES
./text-0.9.0.0/Data/Text.hs:481:{-# RULES
./text-0.9.0.0/Data/Text.hs:486:{-# RULES
./text-0.9.0.0/Data/Text.hs:491:{-# RULES
./text-0.9.0.0/Data/Text.hs:496:{-# RULES
./text-0.9.0.0/Data/Text.hs:501:{-# RULES
./text-0.9.0.0/Data/Text.hs:506:{-# RULES
./text-0.9.0.0/Data/Text.hs:616:{-# RULES
./text-0.9.0.0/Data/Text.hs:821:{-# RULES
./text-0.9.0.0/Data/Text.hs:871:{-# RULES
./text-0.9.0.0/Data/Text.hs:892:{-# RULES
./text-0.9.0.0/Data/Text.hs:910:{-# RULES
./text-0.9.0.0/Data/Text.hs:927:{-# RULES
./text-0.9.0.0/Data/Text.hs:948:{-# RULES
./text-0.9.0.0/Data/Text.hs:1086:{-# RULES
./text-0.9.0.0/Data/Text.hs:1263:{-# RULES
./text-0.9.0.0/Data/Text.hs:1359:{-# RULES
./text-0.9.0.0/Data/Text.hs:1389:{-# RULES
./text-0.9.0.1/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.9.0.1/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.9.0.1/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.9.0.1/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.9.0.1/Data/Text/Lazy/Builder.hs:126:{-# RULES
./text-0.9.0.1/Data/Text/Lazy/Builder.hs:269:{-# RULES
./text-0.9.0.1/Data/Text/Lazy/Fusion.hs:91:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.9.0.1/Data/Text/Lazy.hs:264:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:299:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:312:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:325:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:354:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:370:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:384:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:406:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:420:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:472:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:735:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:773:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:795:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:830:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:848:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:1102:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:1178:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:1208:{-# RULES
./text-0.9.0.1/Data/Text/Lazy.hs:1304:{-# RULES
./text-0.9.0.1/Data/Text.hs:353:{-# RULES
./text-0.9.0.1/Data/Text.hs:379:{-# RULES
./text-0.9.0.1/Data/Text.hs:397:{-# RULES
./text-0.9.0.1/Data/Text.hs:413:{-# RULES
./text-0.9.0.1/Data/Text.hs:430:{-# RULES
./text-0.9.0.1/Data/Text.hs:447:{-# RULES
./text-0.9.0.1/Data/Text.hs:476:{-# RULES
./text-0.9.0.1/Data/Text.hs:481:{-# RULES
./text-0.9.0.1/Data/Text.hs:486:{-# RULES
./text-0.9.0.1/Data/Text.hs:491:{-# RULES
./text-0.9.0.1/Data/Text.hs:496:{-# RULES
./text-0.9.0.1/Data/Text.hs:501:{-# RULES
./text-0.9.0.1/Data/Text.hs:506:{-# RULES
./text-0.9.0.1/Data/Text.hs:616:{-# RULES
./text-0.9.0.1/Data/Text.hs:823:{-# RULES
./text-0.9.0.1/Data/Text.hs:873:{-# RULES
./text-0.9.0.1/Data/Text.hs:894:{-# RULES
./text-0.9.0.1/Data/Text.hs:912:{-# RULES
./text-0.9.0.1/Data/Text.hs:929:{-# RULES
./text-0.9.0.1/Data/Text.hs:950:{-# RULES
./text-0.9.0.1/Data/Text.hs:1088:{-# RULES
./text-0.9.0.1/Data/Text.hs:1265:{-# RULES
./text-0.9.0.1/Data/Text.hs:1361:{-# RULES
./text-0.9.0.1/Data/Text.hs:1391:{-# RULES
./text-0.9.1.0/Data/Text/Encoding.hs:108:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-0.9.1.0/Data/Text/Fusion/Common.hs:132:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-0.9.1.0/Data/Text/Fusion/Common.hs:316:  RULES "STREAM map/map fusion" forall f g s.
./text-0.9.1.0/Data/Text/Fusion/Common.hs:808:{-# RULES
./text-0.9.1.0/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-0.9.1.0/Data/Text/Lazy/Builder.hs:126:{-# RULES
./text-0.9.1.0/Data/Text/Lazy/Builder.hs:269:{-# RULES
./text-0.9.1.0/Data/Text/Lazy/Encoding.hs:103:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-0.9.1.0/Data/Text/Lazy/Fusion.hs:93:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-0.9.1.0/Data/Text/Lazy.hs:278:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:313:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:326:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:339:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:368:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:384:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:398:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:420:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:434:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:486:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:752:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:790:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:812:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:847:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:865:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:1119:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:1195:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:1225:{-# RULES
./text-0.9.1.0/Data/Text/Lazy.hs:1321:{-# RULES
./text-0.9.1.0/Data/Text.hs:359:{-# RULES
./text-0.9.1.0/Data/Text.hs:396:{-# RULES
./text-0.9.1.0/Data/Text.hs:412:{-# RULES
./text-0.9.1.0/Data/Text.hs:429:{-# RULES
./text-0.9.1.0/Data/Text.hs:446:{-# RULES
./text-0.9.1.0/Data/Text.hs:475:{-# RULES
./text-0.9.1.0/Data/Text.hs:480:{-# RULES
./text-0.9.1.0/Data/Text.hs:485:{-# RULES
./text-0.9.1.0/Data/Text.hs:490:{-# RULES
./text-0.9.1.0/Data/Text.hs:495:{-# RULES
./text-0.9.1.0/Data/Text.hs:500:{-# RULES
./text-0.9.1.0/Data/Text.hs:505:{-# RULES
./text-0.9.1.0/Data/Text.hs:615:{-# RULES
./text-0.9.1.0/Data/Text.hs:821:{-# RULES
./text-0.9.1.0/Data/Text.hs:871:{-# RULES
./text-0.9.1.0/Data/Text.hs:892:{-# RULES
./text-0.9.1.0/Data/Text.hs:910:{-# RULES
./text-0.9.1.0/Data/Text.hs:927:{-# RULES
./text-0.9.1.0/Data/Text.hs:948:{-# RULES
./text-0.9.1.0/Data/Text.hs:1086:{-# RULES
./text-0.9.1.0/Data/Text.hs:1263:{-# RULES
./text-0.9.1.0/Data/Text.hs:1359:{-# RULES
./text-0.9.1.0/Data/Text.hs:1389:{-# RULES
./text-1.0.0.0/Data/Text/Encoding.hs:282:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.0.0.0/Data/Text/Fusion/Common.hs:139:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.0.0.0/Data/Text/Fusion/Common.hs:356:  RULES "STREAM map/map fusion" forall f g s.
./text-1.0.0.0/Data/Text/Fusion/Common.hs:881:{-# RULES
./text-1.0.0.0/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.0.0.0/Data/Text/Lazy/Builder/Int.hs:164:{-# RULES "hexadecimal/Integer"
./text-1.0.0.0/Data/Text/Lazy/Builder/Internal.hs:167:{-# RULES
./text-1.0.0.0/Data/Text/Lazy/Builder/Internal.hs:299:{-# RULES
./text-1.0.0.0/Data/Text/Lazy/Encoding.hs:118:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.0.0.0/Data/Text/Lazy/Fusion.hs:97:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.0.0.0/Data/Text/Lazy.hs:361:{-# RULES "TEXT literal" forall a.
./text-1.0.0.0/Data/Text/Lazy.hs:365:{-# RULES "TEXT literal UTF8" forall a.
./text-1.0.0.0/Data/Text/Lazy.hs:375:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:412:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:425:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:437:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:466:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:482:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:496:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:518:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:532:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:589:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:892:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:932:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:954:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:989:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:1007:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:1261:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:1336:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:1366:{-# RULES
./text-1.0.0.0/Data/Text/Lazy.hs:1488:{-# RULES
./text-1.0.0.0/Data/Text.hs:385:{-# RULES "TEXT literal" forall a.
./text-1.0.0.0/Data/Text.hs:389:{-# RULES "TEXT literal UTF8" forall a.
./text-1.0.0.0/Data/Text.hs:436:{-# RULES
./text-1.0.0.0/Data/Text.hs:473:{-# RULES
./text-1.0.0.0/Data/Text.hs:489:{-# RULES
./text-1.0.0.0/Data/Text.hs:506:{-# RULES
./text-1.0.0.0/Data/Text.hs:523:{-# RULES
./text-1.0.0.0/Data/Text.hs:552:{-# RULES
./text-1.0.0.0/Data/Text.hs:557:{-# RULES
./text-1.0.0.0/Data/Text.hs:562:{-# RULES
./text-1.0.0.0/Data/Text.hs:567:{-# RULES
./text-1.0.0.0/Data/Text.hs:572:{-# RULES
./text-1.0.0.0/Data/Text.hs:577:{-# RULES
./text-1.0.0.0/Data/Text.hs:582:{-# RULES
./text-1.0.0.0/Data/Text.hs:742:{-# RULES
./text-1.0.0.0/Data/Text.hs:964:{-# RULES
./text-1.0.0.0/Data/Text.hs:1014:{-# RULES
./text-1.0.0.0/Data/Text.hs:1035:{-# RULES
./text-1.0.0.0/Data/Text.hs:1053:{-# RULES
./text-1.0.0.0/Data/Text.hs:1070:{-# RULES
./text-1.0.0.0/Data/Text.hs:1091:{-# RULES
./text-1.0.0.0/Data/Text.hs:1226:{-# RULES
./text-1.0.0.0/Data/Text.hs:1404:{-# RULES
./text-1.0.0.0/Data/Text.hs:1501:{-# RULES
./text-1.0.0.0/Data/Text.hs:1529:{-# RULES
./text-1.0.0.1/Data/Text/Encoding.hs:282:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.0.0.1/Data/Text/Fusion/Common.hs:139:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.0.0.1/Data/Text/Fusion/Common.hs:356:  RULES "STREAM map/map fusion" forall f g s.
./text-1.0.0.1/Data/Text/Fusion/Common.hs:881:{-# RULES
./text-1.0.0.1/Data/Text/Fusion.hs:118:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.0.0.1/Data/Text/Lazy/Builder/Int.hs:164:{-# RULES "hexadecimal/Integer"
./text-1.0.0.1/Data/Text/Lazy/Builder/Internal.hs:167:{-# RULES
./text-1.0.0.1/Data/Text/Lazy/Builder/Internal.hs:299:{-# RULES
./text-1.0.0.1/Data/Text/Lazy/Encoding.hs:118:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.0.0.1/Data/Text/Lazy/Fusion.hs:97:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.0.0.1/Data/Text/Lazy.hs:361:{-# RULES "TEXT literal" forall a.
./text-1.0.0.1/Data/Text/Lazy.hs:365:{-# RULES "TEXT literal UTF8" forall a.
./text-1.0.0.1/Data/Text/Lazy.hs:375:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:412:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:425:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:437:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:466:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:482:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:496:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:518:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:532:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:589:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:892:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:932:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:954:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:989:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:1007:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:1261:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:1336:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:1366:{-# RULES
./text-1.0.0.1/Data/Text/Lazy.hs:1488:{-# RULES
./text-1.0.0.1/Data/Text.hs:385:{-# RULES "TEXT literal" forall a.
./text-1.0.0.1/Data/Text.hs:389:{-# RULES "TEXT literal UTF8" forall a.
./text-1.0.0.1/Data/Text.hs:436:{-# RULES
./text-1.0.0.1/Data/Text.hs:473:{-# RULES
./text-1.0.0.1/Data/Text.hs:489:{-# RULES
./text-1.0.0.1/Data/Text.hs:506:{-# RULES
./text-1.0.0.1/Data/Text.hs:523:{-# RULES
./text-1.0.0.1/Data/Text.hs:552:{-# RULES
./text-1.0.0.1/Data/Text.hs:557:{-# RULES
./text-1.0.0.1/Data/Text.hs:562:{-# RULES
./text-1.0.0.1/Data/Text.hs:567:{-# RULES
./text-1.0.0.1/Data/Text.hs:572:{-# RULES
./text-1.0.0.1/Data/Text.hs:577:{-# RULES
./text-1.0.0.1/Data/Text.hs:582:{-# RULES
./text-1.0.0.1/Data/Text.hs:742:{-# RULES
./text-1.0.0.1/Data/Text.hs:964:{-# RULES
./text-1.0.0.1/Data/Text.hs:1014:{-# RULES
./text-1.0.0.1/Data/Text.hs:1035:{-# RULES
./text-1.0.0.1/Data/Text.hs:1053:{-# RULES
./text-1.0.0.1/Data/Text.hs:1070:{-# RULES
./text-1.0.0.1/Data/Text.hs:1091:{-# RULES
./text-1.0.0.1/Data/Text.hs:1226:{-# RULES
./text-1.0.0.1/Data/Text.hs:1404:{-# RULES
./text-1.0.0.1/Data/Text.hs:1501:{-# RULES
./text-1.0.0.1/Data/Text.hs:1529:{-# RULES
./text-1.1.0.0/Data/Text/Encoding.hs:299:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.1.0.0/Data/Text/Internal/Builder.hs:171:{-# RULES
./text-1.1.0.0/Data/Text/Internal/Builder.hs:303:{-# RULES
./text-1.1.0.0/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.1.0.0/Data/Text/Internal/Fusion/Common.hs:359:  RULES "STREAM map/map fusion" forall f g s.
./text-1.1.0.0/Data/Text/Internal/Fusion/Common.hs:884:{-# RULES
./text-1.1.0.0/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.1.0.0/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.1.0.0/Data/Text/Lazy/Builder/Int.hs:164:{-# RULES "hexadecimal/Integer"
./text-1.1.0.0/Data/Text/Lazy/Encoding.hs:131:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.1.0.0/Data/Text/Lazy.hs:360:{-# RULES "TEXT literal" forall a.
./text-1.1.0.0/Data/Text/Lazy.hs:364:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.0.0/Data/Text/Lazy.hs:374:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:411:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:424:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:436:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:465:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:481:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:495:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:517:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:531:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:588:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:891:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:931:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:953:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:988:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:1006:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:1260:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:1335:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:1365:{-# RULES
./text-1.1.0.0/Data/Text/Lazy.hs:1487:{-# RULES
./text-1.1.0.0/Data/Text.hs:384:{-# RULES "TEXT literal" forall a.
./text-1.1.0.0/Data/Text.hs:388:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.0.0/Data/Text.hs:435:{-# RULES
./text-1.1.0.0/Data/Text.hs:472:{-# RULES
./text-1.1.0.0/Data/Text.hs:488:{-# RULES
./text-1.1.0.0/Data/Text.hs:505:{-# RULES
./text-1.1.0.0/Data/Text.hs:522:{-# RULES
./text-1.1.0.0/Data/Text.hs:551:{-# RULES
./text-1.1.0.0/Data/Text.hs:556:{-# RULES
./text-1.1.0.0/Data/Text.hs:561:{-# RULES
./text-1.1.0.0/Data/Text.hs:566:{-# RULES
./text-1.1.0.0/Data/Text.hs:571:{-# RULES
./text-1.1.0.0/Data/Text.hs:576:{-# RULES
./text-1.1.0.0/Data/Text.hs:581:{-# RULES
./text-1.1.0.0/Data/Text.hs:741:{-# RULES
./text-1.1.0.0/Data/Text.hs:963:{-# RULES
./text-1.1.0.0/Data/Text.hs:1013:{-# RULES
./text-1.1.0.0/Data/Text.hs:1034:{-# RULES
./text-1.1.0.0/Data/Text.hs:1052:{-# RULES
./text-1.1.0.0/Data/Text.hs:1069:{-# RULES
./text-1.1.0.0/Data/Text.hs:1090:{-# RULES
./text-1.1.0.0/Data/Text.hs:1225:{-# RULES
./text-1.1.0.0/Data/Text.hs:1403:{-# RULES
./text-1.1.0.0/Data/Text.hs:1500:{-# RULES
./text-1.1.0.0/Data/Text.hs:1528:{-# RULES
./text-1.1.0.1/Data/Text/Encoding.hs:309:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.1.0.1/Data/Text/Internal/Builder.hs:172:{-# RULES
./text-1.1.0.1/Data/Text/Internal/Builder.hs:304:{-# RULES
./text-1.1.0.1/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.1.0.1/Data/Text/Internal/Fusion/Common.hs:359:  RULES "STREAM map/map fusion" forall f g s.
./text-1.1.0.1/Data/Text/Internal/Fusion/Common.hs:884:{-# RULES
./text-1.1.0.1/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.1.0.1/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.1.0.1/Data/Text/Lazy/Builder/Int.hs:165:{-# RULES "hexadecimal/Integer"
./text-1.1.0.1/Data/Text/Lazy/Encoding.hs:131:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.1.0.1/Data/Text/Lazy.hs:360:{-# RULES "TEXT literal" forall a.
./text-1.1.0.1/Data/Text/Lazy.hs:364:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.0.1/Data/Text/Lazy.hs:374:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:411:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:424:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:436:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:465:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:481:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:495:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:517:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:531:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:588:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:891:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:931:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:953:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:988:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:1006:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:1260:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:1335:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:1365:{-# RULES
./text-1.1.0.1/Data/Text/Lazy.hs:1487:{-# RULES
./text-1.1.0.1/Data/Text.hs:384:{-# RULES "TEXT literal" forall a.
./text-1.1.0.1/Data/Text.hs:388:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.0.1/Data/Text.hs:435:{-# RULES
./text-1.1.0.1/Data/Text.hs:472:{-# RULES
./text-1.1.0.1/Data/Text.hs:488:{-# RULES
./text-1.1.0.1/Data/Text.hs:505:{-# RULES
./text-1.1.0.1/Data/Text.hs:522:{-# RULES
./text-1.1.0.1/Data/Text.hs:551:{-# RULES
./text-1.1.0.1/Data/Text.hs:556:{-# RULES
./text-1.1.0.1/Data/Text.hs:561:{-# RULES
./text-1.1.0.1/Data/Text.hs:566:{-# RULES
./text-1.1.0.1/Data/Text.hs:571:{-# RULES
./text-1.1.0.1/Data/Text.hs:576:{-# RULES
./text-1.1.0.1/Data/Text.hs:581:{-# RULES
./text-1.1.0.1/Data/Text.hs:741:{-# RULES
./text-1.1.0.1/Data/Text.hs:963:{-# RULES
./text-1.1.0.1/Data/Text.hs:1013:{-# RULES
./text-1.1.0.1/Data/Text.hs:1034:{-# RULES
./text-1.1.0.1/Data/Text.hs:1052:{-# RULES
./text-1.1.0.1/Data/Text.hs:1069:{-# RULES
./text-1.1.0.1/Data/Text.hs:1090:{-# RULES
./text-1.1.0.1/Data/Text.hs:1225:{-# RULES
./text-1.1.0.1/Data/Text.hs:1403:{-# RULES
./text-1.1.0.1/Data/Text.hs:1500:{-# RULES
./text-1.1.0.1/Data/Text.hs:1528:{-# RULES
./text-1.1.1.0/Data/Text/Encoding.hs:309:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.1.1.0/Data/Text/Internal/Builder.hs:172:{-# RULES
./text-1.1.1.0/Data/Text/Internal/Builder.hs:304:{-# RULES
./text-1.1.1.0/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.1.1.0/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.1.1.0/Data/Text/Internal/Fusion/Common.hs:885:{-# RULES
./text-1.1.1.0/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.1.1.0/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.1.1.0/Data/Text/Lazy/Builder/Int.hs:165:{-# RULES "hexadecimal/Integer"
./text-1.1.1.0/Data/Text/Lazy/Encoding.hs:131:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.1.1.0/Data/Text/Lazy.hs:362:{-# RULES "TEXT literal" forall a.
./text-1.1.1.0/Data/Text/Lazy.hs:366:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.0/Data/Text/Lazy.hs:376:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:413:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:426:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:438:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:467:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:483:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:497:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:519:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:533:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:590:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:893:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:933:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:971:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:1023:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:1041:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:1295:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:1370:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:1400:{-# RULES
./text-1.1.1.0/Data/Text/Lazy.hs:1522:{-# RULES
./text-1.1.1.0/Data/Text.hs:397:{-# RULES "TEXT literal" forall a.
./text-1.1.1.0/Data/Text.hs:401:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.0/Data/Text.hs:448:{-# RULES
./text-1.1.1.0/Data/Text.hs:485:{-# RULES
./text-1.1.1.0/Data/Text.hs:501:{-# RULES
./text-1.1.1.0/Data/Text.hs:518:{-# RULES
./text-1.1.1.0/Data/Text.hs:535:{-# RULES
./text-1.1.1.0/Data/Text.hs:564:{-# RULES
./text-1.1.1.0/Data/Text.hs:569:{-# RULES
./text-1.1.1.0/Data/Text.hs:574:{-# RULES
./text-1.1.1.0/Data/Text.hs:579:{-# RULES
./text-1.1.1.0/Data/Text.hs:584:{-# RULES
./text-1.1.1.0/Data/Text.hs:589:{-# RULES
./text-1.1.1.0/Data/Text.hs:594:{-# RULES
./text-1.1.1.0/Data/Text.hs:754:{-# RULES
./text-1.1.1.0/Data/Text.hs:976:{-# RULES
./text-1.1.1.0/Data/Text.hs:1028:{-# RULES
./text-1.1.1.0/Data/Text.hs:1067:{-# RULES
./text-1.1.1.0/Data/Text.hs:1097:{-# RULES
./text-1.1.1.0/Data/Text.hs:1114:{-# RULES
./text-1.1.1.0/Data/Text.hs:1135:{-# RULES
./text-1.1.1.0/Data/Text.hs:1265:{-# RULES
./text-1.1.1.0/Data/Text.hs:1443:{-# RULES
./text-1.1.1.0/Data/Text.hs:1540:{-# RULES
./text-1.1.1.0/Data/Text.hs:1568:{-# RULES
./text-1.1.1.1/Data/Text/Encoding.hs:309:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.1.1.1/Data/Text/Internal/Builder.hs:172:{-# RULES
./text-1.1.1.1/Data/Text/Internal/Builder.hs:304:{-# RULES
./text-1.1.1.1/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.1.1.1/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.1.1.1/Data/Text/Internal/Fusion/Common.hs:885:{-# RULES
./text-1.1.1.1/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.1.1.1/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.1.1.1/Data/Text/Lazy/Builder/Int.hs:165:{-# RULES "hexadecimal/Integer"
./text-1.1.1.1/Data/Text/Lazy/Encoding.hs:131:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.1.1.1/Data/Text/Lazy.hs:362:{-# RULES "TEXT literal" forall a.
./text-1.1.1.1/Data/Text/Lazy.hs:366:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.1/Data/Text/Lazy.hs:376:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:413:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:426:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:438:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:467:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:483:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:497:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:519:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:533:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:590:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:893:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:933:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:971:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:1023:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:1041:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:1295:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:1370:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:1400:{-# RULES
./text-1.1.1.1/Data/Text/Lazy.hs:1522:{-# RULES
./text-1.1.1.1/Data/Text.hs:397:{-# RULES "TEXT literal" forall a.
./text-1.1.1.1/Data/Text.hs:401:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.1/Data/Text.hs:448:{-# RULES
./text-1.1.1.1/Data/Text.hs:485:{-# RULES
./text-1.1.1.1/Data/Text.hs:501:{-# RULES
./text-1.1.1.1/Data/Text.hs:518:{-# RULES
./text-1.1.1.1/Data/Text.hs:535:{-# RULES
./text-1.1.1.1/Data/Text.hs:564:{-# RULES
./text-1.1.1.1/Data/Text.hs:569:{-# RULES
./text-1.1.1.1/Data/Text.hs:574:{-# RULES
./text-1.1.1.1/Data/Text.hs:579:{-# RULES
./text-1.1.1.1/Data/Text.hs:584:{-# RULES
./text-1.1.1.1/Data/Text.hs:589:{-# RULES
./text-1.1.1.1/Data/Text.hs:594:{-# RULES
./text-1.1.1.1/Data/Text.hs:754:{-# RULES
./text-1.1.1.1/Data/Text.hs:976:{-# RULES
./text-1.1.1.1/Data/Text.hs:1028:{-# RULES
./text-1.1.1.1/Data/Text.hs:1067:{-# RULES
./text-1.1.1.1/Data/Text.hs:1097:{-# RULES
./text-1.1.1.1/Data/Text.hs:1114:{-# RULES
./text-1.1.1.1/Data/Text.hs:1135:{-# RULES
./text-1.1.1.1/Data/Text.hs:1265:{-# RULES
./text-1.1.1.1/Data/Text.hs:1443:{-# RULES
./text-1.1.1.1/Data/Text.hs:1540:{-# RULES
./text-1.1.1.1/Data/Text.hs:1568:{-# RULES
./text-1.1.1.2/Data/Text/Encoding.hs:309:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.1.1.2/Data/Text/Internal/Builder.hs:172:{-# RULES
./text-1.1.1.2/Data/Text/Internal/Builder.hs:304:{-# RULES
./text-1.1.1.2/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.1.1.2/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.1.1.2/Data/Text/Internal/Fusion/Common.hs:885:{-# RULES
./text-1.1.1.2/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.1.1.2/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.1.1.2/Data/Text/Lazy/Builder/Int.hs:165:{-# RULES "hexadecimal/Integer"
./text-1.1.1.2/Data/Text/Lazy/Encoding.hs:131:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.1.1.2/Data/Text/Lazy.hs:362:{-# RULES "TEXT literal" forall a.
./text-1.1.1.2/Data/Text/Lazy.hs:366:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.2/Data/Text/Lazy.hs:376:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:413:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:426:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:438:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:467:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:483:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:497:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:519:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:533:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:590:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:893:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:933:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:971:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:1023:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:1041:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:1295:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:1370:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:1400:{-# RULES
./text-1.1.1.2/Data/Text/Lazy.hs:1522:{-# RULES
./text-1.1.1.2/Data/Text.hs:400:{-# RULES "TEXT literal" forall a.
./text-1.1.1.2/Data/Text.hs:404:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.2/Data/Text.hs:451:{-# RULES
./text-1.1.1.2/Data/Text.hs:488:{-# RULES
./text-1.1.1.2/Data/Text.hs:504:{-# RULES
./text-1.1.1.2/Data/Text.hs:521:{-# RULES
./text-1.1.1.2/Data/Text.hs:538:{-# RULES
./text-1.1.1.2/Data/Text.hs:567:{-# RULES
./text-1.1.1.2/Data/Text.hs:572:{-# RULES
./text-1.1.1.2/Data/Text.hs:577:{-# RULES
./text-1.1.1.2/Data/Text.hs:582:{-# RULES
./text-1.1.1.2/Data/Text.hs:587:{-# RULES
./text-1.1.1.2/Data/Text.hs:592:{-# RULES
./text-1.1.1.2/Data/Text.hs:597:{-# RULES
./text-1.1.1.2/Data/Text.hs:756:{-# RULES
./text-1.1.1.2/Data/Text.hs:978:{-# RULES
./text-1.1.1.2/Data/Text.hs:1030:{-# RULES
./text-1.1.1.2/Data/Text.hs:1069:{-# RULES
./text-1.1.1.2/Data/Text.hs:1099:{-# RULES
./text-1.1.1.2/Data/Text.hs:1116:{-# RULES
./text-1.1.1.2/Data/Text.hs:1137:{-# RULES
./text-1.1.1.2/Data/Text.hs:1267:{-# RULES
./text-1.1.1.2/Data/Text.hs:1445:{-# RULES
./text-1.1.1.2/Data/Text.hs:1542:{-# RULES
./text-1.1.1.2/Data/Text.hs:1570:{-# RULES
./text-1.1.1.3/Data/Text/Encoding.hs:309:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.1.1.3/Data/Text/Internal/Builder.hs:172:{-# RULES
./text-1.1.1.3/Data/Text/Internal/Builder.hs:304:{-# RULES
./text-1.1.1.3/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.1.1.3/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.1.1.3/Data/Text/Internal/Fusion/Common.hs:885:{-# RULES
./text-1.1.1.3/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.1.1.3/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.1.1.3/Data/Text/Lazy/Builder/Int.hs:165:{-# RULES "hexadecimal/Integer"
./text-1.1.1.3/Data/Text/Lazy/Encoding.hs:131:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.1.1.3/Data/Text/Lazy.hs:362:{-# RULES "TEXT literal" forall a.
./text-1.1.1.3/Data/Text/Lazy.hs:366:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.3/Data/Text/Lazy.hs:376:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:413:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:426:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:438:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:467:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:483:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:497:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:519:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:533:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:590:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:893:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:933:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:971:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:1023:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:1041:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:1295:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:1370:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:1400:{-# RULES
./text-1.1.1.3/Data/Text/Lazy.hs:1522:{-# RULES
./text-1.1.1.3/Data/Text.hs:400:{-# RULES "TEXT literal" forall a.
./text-1.1.1.3/Data/Text.hs:404:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.3/Data/Text.hs:451:{-# RULES
./text-1.1.1.3/Data/Text.hs:488:{-# RULES
./text-1.1.1.3/Data/Text.hs:504:{-# RULES
./text-1.1.1.3/Data/Text.hs:521:{-# RULES
./text-1.1.1.3/Data/Text.hs:538:{-# RULES
./text-1.1.1.3/Data/Text.hs:567:{-# RULES
./text-1.1.1.3/Data/Text.hs:572:{-# RULES
./text-1.1.1.3/Data/Text.hs:577:{-# RULES
./text-1.1.1.3/Data/Text.hs:582:{-# RULES
./text-1.1.1.3/Data/Text.hs:587:{-# RULES
./text-1.1.1.3/Data/Text.hs:592:{-# RULES
./text-1.1.1.3/Data/Text.hs:597:{-# RULES
./text-1.1.1.3/Data/Text.hs:756:{-# RULES
./text-1.1.1.3/Data/Text.hs:978:{-# RULES
./text-1.1.1.3/Data/Text.hs:1030:{-# RULES
./text-1.1.1.3/Data/Text.hs:1069:{-# RULES
./text-1.1.1.3/Data/Text.hs:1099:{-# RULES
./text-1.1.1.3/Data/Text.hs:1116:{-# RULES
./text-1.1.1.3/Data/Text.hs:1137:{-# RULES
./text-1.1.1.3/Data/Text.hs:1267:{-# RULES
./text-1.1.1.3/Data/Text.hs:1445:{-# RULES
./text-1.1.1.3/Data/Text.hs:1542:{-# RULES
./text-1.1.1.3/Data/Text.hs:1570:{-# RULES
./text-1.1.1.4/Data/Text/Encoding.hs:309:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.1.1.4/Data/Text/Internal/Builder.hs:172:{-# RULES
./text-1.1.1.4/Data/Text/Internal/Builder.hs:304:{-# RULES
./text-1.1.1.4/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.1.1.4/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.1.1.4/Data/Text/Internal/Fusion/Common.hs:885:{-# RULES
./text-1.1.1.4/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.1.1.4/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.1.1.4/Data/Text/Lazy/Builder/Int.hs:165:{-# RULES "hexadecimal/Integer"
./text-1.1.1.4/Data/Text/Lazy/Encoding.hs:131:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.1.1.4/Data/Text/Lazy.hs:362:{-# RULES "TEXT literal" forall a.
./text-1.1.1.4/Data/Text/Lazy.hs:366:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.4/Data/Text/Lazy.hs:376:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:413:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:426:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:438:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:467:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:483:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:497:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:519:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:533:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:590:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:893:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:933:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:971:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:1023:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:1041:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:1295:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:1370:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:1400:{-# RULES
./text-1.1.1.4/Data/Text/Lazy.hs:1522:{-# RULES
./text-1.1.1.4/Data/Text.hs:400:{-# RULES "TEXT literal" forall a.
./text-1.1.1.4/Data/Text.hs:404:{-# RULES "TEXT literal UTF8" forall a.
./text-1.1.1.4/Data/Text.hs:451:{-# RULES
./text-1.1.1.4/Data/Text.hs:488:{-# RULES
./text-1.1.1.4/Data/Text.hs:504:{-# RULES
./text-1.1.1.4/Data/Text.hs:521:{-# RULES
./text-1.1.1.4/Data/Text.hs:538:{-# RULES
./text-1.1.1.4/Data/Text.hs:567:{-# RULES
./text-1.1.1.4/Data/Text.hs:572:{-# RULES
./text-1.1.1.4/Data/Text.hs:577:{-# RULES
./text-1.1.1.4/Data/Text.hs:582:{-# RULES
./text-1.1.1.4/Data/Text.hs:587:{-# RULES
./text-1.1.1.4/Data/Text.hs:592:{-# RULES
./text-1.1.1.4/Data/Text.hs:597:{-# RULES
./text-1.1.1.4/Data/Text.hs:756:{-# RULES
./text-1.1.1.4/Data/Text.hs:978:{-# RULES
./text-1.1.1.4/Data/Text.hs:1030:{-# RULES
./text-1.1.1.4/Data/Text.hs:1069:{-# RULES
./text-1.1.1.4/Data/Text.hs:1099:{-# RULES
./text-1.1.1.4/Data/Text.hs:1116:{-# RULES
./text-1.1.1.4/Data/Text.hs:1137:{-# RULES
./text-1.1.1.4/Data/Text.hs:1267:{-# RULES
./text-1.1.1.4/Data/Text.hs:1445:{-# RULES
./text-1.1.1.4/Data/Text.hs:1542:{-# RULES
./text-1.1.1.4/Data/Text.hs:1570:{-# RULES
./text-1.2.0.0/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.0.0/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.0.0/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.0.0/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.0.0/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.0.0/Data/Text/Internal/Fusion/Common.hs:885:{-# RULES
./text-1.2.0.0/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.0.0/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:52:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.0.0/Data/Text/Lazy/Builder/Int.hs:165:{-# RULES "hexadecimal/Integer"
./text-1.2.0.0/Data/Text/Lazy/Encoding.hs:131:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.0.0/Data/Text/Lazy.hs:376:{-# RULES "TEXT literal" forall a.
./text-1.2.0.0/Data/Text/Lazy.hs:380:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.0/Data/Text/Lazy.hs:384:{-# RULES "LAZY TEXT empty literal"
./text-1.2.0.0/Data/Text/Lazy.hs:388:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.0.0/Data/Text/Lazy.hs:398:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:435:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:448:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:460:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:489:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:505:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:519:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:541:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:555:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:612:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:915:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:955:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:993:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:1045:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:1063:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:1317:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:1392:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:1422:{-# RULES
./text-1.2.0.0/Data/Text/Lazy.hs:1544:{-# RULES
./text-1.2.0.0/Data/Text.hs:414:{-# RULES "TEXT literal" forall a.
./text-1.2.0.0/Data/Text.hs:418:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.0/Data/Text.hs:422:{-# RULES "TEXT empty literal"
./text-1.2.0.0/Data/Text.hs:426:{-# RULES "TEXT singleton literal" forall a.
./text-1.2.0.0/Data/Text.hs:436:{-# RULES "TEXT singleton" forall a.
./text-1.2.0.0/Data/Text.hs:490:{-# RULES
./text-1.2.0.0/Data/Text.hs:527:{-# RULES
./text-1.2.0.0/Data/Text.hs:543:{-# RULES
./text-1.2.0.0/Data/Text.hs:560:{-# RULES
./text-1.2.0.0/Data/Text.hs:577:{-# RULES
./text-1.2.0.0/Data/Text.hs:606:{-# RULES
./text-1.2.0.0/Data/Text.hs:611:{-# RULES
./text-1.2.0.0/Data/Text.hs:616:{-# RULES
./text-1.2.0.0/Data/Text.hs:621:{-# RULES
./text-1.2.0.0/Data/Text.hs:626:{-# RULES
./text-1.2.0.0/Data/Text.hs:631:{-# RULES
./text-1.2.0.0/Data/Text.hs:636:{-# RULES
./text-1.2.0.0/Data/Text.hs:795:{-# RULES
./text-1.2.0.0/Data/Text.hs:1018:{-# RULES
./text-1.2.0.0/Data/Text.hs:1070:{-# RULES
./text-1.2.0.0/Data/Text.hs:1109:{-# RULES
./text-1.2.0.0/Data/Text.hs:1139:{-# RULES
./text-1.2.0.0/Data/Text.hs:1156:{-# RULES
./text-1.2.0.0/Data/Text.hs:1177:{-# RULES
./text-1.2.0.0/Data/Text.hs:1307:{-# RULES
./text-1.2.0.0/Data/Text.hs:1485:{-# RULES
./text-1.2.0.0/Data/Text.hs:1582:{-# RULES
./text-1.2.0.0/Data/Text.hs:1610:{-# RULES
./text-1.2.0.2/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.0.2/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.0.2/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.0.2/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.0.2/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.0.2/Data/Text/Internal/Fusion/Common.hs:885:{-# RULES
./text-1.2.0.2/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.0.2/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.0.2/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.0.2/Data/Text/Lazy/Encoding.hs:131:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.0.2/Data/Text/Lazy.hs:376:{-# RULES "TEXT literal" forall a.
./text-1.2.0.2/Data/Text/Lazy.hs:380:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.2/Data/Text/Lazy.hs:384:{-# RULES "LAZY TEXT empty literal"
./text-1.2.0.2/Data/Text/Lazy.hs:388:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.0.2/Data/Text/Lazy.hs:398:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:435:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:448:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:460:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:489:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:505:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:519:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:541:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:555:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:612:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:934:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:974:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:1012:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:1064:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:1082:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:1336:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:1411:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:1441:{-# RULES
./text-1.2.0.2/Data/Text/Lazy.hs:1563:{-# RULES
./text-1.2.0.2/Data/Text.hs:414:{-# RULES "TEXT literal" forall a.
./text-1.2.0.2/Data/Text.hs:418:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.2/Data/Text.hs:422:{-# RULES "TEXT empty literal"
./text-1.2.0.2/Data/Text.hs:426:{-# RULES "TEXT singleton literal" forall a.
./text-1.2.0.2/Data/Text.hs:436:{-# RULES "TEXT singleton" forall a.
./text-1.2.0.2/Data/Text.hs:490:{-# RULES
./text-1.2.0.2/Data/Text.hs:527:{-# RULES
./text-1.2.0.2/Data/Text.hs:543:{-# RULES
./text-1.2.0.2/Data/Text.hs:560:{-# RULES
./text-1.2.0.2/Data/Text.hs:577:{-# RULES
./text-1.2.0.2/Data/Text.hs:606:{-# RULES
./text-1.2.0.2/Data/Text.hs:611:{-# RULES
./text-1.2.0.2/Data/Text.hs:616:{-# RULES
./text-1.2.0.2/Data/Text.hs:621:{-# RULES
./text-1.2.0.2/Data/Text.hs:626:{-# RULES
./text-1.2.0.2/Data/Text.hs:631:{-# RULES
./text-1.2.0.2/Data/Text.hs:636:{-# RULES
./text-1.2.0.2/Data/Text.hs:817:{-# RULES
./text-1.2.0.2/Data/Text.hs:1040:{-# RULES
./text-1.2.0.2/Data/Text.hs:1092:{-# RULES
./text-1.2.0.2/Data/Text.hs:1131:{-# RULES
./text-1.2.0.2/Data/Text.hs:1161:{-# RULES
./text-1.2.0.2/Data/Text.hs:1178:{-# RULES
./text-1.2.0.2/Data/Text.hs:1199:{-# RULES
./text-1.2.0.2/Data/Text.hs:1329:{-# RULES
./text-1.2.0.2/Data/Text.hs:1507:{-# RULES
./text-1.2.0.2/Data/Text.hs:1604:{-# RULES
./text-1.2.0.2/Data/Text.hs:1632:{-# RULES
./text-1.2.0.3/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.0.3/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.0.3/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.0.3/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.0.3/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.0.3/Data/Text/Internal/Fusion/Common.hs:885:{-# RULES
./text-1.2.0.3/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.0.3/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.0.3/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.0.3/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.0.3/Data/Text/Lazy.hs:376:{-# RULES "TEXT literal" forall a.
./text-1.2.0.3/Data/Text/Lazy.hs:380:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.3/Data/Text/Lazy.hs:384:{-# RULES "LAZY TEXT empty literal"
./text-1.2.0.3/Data/Text/Lazy.hs:388:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.0.3/Data/Text/Lazy.hs:398:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:435:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:448:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:460:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:489:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:505:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:519:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:541:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:555:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:612:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:938:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:978:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:1016:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:1068:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:1086:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:1346:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:1421:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:1451:{-# RULES
./text-1.2.0.3/Data/Text/Lazy.hs:1573:{-# RULES
./text-1.2.0.3/Data/Text.hs:414:{-# RULES "TEXT literal" forall a.
./text-1.2.0.3/Data/Text.hs:418:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.3/Data/Text.hs:422:{-# RULES "TEXT empty literal"
./text-1.2.0.3/Data/Text.hs:426:{-# RULES "TEXT singleton literal" forall a.
./text-1.2.0.3/Data/Text.hs:436:{-# RULES "TEXT singleton" forall a.
./text-1.2.0.3/Data/Text.hs:490:{-# RULES
./text-1.2.0.3/Data/Text.hs:527:{-# RULES
./text-1.2.0.3/Data/Text.hs:543:{-# RULES
./text-1.2.0.3/Data/Text.hs:560:{-# RULES
./text-1.2.0.3/Data/Text.hs:577:{-# RULES
./text-1.2.0.3/Data/Text.hs:606:{-# RULES
./text-1.2.0.3/Data/Text.hs:611:{-# RULES
./text-1.2.0.3/Data/Text.hs:616:{-# RULES
./text-1.2.0.3/Data/Text.hs:621:{-# RULES
./text-1.2.0.3/Data/Text.hs:626:{-# RULES
./text-1.2.0.3/Data/Text.hs:631:{-# RULES
./text-1.2.0.3/Data/Text.hs:636:{-# RULES
./text-1.2.0.3/Data/Text.hs:821:{-# RULES
./text-1.2.0.3/Data/Text.hs:1044:{-# RULES
./text-1.2.0.3/Data/Text.hs:1096:{-# RULES
./text-1.2.0.3/Data/Text.hs:1135:{-# RULES
./text-1.2.0.3/Data/Text.hs:1165:{-# RULES
./text-1.2.0.3/Data/Text.hs:1182:{-# RULES
./text-1.2.0.3/Data/Text.hs:1203:{-# RULES
./text-1.2.0.3/Data/Text.hs:1340:{-# RULES
./text-1.2.0.3/Data/Text.hs:1518:{-# RULES
./text-1.2.0.3/Data/Text.hs:1615:{-# RULES
./text-1.2.0.3/Data/Text.hs:1643:{-# RULES
./text-1.2.0.4/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.0.4/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.0.4/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.0.4/Data/Text/Internal/Fusion/Common.hs:142:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.0.4/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.0.4/Data/Text/Internal/Fusion/Common.hs:885:{-# RULES
./text-1.2.0.4/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.0.4/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.0.4/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.0.4/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.0.4/Data/Text/Lazy.hs:376:{-# RULES "TEXT literal" forall a.
./text-1.2.0.4/Data/Text/Lazy.hs:380:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.4/Data/Text/Lazy.hs:384:{-# RULES "LAZY TEXT empty literal"
./text-1.2.0.4/Data/Text/Lazy.hs:388:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.0.4/Data/Text/Lazy.hs:398:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:435:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:448:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:460:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:489:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:505:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:519:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:541:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:555:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:612:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:938:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:978:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:1016:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:1068:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:1086:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:1346:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:1421:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:1451:{-# RULES
./text-1.2.0.4/Data/Text/Lazy.hs:1573:{-# RULES
./text-1.2.0.4/Data/Text.hs:414:{-# RULES "TEXT literal" forall a.
./text-1.2.0.4/Data/Text.hs:418:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.4/Data/Text.hs:422:{-# RULES "TEXT empty literal"
./text-1.2.0.4/Data/Text.hs:426:{-# RULES "TEXT singleton literal" forall a.
./text-1.2.0.4/Data/Text.hs:436:{-# RULES "TEXT singleton" forall a.
./text-1.2.0.4/Data/Text.hs:490:{-# RULES
./text-1.2.0.4/Data/Text.hs:527:{-# RULES
./text-1.2.0.4/Data/Text.hs:543:{-# RULES
./text-1.2.0.4/Data/Text.hs:560:{-# RULES
./text-1.2.0.4/Data/Text.hs:577:{-# RULES
./text-1.2.0.4/Data/Text.hs:606:{-# RULES
./text-1.2.0.4/Data/Text.hs:611:{-# RULES
./text-1.2.0.4/Data/Text.hs:616:{-# RULES
./text-1.2.0.4/Data/Text.hs:621:{-# RULES
./text-1.2.0.4/Data/Text.hs:626:{-# RULES
./text-1.2.0.4/Data/Text.hs:631:{-# RULES
./text-1.2.0.4/Data/Text.hs:636:{-# RULES
./text-1.2.0.4/Data/Text.hs:821:{-# RULES
./text-1.2.0.4/Data/Text.hs:1044:{-# RULES
./text-1.2.0.4/Data/Text.hs:1096:{-# RULES
./text-1.2.0.4/Data/Text.hs:1135:{-# RULES
./text-1.2.0.4/Data/Text.hs:1165:{-# RULES
./text-1.2.0.4/Data/Text.hs:1182:{-# RULES
./text-1.2.0.4/Data/Text.hs:1203:{-# RULES
./text-1.2.0.4/Data/Text.hs:1340:{-# RULES
./text-1.2.0.4/Data/Text.hs:1518:{-# RULES
./text-1.2.0.4/Data/Text.hs:1615:{-# RULES
./text-1.2.0.4/Data/Text.hs:1643:{-# RULES
./text-1.2.0.5/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.0.5/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.0.5/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.0.5/Data/Text/Internal/Fusion/Common.hs:139:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.0.5/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.0.5/Data/Text/Internal/Fusion/Common.hs:868:{-# RULES
./text-1.2.0.5/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.0.5/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.0.5/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.0.5/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.0.5/Data/Text/Lazy.hs:393:{-# RULES "TEXT literal" forall a.
./text-1.2.0.5/Data/Text/Lazy.hs:397:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.5/Data/Text/Lazy.hs:401:{-# RULES "LAZY TEXT empty literal"
./text-1.2.0.5/Data/Text/Lazy.hs:405:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.0.5/Data/Text/Lazy.hs:415:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:452:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:465:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:477:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:506:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:522:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:536:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:558:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:572:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:629:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:976:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:1016:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:1054:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:1106:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:1124:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:1384:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:1459:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:1489:{-# RULES
./text-1.2.0.5/Data/Text/Lazy.hs:1611:{-# RULES
./text-1.2.0.5/Data/Text.hs:414:{-# RULES "TEXT literal" forall a.
./text-1.2.0.5/Data/Text.hs:418:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.5/Data/Text.hs:422:{-# RULES "TEXT empty literal"
./text-1.2.0.5/Data/Text.hs:426:{-# RULES "TEXT singleton literal" forall a.
./text-1.2.0.5/Data/Text.hs:436:{-# RULES "TEXT singleton" forall a.
./text-1.2.0.5/Data/Text.hs:490:{-# RULES
./text-1.2.0.5/Data/Text.hs:527:{-# RULES
./text-1.2.0.5/Data/Text.hs:543:{-# RULES
./text-1.2.0.5/Data/Text.hs:560:{-# RULES
./text-1.2.0.5/Data/Text.hs:577:{-# RULES
./text-1.2.0.5/Data/Text.hs:606:{-# RULES
./text-1.2.0.5/Data/Text.hs:611:{-# RULES
./text-1.2.0.5/Data/Text.hs:616:{-# RULES
./text-1.2.0.5/Data/Text.hs:621:{-# RULES
./text-1.2.0.5/Data/Text.hs:626:{-# RULES
./text-1.2.0.5/Data/Text.hs:631:{-# RULES
./text-1.2.0.5/Data/Text.hs:636:{-# RULES
./text-1.2.0.5/Data/Text.hs:821:{-# RULES
./text-1.2.0.5/Data/Text.hs:1044:{-# RULES
./text-1.2.0.5/Data/Text.hs:1096:{-# RULES
./text-1.2.0.5/Data/Text.hs:1135:{-# RULES
./text-1.2.0.5/Data/Text.hs:1165:{-# RULES
./text-1.2.0.5/Data/Text.hs:1182:{-# RULES
./text-1.2.0.5/Data/Text.hs:1203:{-# RULES
./text-1.2.0.5/Data/Text.hs:1340:{-# RULES
./text-1.2.0.5/Data/Text.hs:1518:{-# RULES
./text-1.2.0.5/Data/Text.hs:1615:{-# RULES
./text-1.2.0.5/Data/Text.hs:1643:{-# RULES
./text-1.2.0.6/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.0.6/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.0.6/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.0.6/Data/Text/Internal/Fusion/Common.hs:139:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.0.6/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.0.6/Data/Text/Internal/Fusion/Common.hs:868:{-# RULES
./text-1.2.0.6/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.0.6/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.0.6/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.0.6/Data/Text/Lazy/Encoding.hs:129:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.0.6/Data/Text/Lazy.hs:393:{-# RULES "TEXT literal" forall a.
./text-1.2.0.6/Data/Text/Lazy.hs:397:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.6/Data/Text/Lazy.hs:401:{-# RULES "LAZY TEXT empty literal"
./text-1.2.0.6/Data/Text/Lazy.hs:405:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.0.6/Data/Text/Lazy.hs:415:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:452:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:465:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:477:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:506:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:522:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:536:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:558:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:572:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:629:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:976:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:1016:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:1054:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:1106:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:1124:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:1384:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:1459:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:1489:{-# RULES
./text-1.2.0.6/Data/Text/Lazy.hs:1611:{-# RULES
./text-1.2.0.6/Data/Text.hs:414:{-# RULES "TEXT literal" forall a.
./text-1.2.0.6/Data/Text.hs:418:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.0.6/Data/Text.hs:422:{-# RULES "TEXT empty literal"
./text-1.2.0.6/Data/Text.hs:426:{-# RULES "TEXT singleton literal" forall a.
./text-1.2.0.6/Data/Text.hs:436:{-# RULES "TEXT singleton" forall a.
./text-1.2.0.6/Data/Text.hs:490:{-# RULES
./text-1.2.0.6/Data/Text.hs:527:{-# RULES
./text-1.2.0.6/Data/Text.hs:543:{-# RULES
./text-1.2.0.6/Data/Text.hs:560:{-# RULES
./text-1.2.0.6/Data/Text.hs:577:{-# RULES
./text-1.2.0.6/Data/Text.hs:606:{-# RULES
./text-1.2.0.6/Data/Text.hs:611:{-# RULES
./text-1.2.0.6/Data/Text.hs:616:{-# RULES
./text-1.2.0.6/Data/Text.hs:621:{-# RULES
./text-1.2.0.6/Data/Text.hs:626:{-# RULES
./text-1.2.0.6/Data/Text.hs:631:{-# RULES
./text-1.2.0.6/Data/Text.hs:636:{-# RULES
./text-1.2.0.6/Data/Text.hs:821:{-# RULES
./text-1.2.0.6/Data/Text.hs:1044:{-# RULES
./text-1.2.0.6/Data/Text.hs:1096:{-# RULES
./text-1.2.0.6/Data/Text.hs:1135:{-# RULES
./text-1.2.0.6/Data/Text.hs:1165:{-# RULES
./text-1.2.0.6/Data/Text.hs:1182:{-# RULES
./text-1.2.0.6/Data/Text.hs:1203:{-# RULES
./text-1.2.0.6/Data/Text.hs:1340:{-# RULES
./text-1.2.0.6/Data/Text.hs:1518:{-# RULES
./text-1.2.0.6/Data/Text.hs:1615:{-# RULES
./text-1.2.0.6/Data/Text.hs:1643:{-# RULES
./text-1.2.1.0/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.1.0/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.1.0/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.1.0/Data/Text/Internal/Fusion/Common.hs:139:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.1.0/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.1.0/Data/Text/Internal/Fusion/Common.hs:868:{-# RULES
./text-1.2.1.0/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.1.0/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.1.0/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.1.0/Data/Text/Lazy/Encoding.hs:128:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.1.0/Data/Text/Lazy.hs:399:{-# RULES "TEXT literal" forall a.
./text-1.2.1.0/Data/Text/Lazy.hs:403:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.1.0/Data/Text/Lazy.hs:407:{-# RULES "LAZY TEXT empty literal"
./text-1.2.1.0/Data/Text/Lazy.hs:411:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.1.0/Data/Text/Lazy.hs:421:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:458:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:471:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:483:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:512:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:528:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:542:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:564:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:578:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:635:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:982:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:1022:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:1060:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:1112:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:1130:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:1390:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:1465:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:1495:{-# RULES
./text-1.2.1.0/Data/Text/Lazy.hs:1617:{-# RULES
./text-1.2.1.0/Data/Text/Show.hs:49:{-# RULES "TEXT literal" forall a.
./text-1.2.1.0/Data/Text/Show.hs:53:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.1.0/Data/Text/Show.hs:57:{-# RULES "TEXT empty literal"
./text-1.2.1.0/Data/Text/Show.hs:61:{-# RULES "TEXT singleton literal" forall a.
./text-1.2.1.0/Data/Text/Show.hs:71:{-# RULES "TEXT singleton" forall a.
./text-1.2.1.0/Data/Text.hs:440:{-# RULES
./text-1.2.1.0/Data/Text.hs:477:{-# RULES
./text-1.2.1.0/Data/Text.hs:493:{-# RULES
./text-1.2.1.0/Data/Text.hs:510:{-# RULES
./text-1.2.1.0/Data/Text.hs:527:{-# RULES
./text-1.2.1.0/Data/Text.hs:556:{-# RULES
./text-1.2.1.0/Data/Text.hs:561:{-# RULES
./text-1.2.1.0/Data/Text.hs:566:{-# RULES
./text-1.2.1.0/Data/Text.hs:571:{-# RULES
./text-1.2.1.0/Data/Text.hs:576:{-# RULES
./text-1.2.1.0/Data/Text.hs:581:{-# RULES
./text-1.2.1.0/Data/Text.hs:586:{-# RULES
./text-1.2.1.0/Data/Text.hs:771:{-# RULES
./text-1.2.1.0/Data/Text.hs:994:{-# RULES
./text-1.2.1.0/Data/Text.hs:1046:{-# RULES
./text-1.2.1.0/Data/Text.hs:1085:{-# RULES
./text-1.2.1.0/Data/Text.hs:1115:{-# RULES
./text-1.2.1.0/Data/Text.hs:1132:{-# RULES
./text-1.2.1.0/Data/Text.hs:1153:{-# RULES
./text-1.2.1.0/Data/Text.hs:1290:{-# RULES
./text-1.2.1.0/Data/Text.hs:1468:{-# RULES
./text-1.2.1.0/Data/Text.hs:1565:{-# RULES
./text-1.2.1.0/Data/Text.hs:1593:{-# RULES
./text-1.2.1.1/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.1.1/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.1.1/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.1.1/Data/Text/Internal/Fusion/Common.hs:139:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.1.1/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.1.1/Data/Text/Internal/Fusion/Common.hs:868:{-# RULES
./text-1.2.1.1/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.1.1/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.1.1/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.1.1/Data/Text/Lazy/Encoding.hs:128:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.1.1/Data/Text/Lazy.hs:399:{-# RULES "TEXT literal" forall a.
./text-1.2.1.1/Data/Text/Lazy.hs:403:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.1.1/Data/Text/Lazy.hs:407:{-# RULES "LAZY TEXT empty literal"
./text-1.2.1.1/Data/Text/Lazy.hs:411:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.1.1/Data/Text/Lazy.hs:421:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:458:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:471:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:483:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:512:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:528:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:542:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:564:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:578:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:635:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:982:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:1022:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:1060:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:1112:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:1130:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:1390:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:1465:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:1495:{-# RULES
./text-1.2.1.1/Data/Text/Lazy.hs:1617:{-# RULES
./text-1.2.1.1/Data/Text/Show.hs:53:{-# RULES "TEXT literal" forall a.
./text-1.2.1.1/Data/Text/Show.hs:57:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.1.1/Data/Text/Show.hs:61:{-# RULES "TEXT empty literal"
./text-1.2.1.1/Data/Text/Show.hs:65:{-# RULES "TEXT singleton literal" forall a.
./text-1.2.1.1/Data/Text/Show.hs:75:{-# RULES "TEXT singleton" forall a.
./text-1.2.1.1/Data/Text.hs:441:{-# RULES
./text-1.2.1.1/Data/Text.hs:478:{-# RULES
./text-1.2.1.1/Data/Text.hs:494:{-# RULES
./text-1.2.1.1/Data/Text.hs:511:{-# RULES
./text-1.2.1.1/Data/Text.hs:528:{-# RULES
./text-1.2.1.1/Data/Text.hs:557:{-# RULES
./text-1.2.1.1/Data/Text.hs:562:{-# RULES
./text-1.2.1.1/Data/Text.hs:567:{-# RULES
./text-1.2.1.1/Data/Text.hs:572:{-# RULES
./text-1.2.1.1/Data/Text.hs:577:{-# RULES
./text-1.2.1.1/Data/Text.hs:582:{-# RULES
./text-1.2.1.1/Data/Text.hs:587:{-# RULES
./text-1.2.1.1/Data/Text.hs:772:{-# RULES
./text-1.2.1.1/Data/Text.hs:995:{-# RULES
./text-1.2.1.1/Data/Text.hs:1047:{-# RULES
./text-1.2.1.1/Data/Text.hs:1086:{-# RULES
./text-1.2.1.1/Data/Text.hs:1116:{-# RULES
./text-1.2.1.1/Data/Text.hs:1133:{-# RULES
./text-1.2.1.1/Data/Text.hs:1154:{-# RULES
./text-1.2.1.1/Data/Text.hs:1291:{-# RULES
./text-1.2.1.1/Data/Text.hs:1469:{-# RULES
./text-1.2.1.1/Data/Text.hs:1566:{-# RULES
./text-1.2.1.1/Data/Text.hs:1594:{-# RULES
./text-1.2.1.2/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.1.2/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.1.2/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.1.2/Data/Text/Internal/Fusion/Common.hs:139:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.1.2/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.1.2/Data/Text/Internal/Fusion/Common.hs:868:{-# RULES
./text-1.2.1.2/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.1.2/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.1.2/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.1.2/Data/Text/Lazy/Encoding.hs:128:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.1.2/Data/Text/Lazy.hs:399:{-# RULES "TEXT literal" forall a.
./text-1.2.1.2/Data/Text/Lazy.hs:403:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.1.2/Data/Text/Lazy.hs:407:{-# RULES "LAZY TEXT empty literal"
./text-1.2.1.2/Data/Text/Lazy.hs:411:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.1.2/Data/Text/Lazy.hs:421:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:458:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:471:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:483:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:512:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:528:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:542:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:564:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:578:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:635:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:982:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:1022:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:1060:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:1112:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:1130:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:1390:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:1465:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:1495:{-# RULES
./text-1.2.1.2/Data/Text/Lazy.hs:1617:{-# RULES
./text-1.2.1.2/Data/Text/Show.hs:53:{-# RULES "TEXT literal" [2] forall a.
./text-1.2.1.2/Data/Text/Show.hs:57:{-# RULES "TEXT literal UTF8" [2] forall a.
./text-1.2.1.2/Data/Text/Show.hs:61:{-# RULES "TEXT empty literal" [2]
./text-1.2.1.2/Data/Text/Show.hs:65:{-# RULES "TEXT singleton literal" [2] forall a.
./text-1.2.1.2/Data/Text/Show.hs:75:{-# RULES "TEXT singleton" forall a.
./text-1.2.1.2/Data/Text.hs:441:{-# RULES
./text-1.2.1.2/Data/Text.hs:478:{-# RULES
./text-1.2.1.2/Data/Text.hs:494:{-# RULES
./text-1.2.1.2/Data/Text.hs:511:{-# RULES
./text-1.2.1.2/Data/Text.hs:528:{-# RULES
./text-1.2.1.2/Data/Text.hs:557:{-# RULES
./text-1.2.1.2/Data/Text.hs:562:{-# RULES
./text-1.2.1.2/Data/Text.hs:567:{-# RULES
./text-1.2.1.2/Data/Text.hs:572:{-# RULES
./text-1.2.1.2/Data/Text.hs:577:{-# RULES
./text-1.2.1.2/Data/Text.hs:582:{-# RULES
./text-1.2.1.2/Data/Text.hs:587:{-# RULES
./text-1.2.1.2/Data/Text.hs:772:{-# RULES
./text-1.2.1.2/Data/Text.hs:995:{-# RULES
./text-1.2.1.2/Data/Text.hs:1047:{-# RULES
./text-1.2.1.2/Data/Text.hs:1086:{-# RULES
./text-1.2.1.2/Data/Text.hs:1116:{-# RULES
./text-1.2.1.2/Data/Text.hs:1133:{-# RULES
./text-1.2.1.2/Data/Text.hs:1154:{-# RULES
./text-1.2.1.2/Data/Text.hs:1291:{-# RULES
./text-1.2.1.2/Data/Text.hs:1469:{-# RULES
./text-1.2.1.2/Data/Text.hs:1566:{-# RULES
./text-1.2.1.2/Data/Text.hs:1594:{-# RULES
./text-1.2.1.3/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.1.3/Data/Text/Internal/Builder.hs:160:{-# RULES
./text-1.2.1.3/Data/Text/Internal/Builder.hs:292:{-# RULES
./text-1.2.1.3/Data/Text/Internal/Fusion/Common.hs:139:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.1.3/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.1.3/Data/Text/Internal/Fusion/Common.hs:868:{-# RULES
./text-1.2.1.3/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.1.3/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.1.3/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.1.3/Data/Text/Lazy/Encoding.hs:128:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.1.3/Data/Text/Lazy.hs:399:{-# RULES "TEXT literal" forall a.
./text-1.2.1.3/Data/Text/Lazy.hs:403:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.1.3/Data/Text/Lazy.hs:407:{-# RULES "LAZY TEXT empty literal"
./text-1.2.1.3/Data/Text/Lazy.hs:411:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.1.3/Data/Text/Lazy.hs:421:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:458:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:471:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:483:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:512:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:528:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:542:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:564:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:578:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:635:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:982:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:1022:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:1060:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:1112:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:1130:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:1390:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:1465:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:1495:{-# RULES
./text-1.2.1.3/Data/Text/Lazy.hs:1617:{-# RULES
./text-1.2.1.3/Data/Text/Show.hs:53:{-# RULES "TEXT literal" [1] forall a.
./text-1.2.1.3/Data/Text/Show.hs:57:{-# RULES "TEXT literal UTF8" [1] forall a.
./text-1.2.1.3/Data/Text/Show.hs:61:{-# RULES "TEXT empty literal" [1]
./text-1.2.1.3/Data/Text/Show.hs:65:{-# RULES "TEXT singleton literal" [1] forall a.
./text-1.2.1.3/Data/Text/Show.hs:75:{-# RULES "TEXT singleton" forall a.
./text-1.2.1.3/Data/Text.hs:441:{-# RULES
./text-1.2.1.3/Data/Text.hs:478:{-# RULES
./text-1.2.1.3/Data/Text.hs:494:{-# RULES
./text-1.2.1.3/Data/Text.hs:511:{-# RULES
./text-1.2.1.3/Data/Text.hs:528:{-# RULES
./text-1.2.1.3/Data/Text.hs:557:{-# RULES
./text-1.2.1.3/Data/Text.hs:562:{-# RULES
./text-1.2.1.3/Data/Text.hs:567:{-# RULES
./text-1.2.1.3/Data/Text.hs:572:{-# RULES
./text-1.2.1.3/Data/Text.hs:577:{-# RULES
./text-1.2.1.3/Data/Text.hs:582:{-# RULES
./text-1.2.1.3/Data/Text.hs:587:{-# RULES
./text-1.2.1.3/Data/Text.hs:772:{-# RULES
./text-1.2.1.3/Data/Text.hs:995:{-# RULES
./text-1.2.1.3/Data/Text.hs:1047:{-# RULES
./text-1.2.1.3/Data/Text.hs:1086:{-# RULES
./text-1.2.1.3/Data/Text.hs:1116:{-# RULES
./text-1.2.1.3/Data/Text.hs:1133:{-# RULES
./text-1.2.1.3/Data/Text.hs:1154:{-# RULES
./text-1.2.1.3/Data/Text.hs:1291:{-# RULES
./text-1.2.1.3/Data/Text.hs:1469:{-# RULES
./text-1.2.1.3/Data/Text.hs:1566:{-# RULES
./text-1.2.1.3/Data/Text.hs:1594:{-# RULES
./text-1.2.2.0/Data/Text/Encoding.hs:307:{-# RULES "STREAM stream/decodeUtf8 fusion" [1]
./text-1.2.2.0/Data/Text/Internal/Builder.hs:173:{-# RULES
./text-1.2.2.0/Data/Text/Internal/Builder.hs:305:{-# RULES
./text-1.2.2.0/Data/Text/Internal/Fusion/Common.hs:139:{-# RULES "STREAM streamList/unstreamList fusion" forall s. streamList (unstreamList s) = s #-}
./text-1.2.2.0/Data/Text/Internal/Fusion/Common.hs:360:  RULES "STREAM map/map fusion" forall f g s.
./text-1.2.2.0/Data/Text/Internal/Fusion/Common.hs:868:{-# RULES
./text-1.2.2.0/Data/Text/Internal/Fusion.hs:121:{-# RULES "STREAM stream/unstream fusion" forall s. stream (unstream s) = s #-}
./text-1.2.2.0/Data/Text/Internal/Lazy/Fusion.hs:100:{-# RULES "LAZY STREAM stream/unstream fusion" forall s.
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:53:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:54:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:55:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:56:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:57:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:58:{-# RULES "decimal/Word" decimal = positive :: Data.Word.Word -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:59:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:60:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:61:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:62:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:63:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-1.2.2.0/Data/Text/Lazy/Builder/Int.hs:173:{-# RULES "hexadecimal/Integer"
./text-1.2.2.0/Data/Text/Lazy/Encoding.hs:128:{- RULES "LAZY STREAM stream/decodeUtf8' fusion" [1]
./text-1.2.2.0/Data/Text/Lazy.hs:428:{-# RULES "TEXT literal" forall a.
./text-1.2.2.0/Data/Text/Lazy.hs:432:{-# RULES "TEXT literal UTF8" forall a.
./text-1.2.2.0/Data/Text/Lazy.hs:436:{-# RULES "LAZY TEXT empty literal"
./text-1.2.2.0/Data/Text/Lazy.hs:440:{-# RULES "LAZY TEXT empty literal" forall a.
./text-1.2.2.0/Data/Text/Lazy.hs:450:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:487:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:500:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:512:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:541:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:557:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:571:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:593:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:607:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:664:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:1011:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:1051:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:1089:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:1141:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:1173:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:1435:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:1510:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:1540:{-# RULES
./text-1.2.2.0/Data/Text/Lazy.hs:1662:{-# RULES
./text-1.2.2.0/Data/Text/Show.hs:53:{-# RULES "TEXT literal" [1] forall a.
./text-1.2.2.0/Data/Text/Show.hs:57:{-# RULES "TEXT literal UTF8" [1] forall a.
./text-1.2.2.0/Data/Text/Show.hs:61:{-# RULES "TEXT empty literal" [1]
./text-1.2.2.0/Data/Text/Show.hs:65:{-# RULES "TEXT singleton literal" [1] forall a.
./text-1.2.2.0/Data/Text/Show.hs:75:{-# RULES "TEXT singleton" forall a.
./text-1.2.2.0/Data/Text.hs:470:{-# RULES
./text-1.2.2.0/Data/Text.hs:507:{-# RULES
./text-1.2.2.0/Data/Text.hs:523:{-# RULES
./text-1.2.2.0/Data/Text.hs:540:{-# RULES
./text-1.2.2.0/Data/Text.hs:557:{-# RULES
./text-1.2.2.0/Data/Text.hs:586:{-# RULES
./text-1.2.2.0/Data/Text.hs:591:{-# RULES
./text-1.2.2.0/Data/Text.hs:596:{-# RULES
./text-1.2.2.0/Data/Text.hs:601:{-# RULES
./text-1.2.2.0/Data/Text.hs:606:{-# RULES
./text-1.2.2.0/Data/Text.hs:611:{-# RULES
./text-1.2.2.0/Data/Text.hs:616:{-# RULES
./text-1.2.2.0/Data/Text.hs:801:{-# RULES
./text-1.2.2.0/Data/Text.hs:1024:{-# RULES
./text-1.2.2.0/Data/Text.hs:1076:{-# RULES
./text-1.2.2.0/Data/Text.hs:1115:{-# RULES
./text-1.2.2.0/Data/Text.hs:1145:{-# RULES
./text-1.2.2.0/Data/Text.hs:1166:{-# RULES
./text-1.2.2.0/Data/Text.hs:1183:{-# RULES
./text-1.2.2.0/Data/Text.hs:1205:{-# RULES
./text-1.2.2.0/Data/Text.hs:1342:{-# RULES
./text-1.2.2.0/Data/Text.hs:1520:{-# RULES
./text-1.2.2.0/Data/Text.hs:1617:{-# RULES
./text-1.2.2.0/Data/Text.hs:1645:{-# RULES
./text-format-0.1.0.0/Data/Text/Format/Int.hs:53:{-# RULES "integral/Integer" integral = integer :: Integer -> Builder #-}
./text-format-0.2.0.0/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.2.0.0/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.2.1.0/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.2.1.0/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.0.0/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.0.0/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.0.0/Data/Text/Format.hs:95:{-# RULES "prec/Double"
./text-format-0.3.0.0/Data/Text/Format.hs:106:{-# RULES "fixed/Double"
./text-format-0.3.0.0/Data/Text/Format.hs:116:{-# RULES "expt/Double"
./text-format-0.3.0.2/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.0.2/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.0.2/Data/Text/Format.hs:111:{-# RULES "prec/Double"
./text-format-0.3.0.2/Data/Text/Format.hs:122:{-# RULES "fixed/Double"
./text-format-0.3.0.2/Data/Text/Format.hs:132:{-# RULES "expt/Double"
./text-format-0.3.0.3/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.0.3/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.0.3/Data/Text/Format.hs:111:{-# RULES "prec/Double"
./text-format-0.3.0.3/Data/Text/Format.hs:122:{-# RULES "fixed/Double"
./text-format-0.3.0.3/Data/Text/Format.hs:132:{-# RULES "expt/Double"
./text-format-0.3.0.4/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.0.4/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.0.4/Data/Text/Format.hs:112:{-# RULES "prec/Double"
./text-format-0.3.0.4/Data/Text/Format.hs:123:{-# RULES "fixed/Double"
./text-format-0.3.0.4/Data/Text/Format.hs:133:{-# RULES "expt/Double"
./text-format-0.3.0.4/Data/Text/Format.hs:140:{-# RULES "shortest/Double"
./text-format-0.3.0.5/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.0.5/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.0.5/Data/Text/Format.hs:112:{-# RULES "prec/Double"
./text-format-0.3.0.5/Data/Text/Format.hs:123:{-# RULES "fixed/Double"
./text-format-0.3.0.5/Data/Text/Format.hs:133:{-# RULES "expt/Double"
./text-format-0.3.0.5/Data/Text/Format.hs:140:{-# RULES "shortest/Double"
./text-format-0.3.0.6/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.0.6/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.0.6/Data/Text/Format.hs:112:{-# RULES "prec/Double"
./text-format-0.3.0.6/Data/Text/Format.hs:123:{-# RULES "fixed/Double"
./text-format-0.3.0.6/Data/Text/Format.hs:133:{-# RULES "expt/Double"
./text-format-0.3.0.6/Data/Text/Format.hs:140:{-# RULES "shortest/Double"
./text-format-0.3.0.7/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.0.7/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.0.7/Data/Text/Format.hs:112:{-# RULES "prec/Double"
./text-format-0.3.0.7/Data/Text/Format.hs:123:{-# RULES "fixed/Double"
./text-format-0.3.0.7/Data/Text/Format.hs:133:{-# RULES "expt/Double"
./text-format-0.3.0.7/Data/Text/Format.hs:140:{-# RULES "shortest/Double"
./text-format-0.3.0.8/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.0.8/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.0.8/Data/Text/Format.hs:112:{-# RULES "prec/Double"
./text-format-0.3.0.8/Data/Text/Format.hs:123:{-# RULES "fixed/Double"
./text-format-0.3.0.8/Data/Text/Format.hs:133:{-# RULES "expt/Double"
./text-format-0.3.0.8/Data/Text/Format.hs:140:{-# RULES "shortest/Double"
./text-format-0.3.1.0/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.1.0/Data/Text/Format/Int.hs:72:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.1.0/Data/Text/Format.hs:112:{-# RULES "prec/Double"
./text-format-0.3.1.0/Data/Text/Format.hs:123:{-# RULES "fixed/Double"
./text-format-0.3.1.0/Data/Text/Format.hs:133:{-# RULES "expt/Double"
./text-format-0.3.1.0/Data/Text/Format.hs:140:{-# RULES "shortest/Double"
./text-format-0.3.1.1/Data/Text/Format/Int.hs:53:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-format-0.3.1.1/Data/Text/Format/Int.hs:73:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-format-0.3.1.1/Data/Text/Format.hs:112:{-# RULES "prec/Double"
./text-format-0.3.1.1/Data/Text/Format.hs:124:{-# RULES "fixed/Double"
./text-format-0.3.1.1/Data/Text/Format.hs:135:{-# RULES "expt/Double"
./text-format-0.3.1.1/Data/Text/Format.hs:143:{-# RULES "shortest/Double"
./text-show-0.4/src/Text/Show/Text/Data/Integral.hs:202:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-show-0.4/src/Text/Show/Text/Data/Integral.hs:222:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-show-0.4.1/src/Text/Show/Text/Data/Integral.hs:202:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-show-0.4.1/src/Text/Show/Text/Data/Integral.hs:222:{-# RULES "hexadecimal/Integer" hexadecimal = integer 16 :: Integer -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:227:{-# RULES "decimal/Int8" decimal = boundedDecimal :: Int8 -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:228:{-# RULES "decimal/Int" decimal = boundedDecimal :: Int -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:229:{-# RULES "decimal/Int16" decimal = boundedDecimal :: Int16 -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:230:{-# RULES "decimal/Int32" decimal = boundedDecimal :: Int32 -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:231:{-# RULES "decimal/Int64" decimal = boundedDecimal :: Int64 -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:232:{-# RULES "decimal/Word" decimal = positive :: Word -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:233:{-# RULES "decimal/Word8" decimal = positive :: Word8 -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:234:{-# RULES "decimal/Word16" decimal = positive :: Word16 -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:235:{-# RULES "decimal/Word32" decimal = positive :: Word32 -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:236:{-# RULES "decimal/Word64" decimal = positive :: Word64 -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:237:{-# RULES "decimal/Integer" decimal = integer 10 :: Integer -> Builder #-}
./text-show-0.5/src/Text/Show/Text/Data/Integral.hs:347:{-# RULES "hexadecimal/Integer"
./these-0.2/Data/Align.hs:84:{-# RULES
./these-0.3/Data/Align.hs:84:{-# RULES
./these-0.4/Data/Align.hs:84:{-# RULES
./these-0.4.1/Data/Align.hs:84:{-# RULES
./these-0.4.2/Data/Align.hs:84:{-# RULES
./these-0.6.0.0/Data/Align.hs:92:{-# RULES
./these-0.6.1.0/Data/Align.hs:116:{-# RULES
./these-0.6.2.0/Data/Align.hs:116:{-# RULES
./these-0.6.2.1/Data/Align.hs:116:{-# RULES
./thyme-0.2.4.1/src/Data/Thyme/Clock/Internal.hs:32:-- | Workaround for GHC refusing to match RULES for functions with equality
./thyme-0.2.4.1/src/Data/Thyme/Clock/Internal.hs:74:{-# RULES
./thyme-0.2.4.1/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.0.0/src/Data/Thyme/Clock/Internal.hs:51:-- 'Int', 'Int64' or 'Integer', for which @RULES@ have been provided.
./thyme-0.3.0.0/src/Data/Thyme/Clock/Internal.hs:75:{-# RULES
./thyme-0.3.0.0/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.0.1/src/Data/Thyme/Clock/Internal.hs:51:-- 'Int', 'Int64' or 'Integer', for which @RULES@ have been provided.
./thyme-0.3.0.1/src/Data/Thyme/Clock/Internal.hs:75:{-# RULES
./thyme-0.3.0.1/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.0.2/src/Data/Thyme/Clock/Internal.hs:54:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.0.2/src/Data/Thyme/Clock/Internal.hs:78:{-# RULES
./thyme-0.3.0.2/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.0.3/src/Data/Thyme/Clock/Internal.hs:54:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.0.3/src/Data/Thyme/Clock/Internal.hs:78:{-# RULES
./thyme-0.3.0.3/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.1.0/src/Data/Thyme/Clock/Internal.hs:54:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.1.0/src/Data/Thyme/Clock/Internal.hs:78:{-# RULES
./thyme-0.3.1.0/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.1.1/src/Data/Thyme/Clock/Internal.hs:54:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.1.1/src/Data/Thyme/Clock/Internal.hs:78:{-# RULES
./thyme-0.3.1.1/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.2.0/src/Data/Thyme/Clock/Internal.hs:54:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.2.0/src/Data/Thyme/Clock/Internal.hs:78:{-# RULES
./thyme-0.3.2.0/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.3.0/src/Data/Thyme/Clock/Internal.hs:54:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.3.0/src/Data/Thyme/Clock/Internal.hs:78:{-# RULES
./thyme-0.3.3.0/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.4.0/src/Data/Thyme/Clock/Internal.hs:58:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.4.0/src/Data/Thyme/Clock/Internal.hs:84:{-# RULES
./thyme-0.3.4.0/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.5.0/src/Data/Thyme/Clock/Internal.hs:62:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.5.0/src/Data/Thyme/Clock/Internal.hs:88:{-# RULES
./thyme-0.3.5.0/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.5.1/src/Data/Thyme/Clock/Internal.hs:62:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.5.1/src/Data/Thyme/Clock/Internal.hs:88:{-# RULES
./thyme-0.3.5.1/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.5.2/src/Data/Thyme/Clock/Internal.hs:62:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.5.2/src/Data/Thyme/Clock/Internal.hs:88:{-# RULES
./thyme-0.3.5.2/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.5.3/src/Data/Thyme/Clock/Internal.hs:62:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.5.3/src/Data/Thyme/Clock/Internal.hs:93:{-# RULES
./thyme-0.3.5.3/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.5.4/src/Data/Thyme/Clock/Internal.hs:62:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.5.4/src/Data/Thyme/Clock/Internal.hs:93:{-# RULES
./thyme-0.3.5.4/src/Data/Thyme/Time.hs:86:{-# RULES
./thyme-0.3.5.5/src/Data/Thyme/Clock/Internal.hs:62:-- 'Int64' or 'Integer', for which rewrite @RULES@ have been provided.
./thyme-0.3.5.5/src/Data/Thyme/Clock/Internal.hs:93:{-# RULES
./thyme-0.3.5.5/src/Data/Thyme/Time.hs:86:{-# RULES
./tickle-0.0.1/src/Data/Tickle/Get.hs:858:{-# RULES
./tickle-0.0.1/src/Data/Tickle/Get.hs:1239:{-# RULES
./tickle-0.0.2/src/Data/Tickle/Get.hs:860:{-# RULES
./tickle-0.0.2/src/Data/Tickle/Get.hs:1267:{-# RULES
./tickle-0.0.3/src/Data/Tickle/Get.hs:892:{-# RULES
./tickle-0.0.3/src/Data/Tickle/Get.hs:1559:{-# RULES
./tickle-0.0.4/src/Data/Tickle/Get.hs:892:{-# RULES
./tickle-0.0.4/src/Data/Tickle/Get.hs:1559:{-# RULES
./tickle-0.0.5/src/Data/Tickle/Get.hs:892:{-# RULES
./tickle-0.0.5/src/Data/Tickle/Get.hs:1559:{-# RULES
./tickle-0.0.6/src/Data/Tickle/Get.hs:893:{-# RULES
./tickle-0.0.6/src/Data/Tickle/Get.hs:1567:{-# RULES
./time-1.4.0.1/Data/Time/Clock/Scale.hs:110:{-# RULES
./time-1.4.0.1/Data/Time/Clock/UTC.hs:122:{-# RULES
./time-1.4.0.2/Data/Time/Clock/Scale.hs:110:{-# RULES
./time-1.4.0.2/Data/Time/Clock/UTC.hs:122:{-# RULES
./time-1.4.1/Data/Time/Clock/Scale.hs:104:{-# RULES
./time-1.4.1/Data/Time/Clock/UTC.hs:116:{-# RULES
./time-1.4.2/Data/Time/Clock/Scale.hs:105:{-# RULES
./time-1.4.2/Data/Time/Clock/UTC.hs:117:{-# RULES
./time-1.5/lib/Data/Time/Clock/Scale.hs:105:{-# RULES
./time-1.5/lib/Data/Time/Clock/UTC.hs:117:{-# RULES
./time-1.5.0.1/lib/Data/Time/Clock/Scale.hs:106:{-# RULES
./time-1.5.0.1/lib/Data/Time/Clock/UTC.hs:118:{-# RULES
./time-1.6/lib/Data/Time/Clock/Scale.hs:114:{-# RULES
./time-1.6/lib/Data/Time/Clock/UTC.hs:120:{-# RULES
./toolshed-0.13.0.0/src/ToolShed/Data/List.hs:161:{-# RULES "showListWith/Char" showListWith = showListWithChar #-}
./toolshed-0.13.0.0/src/ToolShed/Data/List.hs:162:{-# RULES "showListWith/String" showListWith = showListWithString #-}
./toolshed-0.14.0.0/src/ToolShed/Data/List.hs:95:{-# RULES "nub'/Int" nub' = nubWithInt #-}
./toolshed-0.14.0.0/src/ToolShed/Data/List.hs:163:{-# RULES "showListWith/Char" showListWith = showListWithChar #-}
./toolshed-0.14.0.0/src/ToolShed/Data/List.hs:164:{-# RULES "showListWith/String" showListWith = showListWithString #-}
./toolshed-0.15.0.0/src/ToolShed/Data/List.hs:132:{-# RULES "nub'/Int" nub' = nubWithInt #-}
./toolshed-0.15.0.0/src/ToolShed/Data/List.hs:193:{-# RULES "showListWith/Char" showListWith = showListWithChar #-}
./toolshed-0.15.0.0/src/ToolShed/Data/List.hs:194:{-# RULES "showListWith/String" showListWith = showListWithString #-}
./toolshed-0.15.0.1/src/ToolShed/Data/List.hs:132:{-# RULES "nub'/Int" nub' = nubWithInt #-}
./toolshed-0.15.0.1/src/ToolShed/Data/List.hs:193:{-# RULES "showListWith/Char" showListWith = showListWithChar #-}
./toolshed-0.15.0.1/src/ToolShed/Data/List.hs:194:{-# RULES "showListWith/String" showListWith = showListWithString #-}
./toolshed-0.16.0.0/src-lib/ToolShed/Data/List.hs:132:{-# RULES "nub'/Int" nub' = nubWithInt #-}
./toolshed-0.16.0.0/src-lib/ToolShed/Data/List.hs:193:{-# RULES "showListWith/Char" showListWith = showListWithChar #-}
./toolshed-0.16.0.0/src-lib/ToolShed/Data/List.hs:194:{-# RULES "showListWith/String" showListWith = showListWithString #-}
./toysolver-0.2.0/src/ToySolver/Data/BoolExpr.hs:109:{-# RULES
./toysolver-0.3.0/src/ToySolver/Data/BoolExpr.hs:115:{-# RULES
./toysolver-0.4.0/src/ToySolver/Combinatorial/Knapsack/DPSparse.hs:29:{-# RULES
./toysolver-0.4.0/src/ToySolver/Data/BoolExpr.hs:117:{-# RULES
./tpdb-0.0/TPDB/Plain/Read.hs:37:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.0/TPDB/Plain/Read.hs:83:       <|> do reserved lexer "RULES" 
./tpdb-0.0/TPDB/Plain/Write.hs:36:        [ parens $ text "RULES" <+>
./tpdb-0.1/TPDB/Plain/Read.hs:37:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.1/TPDB/Plain/Read.hs:83:       <|> do reserved lexer "RULES" 
./tpdb-0.1/TPDB/Plain/Read.hs:89:                        -- ( RULES a b -> b a , )
./tpdb-0.1/TPDB/Plain/Write.hs:36:        [ parens $ text "RULES" <+>
./tpdb-0.3/TPDB/Plain/Read.hs:37:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.3/TPDB/Plain/Read.hs:83:       <|> do reserved lexer "RULES" 
./tpdb-0.3/TPDB/Plain/Read.hs:89:                        -- ( RULES a b -> b a , )
./tpdb-0.3/TPDB/Plain/Write.hs:39:        [ parens $ text "RULES" <+>
./tpdb-0.6.0/TPDB/Plain/Read.hs:37:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.6.0/TPDB/Plain/Read.hs:86:       <|> do reserved lexer "RULES" 
./tpdb-0.6.0/TPDB/Plain/Read.hs:92:                        -- ( RULES a b -> b a , )
./tpdb-0.6.0/TPDB/Plain/Write.hs:45:        [ parens $ text "RULES" <+>
./tpdb-0.6.1/TPDB/Plain/Read.hs:37:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.6.1/TPDB/Plain/Read.hs:86:       <|> do reserved lexer "RULES" 
./tpdb-0.6.1/TPDB/Plain/Read.hs:92:                        -- ( RULES a b -> b a , )
./tpdb-0.6.1/TPDB/Plain/Write.hs:45:        [ parens $ text "RULES" <+>
./tpdb-0.7.1/TPDB/Plain/Read.hs:37:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.7.1/TPDB/Plain/Read.hs:86:       <|> do reserved lexer "RULES" 
./tpdb-0.7.1/TPDB/Plain/Read.hs:92:                        -- ( RULES a b -> b a , )
./tpdb-0.7.1/TPDB/Plain/Write.hs:46:        [ parens $ "RULES" <+>
./tpdb-0.8.2/TPDB/Plain/Read.hs:37:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.8.2/TPDB/Plain/Read.hs:86:       <|> do reserved lexer "RULES" 
./tpdb-0.8.2/TPDB/Plain/Read.hs:92:                        -- ( RULES a b -> b a , )
./tpdb-0.8.2/TPDB/Plain/Write.hs:46:        [ parens $ "RULES" <+>
./tpdb-0.8.3/TPDB/Plain/Read.hs:41:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.8.3/TPDB/Plain/Read.hs:90:       <|> do reserved lexer "RULES" 
./tpdb-0.8.3/TPDB/Plain/Read.hs:96:                        -- ( RULES a b -> b a , )
./tpdb-0.8.3/TPDB/Plain/Write.hs:46:        [ parens $ "RULES" <+>
./tpdb-0.8.4/TPDB/Plain/Read.hs:41:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.8.4/TPDB/Plain/Read.hs:90:       <|> do reserved lexer "RULES" 
./tpdb-0.8.4/TPDB/Plain/Read.hs:96:                        -- ( RULES a b -> b a , )
./tpdb-0.8.4/TPDB/Plain/Write.hs:46:        [ parens $ "RULES" <+>
./tpdb-0.9.6/TPDB/DP/Graph.hs:52:    TPDB.Plain.Read.trs "(VAR x y) (RULES not(not(x)) -> x not(or(x,y)) -> and(not(x),not(y)) not(and(x,y)) -> or (not(x),not(y)) and(x,or(y,z)) -> or(and(x,z),and(y,z)) and(or(y,z),x) -> or(and(x,y),and(x,z)))"
./tpdb-0.9.6/TPDB/Plain/Read.hs:41:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.9.6/TPDB/Plain/Read.hs:90:       <|> do reserved lexer "RULES" 
./tpdb-0.9.6/TPDB/Plain/Read.hs:96:                        -- ( RULES a b -> b a , )
./tpdb-0.9.6/TPDB/Plain/Write.hs:46:        [ parens $ "RULES" <+>
./tpdb-0.9.8/TPDB/DP/Graph.hs:52:    TPDB.Plain.Read.trs "(VAR x y) (RULES not(not(x)) -> x not(or(x,y)) -> and(not(x),not(y)) not(and(x,y)) -> or (not(x),not(y)) and(x,or(y,z)) -> or(and(x,z),and(y,z)) and(or(y,z),x) -> or(and(x,y),and(x,z)))"
./tpdb-0.9.8/TPDB/Plain/Read.hs:41:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-0.9.8/TPDB/Plain/Read.hs:90:       <|> do reserved lexer "RULES" 
./tpdb-0.9.8/TPDB/Plain/Read.hs:96:                        -- ( RULES a b -> b a , )
./tpdb-0.9.8/TPDB/Plain/Write.hs:46:        [ parens $ "RULES" <+>
./tpdb-1.1.1/TPDB/DP/Graph.hs:52:    TPDB.Plain.Read.trs "(VAR x y) (RULES not(not(x)) -> x not(or(x,y)) -> and(not(x),not(y)) not(and(x,y)) -> or (not(x),not(y)) and(x,or(y,z)) -> or(and(x,z),and(y,z)) and(or(y,z),x) -> or(and(x,y),and(x,z)))"
./tpdb-1.1.1/TPDB/Plain/Read.hs:41:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-1.1.1/TPDB/Plain/Read.hs:90:       <|> do reserved lexer "RULES" 
./tpdb-1.1.1/TPDB/Plain/Read.hs:96:                        -- ( RULES a b -> b a , )
./tpdb-1.1.1/TPDB/Plain/Write.hs:46:        [ parens $ "RULES" <+>
./tpdb-1.2.0/src/TPDB/DP/Graph.hs:52:    TPDB.Plain.Read.trs "(VAR x y) (RULES not(not(x)) -> x not(or(x,y)) -> and(not(x),not(y)) not(and(x,y)) -> or (not(x),not(y)) and(x,or(y,z)) -> or(and(x,z),and(y,z)) and(or(y,z),x) -> or(and(x,y),and(x,z)))"
./tpdb-1.2.0/src/TPDB/Plain/Read.hs:41:       , reservedNames = [ "VAR", "THEORY", "STRATEGY", "RULES", "->", "->=" ]
./tpdb-1.2.0/src/TPDB/Plain/Read.hs:90:       <|> do reserved lexer "RULES" 
./tpdb-1.2.0/src/TPDB/Plain/Read.hs:96:                        -- ( RULES a b -> b a , )
./tpdb-1.2.0/src/TPDB/Plain/Write.hs:46:        [ parens $ "RULES" <+>
./TrieMap-0.0.1.1/TrieMap/TrieAlgebraic.hs:378:{-# RULES
./TrieMap-0.0.1.2/TrieMap/Algebraic.hs:256:{-# RULES
./TrieMap-0.0.1.2/TrieMap/Algebraic.hs:415:{-# RULES
./TrieMap-0.0.1.2/TrieMap/TrieAlgebraic.hs:809:{-# RULES
./TrieMap-0.5.2/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.5.3/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.5.3/Data/TrieMap/TrieKey.hs:157:{-# RULES
./TrieMap-0.5.4/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.5.4/Data/TrieMap/TrieKey.hs:157:{-# RULES
./TrieMap-0.6.0/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.6.0/Data/TrieMap/TrieKey.hs:157:{-# RULES
./TrieMap-0.6.1/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.6.1/Data/TrieMap/TrieKey.hs:157:{-# RULES
./TrieMap-0.6.2/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.6.2/Data/TrieMap/TrieKey.hs:157:{-# RULES
./TrieMap-0.6.3/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.6.3/Data/TrieMap/TrieKey.hs:157:{-# RULES
./TrieMap-0.7.0/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.7.0/Data/TrieMap/TrieKey.hs:157:{-# RULES
./TrieMap-0.7.1/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.7.1/Data/TrieMap/TrieKey.hs:157:{-# RULES
./TrieMap-0.7.2/Data/TrieMap/Rep.hs:23:{-# RULES
./TrieMap-0.7.2/Data/TrieMap/TrieKey.hs:157:{-# RULES
./TrieMap-1.0.0/Data/TrieMap/IntMap.hs:31:{-# RULES
./TrieMap-1.0.0/Data/TrieMap/Rep.hs:22:{-# RULES
./TrieMap-1.0.0/Data/TrieMap/TrieKey.hs:126:{-# RULES
./TrieMap-1.5.0/Data/TrieMap/IntMap.hs:32:{-# RULES
./TrieMap-1.5.0/Data/TrieMap/Rep.hs:22:{-# RULES
./TrieMap-3.0.0/Data/TrieMap/TrieKey.hs:245:{-# RULES
./TrieMap-3.0.0/Data/TrieMap/Utils.hs:46:{-# RULES
./TrieMap-3.0.1/Data/TrieMap/TrieKey.hs:245:{-# RULES
./TrieMap-3.0.1/Data/TrieMap/Utils.hs:46:{-# RULES
./TrieMap-4.0.0/Data/TrieMap/RadixTrie/Label.hs:230:{-# RULES
./TrieMap-4.0.0/Data/TrieMap/TrieKey.hs:179:{-# RULES
./TrieMap-4.0.0/Data/TrieMap/Utils.hs:52:{-# RULES
./TrieMap-4.0.1/Data/TrieMap/RadixTrie/Label.hs:230:{-# RULES
./TrieMap-4.0.1/Data/TrieMap/TrieKey.hs:179:{-# RULES
./TrieMap-4.0.1/Data/TrieMap/Utils.hs:52:{-# RULES
./TrieMap-4.1.0/Data/TrieMap/RadixTrie/Label.hs:230:{-# RULES
./TrieMap-4.1.0/Data/TrieMap/TrieKey.hs:179:{-# RULES
./TrieMap-4.1.0/Data/TrieMap/Utils.hs:52:{-# RULES
./type-natural-0.1.0.0/Data/Type/Natural.hs:245:{-# RULES
./type-natural-0.1.0.0/Data/Type/Natural.hs:254:{-# RULES
./type-natural-0.1.0.0/Data/Type/Natural.hs:262:{-# RULES
./type-natural-0.2.0.0/Data/Type/Natural.hs:245:{-# RULES
./type-natural-0.2.0.0/Data/Type/Natural.hs:254:{-# RULES
./type-natural-0.2.0.0/Data/Type/Natural.hs:262:{-# RULES
./type-natural-0.2.1.0/Data/Type/Natural.hs:265:{-# RULES
./type-natural-0.2.1.0/Data/Type/Natural.hs:274:{-# RULES
./type-natural-0.2.1.0/Data/Type/Natural.hs:282:{-# RULES
./type-natural-0.2.1.1/Data/Type/Natural.hs:267:{-# RULES
./type-natural-0.2.1.1/Data/Type/Natural.hs:276:{-# RULES
./type-natural-0.2.1.1/Data/Type/Natural.hs:284:{-# RULES
./type-natural-0.2.1.2/Data/Type/Natural.hs:267:{-# RULES
./type-natural-0.2.1.2/Data/Type/Natural.hs:276:{-# RULES
./type-natural-0.2.1.2/Data/Type/Natural.hs:284:{-# RULES
./type-natural-0.2.1.3/Data/Type/Natural.hs:180:{-# RULES
./type-natural-0.2.1.3/Data/Type/Natural.hs:189:{-# RULES
./type-natural-0.2.1.3/Data/Type/Natural.hs:197:{-# RULES
./type-natural-0.2.1.4/Data/Type/Natural.hs:180:{-# RULES
./type-natural-0.2.1.4/Data/Type/Natural.hs:189:{-# RULES
./type-natural-0.2.1.4/Data/Type/Natural.hs:197:{-# RULES
./type-natural-0.2.1.5/Data/Type/Natural.hs:180:{-# RULES
./type-natural-0.2.1.5/Data/Type/Natural.hs:189:{-# RULES
./type-natural-0.2.1.5/Data/Type/Natural.hs:197:{-# RULES
./type-natural-0.2.2.0/Data/Type/Natural.hs:180:{-# RULES
./type-natural-0.2.2.0/Data/Type/Natural.hs:189:{-# RULES
./type-natural-0.2.2.0/Data/Type/Natural.hs:197:{-# RULES
./type-natural-0.2.3.0/Data/Type/Natural.hs:180:{-# RULES
./type-natural-0.2.3.0/Data/Type/Natural.hs:189:{-# RULES
./type-natural-0.2.3.0/Data/Type/Natural.hs:197:{-# RULES
./type-natural-0.2.3.1/Data/Type/Natural.hs:180:{-# RULES
./type-natural-0.2.3.1/Data/Type/Natural.hs:189:{-# RULES
./type-natural-0.2.3.1/Data/Type/Natural.hs:197:{-# RULES
./type-natural-0.2.3.2/Data/Type/Natural.hs:181:{-# RULES
./type-natural-0.2.3.2/Data/Type/Natural.hs:190:{-# RULES
./type-natural-0.2.3.2/Data/Type/Natural.hs:198:{-# RULES
./type-natural-0.3.0.0/Data/Type/Natural/Core.hs:96:{-# RULES
./type-natural-0.3.0.0/Data/Type/Natural/Core.hs:105:{-# RULES
./type-natural-0.3.0.0/Data/Type/Natural/Core.hs:113:{-# RULES
./TypeCompose-0.6.3/src/Data/Zip.hs:101:{-# RULES
./TypeCompose-0.6.4/src/Data/Zip.hs:107:{-# RULES
./TypeCompose-0.6.6/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.6.7/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.6.8/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.7.0/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.8.0/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.8.3/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.0/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.1/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.10/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.11/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.3/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.4/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.5/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.6/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.7/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.8/src/Data/Zip.hs:110:{-# RULES
./TypeCompose-0.9.9/src/Data/Zip.hs:110:{-# RULES
./uni-events-2.2.0.0/Events/Events.hs:320:{-# RULES
./uni-events-2.2.0.0/Events/Events.hs:383:{-# RULES
./uni-events-2.2.1.0/Events/Events.hs:320:{-# RULES
./uni-events-2.2.1.0/Events/Events.hs:383:{-# RULES
./uni-events-2.2.2.0/Events/Events.hs:322:{-# RULES
./uni-events-2.2.2.0/Events/Events.hs:392:{-# RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:7:-- parse RULES (see -ddump-rules); the -frewrite-rules flag only
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:117:{-# RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:135:{-# RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:152:{-# RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:169:{-# RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:191:{-# RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:207:{-# RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:218:{- RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:237:{-# RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:274:{-# RULES
./unification-fd-0.10.0/src/Data/Functor/Fixedpoint.hs:286:{- RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:7:-- parse RULES (see -ddump-rules); the -frewrite-rules flag only
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:117:{-# RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:135:{-# RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:152:{-# RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:169:{-# RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:191:{-# RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:207:{-# RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:218:{- RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:237:{-# RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:274:{-# RULES
./unification-fd-0.10.0.1/src/Data/Functor/Fixedpoint.hs:286:{- RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:104:{-# RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:121:{-# RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:134:{-# RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:145:{-# RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:163:{-# RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:179:{-# RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:190:{- RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:209:{-# RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:246:{-# RULES
./unification-fd-0.5.0/src/Data/Functor/Fixedpoint.hs:257:{- RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:102:{-# RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:119:{-# RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:132:{-# RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:144:{-# RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:162:{-# RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:178:{-# RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:189:{- RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:208:{-# RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:245:{-# RULES
./unification-fd-0.6.0/src/Data/Functor/Fixedpoint.hs:256:{- RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:102:{-# RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:119:{-# RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:132:{-# RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:144:{-# RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:162:{-# RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:178:{-# RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:189:{- RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:208:{-# RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:245:{-# RULES
./unification-fd-0.7.0/src/Data/Functor/Fixedpoint.hs:256:{- RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:102:{-# RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:119:{-# RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:132:{-# RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:144:{-# RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:162:{-# RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:178:{-# RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:189:{- RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:208:{-# RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:245:{-# RULES
./unification-fd-0.8.0/src/Data/Functor/Fixedpoint.hs:256:{- RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:7:-- parse RULES (see -ddump-rules); the -frewrite-rules flag only
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:113:{-# RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:130:{-# RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:143:{-# RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:155:{-# RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:173:{-# RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:189:{-# RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:200:{- RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:219:{-# RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:256:{-# RULES
./unification-fd-0.8.1/src/Data/Functor/Fixedpoint.hs:267:{- RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:7:-- parse RULES (see -ddump-rules); the -frewrite-rules flag only
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:117:{-# RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:135:{-# RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:152:{-# RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:169:{-# RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:191:{-# RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:207:{-# RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:218:{- RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:237:{-# RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:274:{-# RULES
./unification-fd-0.9.0/src/Data/Functor/Fixedpoint.hs:286:{- RULES
./uniplate-1.6.10/Data/Generics/Uniplate/Direct.hs:74:{-# RULES
./uniplate-1.6.11/Data/Generics/Uniplate/Direct.hs:74:{-# RULES
./uniplate-1.6.12/Data/Generics/Uniplate/Direct.hs:74:{-# RULES
./uniplate-1.6.8/Data/Generics/Uniplate/Direct.hs:74:{-# RULES
./uniplate-1.6.9/Data/Generics/Uniplate/Direct.hs:74:{-# RULES
./unix-time-0.1.0/Data/UnixTime/Diff.hs:38:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.0/Data/UnixTime/Diff.hs:43:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.1/Data/UnixTime/Diff.hs:38:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.1/Data/UnixTime/Diff.hs:43:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.10/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.10/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.2/Data/UnixTime/Diff.hs:38:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.2/Data/UnixTime/Diff.hs:43:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.3/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.3/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.4/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.4/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.5/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.5/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.6/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.6/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.7/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.7/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.8/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.8/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.1.9/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.1.9/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.2.0/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.2.0/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.2.1/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.2.1/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.2.2/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.2.2/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.3.0/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.3.0/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.3.1/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.3.1/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.3.2/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.3.2/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.3.3/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.3.3/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.3.4/Data/UnixTime/Diff.hs:39:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.3.4/Data/UnixTime/Diff.hs:44:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.3.5/Data/UnixTime/Diff.hs:46:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.3.5/Data/UnixTime/Diff.hs:51:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./unix-time-0.3.6/Data/UnixTime/Diff.hs:46:{-# RULES "Integral->UnixDiffTime" fromIntegral = secondsToUnixDiffTime #-}
./unix-time-0.3.6/Data/UnixTime/Diff.hs:51:{-# RULES "UnixDiffTime->Fractional" realToFrac = toFractional #-}
./uvector-0.1/Data/Array/Vector/Prim/BUArr.hs:636:{-# RULES  -- -} (for font-locking)
./uvector-0.1/Data/Array/Vector/Prim/Hyperstrict.hs:71:{-# RULES
./uvector-0.1/Data/Array/Vector/Strict/Stream.hs:74:{-# RULES
./uvector-0.1/Data/Array/Vector/Strict/Stream.hs:86:{-# RULES
./uvector-0.1.0.1/Data/Array/Vector/Prim/BUArr.hs:641:{-# RULES  -- -} (for font-locking)
./uvector-0.1.0.1/Data/Array/Vector/Prim/Hyperstrict.hs:71:{-# RULES
./uvector-0.1.0.1/Data/Array/Vector/Strict/Stream.hs:74:{-# RULES
./uvector-0.1.0.1/Data/Array/Vector/Strict/Stream.hs:86:{-# RULES
./uvector-0.1.0.2/Data/Array/Vector/Prim/BUArr.hs:641:{-# RULES  -- -} (for font-locking)
./uvector-0.1.0.2/Data/Array/Vector/Prim/Hyperstrict.hs:71:{-# RULES
./uvector-0.1.0.2/Data/Array/Vector/Strict/Stream.hs:75:{-# RULES
./uvector-0.1.0.2/Data/Array/Vector/Strict/Stream.hs:87:{-# RULES
./uvector-0.1.0.3/Data/Array/Vector/Prim/BUArr.hs:641:{-# RULES  -- -} (for font-locking)
./uvector-0.1.0.3/Data/Array/Vector/Prim/Hyperstrict.hs:71:{-# RULES
./uvector-0.1.0.3/Data/Array/Vector/Strict/Stream.hs:75:{-# RULES
./uvector-0.1.0.3/Data/Array/Vector/Strict/Stream.hs:87:{-# RULES
./uvector-0.1.0.4/Data/Array/Vector/Prim/BUArr.hs:684:{-# RULES  -- -} (for font-locking)
./uvector-0.1.0.4/Data/Array/Vector/Prim/Hyperstrict.hs:85:{-# RULES
./uvector-0.1.0.4/Data/Array/Vector/Strict/Stream.hs:76:{-# RULES
./uvector-0.1.0.4/Data/Array/Vector/Strict/Stream.hs:88:{-# RULES
./uvector-0.1.0.5/Data/Array/Vector/Prim/BUArr.hs:684:{-# RULES  -- -} (for font-locking)
./uvector-0.1.0.5/Data/Array/Vector/Prim/Hyperstrict.hs:85:{-# RULES
./uvector-0.1.0.5/Data/Array/Vector/Strict/Stream.hs:76:{-# RULES
./uvector-0.1.0.5/Data/Array/Vector/Strict/Stream.hs:88:{-# RULES
./uvector-0.1.1.0/Data/Array/Vector/Prim/BUArr.hs:681:{-# RULES  -- -} (for font-locking)
./uvector-0.1.1.0/Data/Array/Vector/Prim/Hyperstrict.hs:85:{-# RULES
./uvector-0.1.1.0/Data/Array/Vector/Strict/Stream.hs:76:{-# RULES
./uvector-0.1.1.0/Data/Array/Vector/Strict/Stream.hs:88:{-# RULES
./uvector-0.1.1.1/Data/Array/Vector/Prim/BUArr.hs:681:{-# RULES  -- -} (for font-locking)
./uvector-0.1.1.1/Data/Array/Vector/Prim/Hyperstrict.hs:85:{-# RULES
./uvector-0.1.1.1/Data/Array/Vector/Strict/Stream.hs:76:{-# RULES
./uvector-0.1.1.1/Data/Array/Vector/Strict/Stream.hs:88:{-# RULES
./vcache-0.1/hsrc_lib/Database/VCache/VGetAux.hs:92:{-# RULES
./vcache-0.1/hsrc_lib/Database/VCache/VPutAux.hs:26:{-# RULES
./vcache-0.1.1/hsrc_lib/Database/VCache/VGetAux.hs:92:{-# RULES
./vcache-0.1.1/hsrc_lib/Database/VCache/VPutAux.hs:26:{-# RULES
./vcache-0.2.0/hsrc_lib/Database/VCache/VGetAux.hs:92:{-# RULES
./vcache-0.2.0/hsrc_lib/Database/VCache/VPutAux.hs:26:{-# RULES
./vcache-0.2.1/hsrc_lib/Database/VCache/VGetAux.hs:92:{-# RULES
./vcache-0.2.1/hsrc_lib/Database/VCache/VPutAux.hs:29:{-# RULES
./vcache-0.2.2/hsrc_lib/Database/VCache/VGetAux.hs:92:{-# RULES
./vcache-0.2.2/hsrc_lib/Database/VCache/VPutAux.hs:29:{-# RULES
./vcache-0.2.3/hsrc_lib/Database/VCache/VGetAux.hs:92:{-# RULES
./vcache-0.2.3/hsrc_lib/Database/VCache/VPutAux.hs:29:{-# RULES
./vcache-0.2.4/hsrc_lib/Database/VCache/VGetAux.hs:92:{-# RULES
./vcache-0.2.4/hsrc_lib/Database/VCache/VPutAux.hs:29:{-# RULES
./vcache-0.2.5/hsrc_lib/Database/VCache/VGetAux.hs:92:{-# RULES
./vcache-0.2.5/hsrc_lib/Database/VCache/VPutAux.hs:29:{-# RULES
./vcache-0.2.6/hsrc_lib/Database/VCache/VGetAux.hs:92:{-# RULES
./vcache-0.2.6/hsrc_lib/Database/VCache/VPutAux.hs:29:{-# RULES
./Vec-0.9.1/Data/Vec/Packed.hs:43:{-# RULES 
./Vec-0.9.2/Data/Vec/Packed.hs:67:{-# RULES 
./Vec-0.9.3/Data/Vec/Packed.hs:67:{-# RULES 
./Vec-0.9.4/Data/Vec/Packed.hs:66:{-# RULES 
./Vec-0.9.5/Data/Vec/Packed.hs:71:{-# RULES 
./Vec-0.9.6/Data/Vec/Packed.hs:83:{-# RULES 
./Vec-0.9.7/Data/Vec/Packed.hs:83:{-# RULES 
./Vec-0.9.8/Data/Vec/Packed.hs:83:{-# RULES 
./Vec-0.9.9/Data/Vec/Packed.hs:82:{-# RULES 
./Vec-1.0/Data/Vec/Packed.hs:82:{-# RULES
./Vec-1.0.1/Data/Vec/Packed.hs:82:{-# RULES
./Vec-1.0.5/Data/Vec/Packed.hs:83:{-# RULES
./vect-0.4.0/Data/Vect/Double/Base.hs:44:{- RULES
./vect-0.4.0/Data/Vect/Double/Base.hs:63:{-# RULES
./vect-0.4.0/Data/Vect/Double/Base.hs:83:{-# RULES
./vect-0.4.0/Data/Vect/Double/Base.hs:104:{-# RULES
./vect-0.4.0/Data/Vect/Double/Base.hs:164:{-# RULES
./vect-0.4.0/Data/Vect/Double/GramSchmidt.hs:31:{-# RULES
./vect-0.4.0/Data/Vect/Float/Base.hs:44:{- RULES
./vect-0.4.0/Data/Vect/Float/Base.hs:63:{-# RULES
./vect-0.4.0/Data/Vect/Float/Base.hs:83:{-# RULES
./vect-0.4.0/Data/Vect/Float/Base.hs:104:{-# RULES
./vect-0.4.0/Data/Vect/Float/Base.hs:164:{-# RULES
./vect-0.4.0/Data/Vect/Float/GramSchmidt.hs:31:{-# RULES
./vect-0.4.0/src/flt/Base.hs:43:{- RULES
./vect-0.4.0/src/flt/Base.hs:62:{-# RULES
./vect-0.4.0/src/flt/Base.hs:82:{-# RULES
./vect-0.4.0/src/flt/Base.hs:103:{-# RULES
./vect-0.4.0/src/flt/Base.hs:163:{-# RULES
./vect-0.4.0/src/flt/GramSchmidt.hs:30:{-# RULES
./vect-0.4.5/Data/Vect/Double/Base.hs:69:{- RULES
./vect-0.4.5/Data/Vect/Double/Base.hs:88:{-# RULES
./vect-0.4.5/Data/Vect/Double/Base.hs:108:{-# RULES
./vect-0.4.5/Data/Vect/Double/Base.hs:129:{-# RULES
./vect-0.4.5/Data/Vect/Double/Base.hs:191:{-# RULES
./vect-0.4.5/Data/Vect/Double/GramSchmidt.hs:31:{-# RULES
./vect-0.4.5/Data/Vect/Float/Base.hs:69:{- RULES
./vect-0.4.5/Data/Vect/Float/Base.hs:88:{-# RULES
./vect-0.4.5/Data/Vect/Float/Base.hs:108:{-# RULES
./vect-0.4.5/Data/Vect/Float/Base.hs:129:{-# RULES
./vect-0.4.5/Data/Vect/Float/Base.hs:191:{-# RULES
./vect-0.4.5/Data/Vect/Float/GramSchmidt.hs:31:{-# RULES
./vect-0.4.5/src/flt/Base.hs:68:{- RULES
./vect-0.4.5/src/flt/Base.hs:87:{-# RULES
./vect-0.4.5/src/flt/Base.hs:107:{-# RULES
./vect-0.4.5/src/flt/Base.hs:128:{-# RULES
./vect-0.4.5/src/flt/Base.hs:190:{-# RULES
./vect-0.4.5/src/flt/GramSchmidt.hs:30:{-# RULES
./vect-0.4.5.2/Data/Vect/Double/Base.hs:69:{- RULES
./vect-0.4.5.2/Data/Vect/Double/Base.hs:88:{-# RULES
./vect-0.4.5.2/Data/Vect/Double/Base.hs:108:{-# RULES
./vect-0.4.5.2/Data/Vect/Double/Base.hs:129:{-# RULES
./vect-0.4.5.2/Data/Vect/Double/Base.hs:191:{-# RULES
./vect-0.4.5.2/Data/Vect/Double/GramSchmidt.hs:31:{-# RULES
./vect-0.4.5.2/Data/Vect/Float/Base.hs:69:{- RULES
./vect-0.4.5.2/Data/Vect/Float/Base.hs:88:{-# RULES
./vect-0.4.5.2/Data/Vect/Float/Base.hs:108:{-# RULES
./vect-0.4.5.2/Data/Vect/Float/Base.hs:129:{-# RULES
./vect-0.4.5.2/Data/Vect/Float/Base.hs:191:{-# RULES
./vect-0.4.5.2/Data/Vect/Float/GramSchmidt.hs:31:{-# RULES
./vect-0.4.5.2/src/flt/Base.hs:68:{- RULES
./vect-0.4.5.2/src/flt/Base.hs:87:{-# RULES
./vect-0.4.5.2/src/flt/Base.hs:107:{-# RULES
./vect-0.4.5.2/src/flt/Base.hs:128:{-# RULES
./vect-0.4.5.2/src/flt/Base.hs:190:{-# RULES
./vect-0.4.5.2/src/flt/GramSchmidt.hs:30:{-# RULES
./vect-0.4.6/Data/Vect/Double/Base.hs:71:{- RULES
./vect-0.4.6/Data/Vect/Double/Base.hs:90:{-# RULES
./vect-0.4.6/Data/Vect/Double/Base.hs:110:{-# RULES
./vect-0.4.6/Data/Vect/Double/Base.hs:131:{-# RULES
./vect-0.4.6/Data/Vect/Double/Base.hs:193:{-# RULES
./vect-0.4.6/Data/Vect/Double/GramSchmidt.hs:33:{-# RULES
./vect-0.4.6/Data/Vect/Float/Base.hs:71:{- RULES
./vect-0.4.6/Data/Vect/Float/Base.hs:90:{-# RULES
./vect-0.4.6/Data/Vect/Float/Base.hs:110:{-# RULES
./vect-0.4.6/Data/Vect/Float/Base.hs:131:{-# RULES
./vect-0.4.6/Data/Vect/Float/Base.hs:193:{-# RULES
./vect-0.4.6/Data/Vect/Float/GramSchmidt.hs:33:{-# RULES
./vect-0.4.6/src/flt/Base.hs:68:{- RULES
./vect-0.4.6/src/flt/Base.hs:87:{-# RULES
./vect-0.4.6/src/flt/Base.hs:107:{-# RULES
./vect-0.4.6/src/flt/Base.hs:128:{-# RULES
./vect-0.4.6/src/flt/Base.hs:190:{-# RULES
./vect-0.4.6/src/flt/GramSchmidt.hs:30:{-# RULES
./vect-0.4.7/Data/Vect/Double/Base.hs:71:{- RULES
./vect-0.4.7/Data/Vect/Double/Base.hs:90:{-# RULES
./vect-0.4.7/Data/Vect/Double/Base.hs:110:{-# RULES
./vect-0.4.7/Data/Vect/Double/Base.hs:131:{-# RULES
./vect-0.4.7/Data/Vect/Double/Base.hs:193:{-# RULES
./vect-0.4.7/Data/Vect/Double/GramSchmidt.hs:33:{-# RULES
./vect-0.4.7/Data/Vect/Float/Base.hs:71:{- RULES
./vect-0.4.7/Data/Vect/Float/Base.hs:90:{-# RULES
./vect-0.4.7/Data/Vect/Float/Base.hs:110:{-# RULES
./vect-0.4.7/Data/Vect/Float/Base.hs:131:{-# RULES
./vect-0.4.7/Data/Vect/Float/Base.hs:193:{-# RULES
./vect-0.4.7/Data/Vect/Float/GramSchmidt.hs:33:{-# RULES
./vect-0.4.7/src/flt/Base.hs:68:{- RULES
./vect-0.4.7/src/flt/Base.hs:87:{-# RULES
./vect-0.4.7/src/flt/Base.hs:107:{-# RULES
./vect-0.4.7/src/flt/Base.hs:128:{-# RULES
./vect-0.4.7/src/flt/Base.hs:190:{-# RULES
./vect-0.4.7/src/flt/GramSchmidt.hs:30:{-# RULES
./vect-floating-0.1.0.0/src/Data/Vect/Floating/Base.hs:68:{- RULES
./vect-floating-0.1.0.0/src/Data/Vect/Floating/Base.hs:87:{-# RULES
./vect-floating-0.1.0.0/src/Data/Vect/Floating/Base.hs:107:{-# RULES
./vect-floating-0.1.0.0/src/Data/Vect/Floating/Base.hs:129:{-# RULES
./vect-floating-0.1.0.0/src/Data/Vect/Floating/Base.hs:191:{-# RULES
./vect-floating-0.1.0.0/src/Data/Vect/Floating/GramSchmidt.hs:31:{-# RULES
./vect-floating-0.1.0.1/src/Data/Vect/Floating/Base.hs:68:{- RULES
./vect-floating-0.1.0.1/src/Data/Vect/Floating/Base.hs:87:{-# RULES
./vect-floating-0.1.0.1/src/Data/Vect/Floating/Base.hs:107:{-# RULES
./vect-floating-0.1.0.1/src/Data/Vect/Floating/Base.hs:129:{-# RULES
./vect-floating-0.1.0.1/src/Data/Vect/Floating/Base.hs:191:{-# RULES
./vect-floating-0.1.0.1/src/Data/Vect/Floating/GramSchmidt.hs:31:{-# RULES
./vect-floating-0.1.0.3/src/Data/Vect/Floating/Base.hs:67:{- RULES
./vect-floating-0.1.0.3/src/Data/Vect/Floating/Base.hs:86:{-# RULES
./vect-floating-0.1.0.3/src/Data/Vect/Floating/Base.hs:106:{-# RULES
./vect-floating-0.1.0.3/src/Data/Vect/Floating/Base.hs:128:{-# RULES
./vect-floating-0.1.0.3/src/Data/Vect/Floating/Base.hs:190:{-# RULES
./vect-floating-0.1.0.3/src/Data/Vect/Floating/GramSchmidt.hs:31:{-# RULES
./vect-floating-0.1.0.4/src/Data/Vect/Floating/Base.hs:67:{- RULES
./vect-floating-0.1.0.4/src/Data/Vect/Floating/Base.hs:86:{-# RULES
./vect-floating-0.1.0.4/src/Data/Vect/Floating/Base.hs:106:{-# RULES
./vect-floating-0.1.0.4/src/Data/Vect/Floating/Base.hs:128:{-# RULES
./vect-floating-0.1.0.4/src/Data/Vect/Floating/Base.hs:190:{-# RULES
./vect-floating-0.1.0.4/src/Data/Vect/Floating/GramSchmidt.hs:31:{-# RULES
./vector-0.1/Data/Vector/IVector.hs:144:{-# RULES
./vector-0.1/Data/Vector/IVector.hs:161:{-# RULES
./vector-0.1/Data/Vector/IVector.hs:221:{-# RULES
./vector-0.1/Data/Vector/IVector.hs:273:{-# RULES
./vector-0.1/Data/Vector/IVector.hs:302:{-# RULES
./vector-0.1/Data/Vector/IVector.hs:361:{-# RULES
./vector-0.10/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:218:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:230:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:280:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:363:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:474:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:1314:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:1791:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:1863:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:1902:{-# RULES
./vector-0.10/Data/Vector/Generic.hs:1945:{-# RULES
./vector-0.10/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10/Data/Vector/Storable.hs:1382:{-# RULES
./vector-0.10/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.0.1/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.0.1/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:218:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:230:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:280:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:363:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:474:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:1314:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:1791:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:1863:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:1902:{-# RULES
./vector-0.10.0.1/Data/Vector/Generic.hs:1945:{-# RULES
./vector-0.10.0.1/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10.0.1/Data/Vector/Storable.hs:1382:{-# RULES
./vector-0.10.0.1/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.10.0/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.10.0/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.10.0/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.10.0/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.10.0/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.10.0/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.10.0/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.10.0/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.10.0/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:223:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:235:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:368:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:479:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:1319:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:1796:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:1868:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:1907:{-# RULES
./vector-0.10.10.0/Data/Vector/Generic.hs:1950:{-# RULES
./vector-0.10.10.0/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10.10.0/Data/Vector/Storable.hs:1396:{-# RULES
./vector-0.10.10.0/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.11.0/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.11.0/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.11.0/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.11.0/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.11.0/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.11.0/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.11.0/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.11.0/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.11.0/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:223:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:235:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:368:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:479:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:1319:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:1796:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:1868:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:1907:{-# RULES
./vector-0.10.11.0/Data/Vector/Generic.hs:1950:{-# RULES
./vector-0.10.11.0/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10.11.0/Data/Vector/Storable.hs:1396:{-# RULES
./vector-0.10.11.0/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.12.0/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.12.0/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.12.0/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.12.0/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.12.0/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.12.0/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.12.0/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.12.0/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.12.0/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:223:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:235:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:368:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:479:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:1319:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:1796:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:1868:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:1907:{-# RULES
./vector-0.10.12.0/Data/Vector/Generic.hs:1950:{-# RULES
./vector-0.10.12.0/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10.12.0/Data/Vector/Storable.hs:1396:{-# RULES
./vector-0.10.12.0/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.12.1/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.12.1/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.12.1/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.12.1/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.12.1/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.12.1/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.12.1/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.12.1/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.12.1/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:223:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:235:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:368:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:479:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:1319:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:1796:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:1868:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:1907:{-# RULES
./vector-0.10.12.1/Data/Vector/Generic.hs:1950:{-# RULES
./vector-0.10.12.1/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10.12.1/Data/Vector/Storable.hs:1396:{-# RULES
./vector-0.10.12.1/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.12.2/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.12.2/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.12.2/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.12.2/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.12.2/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.12.2/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.12.2/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.12.2/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.12.2/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:223:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:235:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:368:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:479:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:1319:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:1796:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:1868:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:1907:{-# RULES
./vector-0.10.12.2/Data/Vector/Generic.hs:1950:{-# RULES
./vector-0.10.12.2/Data/Vector/Storable/Mutable.hs:449:{-# RULES
./vector-0.10.12.2/Data/Vector/Storable.hs:1397:{-# RULES
./vector-0.10.12.2/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.12.3/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.12.3/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.12.3/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.12.3/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.12.3/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.12.3/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.12.3/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.12.3/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.12.3/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:223:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:235:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:368:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:479:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:1319:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:1796:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:1868:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:1907:{-# RULES
./vector-0.10.12.3/Data/Vector/Generic.hs:1950:{-# RULES
./vector-0.10.12.3/Data/Vector/Storable/Mutable.hs:449:{-# RULES
./vector-0.10.12.3/Data/Vector/Storable.hs:1397:{-# RULES
./vector-0.10.12.3/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.9.0/Data/Vector/Fusion/Bundle/Monadic.hs:324:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Bundle/Monadic.hs:760:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Bundle/Monadic.hs:778:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Bundle/Monadic.hs:835:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Bundle/Monadic.hs:870:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Bundle/Monadic.hs:912:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Bundle/Monadic.hs:934:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Bundle/Monadic.hs:964:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Bundle/Monadic.hs:1089:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Bundle.hs:116:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Stream/Monadic.hs:1290:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Stream/Monadic.hs:1308:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Stream/Monadic.hs:1357:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Stream/Monadic.hs:1384:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Stream/Monadic.hs:1418:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Stream/Monadic.hs:1438:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Stream/Monadic.hs:1460:{-# RULES
./vector-0.10.9.0/Data/Vector/Fusion/Stream/Monadic.hs:1589:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic/New.hs:76:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic/New.hs:102:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic/New.hs:150:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic.hs:273:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic.hs:356:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic.hs:467:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic.hs:1317:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic.hs:1793:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic.hs:1869:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic.hs:1908:{-# RULES
./vector-0.10.9.0/Data/Vector/Generic.hs:1951:{-# RULES
./vector-0.10.9.0/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10.9.0/Data/Vector/Storable.hs:1382:{-# RULES
./vector-0.10.9.0/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.9.1/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.9.1/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:223:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:235:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:368:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:479:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:1319:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:1796:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:1868:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:1907:{-# RULES
./vector-0.10.9.1/Data/Vector/Generic.hs:1950:{-# RULES
./vector-0.10.9.1/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10.9.1/Data/Vector/Storable.hs:1382:{-# RULES
./vector-0.10.9.1/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.9.2/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.9.2/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.9.2/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.9.2/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.9.2/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.9.2/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.9.2/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.9.2/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.9.2/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:223:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:235:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:368:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:479:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:1319:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:1796:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:1868:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:1907:{-# RULES
./vector-0.10.9.2/Data/Vector/Generic.hs:1950:{-# RULES
./vector-0.10.9.2/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10.9.2/Data/Vector/Storable.hs:1382:{-# RULES
./vector-0.10.9.2/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.10.9.3/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.10.9.3/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.10.9.3/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.10.9.3/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.10.9.3/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.10.9.3/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.10.9.3/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.10.9.3/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.10.9.3/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:223:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:235:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:368:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:479:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:1319:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:1796:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:1868:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:1907:{-# RULES
./vector-0.10.9.3/Data/Vector/Generic.hs:1950:{-# RULES
./vector-0.10.9.3/Data/Vector/Storable/Mutable.hs:448:{-# RULES
./vector-0.10.9.3/Data/Vector/Storable.hs:1396:{-# RULES
./vector-0.10.9.3/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.11.0.0/Data/Vector/Fusion/Bundle/Monadic.hs:326:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Bundle/Monadic.hs:761:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Bundle/Monadic.hs:779:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Bundle/Monadic.hs:834:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Bundle/Monadic.hs:869:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Bundle/Monadic.hs:911:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Bundle/Monadic.hs:933:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Bundle/Monadic.hs:964:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Bundle/Monadic.hs:1089:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Bundle.hs:118:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Stream/Monadic.hs:506:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Stream/Monadic.hs:1310:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Stream/Monadic.hs:1358:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Stream/Monadic.hs:1383:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Stream/Monadic.hs:1417:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Stream/Monadic.hs:1437:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Stream/Monadic.hs:1459:{-# RULES
./vector-0.11.0.0/Data/Vector/Fusion/Stream/Monadic.hs:1588:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic/New.hs:77:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic/New.hs:103:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic/New.hs:151:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic.hs:271:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic.hs:354:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic.hs:465:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic.hs:1345:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic.hs:1844:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic.hs:1920:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic.hs:1959:{-# RULES
./vector-0.11.0.0/Data/Vector/Generic.hs:2002:{-# RULES
./vector-0.11.0.0/Data/Vector/Storable/Mutable.hs:479:{-# RULES
./vector-0.11.0.0/Data/Vector/Storable.hs:1397:{-# RULES
./vector-0.11.0.0/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.2/Data/Vector/IVector.hs:157:{-# RULES
./vector-0.2/Data/Vector/IVector.hs:172:{-# RULES
./vector-0.2/Data/Vector/IVector.hs:197:{-# RULES
./vector-0.2/Data/Vector/IVector.hs:257:{-# RULES
./vector-0.2/Data/Vector/IVector.hs:311:{-# RULES
./vector-0.2/Data/Vector/IVector.hs:346:{-# RULES
./vector-0.2/Data/Vector/IVector.hs:408:{-# RULES
./vector-0.2/Data/Vector/IVector.hs:490:{-# RULES
./vector-0.2/Data/Vector/IVector.hs:505:{-# RULES
./vector-0.2/Data/Vector/MVector/New.hs:38:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:175:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:190:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:215:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:226:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:272:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:298:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:326:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:376:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:441:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:615:{-# RULES
./vector-0.3/Data/Vector/IVector.hs:630:{-# RULES
./vector-0.3/Data/Vector/MVector/New.hs:43:{-# RULES
./vector-0.3/Data/Vector/MVector/New.hs:78:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:175:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:190:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:215:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:226:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:272:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:298:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:326:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:376:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:441:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:615:{-# RULES
./vector-0.3.1/Data/Vector/IVector.hs:630:{-# RULES
./vector-0.3.1/Data/Vector/MVector/New.hs:43:{-# RULES
./vector-0.3.1/Data/Vector/MVector/New.hs:78:{-# RULES
./vector-0.4/Data/Vector/Fusion/Stream.hs:102:{-# RULES
./vector-0.4/Data/Vector/Fusion/Stream.hs:118:{- RULES
./vector-0.4/Data/Vector/Fusion/Stream.hs:125:{-# RULES
./vector-0.4/Data/Vector/Generic/New.hs:53:{-# RULES
./vector-0.4/Data/Vector/Generic/New.hs:88:{-# RULES
./vector-0.4/Data/Vector/Generic.hs:171:{-# RULES
./vector-0.4/Data/Vector/Generic.hs:181:{-# RULES
./vector-0.4/Data/Vector/Generic.hs:200:{-# RULES
./vector-0.4/Data/Vector/Generic.hs:211:{-# RULES
./vector-0.4/Data/Vector/Generic.hs:257:{-# RULES
./vector-0.4/Data/Vector/Generic.hs:283:{-# RULES
./vector-0.4/Data/Vector/Generic.hs:312:{- RULES
./vector-0.4/Data/Vector/Generic.hs:362:{-# RULES
./vector-0.4.1/Data/Vector/Fusion/Stream.hs:102:{-# RULES
./vector-0.4.1/Data/Vector/Fusion/Stream.hs:118:{- RULES
./vector-0.4.1/Data/Vector/Fusion/Stream.hs:125:{-# RULES
./vector-0.4.1/Data/Vector/Generic/New.hs:53:{-# RULES
./vector-0.4.1/Data/Vector/Generic/New.hs:88:{-# RULES
./vector-0.4.1/Data/Vector/Generic.hs:173:{-# RULES
./vector-0.4.1/Data/Vector/Generic.hs:183:{-# RULES
./vector-0.4.1/Data/Vector/Generic.hs:202:{-# RULES
./vector-0.4.1/Data/Vector/Generic.hs:213:{-# RULES
./vector-0.4.1/Data/Vector/Generic.hs:259:{-# RULES
./vector-0.4.1/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.4.1/Data/Vector/Generic.hs:314:{- RULES
./vector-0.4.1/Data/Vector/Generic.hs:364:{-# RULES
./vector-0.4.2/Data/Vector/Fusion/Stream.hs:102:{-# RULES
./vector-0.4.2/Data/Vector/Fusion/Stream.hs:118:{- RULES
./vector-0.4.2/Data/Vector/Fusion/Stream.hs:125:{-# RULES
./vector-0.4.2/Data/Vector/Generic/New.hs:53:{-# RULES
./vector-0.4.2/Data/Vector/Generic/New.hs:88:{-# RULES
./vector-0.4.2/Data/Vector/Generic.hs:173:{-# RULES
./vector-0.4.2/Data/Vector/Generic.hs:183:{-# RULES
./vector-0.4.2/Data/Vector/Generic.hs:202:{-# RULES
./vector-0.4.2/Data/Vector/Generic.hs:213:{-# RULES
./vector-0.4.2/Data/Vector/Generic.hs:259:{-# RULES
./vector-0.4.2/Data/Vector/Generic.hs:285:{-# RULES
./vector-0.4.2/Data/Vector/Generic.hs:314:{- RULES
./vector-0.4.2/Data/Vector/Generic.hs:364:{-# RULES
./vector-0.5/Data/Vector/Fusion/Stream/Monadic.hs:470:{-# RULES
./vector-0.5/Data/Vector/Fusion/Stream/Monadic.hs:1143:{-# RULES
./vector-0.5/Data/Vector/Fusion/Stream/Monadic.hs:1161:{-# RULES
./vector-0.5/Data/Vector/Fusion/Stream/Monadic.hs:1201:{-# RULES
./vector-0.5/Data/Vector/Fusion/Stream/Monadic.hs:1236:{-# RULES
./vector-0.5/Data/Vector/Fusion/Stream/Monadic.hs:1278:{-# RULES
./vector-0.5/Data/Vector/Fusion/Stream/Monadic.hs:1300:{-# RULES
./vector-0.5/Data/Vector/Fusion/Stream.hs:108:{-# RULES
./vector-0.5/Data/Vector/Generic/New.hs:57:{-# RULES
./vector-0.5/Data/Vector/Generic/New.hs:81:{-# RULES
./vector-0.5/Data/Vector/Generic/New.hs:128:{-# RULES
./vector-0.5/Data/Vector/Generic.hs:204:{-# RULES
./vector-0.5/Data/Vector/Generic.hs:214:{-# RULES
./vector-0.5/Data/Vector/Generic.hs:246:{-# RULES
./vector-0.5/Data/Vector/Generic.hs:256:{-# RULES
./vector-0.5/Data/Vector/Generic.hs:275:{-# RULES
./vector-0.5/Data/Vector/Generic.hs:339:{-# RULES
./vector-0.5/Data/Vector/Generic.hs:383:{-# RULES
./vector-0.5/Data/Vector/Generic.hs:435:{- RULES
./vector-0.5/Data/Vector/Generic.hs:512:{-# RULES
./vector-0.5/Data/Vector/Generic.hs:913:{-# RULES
./vector-0.5/Data/Vector/Storable.hs:161:{-# RULES
./vector-0.5/internal/GenUnboxTuple.hs:81:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.6/Data/Vector/Fusion/Stream/Monadic.hs:480:{-# RULES
./vector-0.6/Data/Vector/Fusion/Stream/Monadic.hs:1172:{-# RULES
./vector-0.6/Data/Vector/Fusion/Stream/Monadic.hs:1190:{-# RULES
./vector-0.6/Data/Vector/Fusion/Stream/Monadic.hs:1230:{-# RULES
./vector-0.6/Data/Vector/Fusion/Stream/Monadic.hs:1265:{-# RULES
./vector-0.6/Data/Vector/Fusion/Stream/Monadic.hs:1307:{-# RULES
./vector-0.6/Data/Vector/Fusion/Stream/Monadic.hs:1329:{-# RULES
./vector-0.6/Data/Vector/Fusion/Stream/Monadic.hs:1359:{-# RULES
./vector-0.6/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.6/Data/Vector/Generic/New.hs:68:{-# RULES
./vector-0.6/Data/Vector/Generic/New.hs:93:{-# RULES
./vector-0.6/Data/Vector/Generic/New.hs:140:{-# RULES
./vector-0.6/Data/Vector/Generic.hs:175:{-# RULES
./vector-0.6/Data/Vector/Generic.hs:214:{-# RULES
./vector-0.6/Data/Vector/Generic.hs:239:{-# RULES
./vector-0.6/Data/Vector/Generic.hs:250:{-# RULES
./vector-0.6/Data/Vector/Generic.hs:347:{-# RULES
./vector-0.6/Data/Vector/Generic.hs:399:{- RULES
./vector-0.6/Data/Vector/Generic.hs:474:{-# RULES
./vector-0.6/Data/Vector/Generic.hs:876:{-# RULES
./vector-0.6/Data/Vector/Storable.hs:211:{-# RULES
./vector-0.6/internal/GenUnboxTuple.hs:81:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.6.0.1/Data/Vector/Fusion/Stream/Monadic.hs:480:{-# RULES
./vector-0.6.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1172:{-# RULES
./vector-0.6.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1190:{-# RULES
./vector-0.6.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1230:{-# RULES
./vector-0.6.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1265:{-# RULES
./vector-0.6.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1307:{-# RULES
./vector-0.6.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1329:{-# RULES
./vector-0.6.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1359:{-# RULES
./vector-0.6.0.1/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic/New.hs:68:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic/New.hs:93:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic/New.hs:140:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic.hs:193:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic.hs:205:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic.hs:247:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic.hs:328:{- RULES
./vector-0.6.0.1/Data/Vector/Generic.hs:416:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic.hs:1123:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic.hs:1567:{-# RULES
./vector-0.6.0.1/Data/Vector/Generic.hs:1606:{-# RULES
./vector-0.6.0.1/Data/Vector/Storable.hs:252:{-# RULES
./vector-0.6.0.1/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.6.0.2/Data/Vector/Fusion/Stream/Monadic.hs:480:{-# RULES
./vector-0.6.0.2/Data/Vector/Fusion/Stream/Monadic.hs:1172:{-# RULES
./vector-0.6.0.2/Data/Vector/Fusion/Stream/Monadic.hs:1190:{-# RULES
./vector-0.6.0.2/Data/Vector/Fusion/Stream/Monadic.hs:1230:{-# RULES
./vector-0.6.0.2/Data/Vector/Fusion/Stream/Monadic.hs:1265:{-# RULES
./vector-0.6.0.2/Data/Vector/Fusion/Stream/Monadic.hs:1307:{-# RULES
./vector-0.6.0.2/Data/Vector/Fusion/Stream/Monadic.hs:1329:{-# RULES
./vector-0.6.0.2/Data/Vector/Fusion/Stream/Monadic.hs:1359:{-# RULES
./vector-0.6.0.2/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic/New.hs:68:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic/New.hs:93:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic/New.hs:140:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic.hs:193:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic.hs:205:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic.hs:247:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic.hs:328:{- RULES
./vector-0.6.0.2/Data/Vector/Generic.hs:416:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic.hs:1123:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic.hs:1567:{-# RULES
./vector-0.6.0.2/Data/Vector/Generic.hs:1606:{-# RULES
./vector-0.6.0.2/Data/Vector/Storable.hs:252:{-# RULES
./vector-0.6.0.2/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.7/Data/Vector/Fusion/Stream/Monadic.hs:480:{-# RULES
./vector-0.7/Data/Vector/Fusion/Stream/Monadic.hs:1197:{-# RULES
./vector-0.7/Data/Vector/Fusion/Stream/Monadic.hs:1215:{-# RULES
./vector-0.7/Data/Vector/Fusion/Stream/Monadic.hs:1255:{-# RULES
./vector-0.7/Data/Vector/Fusion/Stream/Monadic.hs:1290:{-# RULES
./vector-0.7/Data/Vector/Fusion/Stream/Monadic.hs:1332:{-# RULES
./vector-0.7/Data/Vector/Fusion/Stream/Monadic.hs:1354:{-# RULES
./vector-0.7/Data/Vector/Fusion/Stream/Monadic.hs:1384:{-# RULES
./vector-0.7/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.7/Data/Vector/Generic/New.hs:68:{-# RULES
./vector-0.7/Data/Vector/Generic/New.hs:93:{-# RULES
./vector-0.7/Data/Vector/Generic/New.hs:140:{-# RULES
./vector-0.7/Data/Vector/Generic.hs:197:{-# RULES
./vector-0.7/Data/Vector/Generic.hs:209:{-# RULES
./vector-0.7/Data/Vector/Generic.hs:257:{-# RULES
./vector-0.7/Data/Vector/Generic.hs:337:{-# RULES
./vector-0.7/Data/Vector/Generic.hs:434:{-# RULES
./vector-0.7/Data/Vector/Generic.hs:1202:{-# RULES
./vector-0.7/Data/Vector/Generic.hs:1704:{-# RULES
./vector-0.7/Data/Vector/Generic.hs:1743:{-# RULES
./vector-0.7/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.7.0.1/Data/Vector/Fusion/Stream/Monadic.hs:480:{-# RULES
./vector-0.7.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1197:{-# RULES
./vector-0.7.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1215:{-# RULES
./vector-0.7.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1255:{-# RULES
./vector-0.7.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1290:{-# RULES
./vector-0.7.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1332:{-# RULES
./vector-0.7.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1354:{-# RULES
./vector-0.7.0.1/Data/Vector/Fusion/Stream/Monadic.hs:1384:{-# RULES
./vector-0.7.0.1/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic/New.hs:68:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic/New.hs:93:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic/New.hs:140:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic.hs:197:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic.hs:209:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic.hs:257:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic.hs:337:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic.hs:434:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic.hs:1180:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic.hs:1682:{-# RULES
./vector-0.7.0.1/Data/Vector/Generic.hs:1721:{-# RULES
./vector-0.7.0.1/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.7.1/Data/Vector/Fusion/Stream/Monadic.hs:481:{-# RULES
./vector-0.7.1/Data/Vector/Fusion/Stream/Monadic.hs:1214:{-# RULES
./vector-0.7.1/Data/Vector/Fusion/Stream/Monadic.hs:1232:{-# RULES
./vector-0.7.1/Data/Vector/Fusion/Stream/Monadic.hs:1272:{-# RULES
./vector-0.7.1/Data/Vector/Fusion/Stream/Monadic.hs:1307:{-# RULES
./vector-0.7.1/Data/Vector/Fusion/Stream/Monadic.hs:1349:{-# RULES
./vector-0.7.1/Data/Vector/Fusion/Stream/Monadic.hs:1371:{-# RULES
./vector-0.7.1/Data/Vector/Fusion/Stream/Monadic.hs:1401:{-# RULES
./vector-0.7.1/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.7.1/Data/Vector/Generic/New.hs:68:{-# RULES
./vector-0.7.1/Data/Vector/Generic/New.hs:93:{-# RULES
./vector-0.7.1/Data/Vector/Generic/New.hs:140:{-# RULES
./vector-0.7.1/Data/Vector/Generic.hs:212:{-# RULES
./vector-0.7.1/Data/Vector/Generic.hs:224:{-# RULES
./vector-0.7.1/Data/Vector/Generic.hs:272:{-# RULES
./vector-0.7.1/Data/Vector/Generic.hs:352:{-# RULES
./vector-0.7.1/Data/Vector/Generic.hs:463:{-# RULES
./vector-0.7.1/Data/Vector/Generic.hs:1226:{-# RULES
./vector-0.7.1/Data/Vector/Generic.hs:1766:{-# RULES
./vector-0.7.1/Data/Vector/Generic.hs:1805:{-# RULES
./vector-0.7.1/Data/Vector/Generic.hs:1842:{-# RULES
./vector-0.7.1/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.8/Data/Vector/Fusion/Stream/Monadic.hs:497:{-# RULES
./vector-0.8/Data/Vector/Fusion/Stream/Monadic.hs:1230:{-# RULES
./vector-0.8/Data/Vector/Fusion/Stream/Monadic.hs:1248:{-# RULES
./vector-0.8/Data/Vector/Fusion/Stream/Monadic.hs:1288:{-# RULES
./vector-0.8/Data/Vector/Fusion/Stream/Monadic.hs:1323:{-# RULES
./vector-0.8/Data/Vector/Fusion/Stream/Monadic.hs:1365:{-# RULES
./vector-0.8/Data/Vector/Fusion/Stream/Monadic.hs:1387:{-# RULES
./vector-0.8/Data/Vector/Fusion/Stream/Monadic.hs:1417:{-# RULES
./vector-0.8/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.8/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.8/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.8/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:218:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:230:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:280:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:363:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:474:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:1314:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:1791:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:1863:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:1902:{-# RULES
./vector-0.8/Data/Vector/Generic.hs:1945:{-# RULES
./vector-0.8/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.9/Data/Vector/Fusion/Stream/Monadic.hs:497:{-# RULES
./vector-0.9/Data/Vector/Fusion/Stream/Monadic.hs:1230:{-# RULES
./vector-0.9/Data/Vector/Fusion/Stream/Monadic.hs:1248:{-# RULES
./vector-0.9/Data/Vector/Fusion/Stream/Monadic.hs:1288:{-# RULES
./vector-0.9/Data/Vector/Fusion/Stream/Monadic.hs:1323:{-# RULES
./vector-0.9/Data/Vector/Fusion/Stream/Monadic.hs:1365:{-# RULES
./vector-0.9/Data/Vector/Fusion/Stream/Monadic.hs:1387:{-# RULES
./vector-0.9/Data/Vector/Fusion/Stream/Monadic.hs:1417:{-# RULES
./vector-0.9/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.9/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.9/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.9/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:218:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:230:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:280:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:363:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:474:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:1314:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:1791:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:1863:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:1902:{-# RULES
./vector-0.9/Data/Vector/Generic.hs:1945:{-# RULES
./vector-0.9/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-0.9.1/Data/Vector/Fusion/Stream/Monadic.hs:502:{-# RULES
./vector-0.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1235:{-# RULES
./vector-0.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1253:{-# RULES
./vector-0.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1293:{-# RULES
./vector-0.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1328:{-# RULES
./vector-0.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1370:{-# RULES
./vector-0.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1392:{-# RULES
./vector-0.9.1/Data/Vector/Fusion/Stream/Monadic.hs:1422:{-# RULES
./vector-0.9.1/Data/Vector/Fusion/Stream.hs:112:{-# RULES
./vector-0.9.1/Data/Vector/Generic/New.hs:73:{-# RULES
./vector-0.9.1/Data/Vector/Generic/New.hs:98:{-# RULES
./vector-0.9.1/Data/Vector/Generic/New.hs:145:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:218:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:230:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:280:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:363:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:474:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:1314:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:1791:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:1863:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:1902:{-# RULES
./vector-0.9.1/Data/Vector/Generic.hs:1945:{-# RULES
./vector-0.9.1/Data/Vector/Storable/Mutable.hs:406:{-# RULES
./vector-0.9.1/Data/Vector/Storable.hs:1378:{-# RULES
./vector-0.9.1/internal/GenUnboxTuple.hs:82:      = hang (text "{-# RULES" <+> text "\"stream/" <> name "zip"
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString/Char8.hs:301:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString/Char8.hs:324:     {-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString/Char8.hs:610:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString/Char8.hs:661:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString/Char8.hs:680:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString/Lazy/Char8.hs:573:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString/Lazy/Char8.hs:578:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString/Lazy.hs:1020:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString.hs:369:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString.hs:473:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString.hs:763:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString.hs:819:{-# RULES
./vector-bytestring-0.0.0.0/Data/Vector/Storable/ByteString.hs:1220:{-# RULES
./vector-bytestring-0.0.0.0/tests/Properties.hs:1249:-- And check fusion RULES.
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString/Char8.hs:304:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString/Char8.hs:327:     {-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString/Char8.hs:613:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString/Char8.hs:664:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString/Char8.hs:683:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString/Lazy/Char8.hs:578:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString/Lazy/Char8.hs:583:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString/Lazy.hs:1027:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString.hs:420:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString.hs:704:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString.hs:759:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString.hs:889:{-# RULES
./vector-bytestring-0.0.0.1/Data/Vector/Storable/ByteString.hs:1166:{-# RULES
./vector-bytestring-0.0.0.1/tests/Properties.hs:1249:-- And check fusion RULES.
./vector-space-0.2.0/src/Data/LinearMap.hs:26:-- -fglasgow-exts above enables the RULES pragma
./vector-space-0.2.0/src/Data/LinearMap.hs:58:{-# RULES
./vector-space-0.2.0/src/Data/LinearMap.hs:123:{-# RULES
./vector-space-0.2.0/tests/src/Perf.hs:41:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.3/src/Data/LinearMap.hs:22:-- -fglasgow-exts above enables the RULES pragma
./vector-space-0.3/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.3.1/src/Data/LinearMap.hs:22:-- -fglasgow-exts above enables the RULES pragma
./vector-space-0.3.1/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.4/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.4.1/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.5/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.5.1/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.5.2/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.5.3/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.5.6/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.5.7/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.5.9/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.6.0/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.6.1/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.6.2/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.7.1/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./vector-space-0.7.2/tests/src/Perf.hs:44:-- # RULES "sphere" sphere1 = spec_sphere1
./visual-prof-0.1/Pretty.hs:463:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./visual-prof-0.2/Pretty.hs:463:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./visual-prof-0.3/Pretty.hs:463:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./visual-prof-0.4/Pretty.hs:463:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./visual-prof-0.5/Pretty.hs:463:                myVcat $ text "{-# RULES" : map pretty rules ++ [text " #-}"]
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:330:class AdmitAttrRULES e where
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:331:  uaRULES :: (Monad m) => String -> WithHTML e m ()
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:332:  uaRULES str = attr "RULES" str
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:333:  atRULES :: (Monad m, AttrValueRULES v) => v -> WithHTML e m ()
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:334:  atRULES v = attr "RULES" (av $ show v)
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:725:class Show v => AttrValueRULES v
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:3936:data RULES_all = RULES_all
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:3937:data RULES_cols = RULES_cols
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:3938:data RULES_groups = RULES_groups
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:3939:data RULES_none = RULES_none
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:3940:data RULES_rows = RULES_rows
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4167:instance AttrValueRULES RULES_all
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4168:instance AttrValueRULES RULES_cols
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4169:instance AttrValueRULES RULES_groups
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4170:instance AttrValueRULES RULES_none
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4171:instance AttrValueRULES RULES_rows
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4282:instance Show RULES_all where show RULES_all = "all"
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4283:instance Show RULES_cols where show RULES_cols = "cols"
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4284:instance Show RULES_groups where show RULES_groups = "groups"
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4285:instance Show RULES_none where show RULES_none = "none"
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:4286:instance Show RULES_rows where show RULES_rows = "rows"
./WashNGo-2.12/WASH/HTML/HTMLMonad98.hs:5607:instance AdmitAttrRULES TABLE
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:388:data RULES = RULES
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:389:instance Show RULES where show RULES = "RULES"
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3292:data RULES_all = RULES_all
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3293:data RULES_cols = RULES_cols
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3294:data RULES_groups = RULES_groups
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3295:data RULES_none = RULES_none
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3296:data RULES_rows = RULES_rows
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3426:instance ATTRIBUTE RULES
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3566:instance AttrValue RULES RULES_all
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3567:instance AttrValue RULES RULES_cols
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3568:instance AttrValue RULES RULES_groups
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3569:instance AttrValue RULES RULES_none
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3570:instance AttrValue RULES RULES_rows
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3664:instance Show RULES_all where show RULES_all = "all"
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3665:instance Show RULES_cols where show RULES_cols = "cols"
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3666:instance Show RULES_groups where show RULES_groups = "groups"
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3667:instance Show RULES_none where show RULES_none = "none"
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:3668:instance Show RULES_rows where show RULES_rows = "rows"
./WashNGo-2.12/WASH/HTML/HTMLPrelude.hs:4969:instance AddAttr TABLE RULES
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:299:class AdmitAttrRULES e where
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:300:  uaRULES :: String -> ELT e -> ELT e
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:301:  uaRULES str into = add_attr into (mkUAttr RULES str)
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:302:  atRULES :: AttrValueRULES v => v -> ELT e -> ELT e
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:303:  atRULES v into = add_attr into (mkUAttr RULES (av $ show v))
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:713:class Show v => AttrValueRULES v
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:1286:data RULES = RULES
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:1287:instance Show RULES where show RULES = "RULES"
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4190:data RULES_all = RULES_all
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4191:data RULES_cols = RULES_cols
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4192:data RULES_groups = RULES_groups
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4193:data RULES_none = RULES_none
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4194:data RULES_rows = RULES_rows
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4324:instance ATTRIBUTE RULES
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4536:instance AttrValueRULES RULES_all
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4537:instance AttrValueRULES RULES_cols
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4538:instance AttrValueRULES RULES_groups
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4539:instance AttrValueRULES RULES_none
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4540:instance AttrValueRULES RULES_rows
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4650:instance Show RULES_all where show RULES_all = "all"
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4651:instance Show RULES_cols where show RULES_cols = "cols"
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4652:instance Show RULES_groups where show RULES_groups = "groups"
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4653:instance Show RULES_none where show RULES_none = "none"
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:4654:instance Show RULES_rows where show RULES_rows = "rows"
./WashNGo-2.12/WASH/HTML/HTMLPrelude98.hs:5956:instance AdmitAttrRULES TABLE
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:330:class AdmitAttrRULES e where
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:331:  uaRULES :: (Monad m) => String -> WithHTML e m ()
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:332:  uaRULES str = attr "RULES" str
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:333:  atRULES :: (Monad m, AttrValueRULES v) => v -> WithHTML e m ()
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:334:  atRULES v = attr "RULES" (av $ show v)
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:725:class Show v => AttrValueRULES v
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:3936:data RULES_all = RULES_all
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:3937:data RULES_cols = RULES_cols
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:3938:data RULES_groups = RULES_groups
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:3939:data RULES_none = RULES_none
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:3940:data RULES_rows = RULES_rows
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4167:instance AttrValueRULES RULES_all
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4168:instance AttrValueRULES RULES_cols
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4169:instance AttrValueRULES RULES_groups
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4170:instance AttrValueRULES RULES_none
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4171:instance AttrValueRULES RULES_rows
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4282:instance Show RULES_all where show RULES_all = "all"
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4283:instance Show RULES_cols where show RULES_cols = "cols"
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4284:instance Show RULES_groups where show RULES_groups = "groups"
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4285:instance Show RULES_none where show RULES_none = "none"
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:4286:instance Show RULES_rows where show RULES_rows = "rows"
./WashNGo-2.12.0.1/WASH/HTML/HTMLMonad98.hs:5607:instance AdmitAttrRULES TABLE
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:388:data RULES = RULES
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:389:instance Show RULES where show RULES = "RULES"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3292:data RULES_all = RULES_all
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3293:data RULES_cols = RULES_cols
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3294:data RULES_groups = RULES_groups
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3295:data RULES_none = RULES_none
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3296:data RULES_rows = RULES_rows
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3426:instance ATTRIBUTE RULES
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3566:instance AttrValue RULES RULES_all
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3567:instance AttrValue RULES RULES_cols
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3568:instance AttrValue RULES RULES_groups
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3569:instance AttrValue RULES RULES_none
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3570:instance AttrValue RULES RULES_rows
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3664:instance Show RULES_all where show RULES_all = "all"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3665:instance Show RULES_cols where show RULES_cols = "cols"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3666:instance Show RULES_groups where show RULES_groups = "groups"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3667:instance Show RULES_none where show RULES_none = "none"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:3668:instance Show RULES_rows where show RULES_rows = "rows"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude.hs:4969:instance AddAttr TABLE RULES
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:299:class AdmitAttrRULES e where
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:300:  uaRULES :: String -> ELT e -> ELT e
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:301:  uaRULES str into = add_attr into (mkUAttr RULES str)
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:302:  atRULES :: AttrValueRULES v => v -> ELT e -> ELT e
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:303:  atRULES v into = add_attr into (mkUAttr RULES (av $ show v))
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:713:class Show v => AttrValueRULES v
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:1286:data RULES = RULES
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:1287:instance Show RULES where show RULES = "RULES"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4190:data RULES_all = RULES_all
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4191:data RULES_cols = RULES_cols
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4192:data RULES_groups = RULES_groups
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4193:data RULES_none = RULES_none
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4194:data RULES_rows = RULES_rows
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4324:instance ATTRIBUTE RULES
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4536:instance AttrValueRULES RULES_all
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4537:instance AttrValueRULES RULES_cols
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4538:instance AttrValueRULES RULES_groups
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4539:instance AttrValueRULES RULES_none
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4540:instance AttrValueRULES RULES_rows
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4650:instance Show RULES_all where show RULES_all = "all"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4651:instance Show RULES_cols where show RULES_cols = "cols"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4652:instance Show RULES_groups where show RULES_groups = "groups"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4653:instance Show RULES_none where show RULES_none = "none"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:4654:instance Show RULES_rows where show RULES_rows = "rows"
./WashNGo-2.12.0.1/WASH/HTML/HTMLPrelude98.hs:5956:instance AdmitAttrRULES TABLE
./word24-0.1.0/src/Data/Int/Int24.hs:159:{-# RULES
./word24-0.1.0/src/Data/Word/Word24.hs:133:{-# RULES
./word24-0.1.2/src/Data/Int/Int24.hs:160:{-# RULES
./word24-0.1.2/src/Data/Word/Word24.hs:131:{-# RULES
./word24-0.1.4/src/Data/Int/Int24.hs:160:{-# RULES
./word24-0.1.4/src/Data/Word/Word24.hs:131:{-# RULES
./word24-1.0.0/src/Data/Int/Int24.hs:162:{-# RULES
./word24-1.0.0/src/Data/Word/Word24.hs:131:{-# RULES
./word24-1.0.1/src/Data/Int/Int24.hs:162:{-# RULES
./word24-1.0.1/src/Data/Word/Word24.hs:131:{-# RULES
./word24-1.0.2/src/Data/Int/Int24.hs:170:{-# RULES
./word24-1.0.2/src/Data/Word/Word24.hs:131:{-# RULES
./word24-1.0.3/src/Data/Int/Int24.hs:168:{-# RULES
./word24-1.0.3/src/Data/Word/Word24.hs:131:{-# RULES
./word24-1.0.4/src/Data/Int/Int24.hs:171:{-# RULES
./word24-1.0.4/src/Data/Word/Word24.hs:134:{-# RULES
./word24-1.0.5/src/Data/Int/Int24.hs:172:{-# RULES
./word24-1.0.5/src/Data/Word/Word24.hs:135:{-# RULES
./word24-1.0.6/src/Data/Int/Int24.hs:172:{-# RULES
./word24-1.0.6/src/Data/Word/Word24.hs:135:{-# RULES
./word24-1.0.7/src/Data/Int/Int24.hs:172:{-# RULES
./word24-1.0.7/src/Data/Word/Word24.hs:144:{-# RULES
./wxcore-0.10.1/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_VRULES
./wxcore-0.10.1/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:98:     ,wxLC_HRULES
./wxcore-0.10.1/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2769:wxLC_VRULES :: Int
./wxcore-0.10.1/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2770:wxLC_VRULES = 1
./wxcore-0.10.1/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2772:wxLC_HRULES :: Int
./wxcore-0.10.1/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2773:wxLC_HRULES = 2
./wxcore-0.10.10/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.10.10/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.10.10/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2668:wxLC_VRULES :: Int
./wxcore-0.10.10/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2669:wxLC_VRULES = 1
./wxcore-0.10.10/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2671:wxLC_HRULES :: Int
./wxcore-0.10.10/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2672:wxLC_HRULES = 2
./wxcore-0.10.2/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_VRULES
./wxcore-0.10.2/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:98:     ,wxLC_HRULES
./wxcore-0.10.2/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2769:wxLC_VRULES :: Int
./wxcore-0.10.2/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2770:wxLC_VRULES = 1
./wxcore-0.10.2/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2772:wxLC_HRULES :: Int
./wxcore-0.10.2/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2773:wxLC_HRULES = 2
./wxcore-0.10.3/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_VRULES
./wxcore-0.10.3/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:98:     ,wxLC_HRULES
./wxcore-0.10.3/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2769:wxLC_VRULES :: Int
./wxcore-0.10.3/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2770:wxLC_VRULES = 1
./wxcore-0.10.3/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2772:wxLC_HRULES :: Int
./wxcore-0.10.3/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2773:wxLC_HRULES = 2
./wxcore-0.10.6/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_VRULES
./wxcore-0.10.6/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:98:     ,wxLC_HRULES
./wxcore-0.10.6/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2675:wxLC_VRULES :: Int
./wxcore-0.10.6/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2676:wxLC_VRULES = 1
./wxcore-0.10.6/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2678:wxLC_HRULES :: Int
./wxcore-0.10.6/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2679:wxLC_HRULES = 2
./wxcore-0.10.7/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_VRULES
./wxcore-0.10.7/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:98:     ,wxLC_HRULES
./wxcore-0.10.7/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2675:wxLC_VRULES :: Int
./wxcore-0.10.7/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2676:wxLC_VRULES = 1
./wxcore-0.10.7/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2678:wxLC_HRULES :: Int
./wxcore-0.10.7/wxcore/src/Graphics/UI/WXCore/WxcDefs.hs:2679:wxLC_HRULES = 2
./wxcore-0.12.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.12.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.12.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2668:wxLC_VRULES :: Int
./wxcore-0.12.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2669:wxLC_VRULES = 1
./wxcore-0.12.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2671:wxLC_HRULES :: Int
./wxcore-0.12.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2672:wxLC_HRULES = 2
./wxcore-0.12.1.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.12.1.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.12.1.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2668:wxLC_VRULES :: Int
./wxcore-0.12.1.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2669:wxLC_VRULES = 1
./wxcore-0.12.1.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2671:wxLC_HRULES :: Int
./wxcore-0.12.1.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2672:wxLC_HRULES = 2
./wxcore-0.12.1.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.12.1.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.12.1.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2668:wxLC_VRULES :: Int
./wxcore-0.12.1.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2669:wxLC_VRULES = 1
./wxcore-0.12.1.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2671:wxLC_HRULES :: Int
./wxcore-0.12.1.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2672:wxLC_HRULES = 2
./wxcore-0.12.1.4/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.12.1.4/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.12.1.4/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2668:wxLC_VRULES :: Int
./wxcore-0.12.1.4/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2669:wxLC_VRULES = 1
./wxcore-0.12.1.4/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2671:wxLC_HRULES :: Int
./wxcore-0.12.1.4/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2672:wxLC_HRULES = 2
./wxcore-0.12.1.5/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.12.1.5/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.12.1.5/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2683:wxLC_VRULES :: Int
./wxcore-0.12.1.5/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2684:wxLC_VRULES = 1
./wxcore-0.12.1.5/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2686:wxLC_HRULES :: Int
./wxcore-0.12.1.5/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2687:wxLC_HRULES = 2
./wxcore-0.12.1.6/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.12.1.6/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.12.1.6/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2683:wxLC_VRULES :: Int
./wxcore-0.12.1.6/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2684:wxLC_VRULES = 1
./wxcore-0.12.1.6/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2686:wxLC_HRULES :: Int
./wxcore-0.12.1.6/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2687:wxLC_HRULES = 2
./wxcore-0.12.1.7/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.12.1.7/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.12.1.7/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2683:wxLC_VRULES :: Int
./wxcore-0.12.1.7/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2684:wxLC_VRULES = 1
./wxcore-0.12.1.7/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2686:wxLC_HRULES :: Int
./wxcore-0.12.1.7/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2687:wxLC_HRULES = 2
./wxcore-0.13.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.13.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.13.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2683:wxLC_VRULES :: Int
./wxcore-0.13.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2684:wxLC_VRULES = 1
./wxcore-0.13.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2686:wxLC_HRULES :: Int
./wxcore-0.13.2/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2687:wxLC_HRULES = 2
./wxcore-0.13.2.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.13.2.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.13.2.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2683:wxLC_VRULES :: Int
./wxcore-0.13.2.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2684:wxLC_VRULES = 1
./wxcore-0.13.2.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2686:wxLC_HRULES :: Int
./wxcore-0.13.2.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2687:wxLC_HRULES = 2
./wxcore-0.13.2.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:96:     ,wxLC_VRULES
./wxcore-0.13.2.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:97:     ,wxLC_HRULES
./wxcore-0.13.2.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2683:wxLC_VRULES :: Int
./wxcore-0.13.2.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2684:wxLC_VRULES = 1
./wxcore-0.13.2.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2686:wxLC_HRULES :: Int
./wxcore-0.13.2.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2687:wxLC_HRULES = 2
./wxcore-0.90/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:94:     ,wxLC_VRULES
./wxcore-0.90/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:95:     ,wxLC_HRULES
./wxcore-0.90/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2682:wxLC_VRULES :: Int
./wxcore-0.90/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2683:wxLC_VRULES = 1
./wxcore-0.90/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2685:wxLC_HRULES :: Int
./wxcore-0.90/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2686:wxLC_HRULES = 2
./wxcore-0.90.0.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:94:     ,wxLC_VRULES
./wxcore-0.90.0.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:95:     ,wxLC_HRULES
./wxcore-0.90.0.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2682:wxLC_VRULES :: Int
./wxcore-0.90.0.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2683:wxLC_VRULES = 1
./wxcore-0.90.0.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2685:wxLC_HRULES :: Int
./wxcore-0.90.0.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:2686:wxLC_HRULES = 2
./wxcore-0.90.0.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:338:     ,wxLC_VRULES
./wxcore-0.90.0.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:339:     ,wxLC_HRULES
./wxcore-0.90.0.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3419:wxLC_VRULES :: Int
./wxcore-0.90.0.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3420:wxLC_VRULES = 1
./wxcore-0.90.0.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3422:wxLC_HRULES :: Int
./wxcore-0.90.0.3/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3423:wxLC_HRULES = 2
./wxcore-0.90.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:339:     ,wxLC_VRULES
./wxcore-0.90.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:340:     ,wxLC_HRULES
./wxcore-0.90.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3468:wxLC_VRULES :: Int
./wxcore-0.90.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3469:wxLC_VRULES = 1
./wxcore-0.90.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3471:wxLC_HRULES :: Int
./wxcore-0.90.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3472:wxLC_HRULES = 2
./wxcore-0.90.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:339:     ,wxLC_VRULES
./wxcore-0.90.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:340:     ,wxLC_HRULES
./wxcore-0.90.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3468:wxLC_VRULES :: Int
./wxcore-0.90.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3469:wxLC_VRULES = 1
./wxcore-0.90.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3471:wxLC_HRULES :: Int
./wxcore-0.90.1.1/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:3472:wxLC_HRULES = 2
./wxcore-0.91.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:818:    , wxLC_HRULES
./wxcore-0.91.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:832:    , wxLC_VRULES
./wxcore-0.91.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4062:wxLC_VRULES :: Int
./wxcore-0.91.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4063:wxLC_VRULES = 1
./wxcore-0.91.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4065:wxLC_HRULES :: Int
./wxcore-0.91.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4066:wxLC_HRULES = 2
./wxcore-0.92.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:911:    , wxLC_HRULES
./wxcore-0.92.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:925:    , wxLC_VRULES
./wxcore-0.92.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4405:wxLC_VRULES :: Int
./wxcore-0.92.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4406:wxLC_VRULES = 1
./wxcore-0.92.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4408:wxLC_HRULES :: Int
./wxcore-0.92.0.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4409:wxLC_HRULES = 2
./wxcore-0.92.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:912:    , wxLC_HRULES
./wxcore-0.92.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:926:    , wxLC_VRULES
./wxcore-0.92.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4408:wxLC_VRULES :: Int
./wxcore-0.92.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4409:wxLC_VRULES = 1
./wxcore-0.92.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4411:wxLC_HRULES :: Int
./wxcore-0.92.1.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4412:wxLC_HRULES = 2
./wxcore-0.92.2.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:937:    , wxLC_HRULES
./wxcore-0.92.2.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:951:    , wxLC_VRULES
./wxcore-0.92.2.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4476:wxLC_VRULES :: Int
./wxcore-0.92.2.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4477:wxLC_VRULES = 1
./wxcore-0.92.2.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4479:wxLC_HRULES :: Int
./wxcore-0.92.2.0/src/haskell/Graphics/UI/WXCore/WxcDefs.hs:4480:wxLC_HRULES = 2
./xkbcommon-0.0.0/tests/rulescomp.hs:15:   procEnv "XKB_DEFAULT_RULES" rules
./xkbcommon-0.0.1/tests/rulescomp.hs:15:   procEnv "XKB_DEFAULT_RULES" rules
./xkbcommon-0.0.2/tests/rulescomp.hs:15:   procEnv "XKB_DEFAULT_RULES" rules
./xmms2-client-0.0.3.8/C2HS.hs:197:{-# RULES 
./xmms2-client-0.0.3.9/C2HS.hs:197:{-# RULES 
./xmms2-client-0.0.4.0/C2HS.hs:197:{-# RULES 
./xmms2-client-0.0.5.0/C2HS.hs:197:{-# RULES 
./xmms2-client-0.0.6.0/C2HS.hs:197:{-# RULES 
./xmms2-client-glib-0.0.3.8/C2HS.hs:197:{-# RULES 
./xmms2-client-glib-0.0.3.9/C2HS.hs:197:{-# RULES 
./xmms2-client-glib-0.0.4.0/C2HS.hs:197:{-# RULES 
./xmms2-client-glib-0.0.5.0/C2HS.hs:197:{-# RULES 
./xmms2-client-glib-0.0.6.0/C2HS.hs:197:{-# RULES 
./yall-0.1/Data/Yall/Lens.hs:309:--RULES
./yall-0.2/Data/Yall/Lens.hs:332:--RULES
./yall-0.2.0.1/Data/Yall/Lens.hs:332:--RULES
./yall-0.2.1/Data/Yall/Lens.hs:324:--RULES
./yaml-0.0.0/C2HS.hs:197:{-# RULES 
./yaml-0.0.1/C2HS.hs:197:{-# RULES 
./Yampa-0.10.0/src/FRP/Yampa/InternalCore.hs:521:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.10.1/src/FRP/Yampa/InternalCore.hs:521:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.10.1.1/src/FRP/Yampa/InternalCore.hs:521:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.10.2/src/FRP/Yampa/InternalCore.hs:521:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.10.3/src/FRP/Yampa/InternalCore.hs:521:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.10.4/src/FRP/Yampa/InternalCore.hs:521:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.9.2/src/FRP/Yampa.hs:637:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.9.2.1/src/FRP/Yampa.hs:663:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.9.2.2/src/FRP/Yampa.hs:663:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.9.2.3/src/FRP/Yampa.hs:675:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.9.3/src/FRP/Yampa.hs:675:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.9.5/src/FRP/Yampa.hs:688:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.9.6/src/FRP/Yampa.hs:745:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.9.6.1/src/FRP/Yampa.hs:745:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-0.9.7/src/FRP/Yampa.hs:745:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./Yampa-core-0.2.0/src/FRP/Yampa/InternalCore.hs:521:{-# RULES "arrPrim/arrEPrim" arrPrim = arrEPrim #-}
./yesod-core-1.2.0/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.0/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.0.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.0.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.0.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.0.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.0.3/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.0.3/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.0.4/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.0.4/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.10/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.10/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.11/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.11/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.11.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.11.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.12/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.12/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.13/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.13/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.13.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.13.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.14/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.14/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.15/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.15/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.15.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.15.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.15.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.15.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.16/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.16/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.16.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.16.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.17/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.17/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.18/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.18/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.19/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.19/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.19.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.19.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.19.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.19.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.20/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.20/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.20.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.20.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.3/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.3/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.4/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.4/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.4.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.4.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.4.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.4.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.4.3/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.4.3/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.4.4/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.4.4/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.4.5/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.4.5/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.5/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" forall action. liftHandlerT action = id #-}
./yesod-core-1.2.5/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.6/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.6/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.6.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.6.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.6.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.6.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.6.3/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.6.3/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.6.4/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.6.4/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.6.5/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.6.5/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.6.6/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.6.6/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.6.7/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.6.7/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.7/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.7/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.8/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.8/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.9/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.9/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.9.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.9.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.2.9.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.2.9.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.0/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.0/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.0.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.0.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.0.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.0.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.1.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.1.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.10/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.10/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.11/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.11/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.11.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.11.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.12/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.12/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.13/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.13/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.14/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.14/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.15/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.15/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.15.1/Yesod/Core/Class/Handler.hs:45:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.15.1/Yesod/Core/Class/Handler.hs:50:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.16/Yesod/Core/Class/Handler.hs:45:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.16/Yesod/Core/Class/Handler.hs:50:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.17/Yesod/Core/Class/Handler.hs:45:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.17/Yesod/Core/Class/Handler.hs:50:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.18/Yesod/Core/Class/Handler.hs:45:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.18/Yesod/Core/Class/Handler.hs:50:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.18.1/Yesod/Core/Class/Handler.hs:45:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.18.1/Yesod/Core/Class/Handler.hs:50:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.18.2/Yesod/Core/Class/Handler.hs:45:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.18.2/Yesod/Core/Class/Handler.hs:50:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.19/Yesod/Core/Class/Handler.hs:45:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.19/Yesod/Core/Class/Handler.hs:50:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.3/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.3/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.3.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.3.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.4/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.4/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.4.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.4.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.4.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.4.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.4.3/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.4.3/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.4.4/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.4.4/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.4.5/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.4.5/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.5/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.5/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.6/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.6/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.6.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.6.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.6.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.6.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.7/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.7/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.7.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.7.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.7.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.7.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.7.3/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.7.3/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.8/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.8/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.8.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.8.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.8.2/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.8.2/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.8.3/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.8.3/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.9/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.9/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-core-1.4.9.1/Yesod/Core/Class/Handler.hs:44:{-# RULES "liftHandlerT (HandlerT site IO)" liftHandlerT = id #-}
./yesod-core-1.4.9.1/Yesod/Core/Class/Handler.hs:49:{-# RULES "liftHandlerT (WidgetT site IO)" forall f. liftHandlerT (HandlerT f) = WidgetT $ liftM (, mempty) . f #-}
./yesod-worker-0.0.1/Yesod/Worker/Types.hs:102:{-# RULES "liftWorkerT (WorkerT site IO)" liftWorkerT = id #-}
./yhccore-0.9/Yhc/Core/Simplify.hs:199:        -- CASE RULES
./yhccore-0.9/Yhc/Core/Simplify.hs:225:        -- APP RULES
./yhccore-0.9/Yhc/Core/Simplify.hs:247:        -- LET RULES
./yhccore-0.9.1/Yhc/Core/Simplify.hs:199:        -- CASE RULES
./yhccore-0.9.1/Yhc/Core/Simplify.hs:225:        -- APP RULES
./yhccore-0.9.1/Yhc/Core/Simplify.hs:247:        -- LET RULES
./z3-0.1.1/Z3/Base.hs:656:{-# RULES "mkInt/mkInt_IntZ3" mkInt = mkInt_IntZ3 #-}
./z3-0.1.1/Z3/Base.hs:660:{-# RULES "mkInt/mkInt_UnsignedIntZ3" mkInt = mkInt_UnsignedIntZ3 #-}
./z3-0.1.1/Z3/Base.hs:664:{-# RULES "mkInt/mkInt_Int64Z3" mkInt = mkInt_Int64Z3 #-}
./z3-0.1.1/Z3/Base.hs:668:{-# RULES "mkInt/mkInt_UnsignedInt64Z3" mkInt = mkInt_UnsignedInt64Z3 #-}
./z3-0.1.1/Z3/Base.hs:683:{-# RULES "mkReal/mkRealZ3" mkReal = mkRealZ3 #-}
./z3-0.1.1/Z3/Base.hs:691:{-# RULES "mkReal/mkReal_IntZ3" mkReal = mkReal_IntZ3 #-}
./z3-0.1.1/Z3/Base.hs:695:{-# RULES "mkReal/mkReal_UnsignedIntZ3" mkReal = mkReal_UnsignedIntZ3 #-}
./z3-0.1.1/Z3/Base.hs:699:{-# RULES "mkReal/mkReal_Int64Z3" mkReal = mkReal_Int64Z3 #-}
./z3-0.1.1/Z3/Base.hs:703:{-# RULES "mkReal/mkReal_UnsignedInt64Z3" mkReal = mkReal_UnsignedInt64Z3 #-}
./z3-0.2.0/Z3/Base.hs:763:{-# RULES "mkInt/mkInt_IntZ3" mkInt = mkInt_IntZ3 #-}
./z3-0.2.0/Z3/Base.hs:767:{-# RULES "mkInt/mkInt_UnsignedIntZ3" mkInt = mkInt_UnsignedIntZ3 #-}
./z3-0.2.0/Z3/Base.hs:771:{-# RULES "mkInt/mkInt_Int64Z3" mkInt = mkInt_Int64Z3 #-}
./z3-0.2.0/Z3/Base.hs:775:{-# RULES "mkInt/mkInt_UnsignedInt64Z3" mkInt = mkInt_UnsignedInt64Z3 #-}
./z3-0.2.0/Z3/Base.hs:790:{-# RULES "mkReal/mkRealZ3" mkReal = mkRealZ3 #-}
./z3-0.2.0/Z3/Base.hs:798:{-# RULES "mkReal/mkReal_IntZ3" mkReal = mkReal_IntZ3 #-}
./z3-0.2.0/Z3/Base.hs:802:{-# RULES "mkReal/mkReal_UnsignedIntZ3" mkReal = mkReal_UnsignedIntZ3 #-}
./z3-0.2.0/Z3/Base.hs:806:{-# RULES "mkReal/mkReal_Int64Z3" mkReal = mkReal_Int64Z3 #-}
./z3-0.2.0/Z3/Base.hs:810:{-# RULES "mkReal/mkReal_UnsignedInt64Z3" mkReal = mkReal_UnsignedInt64Z3 #-}
./z3-0.3.0/Z3/Base.hs:1078:{-# RULES "mkInt/mkInt_IntZ3" mkInt = mkInt_IntZ3 #-}
./z3-0.3.0/Z3/Base.hs:1082:{-# RULES "mkInt/mkInt_UnsignedIntZ3" mkInt = mkInt_UnsignedIntZ3 #-}
./z3-0.3.0/Z3/Base.hs:1086:{-# RULES "mkInt/mkInt_Int64Z3" mkInt = mkInt_Int64Z3 #-}
./z3-0.3.0/Z3/Base.hs:1090:{-# RULES "mkInt/mkInt_UnsignedInt64Z3" mkInt = mkInt_UnsignedInt64Z3 #-}
./z3-0.3.0/Z3/Base.hs:1105:{-# RULES "mkReal/mkRealZ3" mkReal = mkRealZ3 #-}
./z3-0.3.0/Z3/Base.hs:1111:{-# RULES "mkReal/mkReal_IntZ3" mkReal = mkReal_IntZ3 #-}
./z3-0.3.0/Z3/Base.hs:1115:{-# RULES "mkReal/mkReal_UnsignedIntZ3" mkReal = mkReal_UnsignedIntZ3 #-}
./z3-0.3.0/Z3/Base.hs:1119:{-# RULES "mkReal/mkReal_Int64Z3" mkReal = mkReal_Int64Z3 #-}
./z3-0.3.0/Z3/Base.hs:1123:{-# RULES "mkReal/mkReal_UnsignedInt64Z3" mkReal = mkReal_UnsignedInt64Z3 #-}
./z3-0.3.1/Z3/Base.hs:1161:{-# RULES "mkInt/mkInt_IntZ3" mkInt = mkInt_IntZ3 #-}
./z3-0.3.1/Z3/Base.hs:1165:{-# RULES "mkInt/mkInt_UnsignedIntZ3" mkInt = mkInt_UnsignedIntZ3 #-}
./z3-0.3.1/Z3/Base.hs:1169:{-# RULES "mkInt/mkInt_Int64Z3" mkInt = mkInt_Int64Z3 #-}
./z3-0.3.1/Z3/Base.hs:1173:{-# RULES "mkInt/mkInt_UnsignedInt64Z3" mkInt = mkInt_UnsignedInt64Z3 #-}
./z3-0.3.1/Z3/Base.hs:1188:{-# RULES "mkReal/mkRealZ3" mkReal = mkRealZ3 #-}
./z3-0.3.1/Z3/Base.hs:1194:{-# RULES "mkReal/mkReal_IntZ3" mkReal = mkReal_IntZ3 #-}
./z3-0.3.1/Z3/Base.hs:1198:{-# RULES "mkReal/mkReal_UnsignedIntZ3" mkReal = mkReal_UnsignedIntZ3 #-}
./z3-0.3.1/Z3/Base.hs:1202:{-# RULES "mkReal/mkReal_Int64Z3" mkReal = mkReal_Int64Z3 #-}
./z3-0.3.1/Z3/Base.hs:1206:{-# RULES "mkReal/mkReal_UnsignedInt64Z3" mkReal = mkReal_UnsignedInt64Z3 #-}
./z3-0.3.2/Z3/Base.hs:952:{-# RULES "mkInt/mkInt_IntZ3" mkInt = mkInt_IntZ3 #-}
./z3-0.3.2/Z3/Base.hs:956:{-# RULES "mkInt/mkInt_UnsignedIntZ3" mkInt = mkInt_UnsignedIntZ3 #-}
./z3-0.3.2/Z3/Base.hs:960:{-# RULES "mkInt/mkInt_Int64Z3" mkInt = mkInt_Int64Z3 #-}
./z3-0.3.2/Z3/Base.hs:964:{-# RULES "mkInt/mkInt_UnsignedInt64Z3" mkInt = mkInt_UnsignedInt64Z3 #-}
./z3-0.3.2/Z3/Base.hs:979:{-# RULES "mkReal/mkRealZ3" mkReal = mkRealZ3 #-}
./z3-0.3.2/Z3/Base.hs:985:{-# RULES "mkReal/mkReal_IntZ3" mkReal = mkReal_IntZ3 #-}
./z3-0.3.2/Z3/Base.hs:989:{-# RULES "mkReal/mkReal_UnsignedIntZ3" mkReal = mkReal_UnsignedIntZ3 #-}
./z3-0.3.2/Z3/Base.hs:993:{-# RULES "mkReal/mkReal_Int64Z3" mkReal = mkReal_Int64Z3 #-}
./z3-0.3.2/Z3/Base.hs:997:{-# RULES "mkReal/mkReal_UnsignedInt64Z3" mkReal = mkReal_UnsignedInt64Z3 #-}
